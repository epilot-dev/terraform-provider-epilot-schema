// Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.

package provider

import (
	"encoding/json"
	tfTypes "github.com/epilot/terraform-provider-epilot-schema/internal/provider/types"
	"github.com/epilot/terraform-provider-epilot-schema/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"time"
)

func (r *SchemaResourceModel) ToSharedEntitySchemaItemInput() *shared.EntitySchemaItemInput {
	id := new(string)
	if !r.ID.IsUnknown() && !r.ID.IsNull() {
		*id = r.ID.ValueString()
	} else {
		id = nil
	}
	comment := new(string)
	if !r.Comment.IsUnknown() && !r.Comment.IsNull() {
		*comment = r.Comment.ValueString()
	} else {
		comment = nil
	}
	var source *shared.Source
	if r.Source != nil {
		id1 := new(string)
		if !r.Source.ID.IsUnknown() && !r.Source.ID.IsNull() {
			*id1 = r.Source.ID.ValueString()
		} else {
			id1 = nil
		}
		typeVar := new(string)
		if !r.Source.Type.IsUnknown() && !r.Source.Type.IsNull() {
			*typeVar = r.Source.Type.ValueString()
		} else {
			typeVar = nil
		}
		source = &shared.Source{
			ID:   id1,
			Type: typeVar,
		}
	}
	slug := r.Slug.ValueString()
	version := new(int64)
	if !r.Version.IsUnknown() && !r.Version.IsNull() {
		*version = r.Version.ValueInt64()
	} else {
		version = nil
	}
	blueprint := new(string)
	if !r.Blueprint.IsUnknown() && !r.Blueprint.IsNull() {
		*blueprint = r.Blueprint.ValueString()
	} else {
		blueprint = nil
	}
	featureFlag := new(string)
	if !r.FeatureFlag.IsUnknown() && !r.FeatureFlag.IsNull() {
		*featureFlag = r.FeatureFlag.ValueString()
	} else {
		featureFlag = nil
	}
	var enableSetting []string = []string{}
	for _, enableSettingItem := range r.EnableSetting {
		enableSetting = append(enableSetting, enableSettingItem.ValueString())
	}
	name := r.Name.ValueString()
	plural := r.Plural.ValueString()
	published := new(bool)
	if !r.Published.IsUnknown() && !r.Published.IsNull() {
		*published = r.Published.ValueBool()
	} else {
		published = nil
	}
	draft := new(bool)
	if !r.Draft.IsUnknown() && !r.Draft.IsNull() {
		*draft = r.Draft.ValueBool()
	} else {
		draft = nil
	}
	icon := new(string)
	if !r.Icon.IsUnknown() && !r.Icon.IsNull() {
		*icon = r.Icon.ValueString()
	} else {
		icon = nil
	}
	titleTemplate := new(string)
	if !r.TitleTemplate.IsUnknown() && !r.TitleTemplate.IsNull() {
		*titleTemplate = r.TitleTemplate.ValueString()
	} else {
		titleTemplate = nil
	}
	var uiConfig *shared.UIConfig
	if r.UIConfig != nil {
		var tableView *shared.TableView
		if r.UIConfig.TableView != nil {
			var entityDefaultTable *shared.EntityDefaultTable
			if r.UIConfig.TableView.Default != nil {
				viewType := new(shared.ViewType)
				if !r.UIConfig.TableView.Default.ViewType.IsUnknown() && !r.UIConfig.TableView.Default.ViewType.IsNull() {
					*viewType = shared.ViewType(r.UIConfig.TableView.Default.ViewType.ValueString())
				} else {
					viewType = nil
				}
				var rowActions []shared.RowActions = []shared.RowActions{}
				for _, rowActionsItem := range r.UIConfig.TableView.Default.RowActions {
					if !rowActionsItem.Str.IsUnknown() && !rowActionsItem.Str.IsNull() {
						str := rowActionsItem.Str.ValueString()
						rowActions = append(rowActions, shared.RowActions{
							Str: &str,
						})
					}
					if rowActionsItem.EntityAction != nil {
						action := rowActionsItem.EntityAction.Action.ValueString()
						label := rowActionsItem.EntityAction.Label.ValueString()
						icon1 := new(string)
						if !rowActionsItem.EntityAction.Icon.IsUnknown() && !rowActionsItem.EntityAction.Icon.IsNull() {
							*icon1 = rowActionsItem.EntityAction.Icon.ValueString()
						} else {
							icon1 = nil
						}
						permission := new(string)
						if !rowActionsItem.EntityAction.Permission.IsUnknown() && !rowActionsItem.EntityAction.Permission.IsNull() {
							*permission = rowActionsItem.EntityAction.Permission.ValueString()
						} else {
							permission = nil
						}
						entityAction := shared.EntityAction{
							Action:     action,
							Label:      label,
							Icon:       icon1,
							Permission: permission,
						}
						rowActions = append(rowActions, shared.RowActions{
							EntityAction: &entityAction,
						})
					}
				}
				var bulkActions []shared.BulkActions = []shared.BulkActions{}
				for _, bulkActionsItem := range r.UIConfig.TableView.Default.BulkActions {
					if !bulkActionsItem.Str.IsUnknown() && !bulkActionsItem.Str.IsNull() {
						str1 := bulkActionsItem.Str.ValueString()
						bulkActions = append(bulkActions, shared.BulkActions{
							Str: &str1,
						})
					}
					if bulkActionsItem.EntityAction != nil {
						action1 := bulkActionsItem.EntityAction.Action.ValueString()
						label1 := bulkActionsItem.EntityAction.Label.ValueString()
						icon2 := new(string)
						if !bulkActionsItem.EntityAction.Icon.IsUnknown() && !bulkActionsItem.EntityAction.Icon.IsNull() {
							*icon2 = bulkActionsItem.EntityAction.Icon.ValueString()
						} else {
							icon2 = nil
						}
						permission1 := new(string)
						if !bulkActionsItem.EntityAction.Permission.IsUnknown() && !bulkActionsItem.EntityAction.Permission.IsNull() {
							*permission1 = bulkActionsItem.EntityAction.Permission.ValueString()
						} else {
							permission1 = nil
						}
						entityAction1 := shared.EntityAction{
							Action:     action1,
							Label:      label1,
							Icon:       icon2,
							Permission: permission1,
						}
						bulkActions = append(bulkActions, shared.BulkActions{
							EntityAction: &entityAction1,
						})
					}
				}
				var navbarActions []shared.NavbarActions = []shared.NavbarActions{}
				for _, navbarActionsItem := range r.UIConfig.TableView.Default.NavbarActions {
					type1 := navbarActionsItem.Type.ValueString()
					var optionsVar []shared.EntityDefaultTableOptions = []shared.EntityDefaultTableOptions{}
					for _, optionsItem := range navbarActionsItem.Options {
						label2 := optionsItem.Label.ValueString()
						var params *shared.EntityDefaultTableParams
						if optionsItem.Params != nil {
							params = &shared.EntityDefaultTableParams{}
						}
						optionsVar = append(optionsVar, shared.EntityDefaultTableOptions{
							Label:  label2,
							Params: params,
						})
					}
					navbarActions = append(navbarActions, shared.NavbarActions{
						Type:    type1,
						Options: optionsVar,
					})
				}
				enableThumbnails := new(bool)
				if !r.UIConfig.TableView.Default.EnableThumbnails.IsUnknown() && !r.UIConfig.TableView.Default.EnableThumbnails.IsNull() {
					*enableThumbnails = r.UIConfig.TableView.Default.EnableThumbnails.ValueBool()
				} else {
					enableThumbnails = nil
				}
				entityDefaultTable = &shared.EntityDefaultTable{
					ViewType:         viewType,
					RowActions:       rowActions,
					BulkActions:      bulkActions,
					NavbarActions:    navbarActions,
					EnableThumbnails: enableThumbnails,
				}
			}
			if entityDefaultTable != nil {
				tableView = &shared.TableView{
					EntityDefaultTable: entityDefaultTable,
				}
			}
			var redirectEntityView *shared.RedirectEntityView
			if r.UIConfig.TableView.Redirect != nil {
				viewType1 := new(shared.RedirectEntityViewViewType)
				if !r.UIConfig.TableView.Redirect.ViewType.IsUnknown() && !r.UIConfig.TableView.Redirect.ViewType.IsNull() {
					*viewType1 = shared.RedirectEntityViewViewType(r.UIConfig.TableView.Redirect.ViewType.ValueString())
				} else {
					viewType1 = nil
				}
				route := new(string)
				if !r.UIConfig.TableView.Redirect.Route.IsUnknown() && !r.UIConfig.TableView.Redirect.Route.IsNull() {
					*route = r.UIConfig.TableView.Redirect.Route.ValueString()
				} else {
					route = nil
				}
				redirectEntityView = &shared.RedirectEntityView{
					ViewType: viewType1,
					Route:    route,
				}
			}
			if redirectEntityView != nil {
				tableView = &shared.TableView{
					RedirectEntityView: redirectEntityView,
				}
			}
			var entityViewDisabled *shared.EntityViewDisabled
			if r.UIConfig.TableView.Disabled != nil {
				viewType2 := new(shared.EntityViewDisabledViewType)
				if !r.UIConfig.TableView.Disabled.ViewType.IsUnknown() && !r.UIConfig.TableView.Disabled.ViewType.IsNull() {
					*viewType2 = shared.EntityViewDisabledViewType(r.UIConfig.TableView.Disabled.ViewType.ValueString())
				} else {
					viewType2 = nil
				}
				entityViewDisabled = &shared.EntityViewDisabled{
					ViewType: viewType2,
				}
			}
			if entityViewDisabled != nil {
				tableView = &shared.TableView{
					EntityViewDisabled: entityViewDisabled,
				}
			}
		}
		var createView *shared.CreateView
		if r.UIConfig.CreateView != nil {
			var entityDefaultCreate *shared.EntityDefaultCreate
			if r.UIConfig.CreateView.Default != nil {
				viewType3 := new(shared.EntityDefaultCreateViewType)
				if !r.UIConfig.CreateView.Default.ViewType.IsUnknown() && !r.UIConfig.CreateView.Default.ViewType.IsNull() {
					*viewType3 = shared.EntityDefaultCreateViewType(r.UIConfig.CreateView.Default.ViewType.ValueString())
				} else {
					viewType3 = nil
				}
				searchParams := make(map[string]string)
				for searchParamsKey, searchParamsValue := range r.UIConfig.CreateView.Default.SearchParams {
					searchParamsInst := searchParamsValue.ValueString()
					searchParams[searchParamsKey] = searchParamsInst
				}
				entityDefaultCreate = &shared.EntityDefaultCreate{
					ViewType:     viewType3,
					SearchParams: searchParams,
				}
			}
			if entityDefaultCreate != nil {
				createView = &shared.CreateView{
					EntityDefaultCreate: entityDefaultCreate,
				}
			}
			var redirectEntityView1 *shared.RedirectEntityView
			if r.UIConfig.CreateView.Redirect != nil {
				viewType4 := new(shared.RedirectEntityViewViewType)
				if !r.UIConfig.CreateView.Redirect.ViewType.IsUnknown() && !r.UIConfig.CreateView.Redirect.ViewType.IsNull() {
					*viewType4 = shared.RedirectEntityViewViewType(r.UIConfig.CreateView.Redirect.ViewType.ValueString())
				} else {
					viewType4 = nil
				}
				route1 := new(string)
				if !r.UIConfig.CreateView.Redirect.Route.IsUnknown() && !r.UIConfig.CreateView.Redirect.Route.IsNull() {
					*route1 = r.UIConfig.CreateView.Redirect.Route.ValueString()
				} else {
					route1 = nil
				}
				redirectEntityView1 = &shared.RedirectEntityView{
					ViewType: viewType4,
					Route:    route1,
				}
			}
			if redirectEntityView1 != nil {
				createView = &shared.CreateView{
					RedirectEntityView: redirectEntityView1,
				}
			}
			var entityViewDisabled1 *shared.EntityViewDisabled
			if r.UIConfig.CreateView.Disabled != nil {
				viewType5 := new(shared.EntityViewDisabledViewType)
				if !r.UIConfig.CreateView.Disabled.ViewType.IsUnknown() && !r.UIConfig.CreateView.Disabled.ViewType.IsNull() {
					*viewType5 = shared.EntityViewDisabledViewType(r.UIConfig.CreateView.Disabled.ViewType.ValueString())
				} else {
					viewType5 = nil
				}
				entityViewDisabled1 = &shared.EntityViewDisabled{
					ViewType: viewType5,
				}
			}
			if entityViewDisabled1 != nil {
				createView = &shared.CreateView{
					EntityViewDisabled: entityViewDisabled1,
				}
			}
		}
		var editView *shared.EditView
		if r.UIConfig.EditView != nil {
			var entityDefaultEdit *shared.EntityDefaultEdit
			if r.UIConfig.EditView.Default != nil {
				viewType6 := new(shared.EntityDefaultEditViewType)
				if !r.UIConfig.EditView.Default.ViewType.IsUnknown() && !r.UIConfig.EditView.Default.ViewType.IsNull() {
					*viewType6 = shared.EntityDefaultEditViewType(r.UIConfig.EditView.Default.ViewType.ValueString())
				} else {
					viewType6 = nil
				}
				searchParams1 := make(map[string]string)
				for searchParamsKey1, searchParamsValue1 := range r.UIConfig.EditView.Default.SearchParams {
					searchParamsInst1 := searchParamsValue1.ValueString()
					searchParams1[searchParamsKey1] = searchParamsInst1
				}
				var summaryAttributes []string = []string{}
				for _, summaryAttributesItem := range r.UIConfig.EditView.Default.SummaryAttributes {
					summaryAttributes = append(summaryAttributes, summaryAttributesItem.ValueString())
				}
				entityDefaultEdit = &shared.EntityDefaultEdit{
					ViewType:          viewType6,
					SearchParams:      searchParams1,
					SummaryAttributes: summaryAttributes,
				}
			}
			if entityDefaultEdit != nil {
				editView = &shared.EditView{
					EntityDefaultEdit: entityDefaultEdit,
				}
			}
			var redirectEntityView2 *shared.RedirectEntityView
			if r.UIConfig.EditView.Redirect != nil {
				viewType7 := new(shared.RedirectEntityViewViewType)
				if !r.UIConfig.EditView.Redirect.ViewType.IsUnknown() && !r.UIConfig.EditView.Redirect.ViewType.IsNull() {
					*viewType7 = shared.RedirectEntityViewViewType(r.UIConfig.EditView.Redirect.ViewType.ValueString())
				} else {
					viewType7 = nil
				}
				route2 := new(string)
				if !r.UIConfig.EditView.Redirect.Route.IsUnknown() && !r.UIConfig.EditView.Redirect.Route.IsNull() {
					*route2 = r.UIConfig.EditView.Redirect.Route.ValueString()
				} else {
					route2 = nil
				}
				redirectEntityView2 = &shared.RedirectEntityView{
					ViewType: viewType7,
					Route:    route2,
				}
			}
			if redirectEntityView2 != nil {
				editView = &shared.EditView{
					RedirectEntityView: redirectEntityView2,
				}
			}
			var entityViewDisabled2 *shared.EntityViewDisabled
			if r.UIConfig.EditView.Disabled != nil {
				viewType8 := new(shared.EntityViewDisabledViewType)
				if !r.UIConfig.EditView.Disabled.ViewType.IsUnknown() && !r.UIConfig.EditView.Disabled.ViewType.IsNull() {
					*viewType8 = shared.EntityViewDisabledViewType(r.UIConfig.EditView.Disabled.ViewType.ValueString())
				} else {
					viewType8 = nil
				}
				entityViewDisabled2 = &shared.EntityViewDisabled{
					ViewType: viewType8,
				}
			}
			if entityViewDisabled2 != nil {
				editView = &shared.EditView{
					EntityViewDisabled: entityViewDisabled2,
				}
			}
		}
		var singleView *shared.SingleView
		if r.UIConfig.SingleView != nil {
			var entityDefaultEdit1 *shared.EntityDefaultEdit
			if r.UIConfig.SingleView.Default != nil {
				viewType9 := new(shared.EntityDefaultEditViewType)
				if !r.UIConfig.SingleView.Default.ViewType.IsUnknown() && !r.UIConfig.SingleView.Default.ViewType.IsNull() {
					*viewType9 = shared.EntityDefaultEditViewType(r.UIConfig.SingleView.Default.ViewType.ValueString())
				} else {
					viewType9 = nil
				}
				searchParams2 := make(map[string]string)
				for searchParamsKey2, searchParamsValue2 := range r.UIConfig.SingleView.Default.SearchParams {
					searchParamsInst2 := searchParamsValue2.ValueString()
					searchParams2[searchParamsKey2] = searchParamsInst2
				}
				var summaryAttributes1 []string = []string{}
				for _, summaryAttributesItem1 := range r.UIConfig.SingleView.Default.SummaryAttributes {
					summaryAttributes1 = append(summaryAttributes1, summaryAttributesItem1.ValueString())
				}
				entityDefaultEdit1 = &shared.EntityDefaultEdit{
					ViewType:          viewType9,
					SearchParams:      searchParams2,
					SummaryAttributes: summaryAttributes1,
				}
			}
			if entityDefaultEdit1 != nil {
				singleView = &shared.SingleView{
					EntityDefaultEdit: entityDefaultEdit1,
				}
			}
			var redirectEntityView3 *shared.RedirectEntityView
			if r.UIConfig.SingleView.Redirect != nil {
				viewType10 := new(shared.RedirectEntityViewViewType)
				if !r.UIConfig.SingleView.Redirect.ViewType.IsUnknown() && !r.UIConfig.SingleView.Redirect.ViewType.IsNull() {
					*viewType10 = shared.RedirectEntityViewViewType(r.UIConfig.SingleView.Redirect.ViewType.ValueString())
				} else {
					viewType10 = nil
				}
				route3 := new(string)
				if !r.UIConfig.SingleView.Redirect.Route.IsUnknown() && !r.UIConfig.SingleView.Redirect.Route.IsNull() {
					*route3 = r.UIConfig.SingleView.Redirect.Route.ValueString()
				} else {
					route3 = nil
				}
				redirectEntityView3 = &shared.RedirectEntityView{
					ViewType: viewType10,
					Route:    route3,
				}
			}
			if redirectEntityView3 != nil {
				singleView = &shared.SingleView{
					RedirectEntityView: redirectEntityView3,
				}
			}
			var entityViewDisabled3 *shared.EntityViewDisabled
			if r.UIConfig.SingleView.Disabled != nil {
				viewType11 := new(shared.EntityViewDisabledViewType)
				if !r.UIConfig.SingleView.Disabled.ViewType.IsUnknown() && !r.UIConfig.SingleView.Disabled.ViewType.IsNull() {
					*viewType11 = shared.EntityViewDisabledViewType(r.UIConfig.SingleView.Disabled.ViewType.ValueString())
				} else {
					viewType11 = nil
				}
				entityViewDisabled3 = &shared.EntityViewDisabled{
					ViewType: viewType11,
				}
			}
			if entityViewDisabled3 != nil {
				singleView = &shared.SingleView{
					EntityViewDisabled: entityViewDisabled3,
				}
			}
		}
		var listItem *shared.ListItem
		if r.UIConfig.ListItem != nil {
			var summaryAttributes2 []shared.SummaryAttributes = []shared.SummaryAttributes{}
			for _, summaryAttributesItem2 := range r.UIConfig.ListItem.SummaryAttributes {
				if summaryAttributesItem2.SummaryAttribute != nil {
					label3 := summaryAttributesItem2.SummaryAttribute.Label.ValueString()
					value := summaryAttributesItem2.SummaryAttribute.Value.ValueString()
					showAsTag := new(bool)
					if !summaryAttributesItem2.SummaryAttribute.ShowAsTag.IsUnknown() && !summaryAttributesItem2.SummaryAttribute.ShowAsTag.IsNull() {
						*showAsTag = summaryAttributesItem2.SummaryAttribute.ShowAsTag.ValueBool()
					} else {
						showAsTag = nil
					}
					tagColor := new(string)
					if !summaryAttributesItem2.SummaryAttribute.TagColor.IsUnknown() && !summaryAttributesItem2.SummaryAttribute.TagColor.IsNull() {
						*tagColor = summaryAttributesItem2.SummaryAttribute.TagColor.ValueString()
					} else {
						tagColor = nil
					}
					renderCondition := new(string)
					if !summaryAttributesItem2.SummaryAttribute.RenderCondition.IsUnknown() && !summaryAttributesItem2.SummaryAttribute.RenderCondition.IsNull() {
						*renderCondition = summaryAttributesItem2.SummaryAttribute.RenderCondition.ValueString()
					} else {
						renderCondition = nil
					}
					featureFlag1 := new(string)
					if !summaryAttributesItem2.SummaryAttribute.FeatureFlag.IsUnknown() && !summaryAttributesItem2.SummaryAttribute.FeatureFlag.IsNull() {
						*featureFlag1 = summaryAttributesItem2.SummaryAttribute.FeatureFlag.ValueString()
					} else {
						featureFlag1 = nil
					}
					var settingsFlag []shared.SettingFlag = []shared.SettingFlag{}
					for _, settingsFlagItem := range summaryAttributesItem2.SummaryAttribute.SettingsFlag {
						name1 := new(string)
						if !settingsFlagItem.Name.IsUnknown() && !settingsFlagItem.Name.IsNull() {
							*name1 = settingsFlagItem.Name.ValueString()
						} else {
							name1 = nil
						}
						enabled := new(bool)
						if !settingsFlagItem.Enabled.IsUnknown() && !settingsFlagItem.Enabled.IsNull() {
							*enabled = settingsFlagItem.Enabled.ValueBool()
						} else {
							enabled = nil
						}
						settingsFlag = append(settingsFlag, shared.SettingFlag{
							Name:    name1,
							Enabled: enabled,
						})
					}
					summaryAttribute := shared.SummaryAttribute{
						Label:           label3,
						Value:           value,
						ShowAsTag:       showAsTag,
						TagColor:        tagColor,
						RenderCondition: renderCondition,
						FeatureFlag:     featureFlag1,
						SettingsFlag:    settingsFlag,
					}
					summaryAttributes2 = append(summaryAttributes2, shared.SummaryAttributes{
						SummaryAttribute: &summaryAttribute,
					})
				}
				if !summaryAttributesItem2.Str.IsUnknown() && !summaryAttributesItem2.Str.IsNull() {
					str2 := summaryAttributesItem2.Str.ValueString()
					summaryAttributes2 = append(summaryAttributes2, shared.SummaryAttributes{
						Str: &str2,
					})
				}
			}
			var quickActions []shared.EntityAction = []shared.EntityAction{}
			for _, quickActionsItem := range r.UIConfig.ListItem.QuickActions {
				action2 := quickActionsItem.Action.ValueString()
				label4 := quickActionsItem.Label.ValueString()
				icon3 := new(string)
				if !quickActionsItem.Icon.IsUnknown() && !quickActionsItem.Icon.IsNull() {
					*icon3 = quickActionsItem.Icon.ValueString()
				} else {
					icon3 = nil
				}
				permission2 := new(string)
				if !quickActionsItem.Permission.IsUnknown() && !quickActionsItem.Permission.IsNull() {
					*permission2 = quickActionsItem.Permission.ValueString()
				} else {
					permission2 = nil
				}
				quickActions = append(quickActions, shared.EntityAction{
					Action:     action2,
					Label:      label4,
					Icon:       icon3,
					Permission: permission2,
				})
			}
			listItem = &shared.ListItem{
				SummaryAttributes: summaryAttributes2,
				QuickActions:      quickActions,
			}
		}
		var sharing *shared.Sharing
		if r.UIConfig.Sharing != nil {
			showSharingButton := new(bool)
			if !r.UIConfig.Sharing.ShowSharingButton.IsUnknown() && !r.UIConfig.Sharing.ShowSharingButton.IsNull() {
				*showSharingButton = r.UIConfig.Sharing.ShowSharingButton.ValueBool()
			} else {
				showSharingButton = nil
			}
			sharing = &shared.Sharing{
				ShowSharingButton: showSharingButton,
			}
		}
		uiConfig = &shared.UIConfig{
			TableView:  tableView,
			CreateView: createView,
			EditView:   editView,
			SingleView: singleView,
			ListItem:   listItem,
			Sharing:    sharing,
		}
	}
	var capabilities []shared.EntityCapabilityInput = []shared.EntityCapabilityInput{}
	for _, capabilitiesItem := range r.Capabilities {
		id2 := new(string)
		if !capabilitiesItem.ID.IsUnknown() && !capabilitiesItem.ID.IsNull() {
			*id2 = capabilitiesItem.ID.ValueString()
		} else {
			id2 = nil
		}
		name2 := capabilitiesItem.Name.ValueString()
		title := new(string)
		if !capabilitiesItem.Title.IsUnknown() && !capabilitiesItem.Title.IsNull() {
			*title = capabilitiesItem.Title.ValueString()
		} else {
			title = nil
		}
		var attributes []shared.AttributeInput = []shared.AttributeInput{}
		for _, attributesItem := range capabilitiesItem.Attributes {
			if attributesItem.TextAttribute != nil {
				id3 := new(string)
				if !attributesItem.TextAttribute.ID.IsUnknown() && !attributesItem.TextAttribute.ID.IsNull() {
					*id3 = attributesItem.TextAttribute.ID.ValueString()
				} else {
					id3 = nil
				}
				name3 := attributesItem.TextAttribute.Name.ValueString()
				label5 := attributesItem.TextAttribute.Label.ValueString()
				placeholder := new(string)
				if !attributesItem.TextAttribute.Placeholder.IsUnknown() && !attributesItem.TextAttribute.Placeholder.IsNull() {
					*placeholder = attributesItem.TextAttribute.Placeholder.ValueString()
				} else {
					placeholder = nil
				}
				hidden := new(bool)
				if !attributesItem.TextAttribute.Hidden.IsUnknown() && !attributesItem.TextAttribute.Hidden.IsNull() {
					*hidden = attributesItem.TextAttribute.Hidden.ValueBool()
				} else {
					hidden = nil
				}
				showInTable := new(bool)
				if !attributesItem.TextAttribute.ShowInTable.IsUnknown() && !attributesItem.TextAttribute.ShowInTable.IsNull() {
					*showInTable = attributesItem.TextAttribute.ShowInTable.ValueBool()
				} else {
					showInTable = nil
				}
				sortable := new(bool)
				if !attributesItem.TextAttribute.Sortable.IsUnknown() && !attributesItem.TextAttribute.Sortable.IsNull() {
					*sortable = attributesItem.TextAttribute.Sortable.ValueBool()
				} else {
					sortable = nil
				}
				required := new(bool)
				if !attributesItem.TextAttribute.Required.IsUnknown() && !attributesItem.TextAttribute.Required.IsNull() {
					*required = attributesItem.TextAttribute.Required.ValueBool()
				} else {
					required = nil
				}
				readonly := new(bool)
				if !attributesItem.TextAttribute.Readonly.IsUnknown() && !attributesItem.TextAttribute.Readonly.IsNull() {
					*readonly = attributesItem.TextAttribute.Readonly.ValueBool()
				} else {
					readonly = nil
				}
				deprecated := new(bool)
				if !attributesItem.TextAttribute.Deprecated.IsUnknown() && !attributesItem.TextAttribute.Deprecated.IsNull() {
					*deprecated = attributesItem.TextAttribute.Deprecated.ValueBool()
				} else {
					deprecated = nil
				}
				var defaultValue interface{}
				if !attributesItem.TextAttribute.DefaultValue.IsUnknown() && !attributesItem.TextAttribute.DefaultValue.IsNull() {
					_ = json.Unmarshal([]byte(attributesItem.TextAttribute.DefaultValue.ValueString()), &defaultValue)
				}
				group := new(string)
				if !attributesItem.TextAttribute.Group.IsUnknown() && !attributesItem.TextAttribute.Group.IsNull() {
					*group = attributesItem.TextAttribute.Group.ValueString()
				} else {
					group = nil
				}
				order := new(int64)
				if !attributesItem.TextAttribute.Order.IsUnknown() && !attributesItem.TextAttribute.Order.IsNull() {
					*order = attributesItem.TextAttribute.Order.ValueInt64()
				} else {
					order = nil
				}
				layout := new(string)
				if !attributesItem.TextAttribute.Layout.IsUnknown() && !attributesItem.TextAttribute.Layout.IsNull() {
					*layout = attributesItem.TextAttribute.Layout.ValueString()
				} else {
					layout = nil
				}
				hideLabel := new(bool)
				if !attributesItem.TextAttribute.HideLabel.IsUnknown() && !attributesItem.TextAttribute.HideLabel.IsNull() {
					*hideLabel = attributesItem.TextAttribute.HideLabel.ValueBool()
				} else {
					hideLabel = nil
				}
				icon4 := new(string)
				if !attributesItem.TextAttribute.Icon.IsUnknown() && !attributesItem.TextAttribute.Icon.IsNull() {
					*icon4 = attributesItem.TextAttribute.Icon.ValueString()
				} else {
					icon4 = nil
				}
				renderCondition1 := new(string)
				if !attributesItem.TextAttribute.RenderCondition.IsUnknown() && !attributesItem.TextAttribute.RenderCondition.IsNull() {
					*renderCondition1 = attributesItem.TextAttribute.RenderCondition.ValueString()
				} else {
					renderCondition1 = nil
				}
				var purpose []string = []string{}
				for _, purposeItem := range attributesItem.TextAttribute.Purpose {
					purpose = append(purpose, purposeItem.ValueString())
				}
				var constraints *shared.Constraints
				if attributesItem.TextAttribute.Constraints != nil {
					constraints = &shared.Constraints{}
				}
				featureFlag2 := new(string)
				if !attributesItem.TextAttribute.FeatureFlag.IsUnknown() && !attributesItem.TextAttribute.FeatureFlag.IsNull() {
					*featureFlag2 = attributesItem.TextAttribute.FeatureFlag.ValueString()
				} else {
					featureFlag2 = nil
				}
				var settingsFlag1 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem1 := range attributesItem.TextAttribute.SettingsFlag {
					name4 := new(string)
					if !settingsFlagItem1.Name.IsUnknown() && !settingsFlagItem1.Name.IsNull() {
						*name4 = settingsFlagItem1.Name.ValueString()
					} else {
						name4 = nil
					}
					enabled1 := new(bool)
					if !settingsFlagItem1.Enabled.IsUnknown() && !settingsFlagItem1.Enabled.IsNull() {
						*enabled1 = settingsFlagItem1.Enabled.ValueBool()
					} else {
						enabled1 = nil
					}
					settingsFlag1 = append(settingsFlag1, shared.SettingFlag{
						Name:    name4,
						Enabled: enabled1,
					})
				}
				valueFormatter := new(string)
				if !attributesItem.TextAttribute.ValueFormatter.IsUnknown() && !attributesItem.TextAttribute.ValueFormatter.IsNull() {
					*valueFormatter = attributesItem.TextAttribute.ValueFormatter.ValueString()
				} else {
					valueFormatter = nil
				}
				previewValueFormatter := new(string)
				if !attributesItem.TextAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.TextAttribute.PreviewValueFormatter.IsNull() {
					*previewValueFormatter = attributesItem.TextAttribute.PreviewValueFormatter.ValueString()
				} else {
					previewValueFormatter = nil
				}
				entityBuilderDisableEdit := new(bool)
				if !attributesItem.TextAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.TextAttribute.EntityBuilderDisableEdit.IsNull() {
					*entityBuilderDisableEdit = attributesItem.TextAttribute.EntityBuilderDisableEdit.ValueBool()
				} else {
					entityBuilderDisableEdit = nil
				}
				protected := new(bool)
				if !attributesItem.TextAttribute.Protected.IsUnknown() && !attributesItem.TextAttribute.Protected.IsNull() {
					*protected = attributesItem.TextAttribute.Protected.ValueBool()
				} else {
					protected = nil
				}
				var infoHelpers *shared.InfoHelpers
				if attributesItem.TextAttribute.InfoHelpers != nil {
					hintText := new(string)
					if !attributesItem.TextAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.TextAttribute.InfoHelpers.HintText.IsNull() {
						*hintText = attributesItem.TextAttribute.InfoHelpers.HintText.ValueString()
					} else {
						hintText = nil
					}
					hintTextKey := new(string)
					if !attributesItem.TextAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.TextAttribute.InfoHelpers.HintTextKey.IsNull() {
						*hintTextKey = attributesItem.TextAttribute.InfoHelpers.HintTextKey.ValueString()
					} else {
						hintTextKey = nil
					}
					hintCustomComponent := new(string)
					if !attributesItem.TextAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.TextAttribute.InfoHelpers.HintCustomComponent.IsNull() {
						*hintCustomComponent = attributesItem.TextAttribute.InfoHelpers.HintCustomComponent.ValueString()
					} else {
						hintCustomComponent = nil
					}
					hintTooltipPlacement := new(string)
					if !attributesItem.TextAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.TextAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
						*hintTooltipPlacement = attributesItem.TextAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
					} else {
						hintTooltipPlacement = nil
					}
					infoHelpers = &shared.InfoHelpers{
						HintText:             hintText,
						HintTextKey:          hintTextKey,
						HintCustomComponent:  hintCustomComponent,
						HintTooltipPlacement: hintTooltipPlacement,
					}
				}
				typeVar1 := new(shared.Type)
				if !attributesItem.TextAttribute.Type.IsUnknown() && !attributesItem.TextAttribute.Type.IsNull() {
					*typeVar1 = shared.Type(attributesItem.TextAttribute.Type.ValueString())
				} else {
					typeVar1 = nil
				}
				multiline := new(bool)
				if !attributesItem.TextAttribute.Multiline.IsUnknown() && !attributesItem.TextAttribute.Multiline.IsNull() {
					*multiline = attributesItem.TextAttribute.Multiline.ValueBool()
				} else {
					multiline = nil
				}
				textAttribute := shared.TextAttribute{
					ID:                       id3,
					Name:                     name3,
					Label:                    label5,
					Placeholder:              placeholder,
					Hidden:                   hidden,
					ShowInTable:              showInTable,
					Sortable:                 sortable,
					Required:                 required,
					Readonly:                 readonly,
					Deprecated:               deprecated,
					DefaultValue:             defaultValue,
					Group:                    group,
					Order:                    order,
					Layout:                   layout,
					HideLabel:                hideLabel,
					Icon:                     icon4,
					RenderCondition:          renderCondition1,
					Purpose:                  purpose,
					Constraints:              constraints,
					FeatureFlag:              featureFlag2,
					SettingsFlag:             settingsFlag1,
					ValueFormatter:           valueFormatter,
					PreviewValueFormatter:    previewValueFormatter,
					EntityBuilderDisableEdit: entityBuilderDisableEdit,
					Protected:                protected,
					InfoHelpers:              infoHelpers,
					Type:                     typeVar1,
					Multiline:                multiline,
				}
				attributes = append(attributes, shared.AttributeInput{
					TextAttribute: &textAttribute,
				})
			}
			if attributesItem.LinkAttribute != nil {
				id4 := new(string)
				if !attributesItem.LinkAttribute.ID.IsUnknown() && !attributesItem.LinkAttribute.ID.IsNull() {
					*id4 = attributesItem.LinkAttribute.ID.ValueString()
				} else {
					id4 = nil
				}
				name5 := attributesItem.LinkAttribute.Name.ValueString()
				label6 := attributesItem.LinkAttribute.Label.ValueString()
				placeholder1 := new(string)
				if !attributesItem.LinkAttribute.Placeholder.IsUnknown() && !attributesItem.LinkAttribute.Placeholder.IsNull() {
					*placeholder1 = attributesItem.LinkAttribute.Placeholder.ValueString()
				} else {
					placeholder1 = nil
				}
				hidden1 := new(bool)
				if !attributesItem.LinkAttribute.Hidden.IsUnknown() && !attributesItem.LinkAttribute.Hidden.IsNull() {
					*hidden1 = attributesItem.LinkAttribute.Hidden.ValueBool()
				} else {
					hidden1 = nil
				}
				showInTable1 := new(bool)
				if !attributesItem.LinkAttribute.ShowInTable.IsUnknown() && !attributesItem.LinkAttribute.ShowInTable.IsNull() {
					*showInTable1 = attributesItem.LinkAttribute.ShowInTable.ValueBool()
				} else {
					showInTable1 = nil
				}
				sortable1 := new(bool)
				if !attributesItem.LinkAttribute.Sortable.IsUnknown() && !attributesItem.LinkAttribute.Sortable.IsNull() {
					*sortable1 = attributesItem.LinkAttribute.Sortable.ValueBool()
				} else {
					sortable1 = nil
				}
				required1 := new(bool)
				if !attributesItem.LinkAttribute.Required.IsUnknown() && !attributesItem.LinkAttribute.Required.IsNull() {
					*required1 = attributesItem.LinkAttribute.Required.ValueBool()
				} else {
					required1 = nil
				}
				readonly1 := new(bool)
				if !attributesItem.LinkAttribute.Readonly.IsUnknown() && !attributesItem.LinkAttribute.Readonly.IsNull() {
					*readonly1 = attributesItem.LinkAttribute.Readonly.ValueBool()
				} else {
					readonly1 = nil
				}
				deprecated1 := new(bool)
				if !attributesItem.LinkAttribute.Deprecated.IsUnknown() && !attributesItem.LinkAttribute.Deprecated.IsNull() {
					*deprecated1 = attributesItem.LinkAttribute.Deprecated.ValueBool()
				} else {
					deprecated1 = nil
				}
				var defaultValue1 interface{}
				if !attributesItem.LinkAttribute.DefaultValue.IsUnknown() && !attributesItem.LinkAttribute.DefaultValue.IsNull() {
					_ = json.Unmarshal([]byte(attributesItem.LinkAttribute.DefaultValue.ValueString()), &defaultValue1)
				}
				group1 := new(string)
				if !attributesItem.LinkAttribute.Group.IsUnknown() && !attributesItem.LinkAttribute.Group.IsNull() {
					*group1 = attributesItem.LinkAttribute.Group.ValueString()
				} else {
					group1 = nil
				}
				order1 := new(int64)
				if !attributesItem.LinkAttribute.Order.IsUnknown() && !attributesItem.LinkAttribute.Order.IsNull() {
					*order1 = attributesItem.LinkAttribute.Order.ValueInt64()
				} else {
					order1 = nil
				}
				layout1 := new(string)
				if !attributesItem.LinkAttribute.Layout.IsUnknown() && !attributesItem.LinkAttribute.Layout.IsNull() {
					*layout1 = attributesItem.LinkAttribute.Layout.ValueString()
				} else {
					layout1 = nil
				}
				hideLabel1 := new(bool)
				if !attributesItem.LinkAttribute.HideLabel.IsUnknown() && !attributesItem.LinkAttribute.HideLabel.IsNull() {
					*hideLabel1 = attributesItem.LinkAttribute.HideLabel.ValueBool()
				} else {
					hideLabel1 = nil
				}
				icon5 := new(string)
				if !attributesItem.LinkAttribute.Icon.IsUnknown() && !attributesItem.LinkAttribute.Icon.IsNull() {
					*icon5 = attributesItem.LinkAttribute.Icon.ValueString()
				} else {
					icon5 = nil
				}
				renderCondition2 := new(string)
				if !attributesItem.LinkAttribute.RenderCondition.IsUnknown() && !attributesItem.LinkAttribute.RenderCondition.IsNull() {
					*renderCondition2 = attributesItem.LinkAttribute.RenderCondition.ValueString()
				} else {
					renderCondition2 = nil
				}
				var purpose1 []string = []string{}
				for _, purposeItem1 := range attributesItem.LinkAttribute.Purpose {
					purpose1 = append(purpose1, purposeItem1.ValueString())
				}
				var constraints1 *shared.LinkAttributeConstraints
				if attributesItem.LinkAttribute.Constraints != nil {
					constraints1 = &shared.LinkAttributeConstraints{}
				}
				featureFlag3 := new(string)
				if !attributesItem.LinkAttribute.FeatureFlag.IsUnknown() && !attributesItem.LinkAttribute.FeatureFlag.IsNull() {
					*featureFlag3 = attributesItem.LinkAttribute.FeatureFlag.ValueString()
				} else {
					featureFlag3 = nil
				}
				var settingsFlag2 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem2 := range attributesItem.LinkAttribute.SettingsFlag {
					name6 := new(string)
					if !settingsFlagItem2.Name.IsUnknown() && !settingsFlagItem2.Name.IsNull() {
						*name6 = settingsFlagItem2.Name.ValueString()
					} else {
						name6 = nil
					}
					enabled2 := new(bool)
					if !settingsFlagItem2.Enabled.IsUnknown() && !settingsFlagItem2.Enabled.IsNull() {
						*enabled2 = settingsFlagItem2.Enabled.ValueBool()
					} else {
						enabled2 = nil
					}
					settingsFlag2 = append(settingsFlag2, shared.SettingFlag{
						Name:    name6,
						Enabled: enabled2,
					})
				}
				valueFormatter1 := new(string)
				if !attributesItem.LinkAttribute.ValueFormatter.IsUnknown() && !attributesItem.LinkAttribute.ValueFormatter.IsNull() {
					*valueFormatter1 = attributesItem.LinkAttribute.ValueFormatter.ValueString()
				} else {
					valueFormatter1 = nil
				}
				previewValueFormatter1 := new(string)
				if !attributesItem.LinkAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.LinkAttribute.PreviewValueFormatter.IsNull() {
					*previewValueFormatter1 = attributesItem.LinkAttribute.PreviewValueFormatter.ValueString()
				} else {
					previewValueFormatter1 = nil
				}
				entityBuilderDisableEdit1 := new(bool)
				if !attributesItem.LinkAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.LinkAttribute.EntityBuilderDisableEdit.IsNull() {
					*entityBuilderDisableEdit1 = attributesItem.LinkAttribute.EntityBuilderDisableEdit.ValueBool()
				} else {
					entityBuilderDisableEdit1 = nil
				}
				protected1 := new(bool)
				if !attributesItem.LinkAttribute.Protected.IsUnknown() && !attributesItem.LinkAttribute.Protected.IsNull() {
					*protected1 = attributesItem.LinkAttribute.Protected.ValueBool()
				} else {
					protected1 = nil
				}
				var infoHelpers1 *shared.LinkAttributeInfoHelpers
				if attributesItem.LinkAttribute.InfoHelpers != nil {
					hintText1 := new(string)
					if !attributesItem.LinkAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.LinkAttribute.InfoHelpers.HintText.IsNull() {
						*hintText1 = attributesItem.LinkAttribute.InfoHelpers.HintText.ValueString()
					} else {
						hintText1 = nil
					}
					hintTextKey1 := new(string)
					if !attributesItem.LinkAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.LinkAttribute.InfoHelpers.HintTextKey.IsNull() {
						*hintTextKey1 = attributesItem.LinkAttribute.InfoHelpers.HintTextKey.ValueString()
					} else {
						hintTextKey1 = nil
					}
					hintCustomComponent1 := new(string)
					if !attributesItem.LinkAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.LinkAttribute.InfoHelpers.HintCustomComponent.IsNull() {
						*hintCustomComponent1 = attributesItem.LinkAttribute.InfoHelpers.HintCustomComponent.ValueString()
					} else {
						hintCustomComponent1 = nil
					}
					hintTooltipPlacement1 := new(string)
					if !attributesItem.LinkAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.LinkAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
						*hintTooltipPlacement1 = attributesItem.LinkAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
					} else {
						hintTooltipPlacement1 = nil
					}
					infoHelpers1 = &shared.LinkAttributeInfoHelpers{
						HintText:             hintText1,
						HintTextKey:          hintTextKey1,
						HintCustomComponent:  hintCustomComponent1,
						HintTooltipPlacement: hintTooltipPlacement1,
					}
				}
				typeVar2 := new(shared.LinkAttributeType)
				if !attributesItem.LinkAttribute.Type.IsUnknown() && !attributesItem.LinkAttribute.Type.IsNull() {
					*typeVar2 = shared.LinkAttributeType(attributesItem.LinkAttribute.Type.ValueString())
				} else {
					typeVar2 = nil
				}
				linkAttribute := shared.LinkAttribute{
					ID:                       id4,
					Name:                     name5,
					Label:                    label6,
					Placeholder:              placeholder1,
					Hidden:                   hidden1,
					ShowInTable:              showInTable1,
					Sortable:                 sortable1,
					Required:                 required1,
					Readonly:                 readonly1,
					Deprecated:               deprecated1,
					DefaultValue:             defaultValue1,
					Group:                    group1,
					Order:                    order1,
					Layout:                   layout1,
					HideLabel:                hideLabel1,
					Icon:                     icon5,
					RenderCondition:          renderCondition2,
					Purpose:                  purpose1,
					Constraints:              constraints1,
					FeatureFlag:              featureFlag3,
					SettingsFlag:             settingsFlag2,
					ValueFormatter:           valueFormatter1,
					PreviewValueFormatter:    previewValueFormatter1,
					EntityBuilderDisableEdit: entityBuilderDisableEdit1,
					Protected:                protected1,
					InfoHelpers:              infoHelpers1,
					Type:                     typeVar2,
				}
				attributes = append(attributes, shared.AttributeInput{
					LinkAttribute: &linkAttribute,
				})
			}
			if attributesItem.DateAttribute != nil {
				id5 := new(string)
				if !attributesItem.DateAttribute.ID.IsUnknown() && !attributesItem.DateAttribute.ID.IsNull() {
					*id5 = attributesItem.DateAttribute.ID.ValueString()
				} else {
					id5 = nil
				}
				name7 := attributesItem.DateAttribute.Name.ValueString()
				label7 := attributesItem.DateAttribute.Label.ValueString()
				placeholder2 := new(string)
				if !attributesItem.DateAttribute.Placeholder.IsUnknown() && !attributesItem.DateAttribute.Placeholder.IsNull() {
					*placeholder2 = attributesItem.DateAttribute.Placeholder.ValueString()
				} else {
					placeholder2 = nil
				}
				hidden2 := new(bool)
				if !attributesItem.DateAttribute.Hidden.IsUnknown() && !attributesItem.DateAttribute.Hidden.IsNull() {
					*hidden2 = attributesItem.DateAttribute.Hidden.ValueBool()
				} else {
					hidden2 = nil
				}
				showInTable2 := new(bool)
				if !attributesItem.DateAttribute.ShowInTable.IsUnknown() && !attributesItem.DateAttribute.ShowInTable.IsNull() {
					*showInTable2 = attributesItem.DateAttribute.ShowInTable.ValueBool()
				} else {
					showInTable2 = nil
				}
				sortable2 := new(bool)
				if !attributesItem.DateAttribute.Sortable.IsUnknown() && !attributesItem.DateAttribute.Sortable.IsNull() {
					*sortable2 = attributesItem.DateAttribute.Sortable.ValueBool()
				} else {
					sortable2 = nil
				}
				required2 := new(bool)
				if !attributesItem.DateAttribute.Required.IsUnknown() && !attributesItem.DateAttribute.Required.IsNull() {
					*required2 = attributesItem.DateAttribute.Required.ValueBool()
				} else {
					required2 = nil
				}
				readonly2 := new(bool)
				if !attributesItem.DateAttribute.Readonly.IsUnknown() && !attributesItem.DateAttribute.Readonly.IsNull() {
					*readonly2 = attributesItem.DateAttribute.Readonly.ValueBool()
				} else {
					readonly2 = nil
				}
				deprecated2 := new(bool)
				if !attributesItem.DateAttribute.Deprecated.IsUnknown() && !attributesItem.DateAttribute.Deprecated.IsNull() {
					*deprecated2 = attributesItem.DateAttribute.Deprecated.ValueBool()
				} else {
					deprecated2 = nil
				}
				var defaultValue2 interface{}
				if !attributesItem.DateAttribute.DefaultValue.IsUnknown() && !attributesItem.DateAttribute.DefaultValue.IsNull() {
					_ = json.Unmarshal([]byte(attributesItem.DateAttribute.DefaultValue.ValueString()), &defaultValue2)
				}
				group2 := new(string)
				if !attributesItem.DateAttribute.Group.IsUnknown() && !attributesItem.DateAttribute.Group.IsNull() {
					*group2 = attributesItem.DateAttribute.Group.ValueString()
				} else {
					group2 = nil
				}
				order2 := new(int64)
				if !attributesItem.DateAttribute.Order.IsUnknown() && !attributesItem.DateAttribute.Order.IsNull() {
					*order2 = attributesItem.DateAttribute.Order.ValueInt64()
				} else {
					order2 = nil
				}
				layout2 := new(string)
				if !attributesItem.DateAttribute.Layout.IsUnknown() && !attributesItem.DateAttribute.Layout.IsNull() {
					*layout2 = attributesItem.DateAttribute.Layout.ValueString()
				} else {
					layout2 = nil
				}
				hideLabel2 := new(bool)
				if !attributesItem.DateAttribute.HideLabel.IsUnknown() && !attributesItem.DateAttribute.HideLabel.IsNull() {
					*hideLabel2 = attributesItem.DateAttribute.HideLabel.ValueBool()
				} else {
					hideLabel2 = nil
				}
				icon6 := new(string)
				if !attributesItem.DateAttribute.Icon.IsUnknown() && !attributesItem.DateAttribute.Icon.IsNull() {
					*icon6 = attributesItem.DateAttribute.Icon.ValueString()
				} else {
					icon6 = nil
				}
				renderCondition3 := new(string)
				if !attributesItem.DateAttribute.RenderCondition.IsUnknown() && !attributesItem.DateAttribute.RenderCondition.IsNull() {
					*renderCondition3 = attributesItem.DateAttribute.RenderCondition.ValueString()
				} else {
					renderCondition3 = nil
				}
				var purpose2 []string = []string{}
				for _, purposeItem2 := range attributesItem.DateAttribute.Purpose {
					purpose2 = append(purpose2, purposeItem2.ValueString())
				}
				var constraints2 *shared.DateAttributeConstraints
				if attributesItem.DateAttribute.Constraints != nil {
					constraints2 = &shared.DateAttributeConstraints{}
				}
				featureFlag4 := new(string)
				if !attributesItem.DateAttribute.FeatureFlag.IsUnknown() && !attributesItem.DateAttribute.FeatureFlag.IsNull() {
					*featureFlag4 = attributesItem.DateAttribute.FeatureFlag.ValueString()
				} else {
					featureFlag4 = nil
				}
				var settingsFlag3 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem3 := range attributesItem.DateAttribute.SettingsFlag {
					name8 := new(string)
					if !settingsFlagItem3.Name.IsUnknown() && !settingsFlagItem3.Name.IsNull() {
						*name8 = settingsFlagItem3.Name.ValueString()
					} else {
						name8 = nil
					}
					enabled3 := new(bool)
					if !settingsFlagItem3.Enabled.IsUnknown() && !settingsFlagItem3.Enabled.IsNull() {
						*enabled3 = settingsFlagItem3.Enabled.ValueBool()
					} else {
						enabled3 = nil
					}
					settingsFlag3 = append(settingsFlag3, shared.SettingFlag{
						Name:    name8,
						Enabled: enabled3,
					})
				}
				valueFormatter2 := new(string)
				if !attributesItem.DateAttribute.ValueFormatter.IsUnknown() && !attributesItem.DateAttribute.ValueFormatter.IsNull() {
					*valueFormatter2 = attributesItem.DateAttribute.ValueFormatter.ValueString()
				} else {
					valueFormatter2 = nil
				}
				previewValueFormatter2 := new(string)
				if !attributesItem.DateAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.DateAttribute.PreviewValueFormatter.IsNull() {
					*previewValueFormatter2 = attributesItem.DateAttribute.PreviewValueFormatter.ValueString()
				} else {
					previewValueFormatter2 = nil
				}
				entityBuilderDisableEdit2 := new(bool)
				if !attributesItem.DateAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.DateAttribute.EntityBuilderDisableEdit.IsNull() {
					*entityBuilderDisableEdit2 = attributesItem.DateAttribute.EntityBuilderDisableEdit.ValueBool()
				} else {
					entityBuilderDisableEdit2 = nil
				}
				protected2 := new(bool)
				if !attributesItem.DateAttribute.Protected.IsUnknown() && !attributesItem.DateAttribute.Protected.IsNull() {
					*protected2 = attributesItem.DateAttribute.Protected.ValueBool()
				} else {
					protected2 = nil
				}
				var infoHelpers2 *shared.DateAttributeInfoHelpers
				if attributesItem.DateAttribute.InfoHelpers != nil {
					hintText2 := new(string)
					if !attributesItem.DateAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.DateAttribute.InfoHelpers.HintText.IsNull() {
						*hintText2 = attributesItem.DateAttribute.InfoHelpers.HintText.ValueString()
					} else {
						hintText2 = nil
					}
					hintTextKey2 := new(string)
					if !attributesItem.DateAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.DateAttribute.InfoHelpers.HintTextKey.IsNull() {
						*hintTextKey2 = attributesItem.DateAttribute.InfoHelpers.HintTextKey.ValueString()
					} else {
						hintTextKey2 = nil
					}
					hintCustomComponent2 := new(string)
					if !attributesItem.DateAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.DateAttribute.InfoHelpers.HintCustomComponent.IsNull() {
						*hintCustomComponent2 = attributesItem.DateAttribute.InfoHelpers.HintCustomComponent.ValueString()
					} else {
						hintCustomComponent2 = nil
					}
					hintTooltipPlacement2 := new(string)
					if !attributesItem.DateAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.DateAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
						*hintTooltipPlacement2 = attributesItem.DateAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
					} else {
						hintTooltipPlacement2 = nil
					}
					infoHelpers2 = &shared.DateAttributeInfoHelpers{
						HintText:             hintText2,
						HintTextKey:          hintTextKey2,
						HintCustomComponent:  hintCustomComponent2,
						HintTooltipPlacement: hintTooltipPlacement2,
					}
				}
				typeVar3 := new(shared.DateAttributeType)
				if !attributesItem.DateAttribute.Type.IsUnknown() && !attributesItem.DateAttribute.Type.IsNull() {
					*typeVar3 = shared.DateAttributeType(attributesItem.DateAttribute.Type.ValueString())
				} else {
					typeVar3 = nil
				}
				dateAttribute := shared.DateAttribute{
					ID:                       id5,
					Name:                     name7,
					Label:                    label7,
					Placeholder:              placeholder2,
					Hidden:                   hidden2,
					ShowInTable:              showInTable2,
					Sortable:                 sortable2,
					Required:                 required2,
					Readonly:                 readonly2,
					Deprecated:               deprecated2,
					DefaultValue:             defaultValue2,
					Group:                    group2,
					Order:                    order2,
					Layout:                   layout2,
					HideLabel:                hideLabel2,
					Icon:                     icon6,
					RenderCondition:          renderCondition3,
					Purpose:                  purpose2,
					Constraints:              constraints2,
					FeatureFlag:              featureFlag4,
					SettingsFlag:             settingsFlag3,
					ValueFormatter:           valueFormatter2,
					PreviewValueFormatter:    previewValueFormatter2,
					EntityBuilderDisableEdit: entityBuilderDisableEdit2,
					Protected:                protected2,
					InfoHelpers:              infoHelpers2,
					Type:                     typeVar3,
				}
				attributes = append(attributes, shared.AttributeInput{
					DateAttribute: &dateAttribute,
				})
			}
			if attributesItem.CountryAttribute != nil {
				id6 := new(string)
				if !attributesItem.CountryAttribute.ID.IsUnknown() && !attributesItem.CountryAttribute.ID.IsNull() {
					*id6 = attributesItem.CountryAttribute.ID.ValueString()
				} else {
					id6 = nil
				}
				name9 := attributesItem.CountryAttribute.Name.ValueString()
				label8 := attributesItem.CountryAttribute.Label.ValueString()
				placeholder3 := new(string)
				if !attributesItem.CountryAttribute.Placeholder.IsUnknown() && !attributesItem.CountryAttribute.Placeholder.IsNull() {
					*placeholder3 = attributesItem.CountryAttribute.Placeholder.ValueString()
				} else {
					placeholder3 = nil
				}
				hidden3 := new(bool)
				if !attributesItem.CountryAttribute.Hidden.IsUnknown() && !attributesItem.CountryAttribute.Hidden.IsNull() {
					*hidden3 = attributesItem.CountryAttribute.Hidden.ValueBool()
				} else {
					hidden3 = nil
				}
				showInTable3 := new(bool)
				if !attributesItem.CountryAttribute.ShowInTable.IsUnknown() && !attributesItem.CountryAttribute.ShowInTable.IsNull() {
					*showInTable3 = attributesItem.CountryAttribute.ShowInTable.ValueBool()
				} else {
					showInTable3 = nil
				}
				sortable3 := new(bool)
				if !attributesItem.CountryAttribute.Sortable.IsUnknown() && !attributesItem.CountryAttribute.Sortable.IsNull() {
					*sortable3 = attributesItem.CountryAttribute.Sortable.ValueBool()
				} else {
					sortable3 = nil
				}
				required3 := new(bool)
				if !attributesItem.CountryAttribute.Required.IsUnknown() && !attributesItem.CountryAttribute.Required.IsNull() {
					*required3 = attributesItem.CountryAttribute.Required.ValueBool()
				} else {
					required3 = nil
				}
				readonly3 := new(bool)
				if !attributesItem.CountryAttribute.Readonly.IsUnknown() && !attributesItem.CountryAttribute.Readonly.IsNull() {
					*readonly3 = attributesItem.CountryAttribute.Readonly.ValueBool()
				} else {
					readonly3 = nil
				}
				deprecated3 := new(bool)
				if !attributesItem.CountryAttribute.Deprecated.IsUnknown() && !attributesItem.CountryAttribute.Deprecated.IsNull() {
					*deprecated3 = attributesItem.CountryAttribute.Deprecated.ValueBool()
				} else {
					deprecated3 = nil
				}
				var defaultValue3 interface{}
				if !attributesItem.CountryAttribute.DefaultValue.IsUnknown() && !attributesItem.CountryAttribute.DefaultValue.IsNull() {
					_ = json.Unmarshal([]byte(attributesItem.CountryAttribute.DefaultValue.ValueString()), &defaultValue3)
				}
				group3 := new(string)
				if !attributesItem.CountryAttribute.Group.IsUnknown() && !attributesItem.CountryAttribute.Group.IsNull() {
					*group3 = attributesItem.CountryAttribute.Group.ValueString()
				} else {
					group3 = nil
				}
				order3 := new(int64)
				if !attributesItem.CountryAttribute.Order.IsUnknown() && !attributesItem.CountryAttribute.Order.IsNull() {
					*order3 = attributesItem.CountryAttribute.Order.ValueInt64()
				} else {
					order3 = nil
				}
				layout3 := new(string)
				if !attributesItem.CountryAttribute.Layout.IsUnknown() && !attributesItem.CountryAttribute.Layout.IsNull() {
					*layout3 = attributesItem.CountryAttribute.Layout.ValueString()
				} else {
					layout3 = nil
				}
				hideLabel3 := new(bool)
				if !attributesItem.CountryAttribute.HideLabel.IsUnknown() && !attributesItem.CountryAttribute.HideLabel.IsNull() {
					*hideLabel3 = attributesItem.CountryAttribute.HideLabel.ValueBool()
				} else {
					hideLabel3 = nil
				}
				icon7 := new(string)
				if !attributesItem.CountryAttribute.Icon.IsUnknown() && !attributesItem.CountryAttribute.Icon.IsNull() {
					*icon7 = attributesItem.CountryAttribute.Icon.ValueString()
				} else {
					icon7 = nil
				}
				renderCondition4 := new(string)
				if !attributesItem.CountryAttribute.RenderCondition.IsUnknown() && !attributesItem.CountryAttribute.RenderCondition.IsNull() {
					*renderCondition4 = attributesItem.CountryAttribute.RenderCondition.ValueString()
				} else {
					renderCondition4 = nil
				}
				var purpose3 []string = []string{}
				for _, purposeItem3 := range attributesItem.CountryAttribute.Purpose {
					purpose3 = append(purpose3, purposeItem3.ValueString())
				}
				var constraints3 *shared.CountryAttributeConstraints
				if attributesItem.CountryAttribute.Constraints != nil {
					constraints3 = &shared.CountryAttributeConstraints{}
				}
				featureFlag5 := new(string)
				if !attributesItem.CountryAttribute.FeatureFlag.IsUnknown() && !attributesItem.CountryAttribute.FeatureFlag.IsNull() {
					*featureFlag5 = attributesItem.CountryAttribute.FeatureFlag.ValueString()
				} else {
					featureFlag5 = nil
				}
				var settingsFlag4 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem4 := range attributesItem.CountryAttribute.SettingsFlag {
					name10 := new(string)
					if !settingsFlagItem4.Name.IsUnknown() && !settingsFlagItem4.Name.IsNull() {
						*name10 = settingsFlagItem4.Name.ValueString()
					} else {
						name10 = nil
					}
					enabled4 := new(bool)
					if !settingsFlagItem4.Enabled.IsUnknown() && !settingsFlagItem4.Enabled.IsNull() {
						*enabled4 = settingsFlagItem4.Enabled.ValueBool()
					} else {
						enabled4 = nil
					}
					settingsFlag4 = append(settingsFlag4, shared.SettingFlag{
						Name:    name10,
						Enabled: enabled4,
					})
				}
				valueFormatter3 := new(string)
				if !attributesItem.CountryAttribute.ValueFormatter.IsUnknown() && !attributesItem.CountryAttribute.ValueFormatter.IsNull() {
					*valueFormatter3 = attributesItem.CountryAttribute.ValueFormatter.ValueString()
				} else {
					valueFormatter3 = nil
				}
				previewValueFormatter3 := new(string)
				if !attributesItem.CountryAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.CountryAttribute.PreviewValueFormatter.IsNull() {
					*previewValueFormatter3 = attributesItem.CountryAttribute.PreviewValueFormatter.ValueString()
				} else {
					previewValueFormatter3 = nil
				}
				entityBuilderDisableEdit3 := new(bool)
				if !attributesItem.CountryAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.CountryAttribute.EntityBuilderDisableEdit.IsNull() {
					*entityBuilderDisableEdit3 = attributesItem.CountryAttribute.EntityBuilderDisableEdit.ValueBool()
				} else {
					entityBuilderDisableEdit3 = nil
				}
				protected3 := new(bool)
				if !attributesItem.CountryAttribute.Protected.IsUnknown() && !attributesItem.CountryAttribute.Protected.IsNull() {
					*protected3 = attributesItem.CountryAttribute.Protected.ValueBool()
				} else {
					protected3 = nil
				}
				var infoHelpers3 *shared.CountryAttributeInfoHelpers
				if attributesItem.CountryAttribute.InfoHelpers != nil {
					hintText3 := new(string)
					if !attributesItem.CountryAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.CountryAttribute.InfoHelpers.HintText.IsNull() {
						*hintText3 = attributesItem.CountryAttribute.InfoHelpers.HintText.ValueString()
					} else {
						hintText3 = nil
					}
					hintTextKey3 := new(string)
					if !attributesItem.CountryAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.CountryAttribute.InfoHelpers.HintTextKey.IsNull() {
						*hintTextKey3 = attributesItem.CountryAttribute.InfoHelpers.HintTextKey.ValueString()
					} else {
						hintTextKey3 = nil
					}
					hintCustomComponent3 := new(string)
					if !attributesItem.CountryAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.CountryAttribute.InfoHelpers.HintCustomComponent.IsNull() {
						*hintCustomComponent3 = attributesItem.CountryAttribute.InfoHelpers.HintCustomComponent.ValueString()
					} else {
						hintCustomComponent3 = nil
					}
					hintTooltipPlacement3 := new(string)
					if !attributesItem.CountryAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.CountryAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
						*hintTooltipPlacement3 = attributesItem.CountryAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
					} else {
						hintTooltipPlacement3 = nil
					}
					infoHelpers3 = &shared.CountryAttributeInfoHelpers{
						HintText:             hintText3,
						HintTextKey:          hintTextKey3,
						HintCustomComponent:  hintCustomComponent3,
						HintTooltipPlacement: hintTooltipPlacement3,
					}
				}
				typeVar4 := new(shared.CountryAttributeType)
				if !attributesItem.CountryAttribute.Type.IsUnknown() && !attributesItem.CountryAttribute.Type.IsNull() {
					*typeVar4 = shared.CountryAttributeType(attributesItem.CountryAttribute.Type.ValueString())
				} else {
					typeVar4 = nil
				}
				countryAttribute := shared.CountryAttribute{
					ID:                       id6,
					Name:                     name9,
					Label:                    label8,
					Placeholder:              placeholder3,
					Hidden:                   hidden3,
					ShowInTable:              showInTable3,
					Sortable:                 sortable3,
					Required:                 required3,
					Readonly:                 readonly3,
					Deprecated:               deprecated3,
					DefaultValue:             defaultValue3,
					Group:                    group3,
					Order:                    order3,
					Layout:                   layout3,
					HideLabel:                hideLabel3,
					Icon:                     icon7,
					RenderCondition:          renderCondition4,
					Purpose:                  purpose3,
					Constraints:              constraints3,
					FeatureFlag:              featureFlag5,
					SettingsFlag:             settingsFlag4,
					ValueFormatter:           valueFormatter3,
					PreviewValueFormatter:    previewValueFormatter3,
					EntityBuilderDisableEdit: entityBuilderDisableEdit3,
					Protected:                protected3,
					InfoHelpers:              infoHelpers3,
					Type:                     typeVar4,
				}
				attributes = append(attributes, shared.AttributeInput{
					CountryAttribute: &countryAttribute,
				})
			}
			if attributesItem.BooleanAttribute != nil {
				id7 := new(string)
				if !attributesItem.BooleanAttribute.ID.IsUnknown() && !attributesItem.BooleanAttribute.ID.IsNull() {
					*id7 = attributesItem.BooleanAttribute.ID.ValueString()
				} else {
					id7 = nil
				}
				name11 := attributesItem.BooleanAttribute.Name.ValueString()
				label9 := attributesItem.BooleanAttribute.Label.ValueString()
				placeholder4 := new(string)
				if !attributesItem.BooleanAttribute.Placeholder.IsUnknown() && !attributesItem.BooleanAttribute.Placeholder.IsNull() {
					*placeholder4 = attributesItem.BooleanAttribute.Placeholder.ValueString()
				} else {
					placeholder4 = nil
				}
				hidden4 := new(bool)
				if !attributesItem.BooleanAttribute.Hidden.IsUnknown() && !attributesItem.BooleanAttribute.Hidden.IsNull() {
					*hidden4 = attributesItem.BooleanAttribute.Hidden.ValueBool()
				} else {
					hidden4 = nil
				}
				showInTable4 := new(bool)
				if !attributesItem.BooleanAttribute.ShowInTable.IsUnknown() && !attributesItem.BooleanAttribute.ShowInTable.IsNull() {
					*showInTable4 = attributesItem.BooleanAttribute.ShowInTable.ValueBool()
				} else {
					showInTable4 = nil
				}
				sortable4 := new(bool)
				if !attributesItem.BooleanAttribute.Sortable.IsUnknown() && !attributesItem.BooleanAttribute.Sortable.IsNull() {
					*sortable4 = attributesItem.BooleanAttribute.Sortable.ValueBool()
				} else {
					sortable4 = nil
				}
				required4 := new(bool)
				if !attributesItem.BooleanAttribute.Required.IsUnknown() && !attributesItem.BooleanAttribute.Required.IsNull() {
					*required4 = attributesItem.BooleanAttribute.Required.ValueBool()
				} else {
					required4 = nil
				}
				readonly4 := new(bool)
				if !attributesItem.BooleanAttribute.Readonly.IsUnknown() && !attributesItem.BooleanAttribute.Readonly.IsNull() {
					*readonly4 = attributesItem.BooleanAttribute.Readonly.ValueBool()
				} else {
					readonly4 = nil
				}
				deprecated4 := new(bool)
				if !attributesItem.BooleanAttribute.Deprecated.IsUnknown() && !attributesItem.BooleanAttribute.Deprecated.IsNull() {
					*deprecated4 = attributesItem.BooleanAttribute.Deprecated.ValueBool()
				} else {
					deprecated4 = nil
				}
				var defaultValue4 interface{}
				if !attributesItem.BooleanAttribute.DefaultValue.IsUnknown() && !attributesItem.BooleanAttribute.DefaultValue.IsNull() {
					_ = json.Unmarshal([]byte(attributesItem.BooleanAttribute.DefaultValue.ValueString()), &defaultValue4)
				}
				group4 := new(string)
				if !attributesItem.BooleanAttribute.Group.IsUnknown() && !attributesItem.BooleanAttribute.Group.IsNull() {
					*group4 = attributesItem.BooleanAttribute.Group.ValueString()
				} else {
					group4 = nil
				}
				order4 := new(int64)
				if !attributesItem.BooleanAttribute.Order.IsUnknown() && !attributesItem.BooleanAttribute.Order.IsNull() {
					*order4 = attributesItem.BooleanAttribute.Order.ValueInt64()
				} else {
					order4 = nil
				}
				layout4 := new(string)
				if !attributesItem.BooleanAttribute.Layout.IsUnknown() && !attributesItem.BooleanAttribute.Layout.IsNull() {
					*layout4 = attributesItem.BooleanAttribute.Layout.ValueString()
				} else {
					layout4 = nil
				}
				hideLabel4 := new(bool)
				if !attributesItem.BooleanAttribute.HideLabel.IsUnknown() && !attributesItem.BooleanAttribute.HideLabel.IsNull() {
					*hideLabel4 = attributesItem.BooleanAttribute.HideLabel.ValueBool()
				} else {
					hideLabel4 = nil
				}
				icon8 := new(string)
				if !attributesItem.BooleanAttribute.Icon.IsUnknown() && !attributesItem.BooleanAttribute.Icon.IsNull() {
					*icon8 = attributesItem.BooleanAttribute.Icon.ValueString()
				} else {
					icon8 = nil
				}
				renderCondition5 := new(string)
				if !attributesItem.BooleanAttribute.RenderCondition.IsUnknown() && !attributesItem.BooleanAttribute.RenderCondition.IsNull() {
					*renderCondition5 = attributesItem.BooleanAttribute.RenderCondition.ValueString()
				} else {
					renderCondition5 = nil
				}
				var purpose4 []string = []string{}
				for _, purposeItem4 := range attributesItem.BooleanAttribute.Purpose {
					purpose4 = append(purpose4, purposeItem4.ValueString())
				}
				var constraints4 *shared.BooleanAttributeConstraints
				if attributesItem.BooleanAttribute.Constraints != nil {
					constraints4 = &shared.BooleanAttributeConstraints{}
				}
				featureFlag6 := new(string)
				if !attributesItem.BooleanAttribute.FeatureFlag.IsUnknown() && !attributesItem.BooleanAttribute.FeatureFlag.IsNull() {
					*featureFlag6 = attributesItem.BooleanAttribute.FeatureFlag.ValueString()
				} else {
					featureFlag6 = nil
				}
				var settingsFlag5 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem5 := range attributesItem.BooleanAttribute.SettingsFlag {
					name12 := new(string)
					if !settingsFlagItem5.Name.IsUnknown() && !settingsFlagItem5.Name.IsNull() {
						*name12 = settingsFlagItem5.Name.ValueString()
					} else {
						name12 = nil
					}
					enabled5 := new(bool)
					if !settingsFlagItem5.Enabled.IsUnknown() && !settingsFlagItem5.Enabled.IsNull() {
						*enabled5 = settingsFlagItem5.Enabled.ValueBool()
					} else {
						enabled5 = nil
					}
					settingsFlag5 = append(settingsFlag5, shared.SettingFlag{
						Name:    name12,
						Enabled: enabled5,
					})
				}
				valueFormatter4 := new(string)
				if !attributesItem.BooleanAttribute.ValueFormatter.IsUnknown() && !attributesItem.BooleanAttribute.ValueFormatter.IsNull() {
					*valueFormatter4 = attributesItem.BooleanAttribute.ValueFormatter.ValueString()
				} else {
					valueFormatter4 = nil
				}
				previewValueFormatter4 := new(string)
				if !attributesItem.BooleanAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.BooleanAttribute.PreviewValueFormatter.IsNull() {
					*previewValueFormatter4 = attributesItem.BooleanAttribute.PreviewValueFormatter.ValueString()
				} else {
					previewValueFormatter4 = nil
				}
				entityBuilderDisableEdit4 := new(bool)
				if !attributesItem.BooleanAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.BooleanAttribute.EntityBuilderDisableEdit.IsNull() {
					*entityBuilderDisableEdit4 = attributesItem.BooleanAttribute.EntityBuilderDisableEdit.ValueBool()
				} else {
					entityBuilderDisableEdit4 = nil
				}
				protected4 := new(bool)
				if !attributesItem.BooleanAttribute.Protected.IsUnknown() && !attributesItem.BooleanAttribute.Protected.IsNull() {
					*protected4 = attributesItem.BooleanAttribute.Protected.ValueBool()
				} else {
					protected4 = nil
				}
				var infoHelpers4 *shared.BooleanAttributeInfoHelpers
				if attributesItem.BooleanAttribute.InfoHelpers != nil {
					hintText4 := new(string)
					if !attributesItem.BooleanAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.BooleanAttribute.InfoHelpers.HintText.IsNull() {
						*hintText4 = attributesItem.BooleanAttribute.InfoHelpers.HintText.ValueString()
					} else {
						hintText4 = nil
					}
					hintTextKey4 := new(string)
					if !attributesItem.BooleanAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.BooleanAttribute.InfoHelpers.HintTextKey.IsNull() {
						*hintTextKey4 = attributesItem.BooleanAttribute.InfoHelpers.HintTextKey.ValueString()
					} else {
						hintTextKey4 = nil
					}
					hintCustomComponent4 := new(string)
					if !attributesItem.BooleanAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.BooleanAttribute.InfoHelpers.HintCustomComponent.IsNull() {
						*hintCustomComponent4 = attributesItem.BooleanAttribute.InfoHelpers.HintCustomComponent.ValueString()
					} else {
						hintCustomComponent4 = nil
					}
					hintTooltipPlacement4 := new(string)
					if !attributesItem.BooleanAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.BooleanAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
						*hintTooltipPlacement4 = attributesItem.BooleanAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
					} else {
						hintTooltipPlacement4 = nil
					}
					infoHelpers4 = &shared.BooleanAttributeInfoHelpers{
						HintText:             hintText4,
						HintTextKey:          hintTextKey4,
						HintCustomComponent:  hintCustomComponent4,
						HintTooltipPlacement: hintTooltipPlacement4,
					}
				}
				typeVar5 := new(shared.BooleanAttributeType)
				if !attributesItem.BooleanAttribute.Type.IsUnknown() && !attributesItem.BooleanAttribute.Type.IsNull() {
					*typeVar5 = shared.BooleanAttributeType(attributesItem.BooleanAttribute.Type.ValueString())
				} else {
					typeVar5 = nil
				}
				booleanAttribute := shared.BooleanAttribute{
					ID:                       id7,
					Name:                     name11,
					Label:                    label9,
					Placeholder:              placeholder4,
					Hidden:                   hidden4,
					ShowInTable:              showInTable4,
					Sortable:                 sortable4,
					Required:                 required4,
					Readonly:                 readonly4,
					Deprecated:               deprecated4,
					DefaultValue:             defaultValue4,
					Group:                    group4,
					Order:                    order4,
					Layout:                   layout4,
					HideLabel:                hideLabel4,
					Icon:                     icon8,
					RenderCondition:          renderCondition5,
					Purpose:                  purpose4,
					Constraints:              constraints4,
					FeatureFlag:              featureFlag6,
					SettingsFlag:             settingsFlag5,
					ValueFormatter:           valueFormatter4,
					PreviewValueFormatter:    previewValueFormatter4,
					EntityBuilderDisableEdit: entityBuilderDisableEdit4,
					Protected:                protected4,
					InfoHelpers:              infoHelpers4,
					Type:                     typeVar5,
				}
				attributes = append(attributes, shared.AttributeInput{
					BooleanAttribute: &booleanAttribute,
				})
			}
			if attributesItem.SelectAttribute != nil {
				id8 := new(string)
				if !attributesItem.SelectAttribute.ID.IsUnknown() && !attributesItem.SelectAttribute.ID.IsNull() {
					*id8 = attributesItem.SelectAttribute.ID.ValueString()
				} else {
					id8 = nil
				}
				name13 := attributesItem.SelectAttribute.Name.ValueString()
				label10 := attributesItem.SelectAttribute.Label.ValueString()
				placeholder5 := new(string)
				if !attributesItem.SelectAttribute.Placeholder.IsUnknown() && !attributesItem.SelectAttribute.Placeholder.IsNull() {
					*placeholder5 = attributesItem.SelectAttribute.Placeholder.ValueString()
				} else {
					placeholder5 = nil
				}
				hidden5 := new(bool)
				if !attributesItem.SelectAttribute.Hidden.IsUnknown() && !attributesItem.SelectAttribute.Hidden.IsNull() {
					*hidden5 = attributesItem.SelectAttribute.Hidden.ValueBool()
				} else {
					hidden5 = nil
				}
				showInTable5 := new(bool)
				if !attributesItem.SelectAttribute.ShowInTable.IsUnknown() && !attributesItem.SelectAttribute.ShowInTable.IsNull() {
					*showInTable5 = attributesItem.SelectAttribute.ShowInTable.ValueBool()
				} else {
					showInTable5 = nil
				}
				sortable5 := new(bool)
				if !attributesItem.SelectAttribute.Sortable.IsUnknown() && !attributesItem.SelectAttribute.Sortable.IsNull() {
					*sortable5 = attributesItem.SelectAttribute.Sortable.ValueBool()
				} else {
					sortable5 = nil
				}
				required5 := new(bool)
				if !attributesItem.SelectAttribute.Required.IsUnknown() && !attributesItem.SelectAttribute.Required.IsNull() {
					*required5 = attributesItem.SelectAttribute.Required.ValueBool()
				} else {
					required5 = nil
				}
				readonly5 := new(bool)
				if !attributesItem.SelectAttribute.Readonly.IsUnknown() && !attributesItem.SelectAttribute.Readonly.IsNull() {
					*readonly5 = attributesItem.SelectAttribute.Readonly.ValueBool()
				} else {
					readonly5 = nil
				}
				deprecated5 := new(bool)
				if !attributesItem.SelectAttribute.Deprecated.IsUnknown() && !attributesItem.SelectAttribute.Deprecated.IsNull() {
					*deprecated5 = attributesItem.SelectAttribute.Deprecated.ValueBool()
				} else {
					deprecated5 = nil
				}
				var defaultValue5 interface{}
				if !attributesItem.SelectAttribute.DefaultValue.IsUnknown() && !attributesItem.SelectAttribute.DefaultValue.IsNull() {
					_ = json.Unmarshal([]byte(attributesItem.SelectAttribute.DefaultValue.ValueString()), &defaultValue5)
				}
				group5 := new(string)
				if !attributesItem.SelectAttribute.Group.IsUnknown() && !attributesItem.SelectAttribute.Group.IsNull() {
					*group5 = attributesItem.SelectAttribute.Group.ValueString()
				} else {
					group5 = nil
				}
				order5 := new(int64)
				if !attributesItem.SelectAttribute.Order.IsUnknown() && !attributesItem.SelectAttribute.Order.IsNull() {
					*order5 = attributesItem.SelectAttribute.Order.ValueInt64()
				} else {
					order5 = nil
				}
				layout5 := new(string)
				if !attributesItem.SelectAttribute.Layout.IsUnknown() && !attributesItem.SelectAttribute.Layout.IsNull() {
					*layout5 = attributesItem.SelectAttribute.Layout.ValueString()
				} else {
					layout5 = nil
				}
				hideLabel5 := new(bool)
				if !attributesItem.SelectAttribute.HideLabel.IsUnknown() && !attributesItem.SelectAttribute.HideLabel.IsNull() {
					*hideLabel5 = attributesItem.SelectAttribute.HideLabel.ValueBool()
				} else {
					hideLabel5 = nil
				}
				icon9 := new(string)
				if !attributesItem.SelectAttribute.Icon.IsUnknown() && !attributesItem.SelectAttribute.Icon.IsNull() {
					*icon9 = attributesItem.SelectAttribute.Icon.ValueString()
				} else {
					icon9 = nil
				}
				renderCondition6 := new(string)
				if !attributesItem.SelectAttribute.RenderCondition.IsUnknown() && !attributesItem.SelectAttribute.RenderCondition.IsNull() {
					*renderCondition6 = attributesItem.SelectAttribute.RenderCondition.ValueString()
				} else {
					renderCondition6 = nil
				}
				var purpose5 []string = []string{}
				for _, purposeItem5 := range attributesItem.SelectAttribute.Purpose {
					purpose5 = append(purpose5, purposeItem5.ValueString())
				}
				var constraints5 *shared.SelectAttributeConstraints
				if attributesItem.SelectAttribute.Constraints != nil {
					constraints5 = &shared.SelectAttributeConstraints{}
				}
				featureFlag7 := new(string)
				if !attributesItem.SelectAttribute.FeatureFlag.IsUnknown() && !attributesItem.SelectAttribute.FeatureFlag.IsNull() {
					*featureFlag7 = attributesItem.SelectAttribute.FeatureFlag.ValueString()
				} else {
					featureFlag7 = nil
				}
				var settingsFlag6 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem6 := range attributesItem.SelectAttribute.SettingsFlag {
					name14 := new(string)
					if !settingsFlagItem6.Name.IsUnknown() && !settingsFlagItem6.Name.IsNull() {
						*name14 = settingsFlagItem6.Name.ValueString()
					} else {
						name14 = nil
					}
					enabled6 := new(bool)
					if !settingsFlagItem6.Enabled.IsUnknown() && !settingsFlagItem6.Enabled.IsNull() {
						*enabled6 = settingsFlagItem6.Enabled.ValueBool()
					} else {
						enabled6 = nil
					}
					settingsFlag6 = append(settingsFlag6, shared.SettingFlag{
						Name:    name14,
						Enabled: enabled6,
					})
				}
				valueFormatter5 := new(string)
				if !attributesItem.SelectAttribute.ValueFormatter.IsUnknown() && !attributesItem.SelectAttribute.ValueFormatter.IsNull() {
					*valueFormatter5 = attributesItem.SelectAttribute.ValueFormatter.ValueString()
				} else {
					valueFormatter5 = nil
				}
				previewValueFormatter5 := new(string)
				if !attributesItem.SelectAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.SelectAttribute.PreviewValueFormatter.IsNull() {
					*previewValueFormatter5 = attributesItem.SelectAttribute.PreviewValueFormatter.ValueString()
				} else {
					previewValueFormatter5 = nil
				}
				entityBuilderDisableEdit5 := new(bool)
				if !attributesItem.SelectAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.SelectAttribute.EntityBuilderDisableEdit.IsNull() {
					*entityBuilderDisableEdit5 = attributesItem.SelectAttribute.EntityBuilderDisableEdit.ValueBool()
				} else {
					entityBuilderDisableEdit5 = nil
				}
				protected5 := new(bool)
				if !attributesItem.SelectAttribute.Protected.IsUnknown() && !attributesItem.SelectAttribute.Protected.IsNull() {
					*protected5 = attributesItem.SelectAttribute.Protected.ValueBool()
				} else {
					protected5 = nil
				}
				var infoHelpers5 *shared.SelectAttributeInfoHelpers
				if attributesItem.SelectAttribute.InfoHelpers != nil {
					hintText5 := new(string)
					if !attributesItem.SelectAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.SelectAttribute.InfoHelpers.HintText.IsNull() {
						*hintText5 = attributesItem.SelectAttribute.InfoHelpers.HintText.ValueString()
					} else {
						hintText5 = nil
					}
					hintTextKey5 := new(string)
					if !attributesItem.SelectAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.SelectAttribute.InfoHelpers.HintTextKey.IsNull() {
						*hintTextKey5 = attributesItem.SelectAttribute.InfoHelpers.HintTextKey.ValueString()
					} else {
						hintTextKey5 = nil
					}
					hintCustomComponent5 := new(string)
					if !attributesItem.SelectAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.SelectAttribute.InfoHelpers.HintCustomComponent.IsNull() {
						*hintCustomComponent5 = attributesItem.SelectAttribute.InfoHelpers.HintCustomComponent.ValueString()
					} else {
						hintCustomComponent5 = nil
					}
					hintTooltipPlacement5 := new(string)
					if !attributesItem.SelectAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.SelectAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
						*hintTooltipPlacement5 = attributesItem.SelectAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
					} else {
						hintTooltipPlacement5 = nil
					}
					infoHelpers5 = &shared.SelectAttributeInfoHelpers{
						HintText:             hintText5,
						HintTextKey:          hintTextKey5,
						HintCustomComponent:  hintCustomComponent5,
						HintTooltipPlacement: hintTooltipPlacement5,
					}
				}
				typeVar6 := new(shared.SelectAttributeType)
				if !attributesItem.SelectAttribute.Type.IsUnknown() && !attributesItem.SelectAttribute.Type.IsNull() {
					*typeVar6 = shared.SelectAttributeType(attributesItem.SelectAttribute.Type.ValueString())
				} else {
					typeVar6 = nil
				}
				var optionsVar1 interface{}
				if !attributesItem.SelectAttribute.Options.IsUnknown() && !attributesItem.SelectAttribute.Options.IsNull() {
					_ = json.Unmarshal([]byte(attributesItem.SelectAttribute.Options.ValueString()), &optionsVar1)
				}
				allowAny := new(bool)
				if !attributesItem.SelectAttribute.AllowAny.IsUnknown() && !attributesItem.SelectAttribute.AllowAny.IsNull() {
					*allowAny = attributesItem.SelectAttribute.AllowAny.ValueBool()
				} else {
					allowAny = nil
				}
				selectAttribute := shared.SelectAttribute{
					ID:                       id8,
					Name:                     name13,
					Label:                    label10,
					Placeholder:              placeholder5,
					Hidden:                   hidden5,
					ShowInTable:              showInTable5,
					Sortable:                 sortable5,
					Required:                 required5,
					Readonly:                 readonly5,
					Deprecated:               deprecated5,
					DefaultValue:             defaultValue5,
					Group:                    group5,
					Order:                    order5,
					Layout:                   layout5,
					HideLabel:                hideLabel5,
					Icon:                     icon9,
					RenderCondition:          renderCondition6,
					Purpose:                  purpose5,
					Constraints:              constraints5,
					FeatureFlag:              featureFlag7,
					SettingsFlag:             settingsFlag6,
					ValueFormatter:           valueFormatter5,
					PreviewValueFormatter:    previewValueFormatter5,
					EntityBuilderDisableEdit: entityBuilderDisableEdit5,
					Protected:                protected5,
					InfoHelpers:              infoHelpers5,
					Type:                     typeVar6,
					Options:                  optionsVar1,
					AllowAny:                 allowAny,
				}
				attributes = append(attributes, shared.AttributeInput{
					SelectAttribute: &selectAttribute,
				})
			}
			if attributesItem.MultiSelectAttribute != nil {
				id9 := new(string)
				if !attributesItem.MultiSelectAttribute.ID.IsUnknown() && !attributesItem.MultiSelectAttribute.ID.IsNull() {
					*id9 = attributesItem.MultiSelectAttribute.ID.ValueString()
				} else {
					id9 = nil
				}
				name15 := attributesItem.MultiSelectAttribute.Name.ValueString()
				label11 := attributesItem.MultiSelectAttribute.Label.ValueString()
				placeholder6 := new(string)
				if !attributesItem.MultiSelectAttribute.Placeholder.IsUnknown() && !attributesItem.MultiSelectAttribute.Placeholder.IsNull() {
					*placeholder6 = attributesItem.MultiSelectAttribute.Placeholder.ValueString()
				} else {
					placeholder6 = nil
				}
				hidden6 := new(bool)
				if !attributesItem.MultiSelectAttribute.Hidden.IsUnknown() && !attributesItem.MultiSelectAttribute.Hidden.IsNull() {
					*hidden6 = attributesItem.MultiSelectAttribute.Hidden.ValueBool()
				} else {
					hidden6 = nil
				}
				showInTable6 := new(bool)
				if !attributesItem.MultiSelectAttribute.ShowInTable.IsUnknown() && !attributesItem.MultiSelectAttribute.ShowInTable.IsNull() {
					*showInTable6 = attributesItem.MultiSelectAttribute.ShowInTable.ValueBool()
				} else {
					showInTable6 = nil
				}
				sortable6 := new(bool)
				if !attributesItem.MultiSelectAttribute.Sortable.IsUnknown() && !attributesItem.MultiSelectAttribute.Sortable.IsNull() {
					*sortable6 = attributesItem.MultiSelectAttribute.Sortable.ValueBool()
				} else {
					sortable6 = nil
				}
				required6 := new(bool)
				if !attributesItem.MultiSelectAttribute.Required.IsUnknown() && !attributesItem.MultiSelectAttribute.Required.IsNull() {
					*required6 = attributesItem.MultiSelectAttribute.Required.ValueBool()
				} else {
					required6 = nil
				}
				readonly6 := new(bool)
				if !attributesItem.MultiSelectAttribute.Readonly.IsUnknown() && !attributesItem.MultiSelectAttribute.Readonly.IsNull() {
					*readonly6 = attributesItem.MultiSelectAttribute.Readonly.ValueBool()
				} else {
					readonly6 = nil
				}
				deprecated6 := new(bool)
				if !attributesItem.MultiSelectAttribute.Deprecated.IsUnknown() && !attributesItem.MultiSelectAttribute.Deprecated.IsNull() {
					*deprecated6 = attributesItem.MultiSelectAttribute.Deprecated.ValueBool()
				} else {
					deprecated6 = nil
				}
				var defaultValue6 interface{}
				if !attributesItem.MultiSelectAttribute.DefaultValue.IsUnknown() && !attributesItem.MultiSelectAttribute.DefaultValue.IsNull() {
					_ = json.Unmarshal([]byte(attributesItem.MultiSelectAttribute.DefaultValue.ValueString()), &defaultValue6)
				}
				group6 := new(string)
				if !attributesItem.MultiSelectAttribute.Group.IsUnknown() && !attributesItem.MultiSelectAttribute.Group.IsNull() {
					*group6 = attributesItem.MultiSelectAttribute.Group.ValueString()
				} else {
					group6 = nil
				}
				order6 := new(int64)
				if !attributesItem.MultiSelectAttribute.Order.IsUnknown() && !attributesItem.MultiSelectAttribute.Order.IsNull() {
					*order6 = attributesItem.MultiSelectAttribute.Order.ValueInt64()
				} else {
					order6 = nil
				}
				layout6 := new(string)
				if !attributesItem.MultiSelectAttribute.Layout.IsUnknown() && !attributesItem.MultiSelectAttribute.Layout.IsNull() {
					*layout6 = attributesItem.MultiSelectAttribute.Layout.ValueString()
				} else {
					layout6 = nil
				}
				hideLabel6 := new(bool)
				if !attributesItem.MultiSelectAttribute.HideLabel.IsUnknown() && !attributesItem.MultiSelectAttribute.HideLabel.IsNull() {
					*hideLabel6 = attributesItem.MultiSelectAttribute.HideLabel.ValueBool()
				} else {
					hideLabel6 = nil
				}
				icon10 := new(string)
				if !attributesItem.MultiSelectAttribute.Icon.IsUnknown() && !attributesItem.MultiSelectAttribute.Icon.IsNull() {
					*icon10 = attributesItem.MultiSelectAttribute.Icon.ValueString()
				} else {
					icon10 = nil
				}
				renderCondition7 := new(string)
				if !attributesItem.MultiSelectAttribute.RenderCondition.IsUnknown() && !attributesItem.MultiSelectAttribute.RenderCondition.IsNull() {
					*renderCondition7 = attributesItem.MultiSelectAttribute.RenderCondition.ValueString()
				} else {
					renderCondition7 = nil
				}
				var purpose6 []string = []string{}
				for _, purposeItem6 := range attributesItem.MultiSelectAttribute.Purpose {
					purpose6 = append(purpose6, purposeItem6.ValueString())
				}
				var constraints6 *shared.MultiSelectAttributeConstraints
				if attributesItem.MultiSelectAttribute.Constraints != nil {
					constraints6 = &shared.MultiSelectAttributeConstraints{}
				}
				featureFlag8 := new(string)
				if !attributesItem.MultiSelectAttribute.FeatureFlag.IsUnknown() && !attributesItem.MultiSelectAttribute.FeatureFlag.IsNull() {
					*featureFlag8 = attributesItem.MultiSelectAttribute.FeatureFlag.ValueString()
				} else {
					featureFlag8 = nil
				}
				var settingsFlag7 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem7 := range attributesItem.MultiSelectAttribute.SettingsFlag {
					name16 := new(string)
					if !settingsFlagItem7.Name.IsUnknown() && !settingsFlagItem7.Name.IsNull() {
						*name16 = settingsFlagItem7.Name.ValueString()
					} else {
						name16 = nil
					}
					enabled7 := new(bool)
					if !settingsFlagItem7.Enabled.IsUnknown() && !settingsFlagItem7.Enabled.IsNull() {
						*enabled7 = settingsFlagItem7.Enabled.ValueBool()
					} else {
						enabled7 = nil
					}
					settingsFlag7 = append(settingsFlag7, shared.SettingFlag{
						Name:    name16,
						Enabled: enabled7,
					})
				}
				valueFormatter6 := new(string)
				if !attributesItem.MultiSelectAttribute.ValueFormatter.IsUnknown() && !attributesItem.MultiSelectAttribute.ValueFormatter.IsNull() {
					*valueFormatter6 = attributesItem.MultiSelectAttribute.ValueFormatter.ValueString()
				} else {
					valueFormatter6 = nil
				}
				previewValueFormatter6 := new(string)
				if !attributesItem.MultiSelectAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.MultiSelectAttribute.PreviewValueFormatter.IsNull() {
					*previewValueFormatter6 = attributesItem.MultiSelectAttribute.PreviewValueFormatter.ValueString()
				} else {
					previewValueFormatter6 = nil
				}
				entityBuilderDisableEdit6 := new(bool)
				if !attributesItem.MultiSelectAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.MultiSelectAttribute.EntityBuilderDisableEdit.IsNull() {
					*entityBuilderDisableEdit6 = attributesItem.MultiSelectAttribute.EntityBuilderDisableEdit.ValueBool()
				} else {
					entityBuilderDisableEdit6 = nil
				}
				protected6 := new(bool)
				if !attributesItem.MultiSelectAttribute.Protected.IsUnknown() && !attributesItem.MultiSelectAttribute.Protected.IsNull() {
					*protected6 = attributesItem.MultiSelectAttribute.Protected.ValueBool()
				} else {
					protected6 = nil
				}
				var infoHelpers6 *shared.MultiSelectAttributeInfoHelpers
				if attributesItem.MultiSelectAttribute.InfoHelpers != nil {
					hintText6 := new(string)
					if !attributesItem.MultiSelectAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.MultiSelectAttribute.InfoHelpers.HintText.IsNull() {
						*hintText6 = attributesItem.MultiSelectAttribute.InfoHelpers.HintText.ValueString()
					} else {
						hintText6 = nil
					}
					hintTextKey6 := new(string)
					if !attributesItem.MultiSelectAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.MultiSelectAttribute.InfoHelpers.HintTextKey.IsNull() {
						*hintTextKey6 = attributesItem.MultiSelectAttribute.InfoHelpers.HintTextKey.ValueString()
					} else {
						hintTextKey6 = nil
					}
					hintCustomComponent6 := new(string)
					if !attributesItem.MultiSelectAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.MultiSelectAttribute.InfoHelpers.HintCustomComponent.IsNull() {
						*hintCustomComponent6 = attributesItem.MultiSelectAttribute.InfoHelpers.HintCustomComponent.ValueString()
					} else {
						hintCustomComponent6 = nil
					}
					hintTooltipPlacement6 := new(string)
					if !attributesItem.MultiSelectAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.MultiSelectAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
						*hintTooltipPlacement6 = attributesItem.MultiSelectAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
					} else {
						hintTooltipPlacement6 = nil
					}
					infoHelpers6 = &shared.MultiSelectAttributeInfoHelpers{
						HintText:             hintText6,
						HintTextKey:          hintTextKey6,
						HintCustomComponent:  hintCustomComponent6,
						HintTooltipPlacement: hintTooltipPlacement6,
					}
				}
				typeVar7 := new(shared.MultiSelectAttributeType)
				if !attributesItem.MultiSelectAttribute.Type.IsUnknown() && !attributesItem.MultiSelectAttribute.Type.IsNull() {
					*typeVar7 = shared.MultiSelectAttributeType(attributesItem.MultiSelectAttribute.Type.ValueString())
				} else {
					typeVar7 = nil
				}
				disableCaseSensitive := new(bool)
				if !attributesItem.MultiSelectAttribute.DisableCaseSensitive.IsUnknown() && !attributesItem.MultiSelectAttribute.DisableCaseSensitive.IsNull() {
					*disableCaseSensitive = attributesItem.MultiSelectAttribute.DisableCaseSensitive.ValueBool()
				} else {
					disableCaseSensitive = nil
				}
				allowExtraOptions := new(bool)
				if !attributesItem.MultiSelectAttribute.AllowExtraOptions.IsUnknown() && !attributesItem.MultiSelectAttribute.AllowExtraOptions.IsNull() {
					*allowExtraOptions = attributesItem.MultiSelectAttribute.AllowExtraOptions.ValueBool()
				} else {
					allowExtraOptions = nil
				}
				var optionsVar2 []shared.OptionsObj = []shared.OptionsObj{}
				for _, optionsItem1 := range attributesItem.MultiSelectAttribute.Options {
					if !optionsItem1.Str.IsUnknown() && !optionsItem1.Str.IsNull() {
						str3 := optionsItem1.Str.ValueString()
						optionsVar2 = append(optionsVar2, shared.OptionsObj{
							Str: &str3,
						})
					}
					if optionsItem1.Two != nil {
						value1 := optionsItem1.Two.Value.ValueString()
						title1 := new(string)
						if !optionsItem1.Two.Title.IsUnknown() && !optionsItem1.Two.Title.IsNull() {
							*title1 = optionsItem1.Two.Title.ValueString()
						} else {
							title1 = nil
						}
						two := shared.Two{
							Value: value1,
							Title: title1,
						}
						optionsVar2 = append(optionsVar2, shared.OptionsObj{
							Two: &two,
						})
					}
				}
				allowAny1 := new(bool)
				if !attributesItem.MultiSelectAttribute.AllowAny.IsUnknown() && !attributesItem.MultiSelectAttribute.AllowAny.IsNull() {
					*allowAny1 = attributesItem.MultiSelectAttribute.AllowAny.ValueBool()
				} else {
					allowAny1 = nil
				}
				multiSelectAttribute := shared.MultiSelectAttribute{
					ID:                       id9,
					Name:                     name15,
					Label:                    label11,
					Placeholder:              placeholder6,
					Hidden:                   hidden6,
					ShowInTable:              showInTable6,
					Sortable:                 sortable6,
					Required:                 required6,
					Readonly:                 readonly6,
					Deprecated:               deprecated6,
					DefaultValue:             defaultValue6,
					Group:                    group6,
					Order:                    order6,
					Layout:                   layout6,
					HideLabel:                hideLabel6,
					Icon:                     icon10,
					RenderCondition:          renderCondition7,
					Purpose:                  purpose6,
					Constraints:              constraints6,
					FeatureFlag:              featureFlag8,
					SettingsFlag:             settingsFlag7,
					ValueFormatter:           valueFormatter6,
					PreviewValueFormatter:    previewValueFormatter6,
					EntityBuilderDisableEdit: entityBuilderDisableEdit6,
					Protected:                protected6,
					InfoHelpers:              infoHelpers6,
					Type:                     typeVar7,
					DisableCaseSensitive:     disableCaseSensitive,
					AllowExtraOptions:        allowExtraOptions,
					Options:                  optionsVar2,
					AllowAny:                 allowAny1,
				}
				attributes = append(attributes, shared.AttributeInput{
					MultiSelectAttribute: &multiSelectAttribute,
				})
			}
			if attributesItem.StatusAttribute != nil {
				id10 := new(string)
				if !attributesItem.StatusAttribute.ID.IsUnknown() && !attributesItem.StatusAttribute.ID.IsNull() {
					*id10 = attributesItem.StatusAttribute.ID.ValueString()
				} else {
					id10 = nil
				}
				name17 := attributesItem.StatusAttribute.Name.ValueString()
				label12 := attributesItem.StatusAttribute.Label.ValueString()
				placeholder7 := new(string)
				if !attributesItem.StatusAttribute.Placeholder.IsUnknown() && !attributesItem.StatusAttribute.Placeholder.IsNull() {
					*placeholder7 = attributesItem.StatusAttribute.Placeholder.ValueString()
				} else {
					placeholder7 = nil
				}
				hidden7 := new(bool)
				if !attributesItem.StatusAttribute.Hidden.IsUnknown() && !attributesItem.StatusAttribute.Hidden.IsNull() {
					*hidden7 = attributesItem.StatusAttribute.Hidden.ValueBool()
				} else {
					hidden7 = nil
				}
				showInTable7 := new(bool)
				if !attributesItem.StatusAttribute.ShowInTable.IsUnknown() && !attributesItem.StatusAttribute.ShowInTable.IsNull() {
					*showInTable7 = attributesItem.StatusAttribute.ShowInTable.ValueBool()
				} else {
					showInTable7 = nil
				}
				sortable7 := new(bool)
				if !attributesItem.StatusAttribute.Sortable.IsUnknown() && !attributesItem.StatusAttribute.Sortable.IsNull() {
					*sortable7 = attributesItem.StatusAttribute.Sortable.ValueBool()
				} else {
					sortable7 = nil
				}
				required7 := new(bool)
				if !attributesItem.StatusAttribute.Required.IsUnknown() && !attributesItem.StatusAttribute.Required.IsNull() {
					*required7 = attributesItem.StatusAttribute.Required.ValueBool()
				} else {
					required7 = nil
				}
				readonly7 := new(bool)
				if !attributesItem.StatusAttribute.Readonly.IsUnknown() && !attributesItem.StatusAttribute.Readonly.IsNull() {
					*readonly7 = attributesItem.StatusAttribute.Readonly.ValueBool()
				} else {
					readonly7 = nil
				}
				deprecated7 := new(bool)
				if !attributesItem.StatusAttribute.Deprecated.IsUnknown() && !attributesItem.StatusAttribute.Deprecated.IsNull() {
					*deprecated7 = attributesItem.StatusAttribute.Deprecated.ValueBool()
				} else {
					deprecated7 = nil
				}
				var defaultValue7 interface{}
				if !attributesItem.StatusAttribute.DefaultValue.IsUnknown() && !attributesItem.StatusAttribute.DefaultValue.IsNull() {
					_ = json.Unmarshal([]byte(attributesItem.StatusAttribute.DefaultValue.ValueString()), &defaultValue7)
				}
				group7 := new(string)
				if !attributesItem.StatusAttribute.Group.IsUnknown() && !attributesItem.StatusAttribute.Group.IsNull() {
					*group7 = attributesItem.StatusAttribute.Group.ValueString()
				} else {
					group7 = nil
				}
				order7 := new(int64)
				if !attributesItem.StatusAttribute.Order.IsUnknown() && !attributesItem.StatusAttribute.Order.IsNull() {
					*order7 = attributesItem.StatusAttribute.Order.ValueInt64()
				} else {
					order7 = nil
				}
				layout7 := new(string)
				if !attributesItem.StatusAttribute.Layout.IsUnknown() && !attributesItem.StatusAttribute.Layout.IsNull() {
					*layout7 = attributesItem.StatusAttribute.Layout.ValueString()
				} else {
					layout7 = nil
				}
				hideLabel7 := new(bool)
				if !attributesItem.StatusAttribute.HideLabel.IsUnknown() && !attributesItem.StatusAttribute.HideLabel.IsNull() {
					*hideLabel7 = attributesItem.StatusAttribute.HideLabel.ValueBool()
				} else {
					hideLabel7 = nil
				}
				icon11 := new(string)
				if !attributesItem.StatusAttribute.Icon.IsUnknown() && !attributesItem.StatusAttribute.Icon.IsNull() {
					*icon11 = attributesItem.StatusAttribute.Icon.ValueString()
				} else {
					icon11 = nil
				}
				renderCondition8 := new(string)
				if !attributesItem.StatusAttribute.RenderCondition.IsUnknown() && !attributesItem.StatusAttribute.RenderCondition.IsNull() {
					*renderCondition8 = attributesItem.StatusAttribute.RenderCondition.ValueString()
				} else {
					renderCondition8 = nil
				}
				var purpose7 []string = []string{}
				for _, purposeItem7 := range attributesItem.StatusAttribute.Purpose {
					purpose7 = append(purpose7, purposeItem7.ValueString())
				}
				var constraints7 *shared.StatusAttributeConstraints
				if attributesItem.StatusAttribute.Constraints != nil {
					constraints7 = &shared.StatusAttributeConstraints{}
				}
				featureFlag9 := new(string)
				if !attributesItem.StatusAttribute.FeatureFlag.IsUnknown() && !attributesItem.StatusAttribute.FeatureFlag.IsNull() {
					*featureFlag9 = attributesItem.StatusAttribute.FeatureFlag.ValueString()
				} else {
					featureFlag9 = nil
				}
				var settingsFlag8 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem8 := range attributesItem.StatusAttribute.SettingsFlag {
					name18 := new(string)
					if !settingsFlagItem8.Name.IsUnknown() && !settingsFlagItem8.Name.IsNull() {
						*name18 = settingsFlagItem8.Name.ValueString()
					} else {
						name18 = nil
					}
					enabled8 := new(bool)
					if !settingsFlagItem8.Enabled.IsUnknown() && !settingsFlagItem8.Enabled.IsNull() {
						*enabled8 = settingsFlagItem8.Enabled.ValueBool()
					} else {
						enabled8 = nil
					}
					settingsFlag8 = append(settingsFlag8, shared.SettingFlag{
						Name:    name18,
						Enabled: enabled8,
					})
				}
				valueFormatter7 := new(string)
				if !attributesItem.StatusAttribute.ValueFormatter.IsUnknown() && !attributesItem.StatusAttribute.ValueFormatter.IsNull() {
					*valueFormatter7 = attributesItem.StatusAttribute.ValueFormatter.ValueString()
				} else {
					valueFormatter7 = nil
				}
				previewValueFormatter7 := new(string)
				if !attributesItem.StatusAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.StatusAttribute.PreviewValueFormatter.IsNull() {
					*previewValueFormatter7 = attributesItem.StatusAttribute.PreviewValueFormatter.ValueString()
				} else {
					previewValueFormatter7 = nil
				}
				entityBuilderDisableEdit7 := new(bool)
				if !attributesItem.StatusAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.StatusAttribute.EntityBuilderDisableEdit.IsNull() {
					*entityBuilderDisableEdit7 = attributesItem.StatusAttribute.EntityBuilderDisableEdit.ValueBool()
				} else {
					entityBuilderDisableEdit7 = nil
				}
				protected7 := new(bool)
				if !attributesItem.StatusAttribute.Protected.IsUnknown() && !attributesItem.StatusAttribute.Protected.IsNull() {
					*protected7 = attributesItem.StatusAttribute.Protected.ValueBool()
				} else {
					protected7 = nil
				}
				var infoHelpers7 *shared.StatusAttributeInfoHelpers
				if attributesItem.StatusAttribute.InfoHelpers != nil {
					hintText7 := new(string)
					if !attributesItem.StatusAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.StatusAttribute.InfoHelpers.HintText.IsNull() {
						*hintText7 = attributesItem.StatusAttribute.InfoHelpers.HintText.ValueString()
					} else {
						hintText7 = nil
					}
					hintTextKey7 := new(string)
					if !attributesItem.StatusAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.StatusAttribute.InfoHelpers.HintTextKey.IsNull() {
						*hintTextKey7 = attributesItem.StatusAttribute.InfoHelpers.HintTextKey.ValueString()
					} else {
						hintTextKey7 = nil
					}
					hintCustomComponent7 := new(string)
					if !attributesItem.StatusAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.StatusAttribute.InfoHelpers.HintCustomComponent.IsNull() {
						*hintCustomComponent7 = attributesItem.StatusAttribute.InfoHelpers.HintCustomComponent.ValueString()
					} else {
						hintCustomComponent7 = nil
					}
					hintTooltipPlacement7 := new(string)
					if !attributesItem.StatusAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.StatusAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
						*hintTooltipPlacement7 = attributesItem.StatusAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
					} else {
						hintTooltipPlacement7 = nil
					}
					infoHelpers7 = &shared.StatusAttributeInfoHelpers{
						HintText:             hintText7,
						HintTextKey:          hintTextKey7,
						HintCustomComponent:  hintCustomComponent7,
						HintTooltipPlacement: hintTooltipPlacement7,
					}
				}
				typeVar8 := new(shared.StatusAttributeType)
				if !attributesItem.StatusAttribute.Type.IsUnknown() && !attributesItem.StatusAttribute.Type.IsNull() {
					*typeVar8 = shared.StatusAttributeType(attributesItem.StatusAttribute.Type.ValueString())
				} else {
					typeVar8 = nil
				}
				var optionsVar3 []shared.StatusAttributeOptions = []shared.StatusAttributeOptions{}
				for _, optionsItem2 := range attributesItem.StatusAttribute.Options {
					if !optionsItem2.Str.IsUnknown() && !optionsItem2.Str.IsNull() {
						str4 := optionsItem2.Str.ValueString()
						optionsVar3 = append(optionsVar3, shared.StatusAttributeOptions{
							Str: &str4,
						})
					}
					if optionsItem2.Two != nil {
						value2 := optionsItem2.Two.Value.ValueString()
						title2 := new(string)
						if !optionsItem2.Two.Title.IsUnknown() && !optionsItem2.Two.Title.IsNull() {
							*title2 = optionsItem2.Two.Title.ValueString()
						} else {
							title2 = nil
						}
						options2 := shared.Options2{
							Value: value2,
							Title: title2,
						}
						optionsVar3 = append(optionsVar3, shared.StatusAttributeOptions{
							Options2: &options2,
						})
					}
				}
				statusAttribute := shared.StatusAttribute{
					ID:                       id10,
					Name:                     name17,
					Label:                    label12,
					Placeholder:              placeholder7,
					Hidden:                   hidden7,
					ShowInTable:              showInTable7,
					Sortable:                 sortable7,
					Required:                 required7,
					Readonly:                 readonly7,
					Deprecated:               deprecated7,
					DefaultValue:             defaultValue7,
					Group:                    group7,
					Order:                    order7,
					Layout:                   layout7,
					HideLabel:                hideLabel7,
					Icon:                     icon11,
					RenderCondition:          renderCondition8,
					Purpose:                  purpose7,
					Constraints:              constraints7,
					FeatureFlag:              featureFlag9,
					SettingsFlag:             settingsFlag8,
					ValueFormatter:           valueFormatter7,
					PreviewValueFormatter:    previewValueFormatter7,
					EntityBuilderDisableEdit: entityBuilderDisableEdit7,
					Protected:                protected7,
					InfoHelpers:              infoHelpers7,
					Type:                     typeVar8,
					Options:                  optionsVar3,
				}
				attributes = append(attributes, shared.AttributeInput{
					StatusAttribute: &statusAttribute,
				})
			}
			if attributesItem.SequenceAttribute != nil {
				id11 := new(string)
				if !attributesItem.SequenceAttribute.ID.IsUnknown() && !attributesItem.SequenceAttribute.ID.IsNull() {
					*id11 = attributesItem.SequenceAttribute.ID.ValueString()
				} else {
					id11 = nil
				}
				name19 := attributesItem.SequenceAttribute.Name.ValueString()
				label13 := attributesItem.SequenceAttribute.Label.ValueString()
				placeholder8 := new(string)
				if !attributesItem.SequenceAttribute.Placeholder.IsUnknown() && !attributesItem.SequenceAttribute.Placeholder.IsNull() {
					*placeholder8 = attributesItem.SequenceAttribute.Placeholder.ValueString()
				} else {
					placeholder8 = nil
				}
				hidden8 := new(bool)
				if !attributesItem.SequenceAttribute.Hidden.IsUnknown() && !attributesItem.SequenceAttribute.Hidden.IsNull() {
					*hidden8 = attributesItem.SequenceAttribute.Hidden.ValueBool()
				} else {
					hidden8 = nil
				}
				showInTable8 := new(bool)
				if !attributesItem.SequenceAttribute.ShowInTable.IsUnknown() && !attributesItem.SequenceAttribute.ShowInTable.IsNull() {
					*showInTable8 = attributesItem.SequenceAttribute.ShowInTable.ValueBool()
				} else {
					showInTable8 = nil
				}
				sortable8 := new(bool)
				if !attributesItem.SequenceAttribute.Sortable.IsUnknown() && !attributesItem.SequenceAttribute.Sortable.IsNull() {
					*sortable8 = attributesItem.SequenceAttribute.Sortable.ValueBool()
				} else {
					sortable8 = nil
				}
				required8 := new(bool)
				if !attributesItem.SequenceAttribute.Required.IsUnknown() && !attributesItem.SequenceAttribute.Required.IsNull() {
					*required8 = attributesItem.SequenceAttribute.Required.ValueBool()
				} else {
					required8 = nil
				}
				readonly8 := new(bool)
				if !attributesItem.SequenceAttribute.Readonly.IsUnknown() && !attributesItem.SequenceAttribute.Readonly.IsNull() {
					*readonly8 = attributesItem.SequenceAttribute.Readonly.ValueBool()
				} else {
					readonly8 = nil
				}
				deprecated8 := new(bool)
				if !attributesItem.SequenceAttribute.Deprecated.IsUnknown() && !attributesItem.SequenceAttribute.Deprecated.IsNull() {
					*deprecated8 = attributesItem.SequenceAttribute.Deprecated.ValueBool()
				} else {
					deprecated8 = nil
				}
				var defaultValue8 interface{}
				if !attributesItem.SequenceAttribute.DefaultValue.IsUnknown() && !attributesItem.SequenceAttribute.DefaultValue.IsNull() {
					_ = json.Unmarshal([]byte(attributesItem.SequenceAttribute.DefaultValue.ValueString()), &defaultValue8)
				}
				group8 := new(string)
				if !attributesItem.SequenceAttribute.Group.IsUnknown() && !attributesItem.SequenceAttribute.Group.IsNull() {
					*group8 = attributesItem.SequenceAttribute.Group.ValueString()
				} else {
					group8 = nil
				}
				order8 := new(int64)
				if !attributesItem.SequenceAttribute.Order.IsUnknown() && !attributesItem.SequenceAttribute.Order.IsNull() {
					*order8 = attributesItem.SequenceAttribute.Order.ValueInt64()
				} else {
					order8 = nil
				}
				layout8 := new(string)
				if !attributesItem.SequenceAttribute.Layout.IsUnknown() && !attributesItem.SequenceAttribute.Layout.IsNull() {
					*layout8 = attributesItem.SequenceAttribute.Layout.ValueString()
				} else {
					layout8 = nil
				}
				hideLabel8 := new(bool)
				if !attributesItem.SequenceAttribute.HideLabel.IsUnknown() && !attributesItem.SequenceAttribute.HideLabel.IsNull() {
					*hideLabel8 = attributesItem.SequenceAttribute.HideLabel.ValueBool()
				} else {
					hideLabel8 = nil
				}
				icon12 := new(string)
				if !attributesItem.SequenceAttribute.Icon.IsUnknown() && !attributesItem.SequenceAttribute.Icon.IsNull() {
					*icon12 = attributesItem.SequenceAttribute.Icon.ValueString()
				} else {
					icon12 = nil
				}
				renderCondition9 := new(string)
				if !attributesItem.SequenceAttribute.RenderCondition.IsUnknown() && !attributesItem.SequenceAttribute.RenderCondition.IsNull() {
					*renderCondition9 = attributesItem.SequenceAttribute.RenderCondition.ValueString()
				} else {
					renderCondition9 = nil
				}
				var purpose8 []string = []string{}
				for _, purposeItem8 := range attributesItem.SequenceAttribute.Purpose {
					purpose8 = append(purpose8, purposeItem8.ValueString())
				}
				var constraints8 *shared.SequenceAttributeConstraints
				if attributesItem.SequenceAttribute.Constraints != nil {
					constraints8 = &shared.SequenceAttributeConstraints{}
				}
				featureFlag10 := new(string)
				if !attributesItem.SequenceAttribute.FeatureFlag.IsUnknown() && !attributesItem.SequenceAttribute.FeatureFlag.IsNull() {
					*featureFlag10 = attributesItem.SequenceAttribute.FeatureFlag.ValueString()
				} else {
					featureFlag10 = nil
				}
				var settingsFlag9 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem9 := range attributesItem.SequenceAttribute.SettingsFlag {
					name20 := new(string)
					if !settingsFlagItem9.Name.IsUnknown() && !settingsFlagItem9.Name.IsNull() {
						*name20 = settingsFlagItem9.Name.ValueString()
					} else {
						name20 = nil
					}
					enabled9 := new(bool)
					if !settingsFlagItem9.Enabled.IsUnknown() && !settingsFlagItem9.Enabled.IsNull() {
						*enabled9 = settingsFlagItem9.Enabled.ValueBool()
					} else {
						enabled9 = nil
					}
					settingsFlag9 = append(settingsFlag9, shared.SettingFlag{
						Name:    name20,
						Enabled: enabled9,
					})
				}
				valueFormatter8 := new(string)
				if !attributesItem.SequenceAttribute.ValueFormatter.IsUnknown() && !attributesItem.SequenceAttribute.ValueFormatter.IsNull() {
					*valueFormatter8 = attributesItem.SequenceAttribute.ValueFormatter.ValueString()
				} else {
					valueFormatter8 = nil
				}
				previewValueFormatter8 := new(string)
				if !attributesItem.SequenceAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.SequenceAttribute.PreviewValueFormatter.IsNull() {
					*previewValueFormatter8 = attributesItem.SequenceAttribute.PreviewValueFormatter.ValueString()
				} else {
					previewValueFormatter8 = nil
				}
				entityBuilderDisableEdit8 := new(bool)
				if !attributesItem.SequenceAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.SequenceAttribute.EntityBuilderDisableEdit.IsNull() {
					*entityBuilderDisableEdit8 = attributesItem.SequenceAttribute.EntityBuilderDisableEdit.ValueBool()
				} else {
					entityBuilderDisableEdit8 = nil
				}
				protected8 := new(bool)
				if !attributesItem.SequenceAttribute.Protected.IsUnknown() && !attributesItem.SequenceAttribute.Protected.IsNull() {
					*protected8 = attributesItem.SequenceAttribute.Protected.ValueBool()
				} else {
					protected8 = nil
				}
				var infoHelpers8 *shared.SequenceAttributeInfoHelpers
				if attributesItem.SequenceAttribute.InfoHelpers != nil {
					hintText8 := new(string)
					if !attributesItem.SequenceAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.SequenceAttribute.InfoHelpers.HintText.IsNull() {
						*hintText8 = attributesItem.SequenceAttribute.InfoHelpers.HintText.ValueString()
					} else {
						hintText8 = nil
					}
					hintTextKey8 := new(string)
					if !attributesItem.SequenceAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.SequenceAttribute.InfoHelpers.HintTextKey.IsNull() {
						*hintTextKey8 = attributesItem.SequenceAttribute.InfoHelpers.HintTextKey.ValueString()
					} else {
						hintTextKey8 = nil
					}
					hintCustomComponent8 := new(string)
					if !attributesItem.SequenceAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.SequenceAttribute.InfoHelpers.HintCustomComponent.IsNull() {
						*hintCustomComponent8 = attributesItem.SequenceAttribute.InfoHelpers.HintCustomComponent.ValueString()
					} else {
						hintCustomComponent8 = nil
					}
					hintTooltipPlacement8 := new(string)
					if !attributesItem.SequenceAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.SequenceAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
						*hintTooltipPlacement8 = attributesItem.SequenceAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
					} else {
						hintTooltipPlacement8 = nil
					}
					infoHelpers8 = &shared.SequenceAttributeInfoHelpers{
						HintText:             hintText8,
						HintTextKey:          hintTextKey8,
						HintCustomComponent:  hintCustomComponent8,
						HintTooltipPlacement: hintTooltipPlacement8,
					}
				}
				typeVar9 := new(shared.SequenceAttributeType)
				if !attributesItem.SequenceAttribute.Type.IsUnknown() && !attributesItem.SequenceAttribute.Type.IsNull() {
					*typeVar9 = shared.SequenceAttributeType(attributesItem.SequenceAttribute.Type.ValueString())
				} else {
					typeVar9 = nil
				}
				prefix := new(string)
				if !attributesItem.SequenceAttribute.Prefix.IsUnknown() && !attributesItem.SequenceAttribute.Prefix.IsNull() {
					*prefix = attributesItem.SequenceAttribute.Prefix.ValueString()
				} else {
					prefix = nil
				}
				startNumber := new(int64)
				if !attributesItem.SequenceAttribute.StartNumber.IsUnknown() && !attributesItem.SequenceAttribute.StartNumber.IsNull() {
					*startNumber = attributesItem.SequenceAttribute.StartNumber.ValueInt64()
				} else {
					startNumber = nil
				}
				sequenceAttribute := shared.SequenceAttribute{
					ID:                       id11,
					Name:                     name19,
					Label:                    label13,
					Placeholder:              placeholder8,
					Hidden:                   hidden8,
					ShowInTable:              showInTable8,
					Sortable:                 sortable8,
					Required:                 required8,
					Readonly:                 readonly8,
					Deprecated:               deprecated8,
					DefaultValue:             defaultValue8,
					Group:                    group8,
					Order:                    order8,
					Layout:                   layout8,
					HideLabel:                hideLabel8,
					Icon:                     icon12,
					RenderCondition:          renderCondition9,
					Purpose:                  purpose8,
					Constraints:              constraints8,
					FeatureFlag:              featureFlag10,
					SettingsFlag:             settingsFlag9,
					ValueFormatter:           valueFormatter8,
					PreviewValueFormatter:    previewValueFormatter8,
					EntityBuilderDisableEdit: entityBuilderDisableEdit8,
					Protected:                protected8,
					InfoHelpers:              infoHelpers8,
					Type:                     typeVar9,
					Prefix:                   prefix,
					StartNumber:              startNumber,
				}
				attributes = append(attributes, shared.AttributeInput{
					SequenceAttribute: &sequenceAttribute,
				})
			}
			if attributesItem.RelationAttribute != nil {
				id12 := new(string)
				if !attributesItem.RelationAttribute.ID.IsUnknown() && !attributesItem.RelationAttribute.ID.IsNull() {
					*id12 = attributesItem.RelationAttribute.ID.ValueString()
				} else {
					id12 = nil
				}
				name21 := attributesItem.RelationAttribute.Name.ValueString()
				label14 := attributesItem.RelationAttribute.Label.ValueString()
				placeholder9 := new(string)
				if !attributesItem.RelationAttribute.Placeholder.IsUnknown() && !attributesItem.RelationAttribute.Placeholder.IsNull() {
					*placeholder9 = attributesItem.RelationAttribute.Placeholder.ValueString()
				} else {
					placeholder9 = nil
				}
				hidden9 := new(bool)
				if !attributesItem.RelationAttribute.Hidden.IsUnknown() && !attributesItem.RelationAttribute.Hidden.IsNull() {
					*hidden9 = attributesItem.RelationAttribute.Hidden.ValueBool()
				} else {
					hidden9 = nil
				}
				showInTable9 := new(bool)
				if !attributesItem.RelationAttribute.ShowInTable.IsUnknown() && !attributesItem.RelationAttribute.ShowInTable.IsNull() {
					*showInTable9 = attributesItem.RelationAttribute.ShowInTable.ValueBool()
				} else {
					showInTable9 = nil
				}
				sortable9 := new(bool)
				if !attributesItem.RelationAttribute.Sortable.IsUnknown() && !attributesItem.RelationAttribute.Sortable.IsNull() {
					*sortable9 = attributesItem.RelationAttribute.Sortable.ValueBool()
				} else {
					sortable9 = nil
				}
				required9 := new(bool)
				if !attributesItem.RelationAttribute.Required.IsUnknown() && !attributesItem.RelationAttribute.Required.IsNull() {
					*required9 = attributesItem.RelationAttribute.Required.ValueBool()
				} else {
					required9 = nil
				}
				readonly9 := new(bool)
				if !attributesItem.RelationAttribute.Readonly.IsUnknown() && !attributesItem.RelationAttribute.Readonly.IsNull() {
					*readonly9 = attributesItem.RelationAttribute.Readonly.ValueBool()
				} else {
					readonly9 = nil
				}
				deprecated9 := new(bool)
				if !attributesItem.RelationAttribute.Deprecated.IsUnknown() && !attributesItem.RelationAttribute.Deprecated.IsNull() {
					*deprecated9 = attributesItem.RelationAttribute.Deprecated.ValueBool()
				} else {
					deprecated9 = nil
				}
				var defaultValue9 interface{}
				if !attributesItem.RelationAttribute.DefaultValue.IsUnknown() && !attributesItem.RelationAttribute.DefaultValue.IsNull() {
					_ = json.Unmarshal([]byte(attributesItem.RelationAttribute.DefaultValue.ValueString()), &defaultValue9)
				}
				group9 := new(string)
				if !attributesItem.RelationAttribute.Group.IsUnknown() && !attributesItem.RelationAttribute.Group.IsNull() {
					*group9 = attributesItem.RelationAttribute.Group.ValueString()
				} else {
					group9 = nil
				}
				order9 := new(int64)
				if !attributesItem.RelationAttribute.Order.IsUnknown() && !attributesItem.RelationAttribute.Order.IsNull() {
					*order9 = attributesItem.RelationAttribute.Order.ValueInt64()
				} else {
					order9 = nil
				}
				layout9 := new(string)
				if !attributesItem.RelationAttribute.Layout.IsUnknown() && !attributesItem.RelationAttribute.Layout.IsNull() {
					*layout9 = attributesItem.RelationAttribute.Layout.ValueString()
				} else {
					layout9 = nil
				}
				hideLabel9 := new(bool)
				if !attributesItem.RelationAttribute.HideLabel.IsUnknown() && !attributesItem.RelationAttribute.HideLabel.IsNull() {
					*hideLabel9 = attributesItem.RelationAttribute.HideLabel.ValueBool()
				} else {
					hideLabel9 = nil
				}
				icon13 := new(string)
				if !attributesItem.RelationAttribute.Icon.IsUnknown() && !attributesItem.RelationAttribute.Icon.IsNull() {
					*icon13 = attributesItem.RelationAttribute.Icon.ValueString()
				} else {
					icon13 = nil
				}
				renderCondition10 := new(string)
				if !attributesItem.RelationAttribute.RenderCondition.IsUnknown() && !attributesItem.RelationAttribute.RenderCondition.IsNull() {
					*renderCondition10 = attributesItem.RelationAttribute.RenderCondition.ValueString()
				} else {
					renderCondition10 = nil
				}
				var purpose9 []string = []string{}
				for _, purposeItem9 := range attributesItem.RelationAttribute.Purpose {
					purpose9 = append(purpose9, purposeItem9.ValueString())
				}
				var constraints9 *shared.RelationAttributeConstraints
				if attributesItem.RelationAttribute.Constraints != nil {
					constraints9 = &shared.RelationAttributeConstraints{}
				}
				featureFlag11 := new(string)
				if !attributesItem.RelationAttribute.FeatureFlag.IsUnknown() && !attributesItem.RelationAttribute.FeatureFlag.IsNull() {
					*featureFlag11 = attributesItem.RelationAttribute.FeatureFlag.ValueString()
				} else {
					featureFlag11 = nil
				}
				var settingsFlag10 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem10 := range attributesItem.RelationAttribute.SettingsFlag {
					name22 := new(string)
					if !settingsFlagItem10.Name.IsUnknown() && !settingsFlagItem10.Name.IsNull() {
						*name22 = settingsFlagItem10.Name.ValueString()
					} else {
						name22 = nil
					}
					enabled10 := new(bool)
					if !settingsFlagItem10.Enabled.IsUnknown() && !settingsFlagItem10.Enabled.IsNull() {
						*enabled10 = settingsFlagItem10.Enabled.ValueBool()
					} else {
						enabled10 = nil
					}
					settingsFlag10 = append(settingsFlag10, shared.SettingFlag{
						Name:    name22,
						Enabled: enabled10,
					})
				}
				valueFormatter9 := new(string)
				if !attributesItem.RelationAttribute.ValueFormatter.IsUnknown() && !attributesItem.RelationAttribute.ValueFormatter.IsNull() {
					*valueFormatter9 = attributesItem.RelationAttribute.ValueFormatter.ValueString()
				} else {
					valueFormatter9 = nil
				}
				previewValueFormatter9 := new(string)
				if !attributesItem.RelationAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.RelationAttribute.PreviewValueFormatter.IsNull() {
					*previewValueFormatter9 = attributesItem.RelationAttribute.PreviewValueFormatter.ValueString()
				} else {
					previewValueFormatter9 = nil
				}
				entityBuilderDisableEdit9 := new(bool)
				if !attributesItem.RelationAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.RelationAttribute.EntityBuilderDisableEdit.IsNull() {
					*entityBuilderDisableEdit9 = attributesItem.RelationAttribute.EntityBuilderDisableEdit.ValueBool()
				} else {
					entityBuilderDisableEdit9 = nil
				}
				protected9 := new(bool)
				if !attributesItem.RelationAttribute.Protected.IsUnknown() && !attributesItem.RelationAttribute.Protected.IsNull() {
					*protected9 = attributesItem.RelationAttribute.Protected.ValueBool()
				} else {
					protected9 = nil
				}
				var infoHelpers9 *shared.RelationAttributeInfoHelpers
				if attributesItem.RelationAttribute.InfoHelpers != nil {
					hintText9 := new(string)
					if !attributesItem.RelationAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.RelationAttribute.InfoHelpers.HintText.IsNull() {
						*hintText9 = attributesItem.RelationAttribute.InfoHelpers.HintText.ValueString()
					} else {
						hintText9 = nil
					}
					hintTextKey9 := new(string)
					if !attributesItem.RelationAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.RelationAttribute.InfoHelpers.HintTextKey.IsNull() {
						*hintTextKey9 = attributesItem.RelationAttribute.InfoHelpers.HintTextKey.ValueString()
					} else {
						hintTextKey9 = nil
					}
					hintCustomComponent9 := new(string)
					if !attributesItem.RelationAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.RelationAttribute.InfoHelpers.HintCustomComponent.IsNull() {
						*hintCustomComponent9 = attributesItem.RelationAttribute.InfoHelpers.HintCustomComponent.ValueString()
					} else {
						hintCustomComponent9 = nil
					}
					hintTooltipPlacement9 := new(string)
					if !attributesItem.RelationAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.RelationAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
						*hintTooltipPlacement9 = attributesItem.RelationAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
					} else {
						hintTooltipPlacement9 = nil
					}
					infoHelpers9 = &shared.RelationAttributeInfoHelpers{
						HintText:             hintText9,
						HintTextKey:          hintTextKey9,
						HintCustomComponent:  hintCustomComponent9,
						HintTooltipPlacement: hintTooltipPlacement9,
					}
				}
				typeVar10 := new(shared.RelationAttributeType)
				if !attributesItem.RelationAttribute.Type.IsUnknown() && !attributesItem.RelationAttribute.Type.IsNull() {
					*typeVar10 = shared.RelationAttributeType(attributesItem.RelationAttribute.Type.ValueString())
				} else {
					typeVar10 = nil
				}
				relationType := new(shared.RelationType)
				if !attributesItem.RelationAttribute.RelationType.IsUnknown() && !attributesItem.RelationAttribute.RelationType.IsNull() {
					*relationType = shared.RelationType(attributesItem.RelationAttribute.RelationType.ValueString())
				} else {
					relationType = nil
				}
				reverseAttributes := make(map[string]string)
				for reverseAttributesKey, reverseAttributesValue := range attributesItem.RelationAttribute.ReverseAttributes {
					reverseAttributesInst := reverseAttributesValue.ValueString()
					reverseAttributes[reverseAttributesKey] = reverseAttributesInst
				}
				relationAffinityMode := new(shared.RelationAffinityMode)
				if !attributesItem.RelationAttribute.RelationAffinityMode.IsUnknown() && !attributesItem.RelationAttribute.RelationAffinityMode.IsNull() {
					*relationAffinityMode = shared.RelationAffinityMode(attributesItem.RelationAttribute.RelationAffinityMode.ValueString())
				} else {
					relationAffinityMode = nil
				}
				enableRelationPicker := new(bool)
				if !attributesItem.RelationAttribute.EnableRelationPicker.IsUnknown() && !attributesItem.RelationAttribute.EnableRelationPicker.IsNull() {
					*enableRelationPicker = attributesItem.RelationAttribute.EnableRelationPicker.ValueBool()
				} else {
					enableRelationPicker = nil
				}
				editMode := new(shared.EditMode)
				if !attributesItem.RelationAttribute.EditMode.IsUnknown() && !attributesItem.RelationAttribute.EditMode.IsNull() {
					*editMode = shared.EditMode(attributesItem.RelationAttribute.EditMode.ValueString())
				} else {
					editMode = nil
				}
				detailsViewModeEnabled := new(bool)
				if !attributesItem.RelationAttribute.DetailsViewModeEnabled.IsUnknown() && !attributesItem.RelationAttribute.DetailsViewModeEnabled.IsNull() {
					*detailsViewModeEnabled = attributesItem.RelationAttribute.DetailsViewModeEnabled.ValueBool()
				} else {
					detailsViewModeEnabled = nil
				}
				var actions []shared.RelationAttributeActions = []shared.RelationAttributeActions{}
				for _, actionsItem := range attributesItem.RelationAttribute.Actions {
					actionType := new(shared.ActionType)
					if !actionsItem.ActionType.IsUnknown() && !actionsItem.ActionType.IsNull() {
						*actionType = shared.ActionType(actionsItem.ActionType.ValueString())
					} else {
						actionType = nil
					}
					label15 := new(string)
					if !actionsItem.Label.IsUnknown() && !actionsItem.Label.IsNull() {
						*label15 = actionsItem.Label.ValueString()
					} else {
						label15 = nil
					}
					defaultVar := new(bool)
					if !actionsItem.Default.IsUnknown() && !actionsItem.Default.IsNull() {
						*defaultVar = actionsItem.Default.ValueBool()
					} else {
						defaultVar = nil
					}
					featureFlag12 := new(string)
					if !actionsItem.FeatureFlag.IsUnknown() && !actionsItem.FeatureFlag.IsNull() {
						*featureFlag12 = actionsItem.FeatureFlag.ValueString()
					} else {
						featureFlag12 = nil
					}
					var settingsFlag11 []shared.SettingFlag = []shared.SettingFlag{}
					for _, settingsFlagItem11 := range actionsItem.SettingsFlag {
						name23 := new(string)
						if !settingsFlagItem11.Name.IsUnknown() && !settingsFlagItem11.Name.IsNull() {
							*name23 = settingsFlagItem11.Name.ValueString()
						} else {
							name23 = nil
						}
						enabled11 := new(bool)
						if !settingsFlagItem11.Enabled.IsUnknown() && !settingsFlagItem11.Enabled.IsNull() {
							*enabled11 = settingsFlagItem11.Enabled.ValueBool()
						} else {
							enabled11 = nil
						}
						settingsFlag11 = append(settingsFlag11, shared.SettingFlag{
							Name:    name23,
							Enabled: enabled11,
						})
					}
					var newEntityItem *shared.RelationAttributeNewEntityItem
					if actionsItem.NewEntityItem != nil {
						id13 := actionsItem.NewEntityItem.ID.ValueString()
						schema := actionsItem.NewEntityItem.Schema.ValueString()
						title3 := new(string)
						if !actionsItem.NewEntityItem.Title.IsUnknown() && !actionsItem.NewEntityItem.Title.IsNull() {
							*title3 = actionsItem.NewEntityItem.Title.ValueString()
						} else {
							title3 = nil
						}
						var tags []string = []string{}
						for _, tagsItem := range actionsItem.NewEntityItem.Tags {
							tags = append(tags, tagsItem.ValueString())
						}
						var acl *shared.EntityACL
						if actionsItem.NewEntityItem.ACL != nil {
							var view []string = []string{}
							for _, viewItem := range actionsItem.NewEntityItem.ACL.View {
								view = append(view, viewItem.ValueString())
							}
							var edit []string = []string{}
							for _, editItem := range actionsItem.NewEntityItem.ACL.Edit {
								edit = append(edit, editItem.ValueString())
							}
							var delete []string = []string{}
							for _, deleteItem := range actionsItem.NewEntityItem.ACL.Delete {
								delete = append(delete, deleteItem.ValueString())
							}
							var additionalProperties interface{}
							if !actionsItem.NewEntityItem.ACL.AdditionalProperties.IsUnknown() && !actionsItem.NewEntityItem.ACL.AdditionalProperties.IsNull() {
								_ = json.Unmarshal([]byte(actionsItem.NewEntityItem.ACL.AdditionalProperties.ValueString()), &additionalProperties)
							}
							acl = &shared.EntityACL{
								View:                 view,
								Edit:                 edit,
								Delete:               delete,
								AdditionalProperties: additionalProperties,
							}
						}
						var additionalProperties1 interface{}
						if !actionsItem.NewEntityItem.AdditionalProperties.IsUnknown() && !actionsItem.NewEntityItem.AdditionalProperties.IsNull() {
							_ = json.Unmarshal([]byte(actionsItem.NewEntityItem.AdditionalProperties.ValueString()), &additionalProperties1)
						}
						newEntityItem = &shared.RelationAttributeNewEntityItem{
							ID:                   id13,
							Schema:               schema,
							Title:                title3,
							Tags:                 tags,
							ACL:                  acl,
							AdditionalProperties: additionalProperties1,
						}
					}
					actions = append(actions, shared.RelationAttributeActions{
						ActionType:    actionType,
						Label:         label15,
						Default:       defaultVar,
						FeatureFlag:   featureFlag12,
						SettingsFlag:  settingsFlag11,
						NewEntityItem: newEntityItem,
					})
				}
				drawerSize := new(shared.DrawerSize)
				if !attributesItem.RelationAttribute.DrawerSize.IsUnknown() && !attributesItem.RelationAttribute.DrawerSize.IsNull() {
					*drawerSize = shared.DrawerSize(attributesItem.RelationAttribute.DrawerSize.ValueString())
				} else {
					drawerSize = nil
				}
				var summaryFields []shared.SummaryFields = []shared.SummaryFields{}
				for _, summaryFieldsItem := range attributesItem.RelationAttribute.SummaryFields {
					if !summaryFieldsItem.Str.IsUnknown() && !summaryFieldsItem.Str.IsNull() {
						str5 := summaryFieldsItem.Str.ValueString()
						summaryFields = append(summaryFields, shared.SummaryFields{
							Str: &str5,
						})
					}
					if summaryFieldsItem.SummaryField != nil {
						field := new(string)
						if !summaryFieldsItem.SummaryField.Field.IsUnknown() && !summaryFieldsItem.SummaryField.Field.IsNull() {
							*field = summaryFieldsItem.SummaryField.Field.ValueString()
						} else {
							field = nil
						}
						displayAs := new(string)
						if !summaryFieldsItem.SummaryField.DisplayAs.IsUnknown() && !summaryFieldsItem.SummaryField.DisplayAs.IsNull() {
							*displayAs = summaryFieldsItem.SummaryField.DisplayAs.ValueString()
						} else {
							displayAs = nil
						}
						summaryField := shared.SummaryField{
							Field:     field,
							DisplayAs: displayAs,
						}
						summaryFields = append(summaryFields, shared.SummaryFields{
							SummaryField: &summaryField,
						})
					}
				}
				hasPrimary := new(bool)
				if !attributesItem.RelationAttribute.HasPrimary.IsUnknown() && !attributesItem.RelationAttribute.HasPrimary.IsNull() {
					*hasPrimary = attributesItem.RelationAttribute.HasPrimary.ValueBool()
				} else {
					hasPrimary = nil
				}
				var allowedSchemas []string = []string{}
				for _, allowedSchemasItem := range attributesItem.RelationAttribute.AllowedSchemas {
					allowedSchemas = append(allowedSchemas, allowedSchemasItem.ValueString())
				}
				enableRelationTags := new(bool)
				if !attributesItem.RelationAttribute.EnableRelationTags.IsUnknown() && !attributesItem.RelationAttribute.EnableRelationTags.IsNull() {
					*enableRelationTags = attributesItem.RelationAttribute.EnableRelationTags.ValueBool()
				} else {
					enableRelationTags = nil
				}
				addButtonLabel := new(string)
				if !attributesItem.RelationAttribute.AddButtonLabel.IsUnknown() && !attributesItem.RelationAttribute.AddButtonLabel.IsNull() {
					*addButtonLabel = attributesItem.RelationAttribute.AddButtonLabel.ValueString()
				} else {
					addButtonLabel = nil
				}
				searchPlaceholder := new(string)
				if !attributesItem.RelationAttribute.SearchPlaceholder.IsUnknown() && !attributesItem.RelationAttribute.SearchPlaceholder.IsNull() {
					*searchPlaceholder = attributesItem.RelationAttribute.SearchPlaceholder.ValueString()
				} else {
					searchPlaceholder = nil
				}
				relationAttributeInput := shared.RelationAttributeInput{
					ID:                       id12,
					Name:                     name21,
					Label:                    label14,
					Placeholder:              placeholder9,
					Hidden:                   hidden9,
					ShowInTable:              showInTable9,
					Sortable:                 sortable9,
					Required:                 required9,
					Readonly:                 readonly9,
					Deprecated:               deprecated9,
					DefaultValue:             defaultValue9,
					Group:                    group9,
					Order:                    order9,
					Layout:                   layout9,
					HideLabel:                hideLabel9,
					Icon:                     icon13,
					RenderCondition:          renderCondition10,
					Purpose:                  purpose9,
					Constraints:              constraints9,
					FeatureFlag:              featureFlag11,
					SettingsFlag:             settingsFlag10,
					ValueFormatter:           valueFormatter9,
					PreviewValueFormatter:    previewValueFormatter9,
					EntityBuilderDisableEdit: entityBuilderDisableEdit9,
					Protected:                protected9,
					InfoHelpers:              infoHelpers9,
					Type:                     typeVar10,
					RelationType:             relationType,
					ReverseAttributes:        reverseAttributes,
					RelationAffinityMode:     relationAffinityMode,
					EnableRelationPicker:     enableRelationPicker,
					EditMode:                 editMode,
					DetailsViewModeEnabled:   detailsViewModeEnabled,
					Actions:                  actions,
					DrawerSize:               drawerSize,
					SummaryFields:            summaryFields,
					HasPrimary:               hasPrimary,
					AllowedSchemas:           allowedSchemas,
					EnableRelationTags:       enableRelationTags,
					AddButtonLabel:           addButtonLabel,
					SearchPlaceholder:        searchPlaceholder,
				}
				attributes = append(attributes, shared.AttributeInput{
					RelationAttributeInput: &relationAttributeInput,
				})
			}
			if attributesItem.UserRelationAttribute != nil {
				id14 := new(string)
				if !attributesItem.UserRelationAttribute.ID.IsUnknown() && !attributesItem.UserRelationAttribute.ID.IsNull() {
					*id14 = attributesItem.UserRelationAttribute.ID.ValueString()
				} else {
					id14 = nil
				}
				name24 := attributesItem.UserRelationAttribute.Name.ValueString()
				label16 := attributesItem.UserRelationAttribute.Label.ValueString()
				placeholder10 := new(string)
				if !attributesItem.UserRelationAttribute.Placeholder.IsUnknown() && !attributesItem.UserRelationAttribute.Placeholder.IsNull() {
					*placeholder10 = attributesItem.UserRelationAttribute.Placeholder.ValueString()
				} else {
					placeholder10 = nil
				}
				hidden10 := new(bool)
				if !attributesItem.UserRelationAttribute.Hidden.IsUnknown() && !attributesItem.UserRelationAttribute.Hidden.IsNull() {
					*hidden10 = attributesItem.UserRelationAttribute.Hidden.ValueBool()
				} else {
					hidden10 = nil
				}
				showInTable10 := new(bool)
				if !attributesItem.UserRelationAttribute.ShowInTable.IsUnknown() && !attributesItem.UserRelationAttribute.ShowInTable.IsNull() {
					*showInTable10 = attributesItem.UserRelationAttribute.ShowInTable.ValueBool()
				} else {
					showInTable10 = nil
				}
				sortable10 := new(bool)
				if !attributesItem.UserRelationAttribute.Sortable.IsUnknown() && !attributesItem.UserRelationAttribute.Sortable.IsNull() {
					*sortable10 = attributesItem.UserRelationAttribute.Sortable.ValueBool()
				} else {
					sortable10 = nil
				}
				required10 := new(bool)
				if !attributesItem.UserRelationAttribute.Required.IsUnknown() && !attributesItem.UserRelationAttribute.Required.IsNull() {
					*required10 = attributesItem.UserRelationAttribute.Required.ValueBool()
				} else {
					required10 = nil
				}
				readonly10 := new(bool)
				if !attributesItem.UserRelationAttribute.Readonly.IsUnknown() && !attributesItem.UserRelationAttribute.Readonly.IsNull() {
					*readonly10 = attributesItem.UserRelationAttribute.Readonly.ValueBool()
				} else {
					readonly10 = nil
				}
				deprecated10 := new(bool)
				if !attributesItem.UserRelationAttribute.Deprecated.IsUnknown() && !attributesItem.UserRelationAttribute.Deprecated.IsNull() {
					*deprecated10 = attributesItem.UserRelationAttribute.Deprecated.ValueBool()
				} else {
					deprecated10 = nil
				}
				var defaultValue10 interface{}
				if !attributesItem.UserRelationAttribute.DefaultValue.IsUnknown() && !attributesItem.UserRelationAttribute.DefaultValue.IsNull() {
					_ = json.Unmarshal([]byte(attributesItem.UserRelationAttribute.DefaultValue.ValueString()), &defaultValue10)
				}
				group10 := new(string)
				if !attributesItem.UserRelationAttribute.Group.IsUnknown() && !attributesItem.UserRelationAttribute.Group.IsNull() {
					*group10 = attributesItem.UserRelationAttribute.Group.ValueString()
				} else {
					group10 = nil
				}
				order10 := new(int64)
				if !attributesItem.UserRelationAttribute.Order.IsUnknown() && !attributesItem.UserRelationAttribute.Order.IsNull() {
					*order10 = attributesItem.UserRelationAttribute.Order.ValueInt64()
				} else {
					order10 = nil
				}
				layout10 := new(string)
				if !attributesItem.UserRelationAttribute.Layout.IsUnknown() && !attributesItem.UserRelationAttribute.Layout.IsNull() {
					*layout10 = attributesItem.UserRelationAttribute.Layout.ValueString()
				} else {
					layout10 = nil
				}
				hideLabel10 := new(bool)
				if !attributesItem.UserRelationAttribute.HideLabel.IsUnknown() && !attributesItem.UserRelationAttribute.HideLabel.IsNull() {
					*hideLabel10 = attributesItem.UserRelationAttribute.HideLabel.ValueBool()
				} else {
					hideLabel10 = nil
				}
				icon14 := new(string)
				if !attributesItem.UserRelationAttribute.Icon.IsUnknown() && !attributesItem.UserRelationAttribute.Icon.IsNull() {
					*icon14 = attributesItem.UserRelationAttribute.Icon.ValueString()
				} else {
					icon14 = nil
				}
				renderCondition11 := new(string)
				if !attributesItem.UserRelationAttribute.RenderCondition.IsUnknown() && !attributesItem.UserRelationAttribute.RenderCondition.IsNull() {
					*renderCondition11 = attributesItem.UserRelationAttribute.RenderCondition.ValueString()
				} else {
					renderCondition11 = nil
				}
				var purpose10 []string = []string{}
				for _, purposeItem10 := range attributesItem.UserRelationAttribute.Purpose {
					purpose10 = append(purpose10, purposeItem10.ValueString())
				}
				var constraints10 *shared.UserRelationAttributeConstraints
				if attributesItem.UserRelationAttribute.Constraints != nil {
					constraints10 = &shared.UserRelationAttributeConstraints{}
				}
				featureFlag13 := new(string)
				if !attributesItem.UserRelationAttribute.FeatureFlag.IsUnknown() && !attributesItem.UserRelationAttribute.FeatureFlag.IsNull() {
					*featureFlag13 = attributesItem.UserRelationAttribute.FeatureFlag.ValueString()
				} else {
					featureFlag13 = nil
				}
				var settingsFlag12 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem12 := range attributesItem.UserRelationAttribute.SettingsFlag {
					name25 := new(string)
					if !settingsFlagItem12.Name.IsUnknown() && !settingsFlagItem12.Name.IsNull() {
						*name25 = settingsFlagItem12.Name.ValueString()
					} else {
						name25 = nil
					}
					enabled12 := new(bool)
					if !settingsFlagItem12.Enabled.IsUnknown() && !settingsFlagItem12.Enabled.IsNull() {
						*enabled12 = settingsFlagItem12.Enabled.ValueBool()
					} else {
						enabled12 = nil
					}
					settingsFlag12 = append(settingsFlag12, shared.SettingFlag{
						Name:    name25,
						Enabled: enabled12,
					})
				}
				valueFormatter10 := new(string)
				if !attributesItem.UserRelationAttribute.ValueFormatter.IsUnknown() && !attributesItem.UserRelationAttribute.ValueFormatter.IsNull() {
					*valueFormatter10 = attributesItem.UserRelationAttribute.ValueFormatter.ValueString()
				} else {
					valueFormatter10 = nil
				}
				previewValueFormatter10 := new(string)
				if !attributesItem.UserRelationAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.UserRelationAttribute.PreviewValueFormatter.IsNull() {
					*previewValueFormatter10 = attributesItem.UserRelationAttribute.PreviewValueFormatter.ValueString()
				} else {
					previewValueFormatter10 = nil
				}
				entityBuilderDisableEdit10 := new(bool)
				if !attributesItem.UserRelationAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.UserRelationAttribute.EntityBuilderDisableEdit.IsNull() {
					*entityBuilderDisableEdit10 = attributesItem.UserRelationAttribute.EntityBuilderDisableEdit.ValueBool()
				} else {
					entityBuilderDisableEdit10 = nil
				}
				protected10 := new(bool)
				if !attributesItem.UserRelationAttribute.Protected.IsUnknown() && !attributesItem.UserRelationAttribute.Protected.IsNull() {
					*protected10 = attributesItem.UserRelationAttribute.Protected.ValueBool()
				} else {
					protected10 = nil
				}
				var infoHelpers10 *shared.UserRelationAttributeInfoHelpers
				if attributesItem.UserRelationAttribute.InfoHelpers != nil {
					hintText10 := new(string)
					if !attributesItem.UserRelationAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.UserRelationAttribute.InfoHelpers.HintText.IsNull() {
						*hintText10 = attributesItem.UserRelationAttribute.InfoHelpers.HintText.ValueString()
					} else {
						hintText10 = nil
					}
					hintTextKey10 := new(string)
					if !attributesItem.UserRelationAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.UserRelationAttribute.InfoHelpers.HintTextKey.IsNull() {
						*hintTextKey10 = attributesItem.UserRelationAttribute.InfoHelpers.HintTextKey.ValueString()
					} else {
						hintTextKey10 = nil
					}
					hintCustomComponent10 := new(string)
					if !attributesItem.UserRelationAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.UserRelationAttribute.InfoHelpers.HintCustomComponent.IsNull() {
						*hintCustomComponent10 = attributesItem.UserRelationAttribute.InfoHelpers.HintCustomComponent.ValueString()
					} else {
						hintCustomComponent10 = nil
					}
					hintTooltipPlacement10 := new(string)
					if !attributesItem.UserRelationAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.UserRelationAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
						*hintTooltipPlacement10 = attributesItem.UserRelationAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
					} else {
						hintTooltipPlacement10 = nil
					}
					infoHelpers10 = &shared.UserRelationAttributeInfoHelpers{
						HintText:             hintText10,
						HintTextKey:          hintTextKey10,
						HintCustomComponent:  hintCustomComponent10,
						HintTooltipPlacement: hintTooltipPlacement10,
					}
				}
				typeVar11 := new(shared.UserRelationAttributeType)
				if !attributesItem.UserRelationAttribute.Type.IsUnknown() && !attributesItem.UserRelationAttribute.Type.IsNull() {
					*typeVar11 = shared.UserRelationAttributeType(attributesItem.UserRelationAttribute.Type.ValueString())
				} else {
					typeVar11 = nil
				}
				multiple := new(bool)
				if !attributesItem.UserRelationAttribute.Multiple.IsUnknown() && !attributesItem.UserRelationAttribute.Multiple.IsNull() {
					*multiple = attributesItem.UserRelationAttribute.Multiple.ValueBool()
				} else {
					multiple = nil
				}
				userRelationAttribute := shared.UserRelationAttribute{
					ID:                       id14,
					Name:                     name24,
					Label:                    label16,
					Placeholder:              placeholder10,
					Hidden:                   hidden10,
					ShowInTable:              showInTable10,
					Sortable:                 sortable10,
					Required:                 required10,
					Readonly:                 readonly10,
					Deprecated:               deprecated10,
					DefaultValue:             defaultValue10,
					Group:                    group10,
					Order:                    order10,
					Layout:                   layout10,
					HideLabel:                hideLabel10,
					Icon:                     icon14,
					RenderCondition:          renderCondition11,
					Purpose:                  purpose10,
					Constraints:              constraints10,
					FeatureFlag:              featureFlag13,
					SettingsFlag:             settingsFlag12,
					ValueFormatter:           valueFormatter10,
					PreviewValueFormatter:    previewValueFormatter10,
					EntityBuilderDisableEdit: entityBuilderDisableEdit10,
					Protected:                protected10,
					InfoHelpers:              infoHelpers10,
					Type:                     typeVar11,
					Multiple:                 multiple,
				}
				attributes = append(attributes, shared.AttributeInput{
					UserRelationAttribute: &userRelationAttribute,
				})
			}
			if attributesItem.AddressRelationAttribute != nil {
				id15 := new(string)
				if !attributesItem.AddressRelationAttribute.ID.IsUnknown() && !attributesItem.AddressRelationAttribute.ID.IsNull() {
					*id15 = attributesItem.AddressRelationAttribute.ID.ValueString()
				} else {
					id15 = nil
				}
				name26 := attributesItem.AddressRelationAttribute.Name.ValueString()
				label17 := attributesItem.AddressRelationAttribute.Label.ValueString()
				placeholder11 := new(string)
				if !attributesItem.AddressRelationAttribute.Placeholder.IsUnknown() && !attributesItem.AddressRelationAttribute.Placeholder.IsNull() {
					*placeholder11 = attributesItem.AddressRelationAttribute.Placeholder.ValueString()
				} else {
					placeholder11 = nil
				}
				hidden11 := new(bool)
				if !attributesItem.AddressRelationAttribute.Hidden.IsUnknown() && !attributesItem.AddressRelationAttribute.Hidden.IsNull() {
					*hidden11 = attributesItem.AddressRelationAttribute.Hidden.ValueBool()
				} else {
					hidden11 = nil
				}
				showInTable11 := new(bool)
				if !attributesItem.AddressRelationAttribute.ShowInTable.IsUnknown() && !attributesItem.AddressRelationAttribute.ShowInTable.IsNull() {
					*showInTable11 = attributesItem.AddressRelationAttribute.ShowInTable.ValueBool()
				} else {
					showInTable11 = nil
				}
				sortable11 := new(bool)
				if !attributesItem.AddressRelationAttribute.Sortable.IsUnknown() && !attributesItem.AddressRelationAttribute.Sortable.IsNull() {
					*sortable11 = attributesItem.AddressRelationAttribute.Sortable.ValueBool()
				} else {
					sortable11 = nil
				}
				required11 := new(bool)
				if !attributesItem.AddressRelationAttribute.Required.IsUnknown() && !attributesItem.AddressRelationAttribute.Required.IsNull() {
					*required11 = attributesItem.AddressRelationAttribute.Required.ValueBool()
				} else {
					required11 = nil
				}
				readonly11 := new(bool)
				if !attributesItem.AddressRelationAttribute.Readonly.IsUnknown() && !attributesItem.AddressRelationAttribute.Readonly.IsNull() {
					*readonly11 = attributesItem.AddressRelationAttribute.Readonly.ValueBool()
				} else {
					readonly11 = nil
				}
				deprecated11 := new(bool)
				if !attributesItem.AddressRelationAttribute.Deprecated.IsUnknown() && !attributesItem.AddressRelationAttribute.Deprecated.IsNull() {
					*deprecated11 = attributesItem.AddressRelationAttribute.Deprecated.ValueBool()
				} else {
					deprecated11 = nil
				}
				var defaultValue11 interface{}
				if !attributesItem.AddressRelationAttribute.DefaultValue.IsUnknown() && !attributesItem.AddressRelationAttribute.DefaultValue.IsNull() {
					_ = json.Unmarshal([]byte(attributesItem.AddressRelationAttribute.DefaultValue.ValueString()), &defaultValue11)
				}
				group11 := new(string)
				if !attributesItem.AddressRelationAttribute.Group.IsUnknown() && !attributesItem.AddressRelationAttribute.Group.IsNull() {
					*group11 = attributesItem.AddressRelationAttribute.Group.ValueString()
				} else {
					group11 = nil
				}
				order11 := new(int64)
				if !attributesItem.AddressRelationAttribute.Order.IsUnknown() && !attributesItem.AddressRelationAttribute.Order.IsNull() {
					*order11 = attributesItem.AddressRelationAttribute.Order.ValueInt64()
				} else {
					order11 = nil
				}
				layout11 := new(string)
				if !attributesItem.AddressRelationAttribute.Layout.IsUnknown() && !attributesItem.AddressRelationAttribute.Layout.IsNull() {
					*layout11 = attributesItem.AddressRelationAttribute.Layout.ValueString()
				} else {
					layout11 = nil
				}
				hideLabel11 := new(bool)
				if !attributesItem.AddressRelationAttribute.HideLabel.IsUnknown() && !attributesItem.AddressRelationAttribute.HideLabel.IsNull() {
					*hideLabel11 = attributesItem.AddressRelationAttribute.HideLabel.ValueBool()
				} else {
					hideLabel11 = nil
				}
				icon15 := new(string)
				if !attributesItem.AddressRelationAttribute.Icon.IsUnknown() && !attributesItem.AddressRelationAttribute.Icon.IsNull() {
					*icon15 = attributesItem.AddressRelationAttribute.Icon.ValueString()
				} else {
					icon15 = nil
				}
				renderCondition12 := new(string)
				if !attributesItem.AddressRelationAttribute.RenderCondition.IsUnknown() && !attributesItem.AddressRelationAttribute.RenderCondition.IsNull() {
					*renderCondition12 = attributesItem.AddressRelationAttribute.RenderCondition.ValueString()
				} else {
					renderCondition12 = nil
				}
				var purpose11 []string = []string{}
				for _, purposeItem11 := range attributesItem.AddressRelationAttribute.Purpose {
					purpose11 = append(purpose11, purposeItem11.ValueString())
				}
				var constraints11 *shared.AddressRelationAttributeConstraints
				if attributesItem.AddressRelationAttribute.Constraints != nil {
					constraints11 = &shared.AddressRelationAttributeConstraints{}
				}
				featureFlag14 := new(string)
				if !attributesItem.AddressRelationAttribute.FeatureFlag.IsUnknown() && !attributesItem.AddressRelationAttribute.FeatureFlag.IsNull() {
					*featureFlag14 = attributesItem.AddressRelationAttribute.FeatureFlag.ValueString()
				} else {
					featureFlag14 = nil
				}
				var settingsFlag13 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem13 := range attributesItem.AddressRelationAttribute.SettingsFlag {
					name27 := new(string)
					if !settingsFlagItem13.Name.IsUnknown() && !settingsFlagItem13.Name.IsNull() {
						*name27 = settingsFlagItem13.Name.ValueString()
					} else {
						name27 = nil
					}
					enabled13 := new(bool)
					if !settingsFlagItem13.Enabled.IsUnknown() && !settingsFlagItem13.Enabled.IsNull() {
						*enabled13 = settingsFlagItem13.Enabled.ValueBool()
					} else {
						enabled13 = nil
					}
					settingsFlag13 = append(settingsFlag13, shared.SettingFlag{
						Name:    name27,
						Enabled: enabled13,
					})
				}
				valueFormatter11 := new(string)
				if !attributesItem.AddressRelationAttribute.ValueFormatter.IsUnknown() && !attributesItem.AddressRelationAttribute.ValueFormatter.IsNull() {
					*valueFormatter11 = attributesItem.AddressRelationAttribute.ValueFormatter.ValueString()
				} else {
					valueFormatter11 = nil
				}
				previewValueFormatter11 := new(string)
				if !attributesItem.AddressRelationAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.AddressRelationAttribute.PreviewValueFormatter.IsNull() {
					*previewValueFormatter11 = attributesItem.AddressRelationAttribute.PreviewValueFormatter.ValueString()
				} else {
					previewValueFormatter11 = nil
				}
				entityBuilderDisableEdit11 := new(bool)
				if !attributesItem.AddressRelationAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.AddressRelationAttribute.EntityBuilderDisableEdit.IsNull() {
					*entityBuilderDisableEdit11 = attributesItem.AddressRelationAttribute.EntityBuilderDisableEdit.ValueBool()
				} else {
					entityBuilderDisableEdit11 = nil
				}
				protected11 := new(bool)
				if !attributesItem.AddressRelationAttribute.Protected.IsUnknown() && !attributesItem.AddressRelationAttribute.Protected.IsNull() {
					*protected11 = attributesItem.AddressRelationAttribute.Protected.ValueBool()
				} else {
					protected11 = nil
				}
				var infoHelpers11 *shared.AddressRelationAttributeInfoHelpers
				if attributesItem.AddressRelationAttribute.InfoHelpers != nil {
					hintText11 := new(string)
					if !attributesItem.AddressRelationAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.AddressRelationAttribute.InfoHelpers.HintText.IsNull() {
						*hintText11 = attributesItem.AddressRelationAttribute.InfoHelpers.HintText.ValueString()
					} else {
						hintText11 = nil
					}
					hintTextKey11 := new(string)
					if !attributesItem.AddressRelationAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.AddressRelationAttribute.InfoHelpers.HintTextKey.IsNull() {
						*hintTextKey11 = attributesItem.AddressRelationAttribute.InfoHelpers.HintTextKey.ValueString()
					} else {
						hintTextKey11 = nil
					}
					hintCustomComponent11 := new(string)
					if !attributesItem.AddressRelationAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.AddressRelationAttribute.InfoHelpers.HintCustomComponent.IsNull() {
						*hintCustomComponent11 = attributesItem.AddressRelationAttribute.InfoHelpers.HintCustomComponent.ValueString()
					} else {
						hintCustomComponent11 = nil
					}
					hintTooltipPlacement11 := new(string)
					if !attributesItem.AddressRelationAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.AddressRelationAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
						*hintTooltipPlacement11 = attributesItem.AddressRelationAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
					} else {
						hintTooltipPlacement11 = nil
					}
					infoHelpers11 = &shared.AddressRelationAttributeInfoHelpers{
						HintText:             hintText11,
						HintTextKey:          hintTextKey11,
						HintCustomComponent:  hintCustomComponent11,
						HintTooltipPlacement: hintTooltipPlacement11,
					}
				}
				typeVar12 := new(shared.AddressRelationAttributeType)
				if !attributesItem.AddressRelationAttribute.Type.IsUnknown() && !attributesItem.AddressRelationAttribute.Type.IsNull() {
					*typeVar12 = shared.AddressRelationAttributeType(attributesItem.AddressRelationAttribute.Type.ValueString())
				} else {
					typeVar12 = nil
				}
				hasPrimary1 := new(bool)
				if !attributesItem.AddressRelationAttribute.HasPrimary.IsUnknown() && !attributesItem.AddressRelationAttribute.HasPrimary.IsNull() {
					*hasPrimary1 = attributesItem.AddressRelationAttribute.HasPrimary.ValueBool()
				} else {
					hasPrimary1 = nil
				}
				addressRelationAttribute := shared.AddressRelationAttribute{
					ID:                       id15,
					Name:                     name26,
					Label:                    label17,
					Placeholder:              placeholder11,
					Hidden:                   hidden11,
					ShowInTable:              showInTable11,
					Sortable:                 sortable11,
					Required:                 required11,
					Readonly:                 readonly11,
					Deprecated:               deprecated11,
					DefaultValue:             defaultValue11,
					Group:                    group11,
					Order:                    order11,
					Layout:                   layout11,
					HideLabel:                hideLabel11,
					Icon:                     icon15,
					RenderCondition:          renderCondition12,
					Purpose:                  purpose11,
					Constraints:              constraints11,
					FeatureFlag:              featureFlag14,
					SettingsFlag:             settingsFlag13,
					ValueFormatter:           valueFormatter11,
					PreviewValueFormatter:    previewValueFormatter11,
					EntityBuilderDisableEdit: entityBuilderDisableEdit11,
					Protected:                protected11,
					InfoHelpers:              infoHelpers11,
					Type:                     typeVar12,
					HasPrimary:               hasPrimary1,
				}
				attributes = append(attributes, shared.AttributeInput{
					AddressRelationAttribute: &addressRelationAttribute,
				})
			}
			if attributesItem.PaymentMethodRelationAttribute != nil {
				id16 := new(string)
				if !attributesItem.PaymentMethodRelationAttribute.ID.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.ID.IsNull() {
					*id16 = attributesItem.PaymentMethodRelationAttribute.ID.ValueString()
				} else {
					id16 = nil
				}
				name28 := attributesItem.PaymentMethodRelationAttribute.Name.ValueString()
				label18 := attributesItem.PaymentMethodRelationAttribute.Label.ValueString()
				placeholder12 := new(string)
				if !attributesItem.PaymentMethodRelationAttribute.Placeholder.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.Placeholder.IsNull() {
					*placeholder12 = attributesItem.PaymentMethodRelationAttribute.Placeholder.ValueString()
				} else {
					placeholder12 = nil
				}
				hidden12 := new(bool)
				if !attributesItem.PaymentMethodRelationAttribute.Hidden.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.Hidden.IsNull() {
					*hidden12 = attributesItem.PaymentMethodRelationAttribute.Hidden.ValueBool()
				} else {
					hidden12 = nil
				}
				showInTable12 := new(bool)
				if !attributesItem.PaymentMethodRelationAttribute.ShowInTable.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.ShowInTable.IsNull() {
					*showInTable12 = attributesItem.PaymentMethodRelationAttribute.ShowInTable.ValueBool()
				} else {
					showInTable12 = nil
				}
				sortable12 := new(bool)
				if !attributesItem.PaymentMethodRelationAttribute.Sortable.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.Sortable.IsNull() {
					*sortable12 = attributesItem.PaymentMethodRelationAttribute.Sortable.ValueBool()
				} else {
					sortable12 = nil
				}
				required12 := new(bool)
				if !attributesItem.PaymentMethodRelationAttribute.Required.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.Required.IsNull() {
					*required12 = attributesItem.PaymentMethodRelationAttribute.Required.ValueBool()
				} else {
					required12 = nil
				}
				readonly12 := new(bool)
				if !attributesItem.PaymentMethodRelationAttribute.Readonly.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.Readonly.IsNull() {
					*readonly12 = attributesItem.PaymentMethodRelationAttribute.Readonly.ValueBool()
				} else {
					readonly12 = nil
				}
				deprecated12 := new(bool)
				if !attributesItem.PaymentMethodRelationAttribute.Deprecated.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.Deprecated.IsNull() {
					*deprecated12 = attributesItem.PaymentMethodRelationAttribute.Deprecated.ValueBool()
				} else {
					deprecated12 = nil
				}
				var defaultValue12 interface{}
				if !attributesItem.PaymentMethodRelationAttribute.DefaultValue.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.DefaultValue.IsNull() {
					_ = json.Unmarshal([]byte(attributesItem.PaymentMethodRelationAttribute.DefaultValue.ValueString()), &defaultValue12)
				}
				group12 := new(string)
				if !attributesItem.PaymentMethodRelationAttribute.Group.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.Group.IsNull() {
					*group12 = attributesItem.PaymentMethodRelationAttribute.Group.ValueString()
				} else {
					group12 = nil
				}
				order12 := new(int64)
				if !attributesItem.PaymentMethodRelationAttribute.Order.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.Order.IsNull() {
					*order12 = attributesItem.PaymentMethodRelationAttribute.Order.ValueInt64()
				} else {
					order12 = nil
				}
				layout12 := new(string)
				if !attributesItem.PaymentMethodRelationAttribute.Layout.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.Layout.IsNull() {
					*layout12 = attributesItem.PaymentMethodRelationAttribute.Layout.ValueString()
				} else {
					layout12 = nil
				}
				hideLabel12 := new(bool)
				if !attributesItem.PaymentMethodRelationAttribute.HideLabel.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.HideLabel.IsNull() {
					*hideLabel12 = attributesItem.PaymentMethodRelationAttribute.HideLabel.ValueBool()
				} else {
					hideLabel12 = nil
				}
				icon16 := new(string)
				if !attributesItem.PaymentMethodRelationAttribute.Icon.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.Icon.IsNull() {
					*icon16 = attributesItem.PaymentMethodRelationAttribute.Icon.ValueString()
				} else {
					icon16 = nil
				}
				renderCondition13 := new(string)
				if !attributesItem.PaymentMethodRelationAttribute.RenderCondition.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.RenderCondition.IsNull() {
					*renderCondition13 = attributesItem.PaymentMethodRelationAttribute.RenderCondition.ValueString()
				} else {
					renderCondition13 = nil
				}
				var purpose12 []string = []string{}
				for _, purposeItem12 := range attributesItem.PaymentMethodRelationAttribute.Purpose {
					purpose12 = append(purpose12, purposeItem12.ValueString())
				}
				var constraints12 *shared.PaymentMethodRelationAttributeConstraints
				if attributesItem.PaymentMethodRelationAttribute.Constraints != nil {
					constraints12 = &shared.PaymentMethodRelationAttributeConstraints{}
				}
				featureFlag15 := new(string)
				if !attributesItem.PaymentMethodRelationAttribute.FeatureFlag.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.FeatureFlag.IsNull() {
					*featureFlag15 = attributesItem.PaymentMethodRelationAttribute.FeatureFlag.ValueString()
				} else {
					featureFlag15 = nil
				}
				var settingsFlag14 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem14 := range attributesItem.PaymentMethodRelationAttribute.SettingsFlag {
					name29 := new(string)
					if !settingsFlagItem14.Name.IsUnknown() && !settingsFlagItem14.Name.IsNull() {
						*name29 = settingsFlagItem14.Name.ValueString()
					} else {
						name29 = nil
					}
					enabled14 := new(bool)
					if !settingsFlagItem14.Enabled.IsUnknown() && !settingsFlagItem14.Enabled.IsNull() {
						*enabled14 = settingsFlagItem14.Enabled.ValueBool()
					} else {
						enabled14 = nil
					}
					settingsFlag14 = append(settingsFlag14, shared.SettingFlag{
						Name:    name29,
						Enabled: enabled14,
					})
				}
				valueFormatter12 := new(string)
				if !attributesItem.PaymentMethodRelationAttribute.ValueFormatter.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.ValueFormatter.IsNull() {
					*valueFormatter12 = attributesItem.PaymentMethodRelationAttribute.ValueFormatter.ValueString()
				} else {
					valueFormatter12 = nil
				}
				previewValueFormatter12 := new(string)
				if !attributesItem.PaymentMethodRelationAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.PreviewValueFormatter.IsNull() {
					*previewValueFormatter12 = attributesItem.PaymentMethodRelationAttribute.PreviewValueFormatter.ValueString()
				} else {
					previewValueFormatter12 = nil
				}
				entityBuilderDisableEdit12 := new(bool)
				if !attributesItem.PaymentMethodRelationAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.EntityBuilderDisableEdit.IsNull() {
					*entityBuilderDisableEdit12 = attributesItem.PaymentMethodRelationAttribute.EntityBuilderDisableEdit.ValueBool()
				} else {
					entityBuilderDisableEdit12 = nil
				}
				protected12 := new(bool)
				if !attributesItem.PaymentMethodRelationAttribute.Protected.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.Protected.IsNull() {
					*protected12 = attributesItem.PaymentMethodRelationAttribute.Protected.ValueBool()
				} else {
					protected12 = nil
				}
				var infoHelpers12 *shared.PaymentMethodRelationAttributeInfoHelpers
				if attributesItem.PaymentMethodRelationAttribute.InfoHelpers != nil {
					hintText12 := new(string)
					if !attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintText.IsNull() {
						*hintText12 = attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintText.ValueString()
					} else {
						hintText12 = nil
					}
					hintTextKey12 := new(string)
					if !attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintTextKey.IsNull() {
						*hintTextKey12 = attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintTextKey.ValueString()
					} else {
						hintTextKey12 = nil
					}
					hintCustomComponent12 := new(string)
					if !attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintCustomComponent.IsNull() {
						*hintCustomComponent12 = attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintCustomComponent.ValueString()
					} else {
						hintCustomComponent12 = nil
					}
					hintTooltipPlacement12 := new(string)
					if !attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
						*hintTooltipPlacement12 = attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
					} else {
						hintTooltipPlacement12 = nil
					}
					infoHelpers12 = &shared.PaymentMethodRelationAttributeInfoHelpers{
						HintText:             hintText12,
						HintTextKey:          hintTextKey12,
						HintCustomComponent:  hintCustomComponent12,
						HintTooltipPlacement: hintTooltipPlacement12,
					}
				}
				typeVar13 := new(shared.PaymentMethodRelationAttributeType)
				if !attributesItem.PaymentMethodRelationAttribute.Type.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.Type.IsNull() {
					*typeVar13 = shared.PaymentMethodRelationAttributeType(attributesItem.PaymentMethodRelationAttribute.Type.ValueString())
				} else {
					typeVar13 = nil
				}
				hasPrimary2 := new(bool)
				if !attributesItem.PaymentMethodRelationAttribute.HasPrimary.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.HasPrimary.IsNull() {
					*hasPrimary2 = attributesItem.PaymentMethodRelationAttribute.HasPrimary.ValueBool()
				} else {
					hasPrimary2 = nil
				}
				paymentMethodRelationAttribute := shared.PaymentMethodRelationAttribute{
					ID:                       id16,
					Name:                     name28,
					Label:                    label18,
					Placeholder:              placeholder12,
					Hidden:                   hidden12,
					ShowInTable:              showInTable12,
					Sortable:                 sortable12,
					Required:                 required12,
					Readonly:                 readonly12,
					Deprecated:               deprecated12,
					DefaultValue:             defaultValue12,
					Group:                    group12,
					Order:                    order12,
					Layout:                   layout12,
					HideLabel:                hideLabel12,
					Icon:                     icon16,
					RenderCondition:          renderCondition13,
					Purpose:                  purpose12,
					Constraints:              constraints12,
					FeatureFlag:              featureFlag15,
					SettingsFlag:             settingsFlag14,
					ValueFormatter:           valueFormatter12,
					PreviewValueFormatter:    previewValueFormatter12,
					EntityBuilderDisableEdit: entityBuilderDisableEdit12,
					Protected:                protected12,
					InfoHelpers:              infoHelpers12,
					Type:                     typeVar13,
					HasPrimary:               hasPrimary2,
				}
				attributes = append(attributes, shared.AttributeInput{
					PaymentMethodRelationAttribute: &paymentMethodRelationAttribute,
				})
			}
			if attributesItem.CurrencyAttribute != nil {
				id17 := new(string)
				if !attributesItem.CurrencyAttribute.ID.IsUnknown() && !attributesItem.CurrencyAttribute.ID.IsNull() {
					*id17 = attributesItem.CurrencyAttribute.ID.ValueString()
				} else {
					id17 = nil
				}
				name30 := attributesItem.CurrencyAttribute.Name.ValueString()
				label19 := attributesItem.CurrencyAttribute.Label.ValueString()
				placeholder13 := new(string)
				if !attributesItem.CurrencyAttribute.Placeholder.IsUnknown() && !attributesItem.CurrencyAttribute.Placeholder.IsNull() {
					*placeholder13 = attributesItem.CurrencyAttribute.Placeholder.ValueString()
				} else {
					placeholder13 = nil
				}
				hidden13 := new(bool)
				if !attributesItem.CurrencyAttribute.Hidden.IsUnknown() && !attributesItem.CurrencyAttribute.Hidden.IsNull() {
					*hidden13 = attributesItem.CurrencyAttribute.Hidden.ValueBool()
				} else {
					hidden13 = nil
				}
				showInTable13 := new(bool)
				if !attributesItem.CurrencyAttribute.ShowInTable.IsUnknown() && !attributesItem.CurrencyAttribute.ShowInTable.IsNull() {
					*showInTable13 = attributesItem.CurrencyAttribute.ShowInTable.ValueBool()
				} else {
					showInTable13 = nil
				}
				sortable13 := new(bool)
				if !attributesItem.CurrencyAttribute.Sortable.IsUnknown() && !attributesItem.CurrencyAttribute.Sortable.IsNull() {
					*sortable13 = attributesItem.CurrencyAttribute.Sortable.ValueBool()
				} else {
					sortable13 = nil
				}
				required13 := new(bool)
				if !attributesItem.CurrencyAttribute.Required.IsUnknown() && !attributesItem.CurrencyAttribute.Required.IsNull() {
					*required13 = attributesItem.CurrencyAttribute.Required.ValueBool()
				} else {
					required13 = nil
				}
				readonly13 := new(bool)
				if !attributesItem.CurrencyAttribute.Readonly.IsUnknown() && !attributesItem.CurrencyAttribute.Readonly.IsNull() {
					*readonly13 = attributesItem.CurrencyAttribute.Readonly.ValueBool()
				} else {
					readonly13 = nil
				}
				deprecated13 := new(bool)
				if !attributesItem.CurrencyAttribute.Deprecated.IsUnknown() && !attributesItem.CurrencyAttribute.Deprecated.IsNull() {
					*deprecated13 = attributesItem.CurrencyAttribute.Deprecated.ValueBool()
				} else {
					deprecated13 = nil
				}
				var defaultValue13 interface{}
				if !attributesItem.CurrencyAttribute.DefaultValue.IsUnknown() && !attributesItem.CurrencyAttribute.DefaultValue.IsNull() {
					_ = json.Unmarshal([]byte(attributesItem.CurrencyAttribute.DefaultValue.ValueString()), &defaultValue13)
				}
				group13 := new(string)
				if !attributesItem.CurrencyAttribute.Group.IsUnknown() && !attributesItem.CurrencyAttribute.Group.IsNull() {
					*group13 = attributesItem.CurrencyAttribute.Group.ValueString()
				} else {
					group13 = nil
				}
				order13 := new(int64)
				if !attributesItem.CurrencyAttribute.Order.IsUnknown() && !attributesItem.CurrencyAttribute.Order.IsNull() {
					*order13 = attributesItem.CurrencyAttribute.Order.ValueInt64()
				} else {
					order13 = nil
				}
				layout13 := new(string)
				if !attributesItem.CurrencyAttribute.Layout.IsUnknown() && !attributesItem.CurrencyAttribute.Layout.IsNull() {
					*layout13 = attributesItem.CurrencyAttribute.Layout.ValueString()
				} else {
					layout13 = nil
				}
				hideLabel13 := new(bool)
				if !attributesItem.CurrencyAttribute.HideLabel.IsUnknown() && !attributesItem.CurrencyAttribute.HideLabel.IsNull() {
					*hideLabel13 = attributesItem.CurrencyAttribute.HideLabel.ValueBool()
				} else {
					hideLabel13 = nil
				}
				icon17 := new(string)
				if !attributesItem.CurrencyAttribute.Icon.IsUnknown() && !attributesItem.CurrencyAttribute.Icon.IsNull() {
					*icon17 = attributesItem.CurrencyAttribute.Icon.ValueString()
				} else {
					icon17 = nil
				}
				renderCondition14 := new(string)
				if !attributesItem.CurrencyAttribute.RenderCondition.IsUnknown() && !attributesItem.CurrencyAttribute.RenderCondition.IsNull() {
					*renderCondition14 = attributesItem.CurrencyAttribute.RenderCondition.ValueString()
				} else {
					renderCondition14 = nil
				}
				var purpose13 []string = []string{}
				for _, purposeItem13 := range attributesItem.CurrencyAttribute.Purpose {
					purpose13 = append(purpose13, purposeItem13.ValueString())
				}
				var constraints13 *shared.CurrencyAttributeConstraints
				if attributesItem.CurrencyAttribute.Constraints != nil {
					constraints13 = &shared.CurrencyAttributeConstraints{}
				}
				featureFlag16 := new(string)
				if !attributesItem.CurrencyAttribute.FeatureFlag.IsUnknown() && !attributesItem.CurrencyAttribute.FeatureFlag.IsNull() {
					*featureFlag16 = attributesItem.CurrencyAttribute.FeatureFlag.ValueString()
				} else {
					featureFlag16 = nil
				}
				var settingsFlag15 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem15 := range attributesItem.CurrencyAttribute.SettingsFlag {
					name31 := new(string)
					if !settingsFlagItem15.Name.IsUnknown() && !settingsFlagItem15.Name.IsNull() {
						*name31 = settingsFlagItem15.Name.ValueString()
					} else {
						name31 = nil
					}
					enabled15 := new(bool)
					if !settingsFlagItem15.Enabled.IsUnknown() && !settingsFlagItem15.Enabled.IsNull() {
						*enabled15 = settingsFlagItem15.Enabled.ValueBool()
					} else {
						enabled15 = nil
					}
					settingsFlag15 = append(settingsFlag15, shared.SettingFlag{
						Name:    name31,
						Enabled: enabled15,
					})
				}
				valueFormatter13 := new(string)
				if !attributesItem.CurrencyAttribute.ValueFormatter.IsUnknown() && !attributesItem.CurrencyAttribute.ValueFormatter.IsNull() {
					*valueFormatter13 = attributesItem.CurrencyAttribute.ValueFormatter.ValueString()
				} else {
					valueFormatter13 = nil
				}
				previewValueFormatter13 := new(string)
				if !attributesItem.CurrencyAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.CurrencyAttribute.PreviewValueFormatter.IsNull() {
					*previewValueFormatter13 = attributesItem.CurrencyAttribute.PreviewValueFormatter.ValueString()
				} else {
					previewValueFormatter13 = nil
				}
				entityBuilderDisableEdit13 := new(bool)
				if !attributesItem.CurrencyAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.CurrencyAttribute.EntityBuilderDisableEdit.IsNull() {
					*entityBuilderDisableEdit13 = attributesItem.CurrencyAttribute.EntityBuilderDisableEdit.ValueBool()
				} else {
					entityBuilderDisableEdit13 = nil
				}
				protected13 := new(bool)
				if !attributesItem.CurrencyAttribute.Protected.IsUnknown() && !attributesItem.CurrencyAttribute.Protected.IsNull() {
					*protected13 = attributesItem.CurrencyAttribute.Protected.ValueBool()
				} else {
					protected13 = nil
				}
				var infoHelpers13 *shared.CurrencyAttributeInfoHelpers
				if attributesItem.CurrencyAttribute.InfoHelpers != nil {
					hintText13 := new(string)
					if !attributesItem.CurrencyAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.CurrencyAttribute.InfoHelpers.HintText.IsNull() {
						*hintText13 = attributesItem.CurrencyAttribute.InfoHelpers.HintText.ValueString()
					} else {
						hintText13 = nil
					}
					hintTextKey13 := new(string)
					if !attributesItem.CurrencyAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.CurrencyAttribute.InfoHelpers.HintTextKey.IsNull() {
						*hintTextKey13 = attributesItem.CurrencyAttribute.InfoHelpers.HintTextKey.ValueString()
					} else {
						hintTextKey13 = nil
					}
					hintCustomComponent13 := new(string)
					if !attributesItem.CurrencyAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.CurrencyAttribute.InfoHelpers.HintCustomComponent.IsNull() {
						*hintCustomComponent13 = attributesItem.CurrencyAttribute.InfoHelpers.HintCustomComponent.ValueString()
					} else {
						hintCustomComponent13 = nil
					}
					hintTooltipPlacement13 := new(string)
					if !attributesItem.CurrencyAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.CurrencyAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
						*hintTooltipPlacement13 = attributesItem.CurrencyAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
					} else {
						hintTooltipPlacement13 = nil
					}
					infoHelpers13 = &shared.CurrencyAttributeInfoHelpers{
						HintText:             hintText13,
						HintTextKey:          hintTextKey13,
						HintCustomComponent:  hintCustomComponent13,
						HintTooltipPlacement: hintTooltipPlacement13,
					}
				}
				typeVar14 := shared.CurrencyAttributeType(attributesItem.CurrencyAttribute.Type.ValueString())
				currencySelectorOnly := new(bool)
				if !attributesItem.CurrencyAttribute.CurrencySelectorOnly.IsUnknown() && !attributesItem.CurrencyAttribute.CurrencySelectorOnly.IsNull() {
					*currencySelectorOnly = attributesItem.CurrencyAttribute.CurrencySelectorOnly.ValueBool()
				} else {
					currencySelectorOnly = nil
				}
				var currency []shared.Currency = []shared.Currency{}
				for _, currencyItem := range attributesItem.CurrencyAttribute.Currency {
					if currencyItem.One != nil {
						code := currencyItem.One.Code.ValueString()
						description := currencyItem.One.Description.ValueString()
						symbol := currencyItem.One.Symbol.ValueString()
						flag := new(string)
						if !currencyItem.One.Flag.IsUnknown() && !currencyItem.One.Flag.IsNull() {
							*flag = currencyItem.One.Flag.ValueString()
						} else {
							flag = nil
						}
						one := shared.One{
							Code:        code,
							Description: description,
							Symbol:      symbol,
							Flag:        flag,
						}
						currency = append(currency, shared.Currency{
							One: &one,
						})
					}
				}
				currencyAttribute := shared.CurrencyAttribute{
					ID:                       id17,
					Name:                     name30,
					Label:                    label19,
					Placeholder:              placeholder13,
					Hidden:                   hidden13,
					ShowInTable:              showInTable13,
					Sortable:                 sortable13,
					Required:                 required13,
					Readonly:                 readonly13,
					Deprecated:               deprecated13,
					DefaultValue:             defaultValue13,
					Group:                    group13,
					Order:                    order13,
					Layout:                   layout13,
					HideLabel:                hideLabel13,
					Icon:                     icon17,
					RenderCondition:          renderCondition14,
					Purpose:                  purpose13,
					Constraints:              constraints13,
					FeatureFlag:              featureFlag16,
					SettingsFlag:             settingsFlag15,
					ValueFormatter:           valueFormatter13,
					PreviewValueFormatter:    previewValueFormatter13,
					EntityBuilderDisableEdit: entityBuilderDisableEdit13,
					Protected:                protected13,
					InfoHelpers:              infoHelpers13,
					Type:                     typeVar14,
					CurrencySelectorOnly:     currencySelectorOnly,
					Currency:                 currency,
				}
				attributes = append(attributes, shared.AttributeInput{
					CurrencyAttribute: &currencyAttribute,
				})
			}
			if attributesItem.RepeatableAttribute != nil {
				id18 := new(string)
				if !attributesItem.RepeatableAttribute.ID.IsUnknown() && !attributesItem.RepeatableAttribute.ID.IsNull() {
					*id18 = attributesItem.RepeatableAttribute.ID.ValueString()
				} else {
					id18 = nil
				}
				name32 := attributesItem.RepeatableAttribute.Name.ValueString()
				label20 := attributesItem.RepeatableAttribute.Label.ValueString()
				placeholder14 := new(string)
				if !attributesItem.RepeatableAttribute.Placeholder.IsUnknown() && !attributesItem.RepeatableAttribute.Placeholder.IsNull() {
					*placeholder14 = attributesItem.RepeatableAttribute.Placeholder.ValueString()
				} else {
					placeholder14 = nil
				}
				hidden14 := new(bool)
				if !attributesItem.RepeatableAttribute.Hidden.IsUnknown() && !attributesItem.RepeatableAttribute.Hidden.IsNull() {
					*hidden14 = attributesItem.RepeatableAttribute.Hidden.ValueBool()
				} else {
					hidden14 = nil
				}
				showInTable14 := new(bool)
				if !attributesItem.RepeatableAttribute.ShowInTable.IsUnknown() && !attributesItem.RepeatableAttribute.ShowInTable.IsNull() {
					*showInTable14 = attributesItem.RepeatableAttribute.ShowInTable.ValueBool()
				} else {
					showInTable14 = nil
				}
				sortable14 := new(bool)
				if !attributesItem.RepeatableAttribute.Sortable.IsUnknown() && !attributesItem.RepeatableAttribute.Sortable.IsNull() {
					*sortable14 = attributesItem.RepeatableAttribute.Sortable.ValueBool()
				} else {
					sortable14 = nil
				}
				required14 := new(bool)
				if !attributesItem.RepeatableAttribute.Required.IsUnknown() && !attributesItem.RepeatableAttribute.Required.IsNull() {
					*required14 = attributesItem.RepeatableAttribute.Required.ValueBool()
				} else {
					required14 = nil
				}
				readonly14 := new(bool)
				if !attributesItem.RepeatableAttribute.Readonly.IsUnknown() && !attributesItem.RepeatableAttribute.Readonly.IsNull() {
					*readonly14 = attributesItem.RepeatableAttribute.Readonly.ValueBool()
				} else {
					readonly14 = nil
				}
				deprecated14 := new(bool)
				if !attributesItem.RepeatableAttribute.Deprecated.IsUnknown() && !attributesItem.RepeatableAttribute.Deprecated.IsNull() {
					*deprecated14 = attributesItem.RepeatableAttribute.Deprecated.ValueBool()
				} else {
					deprecated14 = nil
				}
				var defaultValue14 interface{}
				if !attributesItem.RepeatableAttribute.DefaultValue.IsUnknown() && !attributesItem.RepeatableAttribute.DefaultValue.IsNull() {
					_ = json.Unmarshal([]byte(attributesItem.RepeatableAttribute.DefaultValue.ValueString()), &defaultValue14)
				}
				group14 := new(string)
				if !attributesItem.RepeatableAttribute.Group.IsUnknown() && !attributesItem.RepeatableAttribute.Group.IsNull() {
					*group14 = attributesItem.RepeatableAttribute.Group.ValueString()
				} else {
					group14 = nil
				}
				order14 := new(int64)
				if !attributesItem.RepeatableAttribute.Order.IsUnknown() && !attributesItem.RepeatableAttribute.Order.IsNull() {
					*order14 = attributesItem.RepeatableAttribute.Order.ValueInt64()
				} else {
					order14 = nil
				}
				layout14 := new(string)
				if !attributesItem.RepeatableAttribute.Layout.IsUnknown() && !attributesItem.RepeatableAttribute.Layout.IsNull() {
					*layout14 = attributesItem.RepeatableAttribute.Layout.ValueString()
				} else {
					layout14 = nil
				}
				hideLabel14 := new(bool)
				if !attributesItem.RepeatableAttribute.HideLabel.IsUnknown() && !attributesItem.RepeatableAttribute.HideLabel.IsNull() {
					*hideLabel14 = attributesItem.RepeatableAttribute.HideLabel.ValueBool()
				} else {
					hideLabel14 = nil
				}
				icon18 := new(string)
				if !attributesItem.RepeatableAttribute.Icon.IsUnknown() && !attributesItem.RepeatableAttribute.Icon.IsNull() {
					*icon18 = attributesItem.RepeatableAttribute.Icon.ValueString()
				} else {
					icon18 = nil
				}
				renderCondition15 := new(string)
				if !attributesItem.RepeatableAttribute.RenderCondition.IsUnknown() && !attributesItem.RepeatableAttribute.RenderCondition.IsNull() {
					*renderCondition15 = attributesItem.RepeatableAttribute.RenderCondition.ValueString()
				} else {
					renderCondition15 = nil
				}
				var purpose14 []string = []string{}
				for _, purposeItem14 := range attributesItem.RepeatableAttribute.Purpose {
					purpose14 = append(purpose14, purposeItem14.ValueString())
				}
				var constraints14 *shared.RepeatableAttributeConstraints
				if attributesItem.RepeatableAttribute.Constraints != nil {
					constraints14 = &shared.RepeatableAttributeConstraints{}
				}
				featureFlag17 := new(string)
				if !attributesItem.RepeatableAttribute.FeatureFlag.IsUnknown() && !attributesItem.RepeatableAttribute.FeatureFlag.IsNull() {
					*featureFlag17 = attributesItem.RepeatableAttribute.FeatureFlag.ValueString()
				} else {
					featureFlag17 = nil
				}
				var settingsFlag16 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem16 := range attributesItem.RepeatableAttribute.SettingsFlag {
					name33 := new(string)
					if !settingsFlagItem16.Name.IsUnknown() && !settingsFlagItem16.Name.IsNull() {
						*name33 = settingsFlagItem16.Name.ValueString()
					} else {
						name33 = nil
					}
					enabled16 := new(bool)
					if !settingsFlagItem16.Enabled.IsUnknown() && !settingsFlagItem16.Enabled.IsNull() {
						*enabled16 = settingsFlagItem16.Enabled.ValueBool()
					} else {
						enabled16 = nil
					}
					settingsFlag16 = append(settingsFlag16, shared.SettingFlag{
						Name:    name33,
						Enabled: enabled16,
					})
				}
				valueFormatter14 := new(string)
				if !attributesItem.RepeatableAttribute.ValueFormatter.IsUnknown() && !attributesItem.RepeatableAttribute.ValueFormatter.IsNull() {
					*valueFormatter14 = attributesItem.RepeatableAttribute.ValueFormatter.ValueString()
				} else {
					valueFormatter14 = nil
				}
				previewValueFormatter14 := new(string)
				if !attributesItem.RepeatableAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.RepeatableAttribute.PreviewValueFormatter.IsNull() {
					*previewValueFormatter14 = attributesItem.RepeatableAttribute.PreviewValueFormatter.ValueString()
				} else {
					previewValueFormatter14 = nil
				}
				entityBuilderDisableEdit14 := new(bool)
				if !attributesItem.RepeatableAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.RepeatableAttribute.EntityBuilderDisableEdit.IsNull() {
					*entityBuilderDisableEdit14 = attributesItem.RepeatableAttribute.EntityBuilderDisableEdit.ValueBool()
				} else {
					entityBuilderDisableEdit14 = nil
				}
				protected14 := new(bool)
				if !attributesItem.RepeatableAttribute.Protected.IsUnknown() && !attributesItem.RepeatableAttribute.Protected.IsNull() {
					*protected14 = attributesItem.RepeatableAttribute.Protected.ValueBool()
				} else {
					protected14 = nil
				}
				var infoHelpers14 *shared.RepeatableAttributeInfoHelpers
				if attributesItem.RepeatableAttribute.InfoHelpers != nil {
					hintText14 := new(string)
					if !attributesItem.RepeatableAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.RepeatableAttribute.InfoHelpers.HintText.IsNull() {
						*hintText14 = attributesItem.RepeatableAttribute.InfoHelpers.HintText.ValueString()
					} else {
						hintText14 = nil
					}
					hintTextKey14 := new(string)
					if !attributesItem.RepeatableAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.RepeatableAttribute.InfoHelpers.HintTextKey.IsNull() {
						*hintTextKey14 = attributesItem.RepeatableAttribute.InfoHelpers.HintTextKey.ValueString()
					} else {
						hintTextKey14 = nil
					}
					hintCustomComponent14 := new(string)
					if !attributesItem.RepeatableAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.RepeatableAttribute.InfoHelpers.HintCustomComponent.IsNull() {
						*hintCustomComponent14 = attributesItem.RepeatableAttribute.InfoHelpers.HintCustomComponent.ValueString()
					} else {
						hintCustomComponent14 = nil
					}
					hintTooltipPlacement14 := new(string)
					if !attributesItem.RepeatableAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.RepeatableAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
						*hintTooltipPlacement14 = attributesItem.RepeatableAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
					} else {
						hintTooltipPlacement14 = nil
					}
					infoHelpers14 = &shared.RepeatableAttributeInfoHelpers{
						HintText:             hintText14,
						HintTextKey:          hintTextKey14,
						HintCustomComponent:  hintCustomComponent14,
						HintTooltipPlacement: hintTooltipPlacement14,
					}
				}
				repeatable := new(bool)
				if !attributesItem.RepeatableAttribute.Repeatable.IsUnknown() && !attributesItem.RepeatableAttribute.Repeatable.IsNull() {
					*repeatable = attributesItem.RepeatableAttribute.Repeatable.ValueBool()
				} else {
					repeatable = nil
				}
				hasPrimary3 := new(bool)
				if !attributesItem.RepeatableAttribute.HasPrimary.IsUnknown() && !attributesItem.RepeatableAttribute.HasPrimary.IsNull() {
					*hasPrimary3 = attributesItem.RepeatableAttribute.HasPrimary.ValueBool()
				} else {
					hasPrimary3 = nil
				}
				relationAffinityMode1 := new(shared.RepeatableAttributeRelationAffinityMode)
				if !attributesItem.RepeatableAttribute.RelationAffinityMode.IsUnknown() && !attributesItem.RepeatableAttribute.RelationAffinityMode.IsNull() {
					*relationAffinityMode1 = shared.RepeatableAttributeRelationAffinityMode(attributesItem.RepeatableAttribute.RelationAffinityMode.ValueString())
				} else {
					relationAffinityMode1 = nil
				}
				typeVar15 := new(shared.RepeatableAttributeType)
				if !attributesItem.RepeatableAttribute.Type.IsUnknown() && !attributesItem.RepeatableAttribute.Type.IsNull() {
					*typeVar15 = shared.RepeatableAttributeType(attributesItem.RepeatableAttribute.Type.ValueString())
				} else {
					typeVar15 = nil
				}
				enableRelationPicker1 := new(bool)
				if !attributesItem.RepeatableAttribute.EnableRelationPicker.IsUnknown() && !attributesItem.RepeatableAttribute.EnableRelationPicker.IsNull() {
					*enableRelationPicker1 = attributesItem.RepeatableAttribute.EnableRelationPicker.ValueBool()
				} else {
					enableRelationPicker1 = nil
				}
				repeatableAttribute := shared.RepeatableAttribute{
					ID:                       id18,
					Name:                     name32,
					Label:                    label20,
					Placeholder:              placeholder14,
					Hidden:                   hidden14,
					ShowInTable:              showInTable14,
					Sortable:                 sortable14,
					Required:                 required14,
					Readonly:                 readonly14,
					Deprecated:               deprecated14,
					DefaultValue:             defaultValue14,
					Group:                    group14,
					Order:                    order14,
					Layout:                   layout14,
					HideLabel:                hideLabel14,
					Icon:                     icon18,
					RenderCondition:          renderCondition15,
					Purpose:                  purpose14,
					Constraints:              constraints14,
					FeatureFlag:              featureFlag17,
					SettingsFlag:             settingsFlag16,
					ValueFormatter:           valueFormatter14,
					PreviewValueFormatter:    previewValueFormatter14,
					EntityBuilderDisableEdit: entityBuilderDisableEdit14,
					Protected:                protected14,
					InfoHelpers:              infoHelpers14,
					Repeatable:               repeatable,
					HasPrimary:               hasPrimary3,
					RelationAffinityMode:     relationAffinityMode1,
					Type:                     typeVar15,
					EnableRelationPicker:     enableRelationPicker1,
				}
				attributes = append(attributes, shared.AttributeInput{
					RepeatableAttribute: &repeatableAttribute,
				})
			}
			if attributesItem.TagsAttribute != nil {
				id19 := new(string)
				if !attributesItem.TagsAttribute.ID.IsUnknown() && !attributesItem.TagsAttribute.ID.IsNull() {
					*id19 = attributesItem.TagsAttribute.ID.ValueString()
				} else {
					id19 = nil
				}
				name34 := attributesItem.TagsAttribute.Name.ValueString()
				label21 := attributesItem.TagsAttribute.Label.ValueString()
				placeholder15 := new(string)
				if !attributesItem.TagsAttribute.Placeholder.IsUnknown() && !attributesItem.TagsAttribute.Placeholder.IsNull() {
					*placeholder15 = attributesItem.TagsAttribute.Placeholder.ValueString()
				} else {
					placeholder15 = nil
				}
				hidden15 := new(bool)
				if !attributesItem.TagsAttribute.Hidden.IsUnknown() && !attributesItem.TagsAttribute.Hidden.IsNull() {
					*hidden15 = attributesItem.TagsAttribute.Hidden.ValueBool()
				} else {
					hidden15 = nil
				}
				showInTable15 := new(bool)
				if !attributesItem.TagsAttribute.ShowInTable.IsUnknown() && !attributesItem.TagsAttribute.ShowInTable.IsNull() {
					*showInTable15 = attributesItem.TagsAttribute.ShowInTable.ValueBool()
				} else {
					showInTable15 = nil
				}
				sortable15 := new(bool)
				if !attributesItem.TagsAttribute.Sortable.IsUnknown() && !attributesItem.TagsAttribute.Sortable.IsNull() {
					*sortable15 = attributesItem.TagsAttribute.Sortable.ValueBool()
				} else {
					sortable15 = nil
				}
				required15 := new(bool)
				if !attributesItem.TagsAttribute.Required.IsUnknown() && !attributesItem.TagsAttribute.Required.IsNull() {
					*required15 = attributesItem.TagsAttribute.Required.ValueBool()
				} else {
					required15 = nil
				}
				readonly15 := new(bool)
				if !attributesItem.TagsAttribute.Readonly.IsUnknown() && !attributesItem.TagsAttribute.Readonly.IsNull() {
					*readonly15 = attributesItem.TagsAttribute.Readonly.ValueBool()
				} else {
					readonly15 = nil
				}
				deprecated15 := new(bool)
				if !attributesItem.TagsAttribute.Deprecated.IsUnknown() && !attributesItem.TagsAttribute.Deprecated.IsNull() {
					*deprecated15 = attributesItem.TagsAttribute.Deprecated.ValueBool()
				} else {
					deprecated15 = nil
				}
				var defaultValue15 interface{}
				if !attributesItem.TagsAttribute.DefaultValue.IsUnknown() && !attributesItem.TagsAttribute.DefaultValue.IsNull() {
					_ = json.Unmarshal([]byte(attributesItem.TagsAttribute.DefaultValue.ValueString()), &defaultValue15)
				}
				group15 := new(string)
				if !attributesItem.TagsAttribute.Group.IsUnknown() && !attributesItem.TagsAttribute.Group.IsNull() {
					*group15 = attributesItem.TagsAttribute.Group.ValueString()
				} else {
					group15 = nil
				}
				order15 := new(int64)
				if !attributesItem.TagsAttribute.Order.IsUnknown() && !attributesItem.TagsAttribute.Order.IsNull() {
					*order15 = attributesItem.TagsAttribute.Order.ValueInt64()
				} else {
					order15 = nil
				}
				layout15 := new(string)
				if !attributesItem.TagsAttribute.Layout.IsUnknown() && !attributesItem.TagsAttribute.Layout.IsNull() {
					*layout15 = attributesItem.TagsAttribute.Layout.ValueString()
				} else {
					layout15 = nil
				}
				hideLabel15 := new(bool)
				if !attributesItem.TagsAttribute.HideLabel.IsUnknown() && !attributesItem.TagsAttribute.HideLabel.IsNull() {
					*hideLabel15 = attributesItem.TagsAttribute.HideLabel.ValueBool()
				} else {
					hideLabel15 = nil
				}
				icon19 := new(string)
				if !attributesItem.TagsAttribute.Icon.IsUnknown() && !attributesItem.TagsAttribute.Icon.IsNull() {
					*icon19 = attributesItem.TagsAttribute.Icon.ValueString()
				} else {
					icon19 = nil
				}
				renderCondition16 := new(string)
				if !attributesItem.TagsAttribute.RenderCondition.IsUnknown() && !attributesItem.TagsAttribute.RenderCondition.IsNull() {
					*renderCondition16 = attributesItem.TagsAttribute.RenderCondition.ValueString()
				} else {
					renderCondition16 = nil
				}
				var purpose15 []string = []string{}
				for _, purposeItem15 := range attributesItem.TagsAttribute.Purpose {
					purpose15 = append(purpose15, purposeItem15.ValueString())
				}
				var constraints15 *shared.TagsAttributeConstraints
				if attributesItem.TagsAttribute.Constraints != nil {
					constraints15 = &shared.TagsAttributeConstraints{}
				}
				featureFlag18 := new(string)
				if !attributesItem.TagsAttribute.FeatureFlag.IsUnknown() && !attributesItem.TagsAttribute.FeatureFlag.IsNull() {
					*featureFlag18 = attributesItem.TagsAttribute.FeatureFlag.ValueString()
				} else {
					featureFlag18 = nil
				}
				var settingsFlag17 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem17 := range attributesItem.TagsAttribute.SettingsFlag {
					name35 := new(string)
					if !settingsFlagItem17.Name.IsUnknown() && !settingsFlagItem17.Name.IsNull() {
						*name35 = settingsFlagItem17.Name.ValueString()
					} else {
						name35 = nil
					}
					enabled17 := new(bool)
					if !settingsFlagItem17.Enabled.IsUnknown() && !settingsFlagItem17.Enabled.IsNull() {
						*enabled17 = settingsFlagItem17.Enabled.ValueBool()
					} else {
						enabled17 = nil
					}
					settingsFlag17 = append(settingsFlag17, shared.SettingFlag{
						Name:    name35,
						Enabled: enabled17,
					})
				}
				valueFormatter15 := new(string)
				if !attributesItem.TagsAttribute.ValueFormatter.IsUnknown() && !attributesItem.TagsAttribute.ValueFormatter.IsNull() {
					*valueFormatter15 = attributesItem.TagsAttribute.ValueFormatter.ValueString()
				} else {
					valueFormatter15 = nil
				}
				previewValueFormatter15 := new(string)
				if !attributesItem.TagsAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.TagsAttribute.PreviewValueFormatter.IsNull() {
					*previewValueFormatter15 = attributesItem.TagsAttribute.PreviewValueFormatter.ValueString()
				} else {
					previewValueFormatter15 = nil
				}
				entityBuilderDisableEdit15 := new(bool)
				if !attributesItem.TagsAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.TagsAttribute.EntityBuilderDisableEdit.IsNull() {
					*entityBuilderDisableEdit15 = attributesItem.TagsAttribute.EntityBuilderDisableEdit.ValueBool()
				} else {
					entityBuilderDisableEdit15 = nil
				}
				protected15 := new(bool)
				if !attributesItem.TagsAttribute.Protected.IsUnknown() && !attributesItem.TagsAttribute.Protected.IsNull() {
					*protected15 = attributesItem.TagsAttribute.Protected.ValueBool()
				} else {
					protected15 = nil
				}
				var infoHelpers15 *shared.TagsAttributeInfoHelpers
				if attributesItem.TagsAttribute.InfoHelpers != nil {
					hintText15 := new(string)
					if !attributesItem.TagsAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.TagsAttribute.InfoHelpers.HintText.IsNull() {
						*hintText15 = attributesItem.TagsAttribute.InfoHelpers.HintText.ValueString()
					} else {
						hintText15 = nil
					}
					hintTextKey15 := new(string)
					if !attributesItem.TagsAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.TagsAttribute.InfoHelpers.HintTextKey.IsNull() {
						*hintTextKey15 = attributesItem.TagsAttribute.InfoHelpers.HintTextKey.ValueString()
					} else {
						hintTextKey15 = nil
					}
					hintCustomComponent15 := new(string)
					if !attributesItem.TagsAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.TagsAttribute.InfoHelpers.HintCustomComponent.IsNull() {
						*hintCustomComponent15 = attributesItem.TagsAttribute.InfoHelpers.HintCustomComponent.ValueString()
					} else {
						hintCustomComponent15 = nil
					}
					hintTooltipPlacement15 := new(string)
					if !attributesItem.TagsAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.TagsAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
						*hintTooltipPlacement15 = attributesItem.TagsAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
					} else {
						hintTooltipPlacement15 = nil
					}
					infoHelpers15 = &shared.TagsAttributeInfoHelpers{
						HintText:             hintText15,
						HintTextKey:          hintTextKey15,
						HintCustomComponent:  hintCustomComponent15,
						HintTooltipPlacement: hintTooltipPlacement15,
					}
				}
				typeVar16 := new(shared.TagsAttributeType)
				if !attributesItem.TagsAttribute.Type.IsUnknown() && !attributesItem.TagsAttribute.Type.IsNull() {
					*typeVar16 = shared.TagsAttributeType(attributesItem.TagsAttribute.Type.ValueString())
				} else {
					typeVar16 = nil
				}
				var optionsVar4 []string = []string{}
				for _, optionsItem3 := range attributesItem.TagsAttribute.Options {
					optionsVar4 = append(optionsVar4, optionsItem3.ValueString())
				}
				var suggestions []string = []string{}
				for _, suggestionsItem := range attributesItem.TagsAttribute.Suggestions {
					suggestions = append(suggestions, suggestionsItem.ValueString())
				}
				tagsAttribute := shared.TagsAttribute{
					ID:                       id19,
					Name:                     name34,
					Label:                    label21,
					Placeholder:              placeholder15,
					Hidden:                   hidden15,
					ShowInTable:              showInTable15,
					Sortable:                 sortable15,
					Required:                 required15,
					Readonly:                 readonly15,
					Deprecated:               deprecated15,
					DefaultValue:             defaultValue15,
					Group:                    group15,
					Order:                    order15,
					Layout:                   layout15,
					HideLabel:                hideLabel15,
					Icon:                     icon19,
					RenderCondition:          renderCondition16,
					Purpose:                  purpose15,
					Constraints:              constraints15,
					FeatureFlag:              featureFlag18,
					SettingsFlag:             settingsFlag17,
					ValueFormatter:           valueFormatter15,
					PreviewValueFormatter:    previewValueFormatter15,
					EntityBuilderDisableEdit: entityBuilderDisableEdit15,
					Protected:                protected15,
					InfoHelpers:              infoHelpers15,
					Type:                     typeVar16,
					Options:                  optionsVar4,
					Suggestions:              suggestions,
				}
				attributes = append(attributes, shared.AttributeInput{
					TagsAttribute: &tagsAttribute,
				})
			}
			if attributesItem.NumberAttribute != nil {
				id20 := new(string)
				if !attributesItem.NumberAttribute.ID.IsUnknown() && !attributesItem.NumberAttribute.ID.IsNull() {
					*id20 = attributesItem.NumberAttribute.ID.ValueString()
				} else {
					id20 = nil
				}
				name36 := attributesItem.NumberAttribute.Name.ValueString()
				label22 := attributesItem.NumberAttribute.Label.ValueString()
				placeholder16 := new(string)
				if !attributesItem.NumberAttribute.Placeholder.IsUnknown() && !attributesItem.NumberAttribute.Placeholder.IsNull() {
					*placeholder16 = attributesItem.NumberAttribute.Placeholder.ValueString()
				} else {
					placeholder16 = nil
				}
				hidden16 := new(bool)
				if !attributesItem.NumberAttribute.Hidden.IsUnknown() && !attributesItem.NumberAttribute.Hidden.IsNull() {
					*hidden16 = attributesItem.NumberAttribute.Hidden.ValueBool()
				} else {
					hidden16 = nil
				}
				showInTable16 := new(bool)
				if !attributesItem.NumberAttribute.ShowInTable.IsUnknown() && !attributesItem.NumberAttribute.ShowInTable.IsNull() {
					*showInTable16 = attributesItem.NumberAttribute.ShowInTable.ValueBool()
				} else {
					showInTable16 = nil
				}
				sortable16 := new(bool)
				if !attributesItem.NumberAttribute.Sortable.IsUnknown() && !attributesItem.NumberAttribute.Sortable.IsNull() {
					*sortable16 = attributesItem.NumberAttribute.Sortable.ValueBool()
				} else {
					sortable16 = nil
				}
				required16 := new(bool)
				if !attributesItem.NumberAttribute.Required.IsUnknown() && !attributesItem.NumberAttribute.Required.IsNull() {
					*required16 = attributesItem.NumberAttribute.Required.ValueBool()
				} else {
					required16 = nil
				}
				readonly16 := new(bool)
				if !attributesItem.NumberAttribute.Readonly.IsUnknown() && !attributesItem.NumberAttribute.Readonly.IsNull() {
					*readonly16 = attributesItem.NumberAttribute.Readonly.ValueBool()
				} else {
					readonly16 = nil
				}
				deprecated16 := new(bool)
				if !attributesItem.NumberAttribute.Deprecated.IsUnknown() && !attributesItem.NumberAttribute.Deprecated.IsNull() {
					*deprecated16 = attributesItem.NumberAttribute.Deprecated.ValueBool()
				} else {
					deprecated16 = nil
				}
				var defaultValue16 interface{}
				if !attributesItem.NumberAttribute.DefaultValue.IsUnknown() && !attributesItem.NumberAttribute.DefaultValue.IsNull() {
					_ = json.Unmarshal([]byte(attributesItem.NumberAttribute.DefaultValue.ValueString()), &defaultValue16)
				}
				group16 := new(string)
				if !attributesItem.NumberAttribute.Group.IsUnknown() && !attributesItem.NumberAttribute.Group.IsNull() {
					*group16 = attributesItem.NumberAttribute.Group.ValueString()
				} else {
					group16 = nil
				}
				order16 := new(int64)
				if !attributesItem.NumberAttribute.Order.IsUnknown() && !attributesItem.NumberAttribute.Order.IsNull() {
					*order16 = attributesItem.NumberAttribute.Order.ValueInt64()
				} else {
					order16 = nil
				}
				layout16 := new(string)
				if !attributesItem.NumberAttribute.Layout.IsUnknown() && !attributesItem.NumberAttribute.Layout.IsNull() {
					*layout16 = attributesItem.NumberAttribute.Layout.ValueString()
				} else {
					layout16 = nil
				}
				hideLabel16 := new(bool)
				if !attributesItem.NumberAttribute.HideLabel.IsUnknown() && !attributesItem.NumberAttribute.HideLabel.IsNull() {
					*hideLabel16 = attributesItem.NumberAttribute.HideLabel.ValueBool()
				} else {
					hideLabel16 = nil
				}
				icon20 := new(string)
				if !attributesItem.NumberAttribute.Icon.IsUnknown() && !attributesItem.NumberAttribute.Icon.IsNull() {
					*icon20 = attributesItem.NumberAttribute.Icon.ValueString()
				} else {
					icon20 = nil
				}
				renderCondition17 := new(string)
				if !attributesItem.NumberAttribute.RenderCondition.IsUnknown() && !attributesItem.NumberAttribute.RenderCondition.IsNull() {
					*renderCondition17 = attributesItem.NumberAttribute.RenderCondition.ValueString()
				} else {
					renderCondition17 = nil
				}
				var purpose16 []string = []string{}
				for _, purposeItem16 := range attributesItem.NumberAttribute.Purpose {
					purpose16 = append(purpose16, purposeItem16.ValueString())
				}
				var constraints16 *shared.NumberAttributeConstraints
				if attributesItem.NumberAttribute.Constraints != nil {
					constraints16 = &shared.NumberAttributeConstraints{}
				}
				featureFlag19 := new(string)
				if !attributesItem.NumberAttribute.FeatureFlag.IsUnknown() && !attributesItem.NumberAttribute.FeatureFlag.IsNull() {
					*featureFlag19 = attributesItem.NumberAttribute.FeatureFlag.ValueString()
				} else {
					featureFlag19 = nil
				}
				var settingsFlag18 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem18 := range attributesItem.NumberAttribute.SettingsFlag {
					name37 := new(string)
					if !settingsFlagItem18.Name.IsUnknown() && !settingsFlagItem18.Name.IsNull() {
						*name37 = settingsFlagItem18.Name.ValueString()
					} else {
						name37 = nil
					}
					enabled18 := new(bool)
					if !settingsFlagItem18.Enabled.IsUnknown() && !settingsFlagItem18.Enabled.IsNull() {
						*enabled18 = settingsFlagItem18.Enabled.ValueBool()
					} else {
						enabled18 = nil
					}
					settingsFlag18 = append(settingsFlag18, shared.SettingFlag{
						Name:    name37,
						Enabled: enabled18,
					})
				}
				valueFormatter16 := new(string)
				if !attributesItem.NumberAttribute.ValueFormatter.IsUnknown() && !attributesItem.NumberAttribute.ValueFormatter.IsNull() {
					*valueFormatter16 = attributesItem.NumberAttribute.ValueFormatter.ValueString()
				} else {
					valueFormatter16 = nil
				}
				previewValueFormatter16 := new(string)
				if !attributesItem.NumberAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.NumberAttribute.PreviewValueFormatter.IsNull() {
					*previewValueFormatter16 = attributesItem.NumberAttribute.PreviewValueFormatter.ValueString()
				} else {
					previewValueFormatter16 = nil
				}
				entityBuilderDisableEdit16 := new(bool)
				if !attributesItem.NumberAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.NumberAttribute.EntityBuilderDisableEdit.IsNull() {
					*entityBuilderDisableEdit16 = attributesItem.NumberAttribute.EntityBuilderDisableEdit.ValueBool()
				} else {
					entityBuilderDisableEdit16 = nil
				}
				protected16 := new(bool)
				if !attributesItem.NumberAttribute.Protected.IsUnknown() && !attributesItem.NumberAttribute.Protected.IsNull() {
					*protected16 = attributesItem.NumberAttribute.Protected.ValueBool()
				} else {
					protected16 = nil
				}
				var infoHelpers16 *shared.NumberAttributeInfoHelpers
				if attributesItem.NumberAttribute.InfoHelpers != nil {
					hintText16 := new(string)
					if !attributesItem.NumberAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.NumberAttribute.InfoHelpers.HintText.IsNull() {
						*hintText16 = attributesItem.NumberAttribute.InfoHelpers.HintText.ValueString()
					} else {
						hintText16 = nil
					}
					hintTextKey16 := new(string)
					if !attributesItem.NumberAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.NumberAttribute.InfoHelpers.HintTextKey.IsNull() {
						*hintTextKey16 = attributesItem.NumberAttribute.InfoHelpers.HintTextKey.ValueString()
					} else {
						hintTextKey16 = nil
					}
					hintCustomComponent16 := new(string)
					if !attributesItem.NumberAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.NumberAttribute.InfoHelpers.HintCustomComponent.IsNull() {
						*hintCustomComponent16 = attributesItem.NumberAttribute.InfoHelpers.HintCustomComponent.ValueString()
					} else {
						hintCustomComponent16 = nil
					}
					hintTooltipPlacement16 := new(string)
					if !attributesItem.NumberAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.NumberAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
						*hintTooltipPlacement16 = attributesItem.NumberAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
					} else {
						hintTooltipPlacement16 = nil
					}
					infoHelpers16 = &shared.NumberAttributeInfoHelpers{
						HintText:             hintText16,
						HintTextKey:          hintTextKey16,
						HintCustomComponent:  hintCustomComponent16,
						HintTooltipPlacement: hintTooltipPlacement16,
					}
				}
				typeVar17 := new(shared.NumberAttributeType)
				if !attributesItem.NumberAttribute.Type.IsUnknown() && !attributesItem.NumberAttribute.Type.IsNull() {
					*typeVar17 = shared.NumberAttributeType(attributesItem.NumberAttribute.Type.ValueString())
				} else {
					typeVar17 = nil
				}
				format := new(string)
				if !attributesItem.NumberAttribute.Format.IsUnknown() && !attributesItem.NumberAttribute.Format.IsNull() {
					*format = attributesItem.NumberAttribute.Format.ValueString()
				} else {
					format = nil
				}
				showSeparator := new(bool)
				if !attributesItem.NumberAttribute.ShowSeparator.IsUnknown() && !attributesItem.NumberAttribute.ShowSeparator.IsNull() {
					*showSeparator = attributesItem.NumberAttribute.ShowSeparator.ValueBool()
				} else {
					showSeparator = nil
				}
				numberAttribute := shared.NumberAttribute{
					ID:                       id20,
					Name:                     name36,
					Label:                    label22,
					Placeholder:              placeholder16,
					Hidden:                   hidden16,
					ShowInTable:              showInTable16,
					Sortable:                 sortable16,
					Required:                 required16,
					Readonly:                 readonly16,
					Deprecated:               deprecated16,
					DefaultValue:             defaultValue16,
					Group:                    group16,
					Order:                    order16,
					Layout:                   layout16,
					HideLabel:                hideLabel16,
					Icon:                     icon20,
					RenderCondition:          renderCondition17,
					Purpose:                  purpose16,
					Constraints:              constraints16,
					FeatureFlag:              featureFlag19,
					SettingsFlag:             settingsFlag18,
					ValueFormatter:           valueFormatter16,
					PreviewValueFormatter:    previewValueFormatter16,
					EntityBuilderDisableEdit: entityBuilderDisableEdit16,
					Protected:                protected16,
					InfoHelpers:              infoHelpers16,
					Type:                     typeVar17,
					Format:                   format,
					ShowSeparator:            showSeparator,
				}
				attributes = append(attributes, shared.AttributeInput{
					NumberAttribute: &numberAttribute,
				})
			}
			if attributesItem.ConsentAttribute != nil {
				id21 := new(string)
				if !attributesItem.ConsentAttribute.ID.IsUnknown() && !attributesItem.ConsentAttribute.ID.IsNull() {
					*id21 = attributesItem.ConsentAttribute.ID.ValueString()
				} else {
					id21 = nil
				}
				name38 := attributesItem.ConsentAttribute.Name.ValueString()
				label23 := attributesItem.ConsentAttribute.Label.ValueString()
				placeholder17 := new(string)
				if !attributesItem.ConsentAttribute.Placeholder.IsUnknown() && !attributesItem.ConsentAttribute.Placeholder.IsNull() {
					*placeholder17 = attributesItem.ConsentAttribute.Placeholder.ValueString()
				} else {
					placeholder17 = nil
				}
				hidden17 := new(bool)
				if !attributesItem.ConsentAttribute.Hidden.IsUnknown() && !attributesItem.ConsentAttribute.Hidden.IsNull() {
					*hidden17 = attributesItem.ConsentAttribute.Hidden.ValueBool()
				} else {
					hidden17 = nil
				}
				showInTable17 := new(bool)
				if !attributesItem.ConsentAttribute.ShowInTable.IsUnknown() && !attributesItem.ConsentAttribute.ShowInTable.IsNull() {
					*showInTable17 = attributesItem.ConsentAttribute.ShowInTable.ValueBool()
				} else {
					showInTable17 = nil
				}
				sortable17 := new(bool)
				if !attributesItem.ConsentAttribute.Sortable.IsUnknown() && !attributesItem.ConsentAttribute.Sortable.IsNull() {
					*sortable17 = attributesItem.ConsentAttribute.Sortable.ValueBool()
				} else {
					sortable17 = nil
				}
				required17 := new(bool)
				if !attributesItem.ConsentAttribute.Required.IsUnknown() && !attributesItem.ConsentAttribute.Required.IsNull() {
					*required17 = attributesItem.ConsentAttribute.Required.ValueBool()
				} else {
					required17 = nil
				}
				readonly17 := new(bool)
				if !attributesItem.ConsentAttribute.Readonly.IsUnknown() && !attributesItem.ConsentAttribute.Readonly.IsNull() {
					*readonly17 = attributesItem.ConsentAttribute.Readonly.ValueBool()
				} else {
					readonly17 = nil
				}
				deprecated17 := new(bool)
				if !attributesItem.ConsentAttribute.Deprecated.IsUnknown() && !attributesItem.ConsentAttribute.Deprecated.IsNull() {
					*deprecated17 = attributesItem.ConsentAttribute.Deprecated.ValueBool()
				} else {
					deprecated17 = nil
				}
				var defaultValue17 interface{}
				if !attributesItem.ConsentAttribute.DefaultValue.IsUnknown() && !attributesItem.ConsentAttribute.DefaultValue.IsNull() {
					_ = json.Unmarshal([]byte(attributesItem.ConsentAttribute.DefaultValue.ValueString()), &defaultValue17)
				}
				group17 := new(string)
				if !attributesItem.ConsentAttribute.Group.IsUnknown() && !attributesItem.ConsentAttribute.Group.IsNull() {
					*group17 = attributesItem.ConsentAttribute.Group.ValueString()
				} else {
					group17 = nil
				}
				order17 := new(int64)
				if !attributesItem.ConsentAttribute.Order.IsUnknown() && !attributesItem.ConsentAttribute.Order.IsNull() {
					*order17 = attributesItem.ConsentAttribute.Order.ValueInt64()
				} else {
					order17 = nil
				}
				layout17 := new(string)
				if !attributesItem.ConsentAttribute.Layout.IsUnknown() && !attributesItem.ConsentAttribute.Layout.IsNull() {
					*layout17 = attributesItem.ConsentAttribute.Layout.ValueString()
				} else {
					layout17 = nil
				}
				hideLabel17 := new(bool)
				if !attributesItem.ConsentAttribute.HideLabel.IsUnknown() && !attributesItem.ConsentAttribute.HideLabel.IsNull() {
					*hideLabel17 = attributesItem.ConsentAttribute.HideLabel.ValueBool()
				} else {
					hideLabel17 = nil
				}
				icon21 := new(string)
				if !attributesItem.ConsentAttribute.Icon.IsUnknown() && !attributesItem.ConsentAttribute.Icon.IsNull() {
					*icon21 = attributesItem.ConsentAttribute.Icon.ValueString()
				} else {
					icon21 = nil
				}
				renderCondition18 := new(string)
				if !attributesItem.ConsentAttribute.RenderCondition.IsUnknown() && !attributesItem.ConsentAttribute.RenderCondition.IsNull() {
					*renderCondition18 = attributesItem.ConsentAttribute.RenderCondition.ValueString()
				} else {
					renderCondition18 = nil
				}
				var purpose17 []string = []string{}
				for _, purposeItem17 := range attributesItem.ConsentAttribute.Purpose {
					purpose17 = append(purpose17, purposeItem17.ValueString())
				}
				var constraints17 *shared.ConsentAttributeConstraints
				if attributesItem.ConsentAttribute.Constraints != nil {
					constraints17 = &shared.ConsentAttributeConstraints{}
				}
				featureFlag20 := new(string)
				if !attributesItem.ConsentAttribute.FeatureFlag.IsUnknown() && !attributesItem.ConsentAttribute.FeatureFlag.IsNull() {
					*featureFlag20 = attributesItem.ConsentAttribute.FeatureFlag.ValueString()
				} else {
					featureFlag20 = nil
				}
				var settingsFlag19 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem19 := range attributesItem.ConsentAttribute.SettingsFlag {
					name39 := new(string)
					if !settingsFlagItem19.Name.IsUnknown() && !settingsFlagItem19.Name.IsNull() {
						*name39 = settingsFlagItem19.Name.ValueString()
					} else {
						name39 = nil
					}
					enabled19 := new(bool)
					if !settingsFlagItem19.Enabled.IsUnknown() && !settingsFlagItem19.Enabled.IsNull() {
						*enabled19 = settingsFlagItem19.Enabled.ValueBool()
					} else {
						enabled19 = nil
					}
					settingsFlag19 = append(settingsFlag19, shared.SettingFlag{
						Name:    name39,
						Enabled: enabled19,
					})
				}
				valueFormatter17 := new(string)
				if !attributesItem.ConsentAttribute.ValueFormatter.IsUnknown() && !attributesItem.ConsentAttribute.ValueFormatter.IsNull() {
					*valueFormatter17 = attributesItem.ConsentAttribute.ValueFormatter.ValueString()
				} else {
					valueFormatter17 = nil
				}
				previewValueFormatter17 := new(string)
				if !attributesItem.ConsentAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.ConsentAttribute.PreviewValueFormatter.IsNull() {
					*previewValueFormatter17 = attributesItem.ConsentAttribute.PreviewValueFormatter.ValueString()
				} else {
					previewValueFormatter17 = nil
				}
				entityBuilderDisableEdit17 := new(bool)
				if !attributesItem.ConsentAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.ConsentAttribute.EntityBuilderDisableEdit.IsNull() {
					*entityBuilderDisableEdit17 = attributesItem.ConsentAttribute.EntityBuilderDisableEdit.ValueBool()
				} else {
					entityBuilderDisableEdit17 = nil
				}
				protected17 := new(bool)
				if !attributesItem.ConsentAttribute.Protected.IsUnknown() && !attributesItem.ConsentAttribute.Protected.IsNull() {
					*protected17 = attributesItem.ConsentAttribute.Protected.ValueBool()
				} else {
					protected17 = nil
				}
				var infoHelpers17 *shared.ConsentAttributeInfoHelpers
				if attributesItem.ConsentAttribute.InfoHelpers != nil {
					hintText17 := new(string)
					if !attributesItem.ConsentAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.ConsentAttribute.InfoHelpers.HintText.IsNull() {
						*hintText17 = attributesItem.ConsentAttribute.InfoHelpers.HintText.ValueString()
					} else {
						hintText17 = nil
					}
					hintTextKey17 := new(string)
					if !attributesItem.ConsentAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.ConsentAttribute.InfoHelpers.HintTextKey.IsNull() {
						*hintTextKey17 = attributesItem.ConsentAttribute.InfoHelpers.HintTextKey.ValueString()
					} else {
						hintTextKey17 = nil
					}
					hintCustomComponent17 := new(string)
					if !attributesItem.ConsentAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.ConsentAttribute.InfoHelpers.HintCustomComponent.IsNull() {
						*hintCustomComponent17 = attributesItem.ConsentAttribute.InfoHelpers.HintCustomComponent.ValueString()
					} else {
						hintCustomComponent17 = nil
					}
					hintTooltipPlacement17 := new(string)
					if !attributesItem.ConsentAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.ConsentAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
						*hintTooltipPlacement17 = attributesItem.ConsentAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
					} else {
						hintTooltipPlacement17 = nil
					}
					infoHelpers17 = &shared.ConsentAttributeInfoHelpers{
						HintText:             hintText17,
						HintTextKey:          hintTextKey17,
						HintCustomComponent:  hintCustomComponent17,
						HintTooltipPlacement: hintTooltipPlacement17,
					}
				}
				typeVar18 := shared.ConsentAttributeType(attributesItem.ConsentAttribute.Type.ValueString())
				topic := attributesItem.ConsentAttribute.Topic.ValueString()
				var identifiers []string = []string{}
				for _, identifiersItem := range attributesItem.ConsentAttribute.Identifiers {
					identifiers = append(identifiers, identifiersItem.ValueString())
				}
				consentAttribute := shared.ConsentAttribute{
					ID:                       id21,
					Name:                     name38,
					Label:                    label23,
					Placeholder:              placeholder17,
					Hidden:                   hidden17,
					ShowInTable:              showInTable17,
					Sortable:                 sortable17,
					Required:                 required17,
					Readonly:                 readonly17,
					Deprecated:               deprecated17,
					DefaultValue:             defaultValue17,
					Group:                    group17,
					Order:                    order17,
					Layout:                   layout17,
					HideLabel:                hideLabel17,
					Icon:                     icon21,
					RenderCondition:          renderCondition18,
					Purpose:                  purpose17,
					Constraints:              constraints17,
					FeatureFlag:              featureFlag20,
					SettingsFlag:             settingsFlag19,
					ValueFormatter:           valueFormatter17,
					PreviewValueFormatter:    previewValueFormatter17,
					EntityBuilderDisableEdit: entityBuilderDisableEdit17,
					Protected:                protected17,
					InfoHelpers:              infoHelpers17,
					Type:                     typeVar18,
					Topic:                    topic,
					Identifiers:              identifiers,
				}
				attributes = append(attributes, shared.AttributeInput{
					ConsentAttribute: &consentAttribute,
				})
			}
			if attributesItem.InternalAttribute != nil {
				id22 := new(string)
				if !attributesItem.InternalAttribute.ID.IsUnknown() && !attributesItem.InternalAttribute.ID.IsNull() {
					*id22 = attributesItem.InternalAttribute.ID.ValueString()
				} else {
					id22 = nil
				}
				name40 := attributesItem.InternalAttribute.Name.ValueString()
				label24 := attributesItem.InternalAttribute.Label.ValueString()
				placeholder18 := new(string)
				if !attributesItem.InternalAttribute.Placeholder.IsUnknown() && !attributesItem.InternalAttribute.Placeholder.IsNull() {
					*placeholder18 = attributesItem.InternalAttribute.Placeholder.ValueString()
				} else {
					placeholder18 = nil
				}
				hidden18 := new(bool)
				if !attributesItem.InternalAttribute.Hidden.IsUnknown() && !attributesItem.InternalAttribute.Hidden.IsNull() {
					*hidden18 = attributesItem.InternalAttribute.Hidden.ValueBool()
				} else {
					hidden18 = nil
				}
				showInTable18 := new(bool)
				if !attributesItem.InternalAttribute.ShowInTable.IsUnknown() && !attributesItem.InternalAttribute.ShowInTable.IsNull() {
					*showInTable18 = attributesItem.InternalAttribute.ShowInTable.ValueBool()
				} else {
					showInTable18 = nil
				}
				sortable18 := new(bool)
				if !attributesItem.InternalAttribute.Sortable.IsUnknown() && !attributesItem.InternalAttribute.Sortable.IsNull() {
					*sortable18 = attributesItem.InternalAttribute.Sortable.ValueBool()
				} else {
					sortable18 = nil
				}
				required18 := new(bool)
				if !attributesItem.InternalAttribute.Required.IsUnknown() && !attributesItem.InternalAttribute.Required.IsNull() {
					*required18 = attributesItem.InternalAttribute.Required.ValueBool()
				} else {
					required18 = nil
				}
				readonly18 := new(bool)
				if !attributesItem.InternalAttribute.Readonly.IsUnknown() && !attributesItem.InternalAttribute.Readonly.IsNull() {
					*readonly18 = attributesItem.InternalAttribute.Readonly.ValueBool()
				} else {
					readonly18 = nil
				}
				deprecated18 := new(bool)
				if !attributesItem.InternalAttribute.Deprecated.IsUnknown() && !attributesItem.InternalAttribute.Deprecated.IsNull() {
					*deprecated18 = attributesItem.InternalAttribute.Deprecated.ValueBool()
				} else {
					deprecated18 = nil
				}
				var defaultValue18 interface{}
				if !attributesItem.InternalAttribute.DefaultValue.IsUnknown() && !attributesItem.InternalAttribute.DefaultValue.IsNull() {
					_ = json.Unmarshal([]byte(attributesItem.InternalAttribute.DefaultValue.ValueString()), &defaultValue18)
				}
				group18 := new(string)
				if !attributesItem.InternalAttribute.Group.IsUnknown() && !attributesItem.InternalAttribute.Group.IsNull() {
					*group18 = attributesItem.InternalAttribute.Group.ValueString()
				} else {
					group18 = nil
				}
				order18 := new(int64)
				if !attributesItem.InternalAttribute.Order.IsUnknown() && !attributesItem.InternalAttribute.Order.IsNull() {
					*order18 = attributesItem.InternalAttribute.Order.ValueInt64()
				} else {
					order18 = nil
				}
				layout18 := new(string)
				if !attributesItem.InternalAttribute.Layout.IsUnknown() && !attributesItem.InternalAttribute.Layout.IsNull() {
					*layout18 = attributesItem.InternalAttribute.Layout.ValueString()
				} else {
					layout18 = nil
				}
				hideLabel18 := new(bool)
				if !attributesItem.InternalAttribute.HideLabel.IsUnknown() && !attributesItem.InternalAttribute.HideLabel.IsNull() {
					*hideLabel18 = attributesItem.InternalAttribute.HideLabel.ValueBool()
				} else {
					hideLabel18 = nil
				}
				icon22 := new(string)
				if !attributesItem.InternalAttribute.Icon.IsUnknown() && !attributesItem.InternalAttribute.Icon.IsNull() {
					*icon22 = attributesItem.InternalAttribute.Icon.ValueString()
				} else {
					icon22 = nil
				}
				renderCondition19 := new(string)
				if !attributesItem.InternalAttribute.RenderCondition.IsUnknown() && !attributesItem.InternalAttribute.RenderCondition.IsNull() {
					*renderCondition19 = attributesItem.InternalAttribute.RenderCondition.ValueString()
				} else {
					renderCondition19 = nil
				}
				var purpose18 []string = []string{}
				for _, purposeItem18 := range attributesItem.InternalAttribute.Purpose {
					purpose18 = append(purpose18, purposeItem18.ValueString())
				}
				var constraints18 *shared.InternalAttributeConstraints
				if attributesItem.InternalAttribute.Constraints != nil {
					constraints18 = &shared.InternalAttributeConstraints{}
				}
				featureFlag21 := new(string)
				if !attributesItem.InternalAttribute.FeatureFlag.IsUnknown() && !attributesItem.InternalAttribute.FeatureFlag.IsNull() {
					*featureFlag21 = attributesItem.InternalAttribute.FeatureFlag.ValueString()
				} else {
					featureFlag21 = nil
				}
				var settingsFlag20 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem20 := range attributesItem.InternalAttribute.SettingsFlag {
					name41 := new(string)
					if !settingsFlagItem20.Name.IsUnknown() && !settingsFlagItem20.Name.IsNull() {
						*name41 = settingsFlagItem20.Name.ValueString()
					} else {
						name41 = nil
					}
					enabled20 := new(bool)
					if !settingsFlagItem20.Enabled.IsUnknown() && !settingsFlagItem20.Enabled.IsNull() {
						*enabled20 = settingsFlagItem20.Enabled.ValueBool()
					} else {
						enabled20 = nil
					}
					settingsFlag20 = append(settingsFlag20, shared.SettingFlag{
						Name:    name41,
						Enabled: enabled20,
					})
				}
				valueFormatter18 := new(string)
				if !attributesItem.InternalAttribute.ValueFormatter.IsUnknown() && !attributesItem.InternalAttribute.ValueFormatter.IsNull() {
					*valueFormatter18 = attributesItem.InternalAttribute.ValueFormatter.ValueString()
				} else {
					valueFormatter18 = nil
				}
				previewValueFormatter18 := new(string)
				if !attributesItem.InternalAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.InternalAttribute.PreviewValueFormatter.IsNull() {
					*previewValueFormatter18 = attributesItem.InternalAttribute.PreviewValueFormatter.ValueString()
				} else {
					previewValueFormatter18 = nil
				}
				entityBuilderDisableEdit18 := new(bool)
				if !attributesItem.InternalAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.InternalAttribute.EntityBuilderDisableEdit.IsNull() {
					*entityBuilderDisableEdit18 = attributesItem.InternalAttribute.EntityBuilderDisableEdit.ValueBool()
				} else {
					entityBuilderDisableEdit18 = nil
				}
				protected18 := new(bool)
				if !attributesItem.InternalAttribute.Protected.IsUnknown() && !attributesItem.InternalAttribute.Protected.IsNull() {
					*protected18 = attributesItem.InternalAttribute.Protected.ValueBool()
				} else {
					protected18 = nil
				}
				var infoHelpers18 *shared.InternalAttributeInfoHelpers
				if attributesItem.InternalAttribute.InfoHelpers != nil {
					hintText18 := new(string)
					if !attributesItem.InternalAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.InternalAttribute.InfoHelpers.HintText.IsNull() {
						*hintText18 = attributesItem.InternalAttribute.InfoHelpers.HintText.ValueString()
					} else {
						hintText18 = nil
					}
					hintTextKey18 := new(string)
					if !attributesItem.InternalAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.InternalAttribute.InfoHelpers.HintTextKey.IsNull() {
						*hintTextKey18 = attributesItem.InternalAttribute.InfoHelpers.HintTextKey.ValueString()
					} else {
						hintTextKey18 = nil
					}
					hintCustomComponent18 := new(string)
					if !attributesItem.InternalAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.InternalAttribute.InfoHelpers.HintCustomComponent.IsNull() {
						*hintCustomComponent18 = attributesItem.InternalAttribute.InfoHelpers.HintCustomComponent.ValueString()
					} else {
						hintCustomComponent18 = nil
					}
					hintTooltipPlacement18 := new(string)
					if !attributesItem.InternalAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.InternalAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
						*hintTooltipPlacement18 = attributesItem.InternalAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
					} else {
						hintTooltipPlacement18 = nil
					}
					infoHelpers18 = &shared.InternalAttributeInfoHelpers{
						HintText:             hintText18,
						HintTextKey:          hintTextKey18,
						HintCustomComponent:  hintCustomComponent18,
						HintTooltipPlacement: hintTooltipPlacement18,
					}
				}
				typeVar19 := new(shared.InternalAttributeType)
				if !attributesItem.InternalAttribute.Type.IsUnknown() && !attributesItem.InternalAttribute.Type.IsNull() {
					*typeVar19 = shared.InternalAttributeType(attributesItem.InternalAttribute.Type.ValueString())
				} else {
					typeVar19 = nil
				}
				internalAttribute := shared.InternalAttribute{
					ID:                       id22,
					Name:                     name40,
					Label:                    label24,
					Placeholder:              placeholder18,
					Hidden:                   hidden18,
					ShowInTable:              showInTable18,
					Sortable:                 sortable18,
					Required:                 required18,
					Readonly:                 readonly18,
					Deprecated:               deprecated18,
					DefaultValue:             defaultValue18,
					Group:                    group18,
					Order:                    order18,
					Layout:                   layout18,
					HideLabel:                hideLabel18,
					Icon:                     icon22,
					RenderCondition:          renderCondition19,
					Purpose:                  purpose18,
					Constraints:              constraints18,
					FeatureFlag:              featureFlag21,
					SettingsFlag:             settingsFlag20,
					ValueFormatter:           valueFormatter18,
					PreviewValueFormatter:    previewValueFormatter18,
					EntityBuilderDisableEdit: entityBuilderDisableEdit18,
					Protected:                protected18,
					InfoHelpers:              infoHelpers18,
					Type:                     typeVar19,
				}
				attributes = append(attributes, shared.AttributeInput{
					InternalAttribute: &internalAttribute,
				})
			}
			if attributesItem.OrderedListAttribute != nil {
				id23 := new(string)
				if !attributesItem.OrderedListAttribute.ID.IsUnknown() && !attributesItem.OrderedListAttribute.ID.IsNull() {
					*id23 = attributesItem.OrderedListAttribute.ID.ValueString()
				} else {
					id23 = nil
				}
				name42 := attributesItem.OrderedListAttribute.Name.ValueString()
				label25 := attributesItem.OrderedListAttribute.Label.ValueString()
				placeholder19 := new(string)
				if !attributesItem.OrderedListAttribute.Placeholder.IsUnknown() && !attributesItem.OrderedListAttribute.Placeholder.IsNull() {
					*placeholder19 = attributesItem.OrderedListAttribute.Placeholder.ValueString()
				} else {
					placeholder19 = nil
				}
				hidden19 := new(bool)
				if !attributesItem.OrderedListAttribute.Hidden.IsUnknown() && !attributesItem.OrderedListAttribute.Hidden.IsNull() {
					*hidden19 = attributesItem.OrderedListAttribute.Hidden.ValueBool()
				} else {
					hidden19 = nil
				}
				showInTable19 := new(bool)
				if !attributesItem.OrderedListAttribute.ShowInTable.IsUnknown() && !attributesItem.OrderedListAttribute.ShowInTable.IsNull() {
					*showInTable19 = attributesItem.OrderedListAttribute.ShowInTable.ValueBool()
				} else {
					showInTable19 = nil
				}
				sortable19 := new(bool)
				if !attributesItem.OrderedListAttribute.Sortable.IsUnknown() && !attributesItem.OrderedListAttribute.Sortable.IsNull() {
					*sortable19 = attributesItem.OrderedListAttribute.Sortable.ValueBool()
				} else {
					sortable19 = nil
				}
				required19 := new(bool)
				if !attributesItem.OrderedListAttribute.Required.IsUnknown() && !attributesItem.OrderedListAttribute.Required.IsNull() {
					*required19 = attributesItem.OrderedListAttribute.Required.ValueBool()
				} else {
					required19 = nil
				}
				readonly19 := new(bool)
				if !attributesItem.OrderedListAttribute.Readonly.IsUnknown() && !attributesItem.OrderedListAttribute.Readonly.IsNull() {
					*readonly19 = attributesItem.OrderedListAttribute.Readonly.ValueBool()
				} else {
					readonly19 = nil
				}
				deprecated19 := new(bool)
				if !attributesItem.OrderedListAttribute.Deprecated.IsUnknown() && !attributesItem.OrderedListAttribute.Deprecated.IsNull() {
					*deprecated19 = attributesItem.OrderedListAttribute.Deprecated.ValueBool()
				} else {
					deprecated19 = nil
				}
				var defaultValue19 interface{}
				if !attributesItem.OrderedListAttribute.DefaultValue.IsUnknown() && !attributesItem.OrderedListAttribute.DefaultValue.IsNull() {
					_ = json.Unmarshal([]byte(attributesItem.OrderedListAttribute.DefaultValue.ValueString()), &defaultValue19)
				}
				group19 := new(string)
				if !attributesItem.OrderedListAttribute.Group.IsUnknown() && !attributesItem.OrderedListAttribute.Group.IsNull() {
					*group19 = attributesItem.OrderedListAttribute.Group.ValueString()
				} else {
					group19 = nil
				}
				order19 := new(int64)
				if !attributesItem.OrderedListAttribute.Order.IsUnknown() && !attributesItem.OrderedListAttribute.Order.IsNull() {
					*order19 = attributesItem.OrderedListAttribute.Order.ValueInt64()
				} else {
					order19 = nil
				}
				layout19 := new(string)
				if !attributesItem.OrderedListAttribute.Layout.IsUnknown() && !attributesItem.OrderedListAttribute.Layout.IsNull() {
					*layout19 = attributesItem.OrderedListAttribute.Layout.ValueString()
				} else {
					layout19 = nil
				}
				hideLabel19 := new(bool)
				if !attributesItem.OrderedListAttribute.HideLabel.IsUnknown() && !attributesItem.OrderedListAttribute.HideLabel.IsNull() {
					*hideLabel19 = attributesItem.OrderedListAttribute.HideLabel.ValueBool()
				} else {
					hideLabel19 = nil
				}
				icon23 := new(string)
				if !attributesItem.OrderedListAttribute.Icon.IsUnknown() && !attributesItem.OrderedListAttribute.Icon.IsNull() {
					*icon23 = attributesItem.OrderedListAttribute.Icon.ValueString()
				} else {
					icon23 = nil
				}
				renderCondition20 := new(string)
				if !attributesItem.OrderedListAttribute.RenderCondition.IsUnknown() && !attributesItem.OrderedListAttribute.RenderCondition.IsNull() {
					*renderCondition20 = attributesItem.OrderedListAttribute.RenderCondition.ValueString()
				} else {
					renderCondition20 = nil
				}
				var purpose19 []string = []string{}
				for _, purposeItem19 := range attributesItem.OrderedListAttribute.Purpose {
					purpose19 = append(purpose19, purposeItem19.ValueString())
				}
				var constraints19 *shared.OrderedListAttributeConstraints
				if attributesItem.OrderedListAttribute.Constraints != nil {
					constraints19 = &shared.OrderedListAttributeConstraints{}
				}
				featureFlag22 := new(string)
				if !attributesItem.OrderedListAttribute.FeatureFlag.IsUnknown() && !attributesItem.OrderedListAttribute.FeatureFlag.IsNull() {
					*featureFlag22 = attributesItem.OrderedListAttribute.FeatureFlag.ValueString()
				} else {
					featureFlag22 = nil
				}
				var settingsFlag21 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem21 := range attributesItem.OrderedListAttribute.SettingsFlag {
					name43 := new(string)
					if !settingsFlagItem21.Name.IsUnknown() && !settingsFlagItem21.Name.IsNull() {
						*name43 = settingsFlagItem21.Name.ValueString()
					} else {
						name43 = nil
					}
					enabled21 := new(bool)
					if !settingsFlagItem21.Enabled.IsUnknown() && !settingsFlagItem21.Enabled.IsNull() {
						*enabled21 = settingsFlagItem21.Enabled.ValueBool()
					} else {
						enabled21 = nil
					}
					settingsFlag21 = append(settingsFlag21, shared.SettingFlag{
						Name:    name43,
						Enabled: enabled21,
					})
				}
				valueFormatter19 := new(string)
				if !attributesItem.OrderedListAttribute.ValueFormatter.IsUnknown() && !attributesItem.OrderedListAttribute.ValueFormatter.IsNull() {
					*valueFormatter19 = attributesItem.OrderedListAttribute.ValueFormatter.ValueString()
				} else {
					valueFormatter19 = nil
				}
				previewValueFormatter19 := new(string)
				if !attributesItem.OrderedListAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.OrderedListAttribute.PreviewValueFormatter.IsNull() {
					*previewValueFormatter19 = attributesItem.OrderedListAttribute.PreviewValueFormatter.ValueString()
				} else {
					previewValueFormatter19 = nil
				}
				entityBuilderDisableEdit19 := new(bool)
				if !attributesItem.OrderedListAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.OrderedListAttribute.EntityBuilderDisableEdit.IsNull() {
					*entityBuilderDisableEdit19 = attributesItem.OrderedListAttribute.EntityBuilderDisableEdit.ValueBool()
				} else {
					entityBuilderDisableEdit19 = nil
				}
				protected19 := new(bool)
				if !attributesItem.OrderedListAttribute.Protected.IsUnknown() && !attributesItem.OrderedListAttribute.Protected.IsNull() {
					*protected19 = attributesItem.OrderedListAttribute.Protected.ValueBool()
				} else {
					protected19 = nil
				}
				var infoHelpers19 *shared.OrderedListAttributeInfoHelpers
				if attributesItem.OrderedListAttribute.InfoHelpers != nil {
					hintText19 := new(string)
					if !attributesItem.OrderedListAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.OrderedListAttribute.InfoHelpers.HintText.IsNull() {
						*hintText19 = attributesItem.OrderedListAttribute.InfoHelpers.HintText.ValueString()
					} else {
						hintText19 = nil
					}
					hintTextKey19 := new(string)
					if !attributesItem.OrderedListAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.OrderedListAttribute.InfoHelpers.HintTextKey.IsNull() {
						*hintTextKey19 = attributesItem.OrderedListAttribute.InfoHelpers.HintTextKey.ValueString()
					} else {
						hintTextKey19 = nil
					}
					hintCustomComponent19 := new(string)
					if !attributesItem.OrderedListAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.OrderedListAttribute.InfoHelpers.HintCustomComponent.IsNull() {
						*hintCustomComponent19 = attributesItem.OrderedListAttribute.InfoHelpers.HintCustomComponent.ValueString()
					} else {
						hintCustomComponent19 = nil
					}
					hintTooltipPlacement19 := new(string)
					if !attributesItem.OrderedListAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.OrderedListAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
						*hintTooltipPlacement19 = attributesItem.OrderedListAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
					} else {
						hintTooltipPlacement19 = nil
					}
					infoHelpers19 = &shared.OrderedListAttributeInfoHelpers{
						HintText:             hintText19,
						HintTextKey:          hintTextKey19,
						HintCustomComponent:  hintCustomComponent19,
						HintTooltipPlacement: hintTooltipPlacement19,
					}
				}
				typeVar20 := new(shared.OrderedListAttributeType)
				if !attributesItem.OrderedListAttribute.Type.IsUnknown() && !attributesItem.OrderedListAttribute.Type.IsNull() {
					*typeVar20 = shared.OrderedListAttributeType(attributesItem.OrderedListAttribute.Type.ValueString())
				} else {
					typeVar20 = nil
				}
				orderedListAttribute := shared.OrderedListAttribute{
					ID:                       id23,
					Name:                     name42,
					Label:                    label25,
					Placeholder:              placeholder19,
					Hidden:                   hidden19,
					ShowInTable:              showInTable19,
					Sortable:                 sortable19,
					Required:                 required19,
					Readonly:                 readonly19,
					Deprecated:               deprecated19,
					DefaultValue:             defaultValue19,
					Group:                    group19,
					Order:                    order19,
					Layout:                   layout19,
					HideLabel:                hideLabel19,
					Icon:                     icon23,
					RenderCondition:          renderCondition20,
					Purpose:                  purpose19,
					Constraints:              constraints19,
					FeatureFlag:              featureFlag22,
					SettingsFlag:             settingsFlag21,
					ValueFormatter:           valueFormatter19,
					PreviewValueFormatter:    previewValueFormatter19,
					EntityBuilderDisableEdit: entityBuilderDisableEdit19,
					Protected:                protected19,
					InfoHelpers:              infoHelpers19,
					Type:                     typeVar20,
				}
				attributes = append(attributes, shared.AttributeInput{
					OrderedListAttribute: &orderedListAttribute,
				})
			}
			if attributesItem.FileAttribute != nil {
				id24 := new(string)
				if !attributesItem.FileAttribute.ID.IsUnknown() && !attributesItem.FileAttribute.ID.IsNull() {
					*id24 = attributesItem.FileAttribute.ID.ValueString()
				} else {
					id24 = nil
				}
				name44 := attributesItem.FileAttribute.Name.ValueString()
				label26 := attributesItem.FileAttribute.Label.ValueString()
				placeholder20 := new(string)
				if !attributesItem.FileAttribute.Placeholder.IsUnknown() && !attributesItem.FileAttribute.Placeholder.IsNull() {
					*placeholder20 = attributesItem.FileAttribute.Placeholder.ValueString()
				} else {
					placeholder20 = nil
				}
				hidden20 := new(bool)
				if !attributesItem.FileAttribute.Hidden.IsUnknown() && !attributesItem.FileAttribute.Hidden.IsNull() {
					*hidden20 = attributesItem.FileAttribute.Hidden.ValueBool()
				} else {
					hidden20 = nil
				}
				showInTable20 := new(bool)
				if !attributesItem.FileAttribute.ShowInTable.IsUnknown() && !attributesItem.FileAttribute.ShowInTable.IsNull() {
					*showInTable20 = attributesItem.FileAttribute.ShowInTable.ValueBool()
				} else {
					showInTable20 = nil
				}
				sortable20 := new(bool)
				if !attributesItem.FileAttribute.Sortable.IsUnknown() && !attributesItem.FileAttribute.Sortable.IsNull() {
					*sortable20 = attributesItem.FileAttribute.Sortable.ValueBool()
				} else {
					sortable20 = nil
				}
				required20 := new(bool)
				if !attributesItem.FileAttribute.Required.IsUnknown() && !attributesItem.FileAttribute.Required.IsNull() {
					*required20 = attributesItem.FileAttribute.Required.ValueBool()
				} else {
					required20 = nil
				}
				readonly20 := new(bool)
				if !attributesItem.FileAttribute.Readonly.IsUnknown() && !attributesItem.FileAttribute.Readonly.IsNull() {
					*readonly20 = attributesItem.FileAttribute.Readonly.ValueBool()
				} else {
					readonly20 = nil
				}
				deprecated20 := new(bool)
				if !attributesItem.FileAttribute.Deprecated.IsUnknown() && !attributesItem.FileAttribute.Deprecated.IsNull() {
					*deprecated20 = attributesItem.FileAttribute.Deprecated.ValueBool()
				} else {
					deprecated20 = nil
				}
				var defaultValue20 interface{}
				if !attributesItem.FileAttribute.DefaultValue.IsUnknown() && !attributesItem.FileAttribute.DefaultValue.IsNull() {
					_ = json.Unmarshal([]byte(attributesItem.FileAttribute.DefaultValue.ValueString()), &defaultValue20)
				}
				group20 := new(string)
				if !attributesItem.FileAttribute.Group.IsUnknown() && !attributesItem.FileAttribute.Group.IsNull() {
					*group20 = attributesItem.FileAttribute.Group.ValueString()
				} else {
					group20 = nil
				}
				order20 := new(int64)
				if !attributesItem.FileAttribute.Order.IsUnknown() && !attributesItem.FileAttribute.Order.IsNull() {
					*order20 = attributesItem.FileAttribute.Order.ValueInt64()
				} else {
					order20 = nil
				}
				layout20 := new(string)
				if !attributesItem.FileAttribute.Layout.IsUnknown() && !attributesItem.FileAttribute.Layout.IsNull() {
					*layout20 = attributesItem.FileAttribute.Layout.ValueString()
				} else {
					layout20 = nil
				}
				hideLabel20 := new(bool)
				if !attributesItem.FileAttribute.HideLabel.IsUnknown() && !attributesItem.FileAttribute.HideLabel.IsNull() {
					*hideLabel20 = attributesItem.FileAttribute.HideLabel.ValueBool()
				} else {
					hideLabel20 = nil
				}
				icon24 := new(string)
				if !attributesItem.FileAttribute.Icon.IsUnknown() && !attributesItem.FileAttribute.Icon.IsNull() {
					*icon24 = attributesItem.FileAttribute.Icon.ValueString()
				} else {
					icon24 = nil
				}
				renderCondition21 := new(string)
				if !attributesItem.FileAttribute.RenderCondition.IsUnknown() && !attributesItem.FileAttribute.RenderCondition.IsNull() {
					*renderCondition21 = attributesItem.FileAttribute.RenderCondition.ValueString()
				} else {
					renderCondition21 = nil
				}
				var purpose20 []string = []string{}
				for _, purposeItem20 := range attributesItem.FileAttribute.Purpose {
					purpose20 = append(purpose20, purposeItem20.ValueString())
				}
				var constraints20 *shared.FileAttributeConstraints
				if attributesItem.FileAttribute.Constraints != nil {
					constraints20 = &shared.FileAttributeConstraints{}
				}
				featureFlag23 := new(string)
				if !attributesItem.FileAttribute.FeatureFlag.IsUnknown() && !attributesItem.FileAttribute.FeatureFlag.IsNull() {
					*featureFlag23 = attributesItem.FileAttribute.FeatureFlag.ValueString()
				} else {
					featureFlag23 = nil
				}
				var settingsFlag22 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem22 := range attributesItem.FileAttribute.SettingsFlag {
					name45 := new(string)
					if !settingsFlagItem22.Name.IsUnknown() && !settingsFlagItem22.Name.IsNull() {
						*name45 = settingsFlagItem22.Name.ValueString()
					} else {
						name45 = nil
					}
					enabled22 := new(bool)
					if !settingsFlagItem22.Enabled.IsUnknown() && !settingsFlagItem22.Enabled.IsNull() {
						*enabled22 = settingsFlagItem22.Enabled.ValueBool()
					} else {
						enabled22 = nil
					}
					settingsFlag22 = append(settingsFlag22, shared.SettingFlag{
						Name:    name45,
						Enabled: enabled22,
					})
				}
				valueFormatter20 := new(string)
				if !attributesItem.FileAttribute.ValueFormatter.IsUnknown() && !attributesItem.FileAttribute.ValueFormatter.IsNull() {
					*valueFormatter20 = attributesItem.FileAttribute.ValueFormatter.ValueString()
				} else {
					valueFormatter20 = nil
				}
				previewValueFormatter20 := new(string)
				if !attributesItem.FileAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.FileAttribute.PreviewValueFormatter.IsNull() {
					*previewValueFormatter20 = attributesItem.FileAttribute.PreviewValueFormatter.ValueString()
				} else {
					previewValueFormatter20 = nil
				}
				entityBuilderDisableEdit20 := new(bool)
				if !attributesItem.FileAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.FileAttribute.EntityBuilderDisableEdit.IsNull() {
					*entityBuilderDisableEdit20 = attributesItem.FileAttribute.EntityBuilderDisableEdit.ValueBool()
				} else {
					entityBuilderDisableEdit20 = nil
				}
				protected20 := new(bool)
				if !attributesItem.FileAttribute.Protected.IsUnknown() && !attributesItem.FileAttribute.Protected.IsNull() {
					*protected20 = attributesItem.FileAttribute.Protected.ValueBool()
				} else {
					protected20 = nil
				}
				var infoHelpers20 *shared.FileAttributeInfoHelpers
				if attributesItem.FileAttribute.InfoHelpers != nil {
					hintText20 := new(string)
					if !attributesItem.FileAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.FileAttribute.InfoHelpers.HintText.IsNull() {
						*hintText20 = attributesItem.FileAttribute.InfoHelpers.HintText.ValueString()
					} else {
						hintText20 = nil
					}
					hintTextKey20 := new(string)
					if !attributesItem.FileAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.FileAttribute.InfoHelpers.HintTextKey.IsNull() {
						*hintTextKey20 = attributesItem.FileAttribute.InfoHelpers.HintTextKey.ValueString()
					} else {
						hintTextKey20 = nil
					}
					hintCustomComponent20 := new(string)
					if !attributesItem.FileAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.FileAttribute.InfoHelpers.HintCustomComponent.IsNull() {
						*hintCustomComponent20 = attributesItem.FileAttribute.InfoHelpers.HintCustomComponent.ValueString()
					} else {
						hintCustomComponent20 = nil
					}
					hintTooltipPlacement20 := new(string)
					if !attributesItem.FileAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.FileAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
						*hintTooltipPlacement20 = attributesItem.FileAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
					} else {
						hintTooltipPlacement20 = nil
					}
					infoHelpers20 = &shared.FileAttributeInfoHelpers{
						HintText:             hintText20,
						HintTextKey:          hintTextKey20,
						HintCustomComponent:  hintCustomComponent20,
						HintTooltipPlacement: hintTooltipPlacement20,
					}
				}
				typeVar21 := shared.FileAttributeType(attributesItem.FileAttribute.Type.ValueString())
				multiple1 := new(bool)
				if !attributesItem.FileAttribute.Multiple.IsUnknown() && !attributesItem.FileAttribute.Multiple.IsNull() {
					*multiple1 = attributesItem.FileAttribute.Multiple.ValueBool()
				} else {
					multiple1 = nil
				}
				var allowedExtensions []string = []string{}
				for _, allowedExtensionsItem := range attributesItem.FileAttribute.AllowedExtensions {
					allowedExtensions = append(allowedExtensions, allowedExtensionsItem.ValueString())
				}
				displayImagesLandscaped := new(bool)
				if !attributesItem.FileAttribute.DisplayImagesLandscaped.IsUnknown() && !attributesItem.FileAttribute.DisplayImagesLandscaped.IsNull() {
					*displayImagesLandscaped = attributesItem.FileAttribute.DisplayImagesLandscaped.ValueBool()
				} else {
					displayImagesLandscaped = nil
				}
				enableDescription := new(bool)
				if !attributesItem.FileAttribute.EnableDescription.IsUnknown() && !attributesItem.FileAttribute.EnableDescription.IsNull() {
					*enableDescription = attributesItem.FileAttribute.EnableDescription.ValueBool()
				} else {
					enableDescription = nil
				}
				defaultAccessControl := new(shared.DefaultAccessControl)
				if !attributesItem.FileAttribute.DefaultAccessControl.IsUnknown() && !attributesItem.FileAttribute.DefaultAccessControl.IsNull() {
					*defaultAccessControl = shared.DefaultAccessControl(attributesItem.FileAttribute.DefaultAccessControl.ValueString())
				} else {
					defaultAccessControl = nil
				}
				fileAttribute := shared.FileAttribute{
					ID:                       id24,
					Name:                     name44,
					Label:                    label26,
					Placeholder:              placeholder20,
					Hidden:                   hidden20,
					ShowInTable:              showInTable20,
					Sortable:                 sortable20,
					Required:                 required20,
					Readonly:                 readonly20,
					Deprecated:               deprecated20,
					DefaultValue:             defaultValue20,
					Group:                    group20,
					Order:                    order20,
					Layout:                   layout20,
					HideLabel:                hideLabel20,
					Icon:                     icon24,
					RenderCondition:          renderCondition21,
					Purpose:                  purpose20,
					Constraints:              constraints20,
					FeatureFlag:              featureFlag23,
					SettingsFlag:             settingsFlag22,
					ValueFormatter:           valueFormatter20,
					PreviewValueFormatter:    previewValueFormatter20,
					EntityBuilderDisableEdit: entityBuilderDisableEdit20,
					Protected:                protected20,
					InfoHelpers:              infoHelpers20,
					Type:                     typeVar21,
					Multiple:                 multiple1,
					AllowedExtensions:        allowedExtensions,
					DisplayImagesLandscaped:  displayImagesLandscaped,
					EnableDescription:        enableDescription,
					DefaultAccessControl:     defaultAccessControl,
				}
				attributes = append(attributes, shared.AttributeInput{
					FileAttribute: &fileAttribute,
				})
			}
			if attributesItem.ComputedAttribute != nil {
				id25 := new(string)
				if !attributesItem.ComputedAttribute.ID.IsUnknown() && !attributesItem.ComputedAttribute.ID.IsNull() {
					*id25 = attributesItem.ComputedAttribute.ID.ValueString()
				} else {
					id25 = nil
				}
				name46 := attributesItem.ComputedAttribute.Name.ValueString()
				label27 := attributesItem.ComputedAttribute.Label.ValueString()
				placeholder21 := new(string)
				if !attributesItem.ComputedAttribute.Placeholder.IsUnknown() && !attributesItem.ComputedAttribute.Placeholder.IsNull() {
					*placeholder21 = attributesItem.ComputedAttribute.Placeholder.ValueString()
				} else {
					placeholder21 = nil
				}
				hidden21 := new(bool)
				if !attributesItem.ComputedAttribute.Hidden.IsUnknown() && !attributesItem.ComputedAttribute.Hidden.IsNull() {
					*hidden21 = attributesItem.ComputedAttribute.Hidden.ValueBool()
				} else {
					hidden21 = nil
				}
				showInTable21 := new(bool)
				if !attributesItem.ComputedAttribute.ShowInTable.IsUnknown() && !attributesItem.ComputedAttribute.ShowInTable.IsNull() {
					*showInTable21 = attributesItem.ComputedAttribute.ShowInTable.ValueBool()
				} else {
					showInTable21 = nil
				}
				sortable21 := new(bool)
				if !attributesItem.ComputedAttribute.Sortable.IsUnknown() && !attributesItem.ComputedAttribute.Sortable.IsNull() {
					*sortable21 = attributesItem.ComputedAttribute.Sortable.ValueBool()
				} else {
					sortable21 = nil
				}
				required21 := new(bool)
				if !attributesItem.ComputedAttribute.Required.IsUnknown() && !attributesItem.ComputedAttribute.Required.IsNull() {
					*required21 = attributesItem.ComputedAttribute.Required.ValueBool()
				} else {
					required21 = nil
				}
				readonly21 := new(bool)
				if !attributesItem.ComputedAttribute.Readonly.IsUnknown() && !attributesItem.ComputedAttribute.Readonly.IsNull() {
					*readonly21 = attributesItem.ComputedAttribute.Readonly.ValueBool()
				} else {
					readonly21 = nil
				}
				deprecated21 := new(bool)
				if !attributesItem.ComputedAttribute.Deprecated.IsUnknown() && !attributesItem.ComputedAttribute.Deprecated.IsNull() {
					*deprecated21 = attributesItem.ComputedAttribute.Deprecated.ValueBool()
				} else {
					deprecated21 = nil
				}
				var defaultValue21 interface{}
				if !attributesItem.ComputedAttribute.DefaultValue.IsUnknown() && !attributesItem.ComputedAttribute.DefaultValue.IsNull() {
					_ = json.Unmarshal([]byte(attributesItem.ComputedAttribute.DefaultValue.ValueString()), &defaultValue21)
				}
				group21 := new(string)
				if !attributesItem.ComputedAttribute.Group.IsUnknown() && !attributesItem.ComputedAttribute.Group.IsNull() {
					*group21 = attributesItem.ComputedAttribute.Group.ValueString()
				} else {
					group21 = nil
				}
				order21 := new(int64)
				if !attributesItem.ComputedAttribute.Order.IsUnknown() && !attributesItem.ComputedAttribute.Order.IsNull() {
					*order21 = attributesItem.ComputedAttribute.Order.ValueInt64()
				} else {
					order21 = nil
				}
				layout21 := new(string)
				if !attributesItem.ComputedAttribute.Layout.IsUnknown() && !attributesItem.ComputedAttribute.Layout.IsNull() {
					*layout21 = attributesItem.ComputedAttribute.Layout.ValueString()
				} else {
					layout21 = nil
				}
				hideLabel21 := new(bool)
				if !attributesItem.ComputedAttribute.HideLabel.IsUnknown() && !attributesItem.ComputedAttribute.HideLabel.IsNull() {
					*hideLabel21 = attributesItem.ComputedAttribute.HideLabel.ValueBool()
				} else {
					hideLabel21 = nil
				}
				icon25 := new(string)
				if !attributesItem.ComputedAttribute.Icon.IsUnknown() && !attributesItem.ComputedAttribute.Icon.IsNull() {
					*icon25 = attributesItem.ComputedAttribute.Icon.ValueString()
				} else {
					icon25 = nil
				}
				renderCondition22 := new(string)
				if !attributesItem.ComputedAttribute.RenderCondition.IsUnknown() && !attributesItem.ComputedAttribute.RenderCondition.IsNull() {
					*renderCondition22 = attributesItem.ComputedAttribute.RenderCondition.ValueString()
				} else {
					renderCondition22 = nil
				}
				var purpose21 []string = []string{}
				for _, purposeItem21 := range attributesItem.ComputedAttribute.Purpose {
					purpose21 = append(purpose21, purposeItem21.ValueString())
				}
				var constraints21 *shared.ComputedAttributeConstraints
				if attributesItem.ComputedAttribute.Constraints != nil {
					constraints21 = &shared.ComputedAttributeConstraints{}
				}
				featureFlag24 := new(string)
				if !attributesItem.ComputedAttribute.FeatureFlag.IsUnknown() && !attributesItem.ComputedAttribute.FeatureFlag.IsNull() {
					*featureFlag24 = attributesItem.ComputedAttribute.FeatureFlag.ValueString()
				} else {
					featureFlag24 = nil
				}
				var settingsFlag23 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem23 := range attributesItem.ComputedAttribute.SettingsFlag {
					name47 := new(string)
					if !settingsFlagItem23.Name.IsUnknown() && !settingsFlagItem23.Name.IsNull() {
						*name47 = settingsFlagItem23.Name.ValueString()
					} else {
						name47 = nil
					}
					enabled23 := new(bool)
					if !settingsFlagItem23.Enabled.IsUnknown() && !settingsFlagItem23.Enabled.IsNull() {
						*enabled23 = settingsFlagItem23.Enabled.ValueBool()
					} else {
						enabled23 = nil
					}
					settingsFlag23 = append(settingsFlag23, shared.SettingFlag{
						Name:    name47,
						Enabled: enabled23,
					})
				}
				valueFormatter21 := new(string)
				if !attributesItem.ComputedAttribute.ValueFormatter.IsUnknown() && !attributesItem.ComputedAttribute.ValueFormatter.IsNull() {
					*valueFormatter21 = attributesItem.ComputedAttribute.ValueFormatter.ValueString()
				} else {
					valueFormatter21 = nil
				}
				previewValueFormatter21 := new(string)
				if !attributesItem.ComputedAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.ComputedAttribute.PreviewValueFormatter.IsNull() {
					*previewValueFormatter21 = attributesItem.ComputedAttribute.PreviewValueFormatter.ValueString()
				} else {
					previewValueFormatter21 = nil
				}
				entityBuilderDisableEdit21 := new(bool)
				if !attributesItem.ComputedAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.ComputedAttribute.EntityBuilderDisableEdit.IsNull() {
					*entityBuilderDisableEdit21 = attributesItem.ComputedAttribute.EntityBuilderDisableEdit.ValueBool()
				} else {
					entityBuilderDisableEdit21 = nil
				}
				protected21 := new(bool)
				if !attributesItem.ComputedAttribute.Protected.IsUnknown() && !attributesItem.ComputedAttribute.Protected.IsNull() {
					*protected21 = attributesItem.ComputedAttribute.Protected.ValueBool()
				} else {
					protected21 = nil
				}
				var infoHelpers21 *shared.ComputedAttributeInfoHelpers
				if attributesItem.ComputedAttribute.InfoHelpers != nil {
					hintText21 := new(string)
					if !attributesItem.ComputedAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.ComputedAttribute.InfoHelpers.HintText.IsNull() {
						*hintText21 = attributesItem.ComputedAttribute.InfoHelpers.HintText.ValueString()
					} else {
						hintText21 = nil
					}
					hintTextKey21 := new(string)
					if !attributesItem.ComputedAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.ComputedAttribute.InfoHelpers.HintTextKey.IsNull() {
						*hintTextKey21 = attributesItem.ComputedAttribute.InfoHelpers.HintTextKey.ValueString()
					} else {
						hintTextKey21 = nil
					}
					hintCustomComponent21 := new(string)
					if !attributesItem.ComputedAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.ComputedAttribute.InfoHelpers.HintCustomComponent.IsNull() {
						*hintCustomComponent21 = attributesItem.ComputedAttribute.InfoHelpers.HintCustomComponent.ValueString()
					} else {
						hintCustomComponent21 = nil
					}
					hintTooltipPlacement21 := new(string)
					if !attributesItem.ComputedAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.ComputedAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
						*hintTooltipPlacement21 = attributesItem.ComputedAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
					} else {
						hintTooltipPlacement21 = nil
					}
					infoHelpers21 = &shared.ComputedAttributeInfoHelpers{
						HintText:             hintText21,
						HintTextKey:          hintTextKey21,
						HintCustomComponent:  hintCustomComponent21,
						HintTooltipPlacement: hintTooltipPlacement21,
					}
				}
				typeVar22 := new(shared.ComputedAttributeType)
				if !attributesItem.ComputedAttribute.Type.IsUnknown() && !attributesItem.ComputedAttribute.Type.IsNull() {
					*typeVar22 = shared.ComputedAttributeType(attributesItem.ComputedAttribute.Type.ValueString())
				} else {
					typeVar22 = nil
				}
				computedAttribute := shared.ComputedAttribute{
					ID:                       id25,
					Name:                     name46,
					Label:                    label27,
					Placeholder:              placeholder21,
					Hidden:                   hidden21,
					ShowInTable:              showInTable21,
					Sortable:                 sortable21,
					Required:                 required21,
					Readonly:                 readonly21,
					Deprecated:               deprecated21,
					DefaultValue:             defaultValue21,
					Group:                    group21,
					Order:                    order21,
					Layout:                   layout21,
					HideLabel:                hideLabel21,
					Icon:                     icon25,
					RenderCondition:          renderCondition22,
					Purpose:                  purpose21,
					Constraints:              constraints21,
					FeatureFlag:              featureFlag24,
					SettingsFlag:             settingsFlag23,
					ValueFormatter:           valueFormatter21,
					PreviewValueFormatter:    previewValueFormatter21,
					EntityBuilderDisableEdit: entityBuilderDisableEdit21,
					Protected:                protected21,
					InfoHelpers:              infoHelpers21,
					Type:                     typeVar22,
				}
				attributes = append(attributes, shared.AttributeInput{
					ComputedAttribute: &computedAttribute,
				})
			}
			if attributesItem.PartnerStatusAttribute != nil {
				id26 := new(string)
				if !attributesItem.PartnerStatusAttribute.ID.IsUnknown() && !attributesItem.PartnerStatusAttribute.ID.IsNull() {
					*id26 = attributesItem.PartnerStatusAttribute.ID.ValueString()
				} else {
					id26 = nil
				}
				name48 := attributesItem.PartnerStatusAttribute.Name.ValueString()
				label28 := attributesItem.PartnerStatusAttribute.Label.ValueString()
				placeholder22 := new(string)
				if !attributesItem.PartnerStatusAttribute.Placeholder.IsUnknown() && !attributesItem.PartnerStatusAttribute.Placeholder.IsNull() {
					*placeholder22 = attributesItem.PartnerStatusAttribute.Placeholder.ValueString()
				} else {
					placeholder22 = nil
				}
				hidden22 := new(bool)
				if !attributesItem.PartnerStatusAttribute.Hidden.IsUnknown() && !attributesItem.PartnerStatusAttribute.Hidden.IsNull() {
					*hidden22 = attributesItem.PartnerStatusAttribute.Hidden.ValueBool()
				} else {
					hidden22 = nil
				}
				showInTable22 := new(bool)
				if !attributesItem.PartnerStatusAttribute.ShowInTable.IsUnknown() && !attributesItem.PartnerStatusAttribute.ShowInTable.IsNull() {
					*showInTable22 = attributesItem.PartnerStatusAttribute.ShowInTable.ValueBool()
				} else {
					showInTable22 = nil
				}
				sortable22 := new(bool)
				if !attributesItem.PartnerStatusAttribute.Sortable.IsUnknown() && !attributesItem.PartnerStatusAttribute.Sortable.IsNull() {
					*sortable22 = attributesItem.PartnerStatusAttribute.Sortable.ValueBool()
				} else {
					sortable22 = nil
				}
				required22 := new(bool)
				if !attributesItem.PartnerStatusAttribute.Required.IsUnknown() && !attributesItem.PartnerStatusAttribute.Required.IsNull() {
					*required22 = attributesItem.PartnerStatusAttribute.Required.ValueBool()
				} else {
					required22 = nil
				}
				readonly22 := new(bool)
				if !attributesItem.PartnerStatusAttribute.Readonly.IsUnknown() && !attributesItem.PartnerStatusAttribute.Readonly.IsNull() {
					*readonly22 = attributesItem.PartnerStatusAttribute.Readonly.ValueBool()
				} else {
					readonly22 = nil
				}
				deprecated22 := new(bool)
				if !attributesItem.PartnerStatusAttribute.Deprecated.IsUnknown() && !attributesItem.PartnerStatusAttribute.Deprecated.IsNull() {
					*deprecated22 = attributesItem.PartnerStatusAttribute.Deprecated.ValueBool()
				} else {
					deprecated22 = nil
				}
				var defaultValue22 interface{}
				if !attributesItem.PartnerStatusAttribute.DefaultValue.IsUnknown() && !attributesItem.PartnerStatusAttribute.DefaultValue.IsNull() {
					_ = json.Unmarshal([]byte(attributesItem.PartnerStatusAttribute.DefaultValue.ValueString()), &defaultValue22)
				}
				group22 := new(string)
				if !attributesItem.PartnerStatusAttribute.Group.IsUnknown() && !attributesItem.PartnerStatusAttribute.Group.IsNull() {
					*group22 = attributesItem.PartnerStatusAttribute.Group.ValueString()
				} else {
					group22 = nil
				}
				order22 := new(int64)
				if !attributesItem.PartnerStatusAttribute.Order.IsUnknown() && !attributesItem.PartnerStatusAttribute.Order.IsNull() {
					*order22 = attributesItem.PartnerStatusAttribute.Order.ValueInt64()
				} else {
					order22 = nil
				}
				layout22 := new(string)
				if !attributesItem.PartnerStatusAttribute.Layout.IsUnknown() && !attributesItem.PartnerStatusAttribute.Layout.IsNull() {
					*layout22 = attributesItem.PartnerStatusAttribute.Layout.ValueString()
				} else {
					layout22 = nil
				}
				hideLabel22 := new(bool)
				if !attributesItem.PartnerStatusAttribute.HideLabel.IsUnknown() && !attributesItem.PartnerStatusAttribute.HideLabel.IsNull() {
					*hideLabel22 = attributesItem.PartnerStatusAttribute.HideLabel.ValueBool()
				} else {
					hideLabel22 = nil
				}
				icon26 := new(string)
				if !attributesItem.PartnerStatusAttribute.Icon.IsUnknown() && !attributesItem.PartnerStatusAttribute.Icon.IsNull() {
					*icon26 = attributesItem.PartnerStatusAttribute.Icon.ValueString()
				} else {
					icon26 = nil
				}
				renderCondition23 := new(string)
				if !attributesItem.PartnerStatusAttribute.RenderCondition.IsUnknown() && !attributesItem.PartnerStatusAttribute.RenderCondition.IsNull() {
					*renderCondition23 = attributesItem.PartnerStatusAttribute.RenderCondition.ValueString()
				} else {
					renderCondition23 = nil
				}
				var purpose22 []string = []string{}
				for _, purposeItem22 := range attributesItem.PartnerStatusAttribute.Purpose {
					purpose22 = append(purpose22, purposeItem22.ValueString())
				}
				var constraints22 *shared.PartnerStatusAttributeConstraints
				if attributesItem.PartnerStatusAttribute.Constraints != nil {
					constraints22 = &shared.PartnerStatusAttributeConstraints{}
				}
				featureFlag25 := new(string)
				if !attributesItem.PartnerStatusAttribute.FeatureFlag.IsUnknown() && !attributesItem.PartnerStatusAttribute.FeatureFlag.IsNull() {
					*featureFlag25 = attributesItem.PartnerStatusAttribute.FeatureFlag.ValueString()
				} else {
					featureFlag25 = nil
				}
				var settingsFlag24 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem24 := range attributesItem.PartnerStatusAttribute.SettingsFlag {
					name49 := new(string)
					if !settingsFlagItem24.Name.IsUnknown() && !settingsFlagItem24.Name.IsNull() {
						*name49 = settingsFlagItem24.Name.ValueString()
					} else {
						name49 = nil
					}
					enabled24 := new(bool)
					if !settingsFlagItem24.Enabled.IsUnknown() && !settingsFlagItem24.Enabled.IsNull() {
						*enabled24 = settingsFlagItem24.Enabled.ValueBool()
					} else {
						enabled24 = nil
					}
					settingsFlag24 = append(settingsFlag24, shared.SettingFlag{
						Name:    name49,
						Enabled: enabled24,
					})
				}
				valueFormatter22 := new(string)
				if !attributesItem.PartnerStatusAttribute.ValueFormatter.IsUnknown() && !attributesItem.PartnerStatusAttribute.ValueFormatter.IsNull() {
					*valueFormatter22 = attributesItem.PartnerStatusAttribute.ValueFormatter.ValueString()
				} else {
					valueFormatter22 = nil
				}
				previewValueFormatter22 := new(string)
				if !attributesItem.PartnerStatusAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.PartnerStatusAttribute.PreviewValueFormatter.IsNull() {
					*previewValueFormatter22 = attributesItem.PartnerStatusAttribute.PreviewValueFormatter.ValueString()
				} else {
					previewValueFormatter22 = nil
				}
				entityBuilderDisableEdit22 := new(bool)
				if !attributesItem.PartnerStatusAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.PartnerStatusAttribute.EntityBuilderDisableEdit.IsNull() {
					*entityBuilderDisableEdit22 = attributesItem.PartnerStatusAttribute.EntityBuilderDisableEdit.ValueBool()
				} else {
					entityBuilderDisableEdit22 = nil
				}
				protected22 := new(bool)
				if !attributesItem.PartnerStatusAttribute.Protected.IsUnknown() && !attributesItem.PartnerStatusAttribute.Protected.IsNull() {
					*protected22 = attributesItem.PartnerStatusAttribute.Protected.ValueBool()
				} else {
					protected22 = nil
				}
				var infoHelpers22 *shared.PartnerStatusAttributeInfoHelpers
				if attributesItem.PartnerStatusAttribute.InfoHelpers != nil {
					hintText22 := new(string)
					if !attributesItem.PartnerStatusAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.PartnerStatusAttribute.InfoHelpers.HintText.IsNull() {
						*hintText22 = attributesItem.PartnerStatusAttribute.InfoHelpers.HintText.ValueString()
					} else {
						hintText22 = nil
					}
					hintTextKey22 := new(string)
					if !attributesItem.PartnerStatusAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.PartnerStatusAttribute.InfoHelpers.HintTextKey.IsNull() {
						*hintTextKey22 = attributesItem.PartnerStatusAttribute.InfoHelpers.HintTextKey.ValueString()
					} else {
						hintTextKey22 = nil
					}
					hintCustomComponent22 := new(string)
					if !attributesItem.PartnerStatusAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.PartnerStatusAttribute.InfoHelpers.HintCustomComponent.IsNull() {
						*hintCustomComponent22 = attributesItem.PartnerStatusAttribute.InfoHelpers.HintCustomComponent.ValueString()
					} else {
						hintCustomComponent22 = nil
					}
					hintTooltipPlacement22 := new(string)
					if !attributesItem.PartnerStatusAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.PartnerStatusAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
						*hintTooltipPlacement22 = attributesItem.PartnerStatusAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
					} else {
						hintTooltipPlacement22 = nil
					}
					infoHelpers22 = &shared.PartnerStatusAttributeInfoHelpers{
						HintText:             hintText22,
						HintTextKey:          hintTextKey22,
						HintCustomComponent:  hintCustomComponent22,
						HintTooltipPlacement: hintTooltipPlacement22,
					}
				}
				typeVar23 := new(shared.PartnerStatusAttributeType)
				if !attributesItem.PartnerStatusAttribute.Type.IsUnknown() && !attributesItem.PartnerStatusAttribute.Type.IsNull() {
					*typeVar23 = shared.PartnerStatusAttributeType(attributesItem.PartnerStatusAttribute.Type.ValueString())
				} else {
					typeVar23 = nil
				}
				partnerStatusAttribute := shared.PartnerStatusAttribute{
					ID:                       id26,
					Name:                     name48,
					Label:                    label28,
					Placeholder:              placeholder22,
					Hidden:                   hidden22,
					ShowInTable:              showInTable22,
					Sortable:                 sortable22,
					Required:                 required22,
					Readonly:                 readonly22,
					Deprecated:               deprecated22,
					DefaultValue:             defaultValue22,
					Group:                    group22,
					Order:                    order22,
					Layout:                   layout22,
					HideLabel:                hideLabel22,
					Icon:                     icon26,
					RenderCondition:          renderCondition23,
					Purpose:                  purpose22,
					Constraints:              constraints22,
					FeatureFlag:              featureFlag25,
					SettingsFlag:             settingsFlag24,
					ValueFormatter:           valueFormatter22,
					PreviewValueFormatter:    previewValueFormatter22,
					EntityBuilderDisableEdit: entityBuilderDisableEdit22,
					Protected:                protected22,
					InfoHelpers:              infoHelpers22,
					Type:                     typeVar23,
				}
				attributes = append(attributes, shared.AttributeInput{
					PartnerStatusAttribute: &partnerStatusAttribute,
				})
			}
			if attributesItem.InvitationEmailAttribute != nil {
				id27 := new(string)
				if !attributesItem.InvitationEmailAttribute.ID.IsUnknown() && !attributesItem.InvitationEmailAttribute.ID.IsNull() {
					*id27 = attributesItem.InvitationEmailAttribute.ID.ValueString()
				} else {
					id27 = nil
				}
				name50 := attributesItem.InvitationEmailAttribute.Name.ValueString()
				label29 := attributesItem.InvitationEmailAttribute.Label.ValueString()
				placeholder23 := new(string)
				if !attributesItem.InvitationEmailAttribute.Placeholder.IsUnknown() && !attributesItem.InvitationEmailAttribute.Placeholder.IsNull() {
					*placeholder23 = attributesItem.InvitationEmailAttribute.Placeholder.ValueString()
				} else {
					placeholder23 = nil
				}
				hidden23 := new(bool)
				if !attributesItem.InvitationEmailAttribute.Hidden.IsUnknown() && !attributesItem.InvitationEmailAttribute.Hidden.IsNull() {
					*hidden23 = attributesItem.InvitationEmailAttribute.Hidden.ValueBool()
				} else {
					hidden23 = nil
				}
				showInTable23 := new(bool)
				if !attributesItem.InvitationEmailAttribute.ShowInTable.IsUnknown() && !attributesItem.InvitationEmailAttribute.ShowInTable.IsNull() {
					*showInTable23 = attributesItem.InvitationEmailAttribute.ShowInTable.ValueBool()
				} else {
					showInTable23 = nil
				}
				sortable23 := new(bool)
				if !attributesItem.InvitationEmailAttribute.Sortable.IsUnknown() && !attributesItem.InvitationEmailAttribute.Sortable.IsNull() {
					*sortable23 = attributesItem.InvitationEmailAttribute.Sortable.ValueBool()
				} else {
					sortable23 = nil
				}
				required23 := new(bool)
				if !attributesItem.InvitationEmailAttribute.Required.IsUnknown() && !attributesItem.InvitationEmailAttribute.Required.IsNull() {
					*required23 = attributesItem.InvitationEmailAttribute.Required.ValueBool()
				} else {
					required23 = nil
				}
				readonly23 := new(bool)
				if !attributesItem.InvitationEmailAttribute.Readonly.IsUnknown() && !attributesItem.InvitationEmailAttribute.Readonly.IsNull() {
					*readonly23 = attributesItem.InvitationEmailAttribute.Readonly.ValueBool()
				} else {
					readonly23 = nil
				}
				deprecated23 := new(bool)
				if !attributesItem.InvitationEmailAttribute.Deprecated.IsUnknown() && !attributesItem.InvitationEmailAttribute.Deprecated.IsNull() {
					*deprecated23 = attributesItem.InvitationEmailAttribute.Deprecated.ValueBool()
				} else {
					deprecated23 = nil
				}
				var defaultValue23 interface{}
				if !attributesItem.InvitationEmailAttribute.DefaultValue.IsUnknown() && !attributesItem.InvitationEmailAttribute.DefaultValue.IsNull() {
					_ = json.Unmarshal([]byte(attributesItem.InvitationEmailAttribute.DefaultValue.ValueString()), &defaultValue23)
				}
				group23 := new(string)
				if !attributesItem.InvitationEmailAttribute.Group.IsUnknown() && !attributesItem.InvitationEmailAttribute.Group.IsNull() {
					*group23 = attributesItem.InvitationEmailAttribute.Group.ValueString()
				} else {
					group23 = nil
				}
				order23 := new(int64)
				if !attributesItem.InvitationEmailAttribute.Order.IsUnknown() && !attributesItem.InvitationEmailAttribute.Order.IsNull() {
					*order23 = attributesItem.InvitationEmailAttribute.Order.ValueInt64()
				} else {
					order23 = nil
				}
				layout23 := new(string)
				if !attributesItem.InvitationEmailAttribute.Layout.IsUnknown() && !attributesItem.InvitationEmailAttribute.Layout.IsNull() {
					*layout23 = attributesItem.InvitationEmailAttribute.Layout.ValueString()
				} else {
					layout23 = nil
				}
				hideLabel23 := new(bool)
				if !attributesItem.InvitationEmailAttribute.HideLabel.IsUnknown() && !attributesItem.InvitationEmailAttribute.HideLabel.IsNull() {
					*hideLabel23 = attributesItem.InvitationEmailAttribute.HideLabel.ValueBool()
				} else {
					hideLabel23 = nil
				}
				icon27 := new(string)
				if !attributesItem.InvitationEmailAttribute.Icon.IsUnknown() && !attributesItem.InvitationEmailAttribute.Icon.IsNull() {
					*icon27 = attributesItem.InvitationEmailAttribute.Icon.ValueString()
				} else {
					icon27 = nil
				}
				renderCondition24 := new(string)
				if !attributesItem.InvitationEmailAttribute.RenderCondition.IsUnknown() && !attributesItem.InvitationEmailAttribute.RenderCondition.IsNull() {
					*renderCondition24 = attributesItem.InvitationEmailAttribute.RenderCondition.ValueString()
				} else {
					renderCondition24 = nil
				}
				var purpose23 []string = []string{}
				for _, purposeItem23 := range attributesItem.InvitationEmailAttribute.Purpose {
					purpose23 = append(purpose23, purposeItem23.ValueString())
				}
				var constraints23 *shared.InvitationEmailAttributeConstraints
				if attributesItem.InvitationEmailAttribute.Constraints != nil {
					constraints23 = &shared.InvitationEmailAttributeConstraints{}
				}
				featureFlag26 := new(string)
				if !attributesItem.InvitationEmailAttribute.FeatureFlag.IsUnknown() && !attributesItem.InvitationEmailAttribute.FeatureFlag.IsNull() {
					*featureFlag26 = attributesItem.InvitationEmailAttribute.FeatureFlag.ValueString()
				} else {
					featureFlag26 = nil
				}
				var settingsFlag25 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem25 := range attributesItem.InvitationEmailAttribute.SettingsFlag {
					name51 := new(string)
					if !settingsFlagItem25.Name.IsUnknown() && !settingsFlagItem25.Name.IsNull() {
						*name51 = settingsFlagItem25.Name.ValueString()
					} else {
						name51 = nil
					}
					enabled25 := new(bool)
					if !settingsFlagItem25.Enabled.IsUnknown() && !settingsFlagItem25.Enabled.IsNull() {
						*enabled25 = settingsFlagItem25.Enabled.ValueBool()
					} else {
						enabled25 = nil
					}
					settingsFlag25 = append(settingsFlag25, shared.SettingFlag{
						Name:    name51,
						Enabled: enabled25,
					})
				}
				valueFormatter23 := new(string)
				if !attributesItem.InvitationEmailAttribute.ValueFormatter.IsUnknown() && !attributesItem.InvitationEmailAttribute.ValueFormatter.IsNull() {
					*valueFormatter23 = attributesItem.InvitationEmailAttribute.ValueFormatter.ValueString()
				} else {
					valueFormatter23 = nil
				}
				previewValueFormatter23 := new(string)
				if !attributesItem.InvitationEmailAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.InvitationEmailAttribute.PreviewValueFormatter.IsNull() {
					*previewValueFormatter23 = attributesItem.InvitationEmailAttribute.PreviewValueFormatter.ValueString()
				} else {
					previewValueFormatter23 = nil
				}
				entityBuilderDisableEdit23 := new(bool)
				if !attributesItem.InvitationEmailAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.InvitationEmailAttribute.EntityBuilderDisableEdit.IsNull() {
					*entityBuilderDisableEdit23 = attributesItem.InvitationEmailAttribute.EntityBuilderDisableEdit.ValueBool()
				} else {
					entityBuilderDisableEdit23 = nil
				}
				protected23 := new(bool)
				if !attributesItem.InvitationEmailAttribute.Protected.IsUnknown() && !attributesItem.InvitationEmailAttribute.Protected.IsNull() {
					*protected23 = attributesItem.InvitationEmailAttribute.Protected.ValueBool()
				} else {
					protected23 = nil
				}
				var infoHelpers23 *shared.InvitationEmailAttributeInfoHelpers
				if attributesItem.InvitationEmailAttribute.InfoHelpers != nil {
					hintText23 := new(string)
					if !attributesItem.InvitationEmailAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.InvitationEmailAttribute.InfoHelpers.HintText.IsNull() {
						*hintText23 = attributesItem.InvitationEmailAttribute.InfoHelpers.HintText.ValueString()
					} else {
						hintText23 = nil
					}
					hintTextKey23 := new(string)
					if !attributesItem.InvitationEmailAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.InvitationEmailAttribute.InfoHelpers.HintTextKey.IsNull() {
						*hintTextKey23 = attributesItem.InvitationEmailAttribute.InfoHelpers.HintTextKey.ValueString()
					} else {
						hintTextKey23 = nil
					}
					hintCustomComponent23 := new(string)
					if !attributesItem.InvitationEmailAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.InvitationEmailAttribute.InfoHelpers.HintCustomComponent.IsNull() {
						*hintCustomComponent23 = attributesItem.InvitationEmailAttribute.InfoHelpers.HintCustomComponent.ValueString()
					} else {
						hintCustomComponent23 = nil
					}
					hintTooltipPlacement23 := new(string)
					if !attributesItem.InvitationEmailAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.InvitationEmailAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
						*hintTooltipPlacement23 = attributesItem.InvitationEmailAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
					} else {
						hintTooltipPlacement23 = nil
					}
					infoHelpers23 = &shared.InvitationEmailAttributeInfoHelpers{
						HintText:             hintText23,
						HintTextKey:          hintTextKey23,
						HintCustomComponent:  hintCustomComponent23,
						HintTooltipPlacement: hintTooltipPlacement23,
					}
				}
				typeVar24 := new(shared.InvitationEmailAttributeType)
				if !attributesItem.InvitationEmailAttribute.Type.IsUnknown() && !attributesItem.InvitationEmailAttribute.Type.IsNull() {
					*typeVar24 = shared.InvitationEmailAttributeType(attributesItem.InvitationEmailAttribute.Type.ValueString())
				} else {
					typeVar24 = nil
				}
				invitationEmailAttribute := shared.InvitationEmailAttribute{
					ID:                       id27,
					Name:                     name50,
					Label:                    label29,
					Placeholder:              placeholder23,
					Hidden:                   hidden23,
					ShowInTable:              showInTable23,
					Sortable:                 sortable23,
					Required:                 required23,
					Readonly:                 readonly23,
					Deprecated:               deprecated23,
					DefaultValue:             defaultValue23,
					Group:                    group23,
					Order:                    order23,
					Layout:                   layout23,
					HideLabel:                hideLabel23,
					Icon:                     icon27,
					RenderCondition:          renderCondition24,
					Purpose:                  purpose23,
					Constraints:              constraints23,
					FeatureFlag:              featureFlag26,
					SettingsFlag:             settingsFlag25,
					ValueFormatter:           valueFormatter23,
					PreviewValueFormatter:    previewValueFormatter23,
					EntityBuilderDisableEdit: entityBuilderDisableEdit23,
					Protected:                protected23,
					InfoHelpers:              infoHelpers23,
					Type:                     typeVar24,
				}
				attributes = append(attributes, shared.AttributeInput{
					InvitationEmailAttribute: &invitationEmailAttribute,
				})
			}
			if attributesItem.AutomationAttribute != nil {
				id28 := new(string)
				if !attributesItem.AutomationAttribute.ID.IsUnknown() && !attributesItem.AutomationAttribute.ID.IsNull() {
					*id28 = attributesItem.AutomationAttribute.ID.ValueString()
				} else {
					id28 = nil
				}
				name52 := attributesItem.AutomationAttribute.Name.ValueString()
				label30 := attributesItem.AutomationAttribute.Label.ValueString()
				placeholder24 := new(string)
				if !attributesItem.AutomationAttribute.Placeholder.IsUnknown() && !attributesItem.AutomationAttribute.Placeholder.IsNull() {
					*placeholder24 = attributesItem.AutomationAttribute.Placeholder.ValueString()
				} else {
					placeholder24 = nil
				}
				hidden24 := new(bool)
				if !attributesItem.AutomationAttribute.Hidden.IsUnknown() && !attributesItem.AutomationAttribute.Hidden.IsNull() {
					*hidden24 = attributesItem.AutomationAttribute.Hidden.ValueBool()
				} else {
					hidden24 = nil
				}
				showInTable24 := new(bool)
				if !attributesItem.AutomationAttribute.ShowInTable.IsUnknown() && !attributesItem.AutomationAttribute.ShowInTable.IsNull() {
					*showInTable24 = attributesItem.AutomationAttribute.ShowInTable.ValueBool()
				} else {
					showInTable24 = nil
				}
				sortable24 := new(bool)
				if !attributesItem.AutomationAttribute.Sortable.IsUnknown() && !attributesItem.AutomationAttribute.Sortable.IsNull() {
					*sortable24 = attributesItem.AutomationAttribute.Sortable.ValueBool()
				} else {
					sortable24 = nil
				}
				required24 := new(bool)
				if !attributesItem.AutomationAttribute.Required.IsUnknown() && !attributesItem.AutomationAttribute.Required.IsNull() {
					*required24 = attributesItem.AutomationAttribute.Required.ValueBool()
				} else {
					required24 = nil
				}
				readonly24 := new(bool)
				if !attributesItem.AutomationAttribute.Readonly.IsUnknown() && !attributesItem.AutomationAttribute.Readonly.IsNull() {
					*readonly24 = attributesItem.AutomationAttribute.Readonly.ValueBool()
				} else {
					readonly24 = nil
				}
				deprecated24 := new(bool)
				if !attributesItem.AutomationAttribute.Deprecated.IsUnknown() && !attributesItem.AutomationAttribute.Deprecated.IsNull() {
					*deprecated24 = attributesItem.AutomationAttribute.Deprecated.ValueBool()
				} else {
					deprecated24 = nil
				}
				var defaultValue24 interface{}
				if !attributesItem.AutomationAttribute.DefaultValue.IsUnknown() && !attributesItem.AutomationAttribute.DefaultValue.IsNull() {
					_ = json.Unmarshal([]byte(attributesItem.AutomationAttribute.DefaultValue.ValueString()), &defaultValue24)
				}
				group24 := new(string)
				if !attributesItem.AutomationAttribute.Group.IsUnknown() && !attributesItem.AutomationAttribute.Group.IsNull() {
					*group24 = attributesItem.AutomationAttribute.Group.ValueString()
				} else {
					group24 = nil
				}
				order24 := new(int64)
				if !attributesItem.AutomationAttribute.Order.IsUnknown() && !attributesItem.AutomationAttribute.Order.IsNull() {
					*order24 = attributesItem.AutomationAttribute.Order.ValueInt64()
				} else {
					order24 = nil
				}
				layout24 := new(string)
				if !attributesItem.AutomationAttribute.Layout.IsUnknown() && !attributesItem.AutomationAttribute.Layout.IsNull() {
					*layout24 = attributesItem.AutomationAttribute.Layout.ValueString()
				} else {
					layout24 = nil
				}
				hideLabel24 := new(bool)
				if !attributesItem.AutomationAttribute.HideLabel.IsUnknown() && !attributesItem.AutomationAttribute.HideLabel.IsNull() {
					*hideLabel24 = attributesItem.AutomationAttribute.HideLabel.ValueBool()
				} else {
					hideLabel24 = nil
				}
				icon28 := new(string)
				if !attributesItem.AutomationAttribute.Icon.IsUnknown() && !attributesItem.AutomationAttribute.Icon.IsNull() {
					*icon28 = attributesItem.AutomationAttribute.Icon.ValueString()
				} else {
					icon28 = nil
				}
				renderCondition25 := new(string)
				if !attributesItem.AutomationAttribute.RenderCondition.IsUnknown() && !attributesItem.AutomationAttribute.RenderCondition.IsNull() {
					*renderCondition25 = attributesItem.AutomationAttribute.RenderCondition.ValueString()
				} else {
					renderCondition25 = nil
				}
				var purpose24 []string = []string{}
				for _, purposeItem24 := range attributesItem.AutomationAttribute.Purpose {
					purpose24 = append(purpose24, purposeItem24.ValueString())
				}
				var constraints24 *shared.AutomationAttributeConstraints
				if attributesItem.AutomationAttribute.Constraints != nil {
					constraints24 = &shared.AutomationAttributeConstraints{}
				}
				featureFlag27 := new(string)
				if !attributesItem.AutomationAttribute.FeatureFlag.IsUnknown() && !attributesItem.AutomationAttribute.FeatureFlag.IsNull() {
					*featureFlag27 = attributesItem.AutomationAttribute.FeatureFlag.ValueString()
				} else {
					featureFlag27 = nil
				}
				var settingsFlag26 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem26 := range attributesItem.AutomationAttribute.SettingsFlag {
					name53 := new(string)
					if !settingsFlagItem26.Name.IsUnknown() && !settingsFlagItem26.Name.IsNull() {
						*name53 = settingsFlagItem26.Name.ValueString()
					} else {
						name53 = nil
					}
					enabled26 := new(bool)
					if !settingsFlagItem26.Enabled.IsUnknown() && !settingsFlagItem26.Enabled.IsNull() {
						*enabled26 = settingsFlagItem26.Enabled.ValueBool()
					} else {
						enabled26 = nil
					}
					settingsFlag26 = append(settingsFlag26, shared.SettingFlag{
						Name:    name53,
						Enabled: enabled26,
					})
				}
				valueFormatter24 := new(string)
				if !attributesItem.AutomationAttribute.ValueFormatter.IsUnknown() && !attributesItem.AutomationAttribute.ValueFormatter.IsNull() {
					*valueFormatter24 = attributesItem.AutomationAttribute.ValueFormatter.ValueString()
				} else {
					valueFormatter24 = nil
				}
				previewValueFormatter24 := new(string)
				if !attributesItem.AutomationAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.AutomationAttribute.PreviewValueFormatter.IsNull() {
					*previewValueFormatter24 = attributesItem.AutomationAttribute.PreviewValueFormatter.ValueString()
				} else {
					previewValueFormatter24 = nil
				}
				entityBuilderDisableEdit24 := new(bool)
				if !attributesItem.AutomationAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.AutomationAttribute.EntityBuilderDisableEdit.IsNull() {
					*entityBuilderDisableEdit24 = attributesItem.AutomationAttribute.EntityBuilderDisableEdit.ValueBool()
				} else {
					entityBuilderDisableEdit24 = nil
				}
				protected24 := new(bool)
				if !attributesItem.AutomationAttribute.Protected.IsUnknown() && !attributesItem.AutomationAttribute.Protected.IsNull() {
					*protected24 = attributesItem.AutomationAttribute.Protected.ValueBool()
				} else {
					protected24 = nil
				}
				var infoHelpers24 *shared.AutomationAttributeInfoHelpers
				if attributesItem.AutomationAttribute.InfoHelpers != nil {
					hintText24 := new(string)
					if !attributesItem.AutomationAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.AutomationAttribute.InfoHelpers.HintText.IsNull() {
						*hintText24 = attributesItem.AutomationAttribute.InfoHelpers.HintText.ValueString()
					} else {
						hintText24 = nil
					}
					hintTextKey24 := new(string)
					if !attributesItem.AutomationAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.AutomationAttribute.InfoHelpers.HintTextKey.IsNull() {
						*hintTextKey24 = attributesItem.AutomationAttribute.InfoHelpers.HintTextKey.ValueString()
					} else {
						hintTextKey24 = nil
					}
					hintCustomComponent24 := new(string)
					if !attributesItem.AutomationAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.AutomationAttribute.InfoHelpers.HintCustomComponent.IsNull() {
						*hintCustomComponent24 = attributesItem.AutomationAttribute.InfoHelpers.HintCustomComponent.ValueString()
					} else {
						hintCustomComponent24 = nil
					}
					hintTooltipPlacement24 := new(string)
					if !attributesItem.AutomationAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.AutomationAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
						*hintTooltipPlacement24 = attributesItem.AutomationAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
					} else {
						hintTooltipPlacement24 = nil
					}
					infoHelpers24 = &shared.AutomationAttributeInfoHelpers{
						HintText:             hintText24,
						HintTextKey:          hintTextKey24,
						HintCustomComponent:  hintCustomComponent24,
						HintTooltipPlacement: hintTooltipPlacement24,
					}
				}
				typeVar25 := new(shared.AutomationAttributeType)
				if !attributesItem.AutomationAttribute.Type.IsUnknown() && !attributesItem.AutomationAttribute.Type.IsNull() {
					*typeVar25 = shared.AutomationAttributeType(attributesItem.AutomationAttribute.Type.ValueString())
				} else {
					typeVar25 = nil
				}
				automationAttribute := shared.AutomationAttribute{
					ID:                       id28,
					Name:                     name52,
					Label:                    label30,
					Placeholder:              placeholder24,
					Hidden:                   hidden24,
					ShowInTable:              showInTable24,
					Sortable:                 sortable24,
					Required:                 required24,
					Readonly:                 readonly24,
					Deprecated:               deprecated24,
					DefaultValue:             defaultValue24,
					Group:                    group24,
					Order:                    order24,
					Layout:                   layout24,
					HideLabel:                hideLabel24,
					Icon:                     icon28,
					RenderCondition:          renderCondition25,
					Purpose:                  purpose24,
					Constraints:              constraints24,
					FeatureFlag:              featureFlag27,
					SettingsFlag:             settingsFlag26,
					ValueFormatter:           valueFormatter24,
					PreviewValueFormatter:    previewValueFormatter24,
					EntityBuilderDisableEdit: entityBuilderDisableEdit24,
					Protected:                protected24,
					InfoHelpers:              infoHelpers24,
					Type:                     typeVar25,
				}
				attributes = append(attributes, shared.AttributeInput{
					AutomationAttribute: &automationAttribute,
				})
			}
			if attributesItem.InternalUserAttribute != nil {
				id29 := new(string)
				if !attributesItem.InternalUserAttribute.ID.IsUnknown() && !attributesItem.InternalUserAttribute.ID.IsNull() {
					*id29 = attributesItem.InternalUserAttribute.ID.ValueString()
				} else {
					id29 = nil
				}
				name54 := attributesItem.InternalUserAttribute.Name.ValueString()
				label31 := attributesItem.InternalUserAttribute.Label.ValueString()
				placeholder25 := new(string)
				if !attributesItem.InternalUserAttribute.Placeholder.IsUnknown() && !attributesItem.InternalUserAttribute.Placeholder.IsNull() {
					*placeholder25 = attributesItem.InternalUserAttribute.Placeholder.ValueString()
				} else {
					placeholder25 = nil
				}
				hidden25 := new(bool)
				if !attributesItem.InternalUserAttribute.Hidden.IsUnknown() && !attributesItem.InternalUserAttribute.Hidden.IsNull() {
					*hidden25 = attributesItem.InternalUserAttribute.Hidden.ValueBool()
				} else {
					hidden25 = nil
				}
				showInTable25 := new(bool)
				if !attributesItem.InternalUserAttribute.ShowInTable.IsUnknown() && !attributesItem.InternalUserAttribute.ShowInTable.IsNull() {
					*showInTable25 = attributesItem.InternalUserAttribute.ShowInTable.ValueBool()
				} else {
					showInTable25 = nil
				}
				sortable25 := new(bool)
				if !attributesItem.InternalUserAttribute.Sortable.IsUnknown() && !attributesItem.InternalUserAttribute.Sortable.IsNull() {
					*sortable25 = attributesItem.InternalUserAttribute.Sortable.ValueBool()
				} else {
					sortable25 = nil
				}
				required25 := new(bool)
				if !attributesItem.InternalUserAttribute.Required.IsUnknown() && !attributesItem.InternalUserAttribute.Required.IsNull() {
					*required25 = attributesItem.InternalUserAttribute.Required.ValueBool()
				} else {
					required25 = nil
				}
				readonly25 := new(bool)
				if !attributesItem.InternalUserAttribute.Readonly.IsUnknown() && !attributesItem.InternalUserAttribute.Readonly.IsNull() {
					*readonly25 = attributesItem.InternalUserAttribute.Readonly.ValueBool()
				} else {
					readonly25 = nil
				}
				deprecated25 := new(bool)
				if !attributesItem.InternalUserAttribute.Deprecated.IsUnknown() && !attributesItem.InternalUserAttribute.Deprecated.IsNull() {
					*deprecated25 = attributesItem.InternalUserAttribute.Deprecated.ValueBool()
				} else {
					deprecated25 = nil
				}
				var defaultValue25 interface{}
				if !attributesItem.InternalUserAttribute.DefaultValue.IsUnknown() && !attributesItem.InternalUserAttribute.DefaultValue.IsNull() {
					_ = json.Unmarshal([]byte(attributesItem.InternalUserAttribute.DefaultValue.ValueString()), &defaultValue25)
				}
				group25 := new(string)
				if !attributesItem.InternalUserAttribute.Group.IsUnknown() && !attributesItem.InternalUserAttribute.Group.IsNull() {
					*group25 = attributesItem.InternalUserAttribute.Group.ValueString()
				} else {
					group25 = nil
				}
				order25 := new(int64)
				if !attributesItem.InternalUserAttribute.Order.IsUnknown() && !attributesItem.InternalUserAttribute.Order.IsNull() {
					*order25 = attributesItem.InternalUserAttribute.Order.ValueInt64()
				} else {
					order25 = nil
				}
				layout25 := new(string)
				if !attributesItem.InternalUserAttribute.Layout.IsUnknown() && !attributesItem.InternalUserAttribute.Layout.IsNull() {
					*layout25 = attributesItem.InternalUserAttribute.Layout.ValueString()
				} else {
					layout25 = nil
				}
				hideLabel25 := new(bool)
				if !attributesItem.InternalUserAttribute.HideLabel.IsUnknown() && !attributesItem.InternalUserAttribute.HideLabel.IsNull() {
					*hideLabel25 = attributesItem.InternalUserAttribute.HideLabel.ValueBool()
				} else {
					hideLabel25 = nil
				}
				icon29 := new(string)
				if !attributesItem.InternalUserAttribute.Icon.IsUnknown() && !attributesItem.InternalUserAttribute.Icon.IsNull() {
					*icon29 = attributesItem.InternalUserAttribute.Icon.ValueString()
				} else {
					icon29 = nil
				}
				renderCondition26 := new(string)
				if !attributesItem.InternalUserAttribute.RenderCondition.IsUnknown() && !attributesItem.InternalUserAttribute.RenderCondition.IsNull() {
					*renderCondition26 = attributesItem.InternalUserAttribute.RenderCondition.ValueString()
				} else {
					renderCondition26 = nil
				}
				var purpose25 []string = []string{}
				for _, purposeItem25 := range attributesItem.InternalUserAttribute.Purpose {
					purpose25 = append(purpose25, purposeItem25.ValueString())
				}
				var constraints25 *shared.InternalUserAttributeConstraints
				if attributesItem.InternalUserAttribute.Constraints != nil {
					constraints25 = &shared.InternalUserAttributeConstraints{}
				}
				featureFlag28 := new(string)
				if !attributesItem.InternalUserAttribute.FeatureFlag.IsUnknown() && !attributesItem.InternalUserAttribute.FeatureFlag.IsNull() {
					*featureFlag28 = attributesItem.InternalUserAttribute.FeatureFlag.ValueString()
				} else {
					featureFlag28 = nil
				}
				var settingsFlag27 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem27 := range attributesItem.InternalUserAttribute.SettingsFlag {
					name55 := new(string)
					if !settingsFlagItem27.Name.IsUnknown() && !settingsFlagItem27.Name.IsNull() {
						*name55 = settingsFlagItem27.Name.ValueString()
					} else {
						name55 = nil
					}
					enabled27 := new(bool)
					if !settingsFlagItem27.Enabled.IsUnknown() && !settingsFlagItem27.Enabled.IsNull() {
						*enabled27 = settingsFlagItem27.Enabled.ValueBool()
					} else {
						enabled27 = nil
					}
					settingsFlag27 = append(settingsFlag27, shared.SettingFlag{
						Name:    name55,
						Enabled: enabled27,
					})
				}
				valueFormatter25 := new(string)
				if !attributesItem.InternalUserAttribute.ValueFormatter.IsUnknown() && !attributesItem.InternalUserAttribute.ValueFormatter.IsNull() {
					*valueFormatter25 = attributesItem.InternalUserAttribute.ValueFormatter.ValueString()
				} else {
					valueFormatter25 = nil
				}
				previewValueFormatter25 := new(string)
				if !attributesItem.InternalUserAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.InternalUserAttribute.PreviewValueFormatter.IsNull() {
					*previewValueFormatter25 = attributesItem.InternalUserAttribute.PreviewValueFormatter.ValueString()
				} else {
					previewValueFormatter25 = nil
				}
				entityBuilderDisableEdit25 := new(bool)
				if !attributesItem.InternalUserAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.InternalUserAttribute.EntityBuilderDisableEdit.IsNull() {
					*entityBuilderDisableEdit25 = attributesItem.InternalUserAttribute.EntityBuilderDisableEdit.ValueBool()
				} else {
					entityBuilderDisableEdit25 = nil
				}
				protected25 := new(bool)
				if !attributesItem.InternalUserAttribute.Protected.IsUnknown() && !attributesItem.InternalUserAttribute.Protected.IsNull() {
					*protected25 = attributesItem.InternalUserAttribute.Protected.ValueBool()
				} else {
					protected25 = nil
				}
				var infoHelpers25 *shared.InternalUserAttributeInfoHelpers
				if attributesItem.InternalUserAttribute.InfoHelpers != nil {
					hintText25 := new(string)
					if !attributesItem.InternalUserAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.InternalUserAttribute.InfoHelpers.HintText.IsNull() {
						*hintText25 = attributesItem.InternalUserAttribute.InfoHelpers.HintText.ValueString()
					} else {
						hintText25 = nil
					}
					hintTextKey25 := new(string)
					if !attributesItem.InternalUserAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.InternalUserAttribute.InfoHelpers.HintTextKey.IsNull() {
						*hintTextKey25 = attributesItem.InternalUserAttribute.InfoHelpers.HintTextKey.ValueString()
					} else {
						hintTextKey25 = nil
					}
					hintCustomComponent25 := new(string)
					if !attributesItem.InternalUserAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.InternalUserAttribute.InfoHelpers.HintCustomComponent.IsNull() {
						*hintCustomComponent25 = attributesItem.InternalUserAttribute.InfoHelpers.HintCustomComponent.ValueString()
					} else {
						hintCustomComponent25 = nil
					}
					hintTooltipPlacement25 := new(string)
					if !attributesItem.InternalUserAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.InternalUserAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
						*hintTooltipPlacement25 = attributesItem.InternalUserAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
					} else {
						hintTooltipPlacement25 = nil
					}
					infoHelpers25 = &shared.InternalUserAttributeInfoHelpers{
						HintText:             hintText25,
						HintTextKey:          hintTextKey25,
						HintCustomComponent:  hintCustomComponent25,
						HintTooltipPlacement: hintTooltipPlacement25,
					}
				}
				typeVar26 := new(shared.InternalUserAttributeType)
				if !attributesItem.InternalUserAttribute.Type.IsUnknown() && !attributesItem.InternalUserAttribute.Type.IsNull() {
					*typeVar26 = shared.InternalUserAttributeType(attributesItem.InternalUserAttribute.Type.ValueString())
				} else {
					typeVar26 = nil
				}
				internalUserAttribute := shared.InternalUserAttribute{
					ID:                       id29,
					Name:                     name54,
					Label:                    label31,
					Placeholder:              placeholder25,
					Hidden:                   hidden25,
					ShowInTable:              showInTable25,
					Sortable:                 sortable25,
					Required:                 required25,
					Readonly:                 readonly25,
					Deprecated:               deprecated25,
					DefaultValue:             defaultValue25,
					Group:                    group25,
					Order:                    order25,
					Layout:                   layout25,
					HideLabel:                hideLabel25,
					Icon:                     icon29,
					RenderCondition:          renderCondition26,
					Purpose:                  purpose25,
					Constraints:              constraints25,
					FeatureFlag:              featureFlag28,
					SettingsFlag:             settingsFlag27,
					ValueFormatter:           valueFormatter25,
					PreviewValueFormatter:    previewValueFormatter25,
					EntityBuilderDisableEdit: entityBuilderDisableEdit25,
					Protected:                protected25,
					InfoHelpers:              infoHelpers25,
					Type:                     typeVar26,
				}
				attributes = append(attributes, shared.AttributeInput{
					InternalUserAttribute: &internalUserAttribute,
				})
			}
			if attributesItem.PurposeAttribute != nil {
				id30 := new(string)
				if !attributesItem.PurposeAttribute.ID.IsUnknown() && !attributesItem.PurposeAttribute.ID.IsNull() {
					*id30 = attributesItem.PurposeAttribute.ID.ValueString()
				} else {
					id30 = nil
				}
				name56 := attributesItem.PurposeAttribute.Name.ValueString()
				label32 := attributesItem.PurposeAttribute.Label.ValueString()
				placeholder26 := new(string)
				if !attributesItem.PurposeAttribute.Placeholder.IsUnknown() && !attributesItem.PurposeAttribute.Placeholder.IsNull() {
					*placeholder26 = attributesItem.PurposeAttribute.Placeholder.ValueString()
				} else {
					placeholder26 = nil
				}
				hidden26 := new(bool)
				if !attributesItem.PurposeAttribute.Hidden.IsUnknown() && !attributesItem.PurposeAttribute.Hidden.IsNull() {
					*hidden26 = attributesItem.PurposeAttribute.Hidden.ValueBool()
				} else {
					hidden26 = nil
				}
				showInTable26 := new(bool)
				if !attributesItem.PurposeAttribute.ShowInTable.IsUnknown() && !attributesItem.PurposeAttribute.ShowInTable.IsNull() {
					*showInTable26 = attributesItem.PurposeAttribute.ShowInTable.ValueBool()
				} else {
					showInTable26 = nil
				}
				sortable26 := new(bool)
				if !attributesItem.PurposeAttribute.Sortable.IsUnknown() && !attributesItem.PurposeAttribute.Sortable.IsNull() {
					*sortable26 = attributesItem.PurposeAttribute.Sortable.ValueBool()
				} else {
					sortable26 = nil
				}
				required26 := new(bool)
				if !attributesItem.PurposeAttribute.Required.IsUnknown() && !attributesItem.PurposeAttribute.Required.IsNull() {
					*required26 = attributesItem.PurposeAttribute.Required.ValueBool()
				} else {
					required26 = nil
				}
				readonly26 := new(bool)
				if !attributesItem.PurposeAttribute.Readonly.IsUnknown() && !attributesItem.PurposeAttribute.Readonly.IsNull() {
					*readonly26 = attributesItem.PurposeAttribute.Readonly.ValueBool()
				} else {
					readonly26 = nil
				}
				deprecated26 := new(bool)
				if !attributesItem.PurposeAttribute.Deprecated.IsUnknown() && !attributesItem.PurposeAttribute.Deprecated.IsNull() {
					*deprecated26 = attributesItem.PurposeAttribute.Deprecated.ValueBool()
				} else {
					deprecated26 = nil
				}
				var defaultValue26 interface{}
				if !attributesItem.PurposeAttribute.DefaultValue.IsUnknown() && !attributesItem.PurposeAttribute.DefaultValue.IsNull() {
					_ = json.Unmarshal([]byte(attributesItem.PurposeAttribute.DefaultValue.ValueString()), &defaultValue26)
				}
				group26 := new(string)
				if !attributesItem.PurposeAttribute.Group.IsUnknown() && !attributesItem.PurposeAttribute.Group.IsNull() {
					*group26 = attributesItem.PurposeAttribute.Group.ValueString()
				} else {
					group26 = nil
				}
				order26 := new(int64)
				if !attributesItem.PurposeAttribute.Order.IsUnknown() && !attributesItem.PurposeAttribute.Order.IsNull() {
					*order26 = attributesItem.PurposeAttribute.Order.ValueInt64()
				} else {
					order26 = nil
				}
				layout26 := new(string)
				if !attributesItem.PurposeAttribute.Layout.IsUnknown() && !attributesItem.PurposeAttribute.Layout.IsNull() {
					*layout26 = attributesItem.PurposeAttribute.Layout.ValueString()
				} else {
					layout26 = nil
				}
				hideLabel26 := new(bool)
				if !attributesItem.PurposeAttribute.HideLabel.IsUnknown() && !attributesItem.PurposeAttribute.HideLabel.IsNull() {
					*hideLabel26 = attributesItem.PurposeAttribute.HideLabel.ValueBool()
				} else {
					hideLabel26 = nil
				}
				icon30 := new(string)
				if !attributesItem.PurposeAttribute.Icon.IsUnknown() && !attributesItem.PurposeAttribute.Icon.IsNull() {
					*icon30 = attributesItem.PurposeAttribute.Icon.ValueString()
				} else {
					icon30 = nil
				}
				renderCondition27 := new(string)
				if !attributesItem.PurposeAttribute.RenderCondition.IsUnknown() && !attributesItem.PurposeAttribute.RenderCondition.IsNull() {
					*renderCondition27 = attributesItem.PurposeAttribute.RenderCondition.ValueString()
				} else {
					renderCondition27 = nil
				}
				var purpose26 []string = []string{}
				for _, purposeItem26 := range attributesItem.PurposeAttribute.Purpose {
					purpose26 = append(purpose26, purposeItem26.ValueString())
				}
				var constraints26 *shared.PurposeAttributeConstraints
				if attributesItem.PurposeAttribute.Constraints != nil {
					constraints26 = &shared.PurposeAttributeConstraints{}
				}
				featureFlag29 := new(string)
				if !attributesItem.PurposeAttribute.FeatureFlag.IsUnknown() && !attributesItem.PurposeAttribute.FeatureFlag.IsNull() {
					*featureFlag29 = attributesItem.PurposeAttribute.FeatureFlag.ValueString()
				} else {
					featureFlag29 = nil
				}
				var settingsFlag28 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem28 := range attributesItem.PurposeAttribute.SettingsFlag {
					name57 := new(string)
					if !settingsFlagItem28.Name.IsUnknown() && !settingsFlagItem28.Name.IsNull() {
						*name57 = settingsFlagItem28.Name.ValueString()
					} else {
						name57 = nil
					}
					enabled28 := new(bool)
					if !settingsFlagItem28.Enabled.IsUnknown() && !settingsFlagItem28.Enabled.IsNull() {
						*enabled28 = settingsFlagItem28.Enabled.ValueBool()
					} else {
						enabled28 = nil
					}
					settingsFlag28 = append(settingsFlag28, shared.SettingFlag{
						Name:    name57,
						Enabled: enabled28,
					})
				}
				valueFormatter26 := new(string)
				if !attributesItem.PurposeAttribute.ValueFormatter.IsUnknown() && !attributesItem.PurposeAttribute.ValueFormatter.IsNull() {
					*valueFormatter26 = attributesItem.PurposeAttribute.ValueFormatter.ValueString()
				} else {
					valueFormatter26 = nil
				}
				previewValueFormatter26 := new(string)
				if !attributesItem.PurposeAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.PurposeAttribute.PreviewValueFormatter.IsNull() {
					*previewValueFormatter26 = attributesItem.PurposeAttribute.PreviewValueFormatter.ValueString()
				} else {
					previewValueFormatter26 = nil
				}
				entityBuilderDisableEdit26 := new(bool)
				if !attributesItem.PurposeAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.PurposeAttribute.EntityBuilderDisableEdit.IsNull() {
					*entityBuilderDisableEdit26 = attributesItem.PurposeAttribute.EntityBuilderDisableEdit.ValueBool()
				} else {
					entityBuilderDisableEdit26 = nil
				}
				protected26 := new(bool)
				if !attributesItem.PurposeAttribute.Protected.IsUnknown() && !attributesItem.PurposeAttribute.Protected.IsNull() {
					*protected26 = attributesItem.PurposeAttribute.Protected.ValueBool()
				} else {
					protected26 = nil
				}
				var infoHelpers26 *shared.PurposeAttributeInfoHelpers
				if attributesItem.PurposeAttribute.InfoHelpers != nil {
					hintText26 := new(string)
					if !attributesItem.PurposeAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.PurposeAttribute.InfoHelpers.HintText.IsNull() {
						*hintText26 = attributesItem.PurposeAttribute.InfoHelpers.HintText.ValueString()
					} else {
						hintText26 = nil
					}
					hintTextKey26 := new(string)
					if !attributesItem.PurposeAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.PurposeAttribute.InfoHelpers.HintTextKey.IsNull() {
						*hintTextKey26 = attributesItem.PurposeAttribute.InfoHelpers.HintTextKey.ValueString()
					} else {
						hintTextKey26 = nil
					}
					hintCustomComponent26 := new(string)
					if !attributesItem.PurposeAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.PurposeAttribute.InfoHelpers.HintCustomComponent.IsNull() {
						*hintCustomComponent26 = attributesItem.PurposeAttribute.InfoHelpers.HintCustomComponent.ValueString()
					} else {
						hintCustomComponent26 = nil
					}
					hintTooltipPlacement26 := new(string)
					if !attributesItem.PurposeAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.PurposeAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
						*hintTooltipPlacement26 = attributesItem.PurposeAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
					} else {
						hintTooltipPlacement26 = nil
					}
					infoHelpers26 = &shared.PurposeAttributeInfoHelpers{
						HintText:             hintText26,
						HintTextKey:          hintTextKey26,
						HintCustomComponent:  hintCustomComponent26,
						HintTooltipPlacement: hintTooltipPlacement26,
					}
				}
				slug1 := new(string)
				if !attributesItem.PurposeAttribute.Slug.IsUnknown() && !attributesItem.PurposeAttribute.Slug.IsNull() {
					*slug1 = attributesItem.PurposeAttribute.Slug.ValueString()
				} else {
					slug1 = nil
				}
				var parents []string = []string{}
				for _, parentsItem := range attributesItem.PurposeAttribute.Parents {
					parents = append(parents, parentsItem.ValueString())
				}
				createdAt := new(time.Time)
				if !attributesItem.PurposeAttribute.CreatedAt.IsUnknown() && !attributesItem.PurposeAttribute.CreatedAt.IsNull() {
					*createdAt, _ = time.Parse(time.RFC3339Nano, attributesItem.PurposeAttribute.CreatedAt.ValueString())
				} else {
					createdAt = nil
				}
				updatedAt := new(time.Time)
				if !attributesItem.PurposeAttribute.UpdatedAt.IsUnknown() && !attributesItem.PurposeAttribute.UpdatedAt.IsNull() {
					*updatedAt, _ = time.Parse(time.RFC3339Nano, attributesItem.PurposeAttribute.UpdatedAt.ValueString())
				} else {
					updatedAt = nil
				}
				typeVar27 := new(shared.PurposeAttributeType)
				if !attributesItem.PurposeAttribute.Type.IsUnknown() && !attributesItem.PurposeAttribute.Type.IsNull() {
					*typeVar27 = shared.PurposeAttributeType(attributesItem.PurposeAttribute.Type.ValueString())
				} else {
					typeVar27 = nil
				}
				purposeAttribute := shared.PurposeAttribute{
					ID:                       id30,
					Name:                     name56,
					Label:                    label32,
					Placeholder:              placeholder26,
					Hidden:                   hidden26,
					ShowInTable:              showInTable26,
					Sortable:                 sortable26,
					Required:                 required26,
					Readonly:                 readonly26,
					Deprecated:               deprecated26,
					DefaultValue:             defaultValue26,
					Group:                    group26,
					Order:                    order26,
					Layout:                   layout26,
					HideLabel:                hideLabel26,
					Icon:                     icon30,
					RenderCondition:          renderCondition27,
					Purpose:                  purpose26,
					Constraints:              constraints26,
					FeatureFlag:              featureFlag29,
					SettingsFlag:             settingsFlag28,
					ValueFormatter:           valueFormatter26,
					PreviewValueFormatter:    previewValueFormatter26,
					EntityBuilderDisableEdit: entityBuilderDisableEdit26,
					Protected:                protected26,
					InfoHelpers:              infoHelpers26,
					Slug:                     slug1,
					Parents:                  parents,
					CreatedAt:                createdAt,
					UpdatedAt:                updatedAt,
					Type:                     typeVar27,
				}
				attributes = append(attributes, shared.AttributeInput{
					PurposeAttribute: &purposeAttribute,
				})
			}
			if attributesItem.PartnerOrganisationAttribute != nil {
				id31 := new(string)
				if !attributesItem.PartnerOrganisationAttribute.ID.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.ID.IsNull() {
					*id31 = attributesItem.PartnerOrganisationAttribute.ID.ValueString()
				} else {
					id31 = nil
				}
				name58 := attributesItem.PartnerOrganisationAttribute.Name.ValueString()
				label33 := attributesItem.PartnerOrganisationAttribute.Label.ValueString()
				placeholder27 := new(string)
				if !attributesItem.PartnerOrganisationAttribute.Placeholder.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.Placeholder.IsNull() {
					*placeholder27 = attributesItem.PartnerOrganisationAttribute.Placeholder.ValueString()
				} else {
					placeholder27 = nil
				}
				hidden27 := new(bool)
				if !attributesItem.PartnerOrganisationAttribute.Hidden.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.Hidden.IsNull() {
					*hidden27 = attributesItem.PartnerOrganisationAttribute.Hidden.ValueBool()
				} else {
					hidden27 = nil
				}
				showInTable27 := new(bool)
				if !attributesItem.PartnerOrganisationAttribute.ShowInTable.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.ShowInTable.IsNull() {
					*showInTable27 = attributesItem.PartnerOrganisationAttribute.ShowInTable.ValueBool()
				} else {
					showInTable27 = nil
				}
				sortable27 := new(bool)
				if !attributesItem.PartnerOrganisationAttribute.Sortable.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.Sortable.IsNull() {
					*sortable27 = attributesItem.PartnerOrganisationAttribute.Sortable.ValueBool()
				} else {
					sortable27 = nil
				}
				required27 := new(bool)
				if !attributesItem.PartnerOrganisationAttribute.Required.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.Required.IsNull() {
					*required27 = attributesItem.PartnerOrganisationAttribute.Required.ValueBool()
				} else {
					required27 = nil
				}
				readonly27 := new(bool)
				if !attributesItem.PartnerOrganisationAttribute.Readonly.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.Readonly.IsNull() {
					*readonly27 = attributesItem.PartnerOrganisationAttribute.Readonly.ValueBool()
				} else {
					readonly27 = nil
				}
				deprecated27 := new(bool)
				if !attributesItem.PartnerOrganisationAttribute.Deprecated.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.Deprecated.IsNull() {
					*deprecated27 = attributesItem.PartnerOrganisationAttribute.Deprecated.ValueBool()
				} else {
					deprecated27 = nil
				}
				var defaultValue27 interface{}
				if !attributesItem.PartnerOrganisationAttribute.DefaultValue.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.DefaultValue.IsNull() {
					_ = json.Unmarshal([]byte(attributesItem.PartnerOrganisationAttribute.DefaultValue.ValueString()), &defaultValue27)
				}
				group27 := new(string)
				if !attributesItem.PartnerOrganisationAttribute.Group.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.Group.IsNull() {
					*group27 = attributesItem.PartnerOrganisationAttribute.Group.ValueString()
				} else {
					group27 = nil
				}
				order27 := new(int64)
				if !attributesItem.PartnerOrganisationAttribute.Order.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.Order.IsNull() {
					*order27 = attributesItem.PartnerOrganisationAttribute.Order.ValueInt64()
				} else {
					order27 = nil
				}
				layout27 := new(string)
				if !attributesItem.PartnerOrganisationAttribute.Layout.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.Layout.IsNull() {
					*layout27 = attributesItem.PartnerOrganisationAttribute.Layout.ValueString()
				} else {
					layout27 = nil
				}
				hideLabel27 := new(bool)
				if !attributesItem.PartnerOrganisationAttribute.HideLabel.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.HideLabel.IsNull() {
					*hideLabel27 = attributesItem.PartnerOrganisationAttribute.HideLabel.ValueBool()
				} else {
					hideLabel27 = nil
				}
				icon31 := new(string)
				if !attributesItem.PartnerOrganisationAttribute.Icon.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.Icon.IsNull() {
					*icon31 = attributesItem.PartnerOrganisationAttribute.Icon.ValueString()
				} else {
					icon31 = nil
				}
				renderCondition28 := new(string)
				if !attributesItem.PartnerOrganisationAttribute.RenderCondition.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.RenderCondition.IsNull() {
					*renderCondition28 = attributesItem.PartnerOrganisationAttribute.RenderCondition.ValueString()
				} else {
					renderCondition28 = nil
				}
				var purpose27 []string = []string{}
				for _, purposeItem27 := range attributesItem.PartnerOrganisationAttribute.Purpose {
					purpose27 = append(purpose27, purposeItem27.ValueString())
				}
				var constraints27 *shared.PartnerOrganisationAttributeConstraints
				if attributesItem.PartnerOrganisationAttribute.Constraints != nil {
					constraints27 = &shared.PartnerOrganisationAttributeConstraints{}
				}
				featureFlag30 := new(string)
				if !attributesItem.PartnerOrganisationAttribute.FeatureFlag.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.FeatureFlag.IsNull() {
					*featureFlag30 = attributesItem.PartnerOrganisationAttribute.FeatureFlag.ValueString()
				} else {
					featureFlag30 = nil
				}
				var settingsFlag29 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem29 := range attributesItem.PartnerOrganisationAttribute.SettingsFlag {
					name59 := new(string)
					if !settingsFlagItem29.Name.IsUnknown() && !settingsFlagItem29.Name.IsNull() {
						*name59 = settingsFlagItem29.Name.ValueString()
					} else {
						name59 = nil
					}
					enabled29 := new(bool)
					if !settingsFlagItem29.Enabled.IsUnknown() && !settingsFlagItem29.Enabled.IsNull() {
						*enabled29 = settingsFlagItem29.Enabled.ValueBool()
					} else {
						enabled29 = nil
					}
					settingsFlag29 = append(settingsFlag29, shared.SettingFlag{
						Name:    name59,
						Enabled: enabled29,
					})
				}
				valueFormatter27 := new(string)
				if !attributesItem.PartnerOrganisationAttribute.ValueFormatter.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.ValueFormatter.IsNull() {
					*valueFormatter27 = attributesItem.PartnerOrganisationAttribute.ValueFormatter.ValueString()
				} else {
					valueFormatter27 = nil
				}
				previewValueFormatter27 := new(string)
				if !attributesItem.PartnerOrganisationAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.PreviewValueFormatter.IsNull() {
					*previewValueFormatter27 = attributesItem.PartnerOrganisationAttribute.PreviewValueFormatter.ValueString()
				} else {
					previewValueFormatter27 = nil
				}
				entityBuilderDisableEdit27 := new(bool)
				if !attributesItem.PartnerOrganisationAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.EntityBuilderDisableEdit.IsNull() {
					*entityBuilderDisableEdit27 = attributesItem.PartnerOrganisationAttribute.EntityBuilderDisableEdit.ValueBool()
				} else {
					entityBuilderDisableEdit27 = nil
				}
				protected27 := new(bool)
				if !attributesItem.PartnerOrganisationAttribute.Protected.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.Protected.IsNull() {
					*protected27 = attributesItem.PartnerOrganisationAttribute.Protected.ValueBool()
				} else {
					protected27 = nil
				}
				var infoHelpers27 *shared.PartnerOrganisationAttributeInfoHelpers
				if attributesItem.PartnerOrganisationAttribute.InfoHelpers != nil {
					hintText27 := new(string)
					if !attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintText.IsNull() {
						*hintText27 = attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintText.ValueString()
					} else {
						hintText27 = nil
					}
					hintTextKey27 := new(string)
					if !attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintTextKey.IsNull() {
						*hintTextKey27 = attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintTextKey.ValueString()
					} else {
						hintTextKey27 = nil
					}
					hintCustomComponent27 := new(string)
					if !attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintCustomComponent.IsNull() {
						*hintCustomComponent27 = attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintCustomComponent.ValueString()
					} else {
						hintCustomComponent27 = nil
					}
					hintTooltipPlacement27 := new(string)
					if !attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
						*hintTooltipPlacement27 = attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
					} else {
						hintTooltipPlacement27 = nil
					}
					infoHelpers27 = &shared.PartnerOrganisationAttributeInfoHelpers{
						HintText:             hintText27,
						HintTextKey:          hintTextKey27,
						HintCustomComponent:  hintCustomComponent27,
						HintTooltipPlacement: hintTooltipPlacement27,
					}
				}
				typeVar28 := new(shared.PartnerOrganisationAttributeType)
				if !attributesItem.PartnerOrganisationAttribute.Type.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.Type.IsNull() {
					*typeVar28 = shared.PartnerOrganisationAttributeType(attributesItem.PartnerOrganisationAttribute.Type.ValueString())
				} else {
					typeVar28 = nil
				}
				partnerOrganisationAttribute := shared.PartnerOrganisationAttribute{
					ID:                       id31,
					Name:                     name58,
					Label:                    label33,
					Placeholder:              placeholder27,
					Hidden:                   hidden27,
					ShowInTable:              showInTable27,
					Sortable:                 sortable27,
					Required:                 required27,
					Readonly:                 readonly27,
					Deprecated:               deprecated27,
					DefaultValue:             defaultValue27,
					Group:                    group27,
					Order:                    order27,
					Layout:                   layout27,
					HideLabel:                hideLabel27,
					Icon:                     icon31,
					RenderCondition:          renderCondition28,
					Purpose:                  purpose27,
					Constraints:              constraints27,
					FeatureFlag:              featureFlag30,
					SettingsFlag:             settingsFlag29,
					ValueFormatter:           valueFormatter27,
					PreviewValueFormatter:    previewValueFormatter27,
					EntityBuilderDisableEdit: entityBuilderDisableEdit27,
					Protected:                protected27,
					InfoHelpers:              infoHelpers27,
					Type:                     typeVar28,
				}
				attributes = append(attributes, shared.AttributeInput{
					PartnerOrganisationAttribute: &partnerOrganisationAttribute,
				})
			}
		}
		var purpose28 []string = []string{}
		for _, purposeItem28 := range capabilitiesItem.Purpose {
			purpose28 = append(purpose28, purposeItem28.ValueString())
		}
		var uiHooks []shared.UIHooks = []shared.UIHooks{}
		for _, uiHooksItem := range capabilitiesItem.UIHooks {
			hook := uiHooksItem.Hook.ValueString()
			renderCondition29 := new(string)
			if !uiHooksItem.RenderCondition.IsUnknown() && !uiHooksItem.RenderCondition.IsNull() {
				*renderCondition29 = uiHooksItem.RenderCondition.ValueString()
			} else {
				renderCondition29 = nil
			}
			order28 := new(int64)
			if !uiHooksItem.Order.IsUnknown() && !uiHooksItem.Order.IsNull() {
				*order28 = uiHooksItem.Order.ValueInt64()
			} else {
				order28 = nil
			}
			title4 := new(string)
			if !uiHooksItem.Title.IsUnknown() && !uiHooksItem.Title.IsNull() {
				*title4 = uiHooksItem.Title.ValueString()
			} else {
				title4 = nil
			}
			groupExpanded := new(bool)
			if !uiHooksItem.GroupExpanded.IsUnknown() && !uiHooksItem.GroupExpanded.IsNull() {
				*groupExpanded = uiHooksItem.GroupExpanded.ValueBool()
			} else {
				groupExpanded = nil
			}
			importVar := new(string)
			if !uiHooksItem.Import.IsUnknown() && !uiHooksItem.Import.IsNull() {
				*importVar = uiHooksItem.Import.ValueString()
			} else {
				importVar = nil
			}
			component := new(string)
			if !uiHooksItem.Component.IsUnknown() && !uiHooksItem.Component.IsNull() {
				*component = uiHooksItem.Component.ValueString()
			} else {
				component = nil
			}
			route4 := new(string)
			if !uiHooksItem.Route.IsUnknown() && !uiHooksItem.Route.IsNull() {
				*route4 = uiHooksItem.Route.ValueString()
			} else {
				route4 = nil
			}
			icon32 := new(string)
			if !uiHooksItem.Icon.IsUnknown() && !uiHooksItem.Icon.IsNull() {
				*icon32 = uiHooksItem.Icon.ValueString()
			} else {
				icon32 = nil
			}
			disabled := new(bool)
			if !uiHooksItem.Disabled.IsUnknown() && !uiHooksItem.Disabled.IsNull() {
				*disabled = uiHooksItem.Disabled.ValueBool()
			} else {
				disabled = nil
			}
			header := new(bool)
			if !uiHooksItem.Header.IsUnknown() && !uiHooksItem.Header.IsNull() {
				*header = uiHooksItem.Header.ValueBool()
			} else {
				header = nil
			}
			var requiredPermission *shared.RequiredPermission
			if uiHooksItem.RequiredPermission != nil {
				action3 := uiHooksItem.RequiredPermission.Action.ValueString()
				resource := new(string)
				if !uiHooksItem.RequiredPermission.Resource.IsUnknown() && !uiHooksItem.RequiredPermission.Resource.IsNull() {
					*resource = uiHooksItem.RequiredPermission.Resource.ValueString()
				} else {
					resource = nil
				}
				requiredPermission = &shared.RequiredPermission{
					Action:   action3,
					Resource: resource,
				}
			}
			var additionalProperties2 interface{}
			if !uiHooksItem.AdditionalProperties.IsUnknown() && !uiHooksItem.AdditionalProperties.IsNull() {
				_ = json.Unmarshal([]byte(uiHooksItem.AdditionalProperties.ValueString()), &additionalProperties2)
			}
			uiHooks = append(uiHooks, shared.UIHooks{
				Hook:                 hook,
				RenderCondition:      renderCondition29,
				Order:                order28,
				Title:                title4,
				GroupExpanded:        groupExpanded,
				Import:               importVar,
				Component:            component,
				Route:                route4,
				Icon:                 icon32,
				Disabled:             disabled,
				Header:               header,
				RequiredPermission:   requiredPermission,
				AdditionalProperties: additionalProperties2,
			})
		}
		featureFlag31 := new(string)
		if !capabilitiesItem.FeatureFlag.IsUnknown() && !capabilitiesItem.FeatureFlag.IsNull() {
			*featureFlag31 = capabilitiesItem.FeatureFlag.ValueString()
		} else {
			featureFlag31 = nil
		}
		var settingsFlag30 []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem30 := range capabilitiesItem.SettingsFlag {
			name60 := new(string)
			if !settingsFlagItem30.Name.IsUnknown() && !settingsFlagItem30.Name.IsNull() {
				*name60 = settingsFlagItem30.Name.ValueString()
			} else {
				name60 = nil
			}
			enabled30 := new(bool)
			if !settingsFlagItem30.Enabled.IsUnknown() && !settingsFlagItem30.Enabled.IsNull() {
				*enabled30 = settingsFlagItem30.Enabled.ValueBool()
			} else {
				enabled30 = nil
			}
			settingsFlag30 = append(settingsFlag30, shared.SettingFlag{
				Name:    name60,
				Enabled: enabled30,
			})
		}
		capabilities = append(capabilities, shared.EntityCapabilityInput{
			ID:           id2,
			Name:         name2,
			Title:        title,
			Attributes:   attributes,
			Purpose:      purpose28,
			UIHooks:      uiHooks,
			FeatureFlag:  featureFlag31,
			SettingsFlag: settingsFlag30,
		})
	}
	var groupSettings []shared.EntitySchemaGroup = []shared.EntitySchemaGroup{}
	for _, groupSettingsItem := range r.GroupSettings {
		label34 := groupSettingsItem.Label.ValueString()
		id32 := groupSettingsItem.ID.ValueString()
		order29 := new(int64)
		if !groupSettingsItem.Order.IsUnknown() && !groupSettingsItem.Order.IsNull() {
			*order29 = groupSettingsItem.Order.ValueInt64()
		} else {
			order29 = nil
		}
		expanded := new(bool)
		if !groupSettingsItem.Expanded.IsUnknown() && !groupSettingsItem.Expanded.IsNull() {
			*expanded = groupSettingsItem.Expanded.ValueBool()
		} else {
			expanded = nil
		}
		renderCondition30 := new(string)
		if !groupSettingsItem.RenderCondition.IsUnknown() && !groupSettingsItem.RenderCondition.IsNull() {
			*renderCondition30 = groupSettingsItem.RenderCondition.ValueString()
		} else {
			renderCondition30 = nil
		}
		var purpose29 []string = []string{}
		for _, purposeItem29 := range groupSettingsItem.Purpose {
			purpose29 = append(purpose29, purposeItem29.ValueString())
		}
		featureFlag32 := new(string)
		if !groupSettingsItem.FeatureFlag.IsUnknown() && !groupSettingsItem.FeatureFlag.IsNull() {
			*featureFlag32 = groupSettingsItem.FeatureFlag.ValueString()
		} else {
			featureFlag32 = nil
		}
		var settingsFlag31 []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem31 := range groupSettingsItem.SettingsFlag {
			name61 := new(string)
			if !settingsFlagItem31.Name.IsUnknown() && !settingsFlagItem31.Name.IsNull() {
				*name61 = settingsFlagItem31.Name.ValueString()
			} else {
				name61 = nil
			}
			enabled31 := new(bool)
			if !settingsFlagItem31.Enabled.IsUnknown() && !settingsFlagItem31.Enabled.IsNull() {
				*enabled31 = settingsFlagItem31.Enabled.ValueBool()
			} else {
				enabled31 = nil
			}
			settingsFlag31 = append(settingsFlag31, shared.SettingFlag{
				Name:    name61,
				Enabled: enabled31,
			})
		}
		var infoTooltipTitle *shared.InfoTooltipTitle
		if groupSettingsItem.InfoTooltipTitle != nil {
			key := new(string)
			if !groupSettingsItem.InfoTooltipTitle.Key.IsUnknown() && !groupSettingsItem.InfoTooltipTitle.Key.IsNull() {
				*key = groupSettingsItem.InfoTooltipTitle.Key.ValueString()
			} else {
				key = nil
			}
			defaultVar1 := new(string)
			if !groupSettingsItem.InfoTooltipTitle.Default.IsUnknown() && !groupSettingsItem.InfoTooltipTitle.Default.IsNull() {
				*defaultVar1 = groupSettingsItem.InfoTooltipTitle.Default.ValueString()
			} else {
				defaultVar1 = nil
			}
			infoTooltipTitle = &shared.InfoTooltipTitle{
				Key:     key,
				Default: defaultVar1,
			}
		}
		groupSettings = append(groupSettings, shared.EntitySchemaGroup{
			Label:            label34,
			ID:               id32,
			Order:            order29,
			Expanded:         expanded,
			RenderCondition:  renderCondition30,
			Purpose:          purpose29,
			FeatureFlag:      featureFlag32,
			SettingsFlag:     settingsFlag31,
			InfoTooltipTitle: infoTooltipTitle,
		})
	}
	var layoutSettings *shared.LayoutSettings
	if r.LayoutSettings != nil {
		gridGap := new(string)
		if !r.LayoutSettings.GridGap.IsUnknown() && !r.LayoutSettings.GridGap.IsNull() {
			*gridGap = r.LayoutSettings.GridGap.ValueString()
		} else {
			gridGap = nil
		}
		gridTemplateColumns := new(string)
		if !r.LayoutSettings.GridTemplateColumns.IsUnknown() && !r.LayoutSettings.GridTemplateColumns.IsNull() {
			*gridTemplateColumns = r.LayoutSettings.GridTemplateColumns.ValueString()
		} else {
			gridTemplateColumns = nil
		}
		var additionalProperties3 interface{}
		if !r.LayoutSettings.AdditionalProperties.IsUnknown() && !r.LayoutSettings.AdditionalProperties.IsNull() {
			_ = json.Unmarshal([]byte(r.LayoutSettings.AdditionalProperties.ValueString()), &additionalProperties3)
		}
		layoutSettings = &shared.LayoutSettings{
			GridGap:              gridGap,
			GridTemplateColumns:  gridTemplateColumns,
			AdditionalProperties: additionalProperties3,
		}
	}
	dialogConfig := make(map[string]interface{})
	for dialogConfigKey, dialogConfigValue := range r.DialogConfig {
		var dialogConfigInst interface{}
		_ = json.Unmarshal([]byte(dialogConfigValue.ValueString()), &dialogConfigInst)
		dialogConfig[dialogConfigKey] = dialogConfigInst
	}
	var attributes1 []shared.AttributeInput = []shared.AttributeInput{}
	for _, attributesItem1 := range r.Attributes {
		if attributesItem1.TextAttribute != nil {
			id33 := new(string)
			if !attributesItem1.TextAttribute.ID.IsUnknown() && !attributesItem1.TextAttribute.ID.IsNull() {
				*id33 = attributesItem1.TextAttribute.ID.ValueString()
			} else {
				id33 = nil
			}
			name62 := attributesItem1.TextAttribute.Name.ValueString()
			label35 := attributesItem1.TextAttribute.Label.ValueString()
			placeholder28 := new(string)
			if !attributesItem1.TextAttribute.Placeholder.IsUnknown() && !attributesItem1.TextAttribute.Placeholder.IsNull() {
				*placeholder28 = attributesItem1.TextAttribute.Placeholder.ValueString()
			} else {
				placeholder28 = nil
			}
			hidden28 := new(bool)
			if !attributesItem1.TextAttribute.Hidden.IsUnknown() && !attributesItem1.TextAttribute.Hidden.IsNull() {
				*hidden28 = attributesItem1.TextAttribute.Hidden.ValueBool()
			} else {
				hidden28 = nil
			}
			showInTable28 := new(bool)
			if !attributesItem1.TextAttribute.ShowInTable.IsUnknown() && !attributesItem1.TextAttribute.ShowInTable.IsNull() {
				*showInTable28 = attributesItem1.TextAttribute.ShowInTable.ValueBool()
			} else {
				showInTable28 = nil
			}
			sortable28 := new(bool)
			if !attributesItem1.TextAttribute.Sortable.IsUnknown() && !attributesItem1.TextAttribute.Sortable.IsNull() {
				*sortable28 = attributesItem1.TextAttribute.Sortable.ValueBool()
			} else {
				sortable28 = nil
			}
			required28 := new(bool)
			if !attributesItem1.TextAttribute.Required.IsUnknown() && !attributesItem1.TextAttribute.Required.IsNull() {
				*required28 = attributesItem1.TextAttribute.Required.ValueBool()
			} else {
				required28 = nil
			}
			readonly28 := new(bool)
			if !attributesItem1.TextAttribute.Readonly.IsUnknown() && !attributesItem1.TextAttribute.Readonly.IsNull() {
				*readonly28 = attributesItem1.TextAttribute.Readonly.ValueBool()
			} else {
				readonly28 = nil
			}
			deprecated28 := new(bool)
			if !attributesItem1.TextAttribute.Deprecated.IsUnknown() && !attributesItem1.TextAttribute.Deprecated.IsNull() {
				*deprecated28 = attributesItem1.TextAttribute.Deprecated.ValueBool()
			} else {
				deprecated28 = nil
			}
			var defaultValue28 interface{}
			if !attributesItem1.TextAttribute.DefaultValue.IsUnknown() && !attributesItem1.TextAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem1.TextAttribute.DefaultValue.ValueString()), &defaultValue28)
			}
			group28 := new(string)
			if !attributesItem1.TextAttribute.Group.IsUnknown() && !attributesItem1.TextAttribute.Group.IsNull() {
				*group28 = attributesItem1.TextAttribute.Group.ValueString()
			} else {
				group28 = nil
			}
			order30 := new(int64)
			if !attributesItem1.TextAttribute.Order.IsUnknown() && !attributesItem1.TextAttribute.Order.IsNull() {
				*order30 = attributesItem1.TextAttribute.Order.ValueInt64()
			} else {
				order30 = nil
			}
			layout28 := new(string)
			if !attributesItem1.TextAttribute.Layout.IsUnknown() && !attributesItem1.TextAttribute.Layout.IsNull() {
				*layout28 = attributesItem1.TextAttribute.Layout.ValueString()
			} else {
				layout28 = nil
			}
			hideLabel28 := new(bool)
			if !attributesItem1.TextAttribute.HideLabel.IsUnknown() && !attributesItem1.TextAttribute.HideLabel.IsNull() {
				*hideLabel28 = attributesItem1.TextAttribute.HideLabel.ValueBool()
			} else {
				hideLabel28 = nil
			}
			icon33 := new(string)
			if !attributesItem1.TextAttribute.Icon.IsUnknown() && !attributesItem1.TextAttribute.Icon.IsNull() {
				*icon33 = attributesItem1.TextAttribute.Icon.ValueString()
			} else {
				icon33 = nil
			}
			renderCondition31 := new(string)
			if !attributesItem1.TextAttribute.RenderCondition.IsUnknown() && !attributesItem1.TextAttribute.RenderCondition.IsNull() {
				*renderCondition31 = attributesItem1.TextAttribute.RenderCondition.ValueString()
			} else {
				renderCondition31 = nil
			}
			var purpose30 []string = []string{}
			for _, purposeItem30 := range attributesItem1.TextAttribute.Purpose {
				purpose30 = append(purpose30, purposeItem30.ValueString())
			}
			var constraints28 *shared.Constraints
			if attributesItem1.TextAttribute.Constraints != nil {
				constraints28 = &shared.Constraints{}
			}
			featureFlag33 := new(string)
			if !attributesItem1.TextAttribute.FeatureFlag.IsUnknown() && !attributesItem1.TextAttribute.FeatureFlag.IsNull() {
				*featureFlag33 = attributesItem1.TextAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag33 = nil
			}
			var settingsFlag32 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem32 := range attributesItem1.TextAttribute.SettingsFlag {
				name63 := new(string)
				if !settingsFlagItem32.Name.IsUnknown() && !settingsFlagItem32.Name.IsNull() {
					*name63 = settingsFlagItem32.Name.ValueString()
				} else {
					name63 = nil
				}
				enabled32 := new(bool)
				if !settingsFlagItem32.Enabled.IsUnknown() && !settingsFlagItem32.Enabled.IsNull() {
					*enabled32 = settingsFlagItem32.Enabled.ValueBool()
				} else {
					enabled32 = nil
				}
				settingsFlag32 = append(settingsFlag32, shared.SettingFlag{
					Name:    name63,
					Enabled: enabled32,
				})
			}
			valueFormatter28 := new(string)
			if !attributesItem1.TextAttribute.ValueFormatter.IsUnknown() && !attributesItem1.TextAttribute.ValueFormatter.IsNull() {
				*valueFormatter28 = attributesItem1.TextAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter28 = nil
			}
			previewValueFormatter28 := new(string)
			if !attributesItem1.TextAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem1.TextAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter28 = attributesItem1.TextAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter28 = nil
			}
			entityBuilderDisableEdit28 := new(bool)
			if !attributesItem1.TextAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem1.TextAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit28 = attributesItem1.TextAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit28 = nil
			}
			protected28 := new(bool)
			if !attributesItem1.TextAttribute.Protected.IsUnknown() && !attributesItem1.TextAttribute.Protected.IsNull() {
				*protected28 = attributesItem1.TextAttribute.Protected.ValueBool()
			} else {
				protected28 = nil
			}
			var infoHelpers28 *shared.InfoHelpers
			if attributesItem1.TextAttribute.InfoHelpers != nil {
				hintText28 := new(string)
				if !attributesItem1.TextAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem1.TextAttribute.InfoHelpers.HintText.IsNull() {
					*hintText28 = attributesItem1.TextAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText28 = nil
				}
				hintTextKey28 := new(string)
				if !attributesItem1.TextAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem1.TextAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey28 = attributesItem1.TextAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey28 = nil
				}
				hintCustomComponent28 := new(string)
				if !attributesItem1.TextAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem1.TextAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent28 = attributesItem1.TextAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent28 = nil
				}
				hintTooltipPlacement28 := new(string)
				if !attributesItem1.TextAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem1.TextAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement28 = attributesItem1.TextAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement28 = nil
				}
				infoHelpers28 = &shared.InfoHelpers{
					HintText:             hintText28,
					HintTextKey:          hintTextKey28,
					HintCustomComponent:  hintCustomComponent28,
					HintTooltipPlacement: hintTooltipPlacement28,
				}
			}
			typeVar29 := new(shared.Type)
			if !attributesItem1.TextAttribute.Type.IsUnknown() && !attributesItem1.TextAttribute.Type.IsNull() {
				*typeVar29 = shared.Type(attributesItem1.TextAttribute.Type.ValueString())
			} else {
				typeVar29 = nil
			}
			multiline1 := new(bool)
			if !attributesItem1.TextAttribute.Multiline.IsUnknown() && !attributesItem1.TextAttribute.Multiline.IsNull() {
				*multiline1 = attributesItem1.TextAttribute.Multiline.ValueBool()
			} else {
				multiline1 = nil
			}
			textAttribute1 := shared.TextAttribute{
				ID:                       id33,
				Name:                     name62,
				Label:                    label35,
				Placeholder:              placeholder28,
				Hidden:                   hidden28,
				ShowInTable:              showInTable28,
				Sortable:                 sortable28,
				Required:                 required28,
				Readonly:                 readonly28,
				Deprecated:               deprecated28,
				DefaultValue:             defaultValue28,
				Group:                    group28,
				Order:                    order30,
				Layout:                   layout28,
				HideLabel:                hideLabel28,
				Icon:                     icon33,
				RenderCondition:          renderCondition31,
				Purpose:                  purpose30,
				Constraints:              constraints28,
				FeatureFlag:              featureFlag33,
				SettingsFlag:             settingsFlag32,
				ValueFormatter:           valueFormatter28,
				PreviewValueFormatter:    previewValueFormatter28,
				EntityBuilderDisableEdit: entityBuilderDisableEdit28,
				Protected:                protected28,
				InfoHelpers:              infoHelpers28,
				Type:                     typeVar29,
				Multiline:                multiline1,
			}
			attributes1 = append(attributes1, shared.AttributeInput{
				TextAttribute: &textAttribute1,
			})
		}
		if attributesItem1.LinkAttribute != nil {
			id34 := new(string)
			if !attributesItem1.LinkAttribute.ID.IsUnknown() && !attributesItem1.LinkAttribute.ID.IsNull() {
				*id34 = attributesItem1.LinkAttribute.ID.ValueString()
			} else {
				id34 = nil
			}
			name64 := attributesItem1.LinkAttribute.Name.ValueString()
			label36 := attributesItem1.LinkAttribute.Label.ValueString()
			placeholder29 := new(string)
			if !attributesItem1.LinkAttribute.Placeholder.IsUnknown() && !attributesItem1.LinkAttribute.Placeholder.IsNull() {
				*placeholder29 = attributesItem1.LinkAttribute.Placeholder.ValueString()
			} else {
				placeholder29 = nil
			}
			hidden29 := new(bool)
			if !attributesItem1.LinkAttribute.Hidden.IsUnknown() && !attributesItem1.LinkAttribute.Hidden.IsNull() {
				*hidden29 = attributesItem1.LinkAttribute.Hidden.ValueBool()
			} else {
				hidden29 = nil
			}
			showInTable29 := new(bool)
			if !attributesItem1.LinkAttribute.ShowInTable.IsUnknown() && !attributesItem1.LinkAttribute.ShowInTable.IsNull() {
				*showInTable29 = attributesItem1.LinkAttribute.ShowInTable.ValueBool()
			} else {
				showInTable29 = nil
			}
			sortable29 := new(bool)
			if !attributesItem1.LinkAttribute.Sortable.IsUnknown() && !attributesItem1.LinkAttribute.Sortable.IsNull() {
				*sortable29 = attributesItem1.LinkAttribute.Sortable.ValueBool()
			} else {
				sortable29 = nil
			}
			required29 := new(bool)
			if !attributesItem1.LinkAttribute.Required.IsUnknown() && !attributesItem1.LinkAttribute.Required.IsNull() {
				*required29 = attributesItem1.LinkAttribute.Required.ValueBool()
			} else {
				required29 = nil
			}
			readonly29 := new(bool)
			if !attributesItem1.LinkAttribute.Readonly.IsUnknown() && !attributesItem1.LinkAttribute.Readonly.IsNull() {
				*readonly29 = attributesItem1.LinkAttribute.Readonly.ValueBool()
			} else {
				readonly29 = nil
			}
			deprecated29 := new(bool)
			if !attributesItem1.LinkAttribute.Deprecated.IsUnknown() && !attributesItem1.LinkAttribute.Deprecated.IsNull() {
				*deprecated29 = attributesItem1.LinkAttribute.Deprecated.ValueBool()
			} else {
				deprecated29 = nil
			}
			var defaultValue29 interface{}
			if !attributesItem1.LinkAttribute.DefaultValue.IsUnknown() && !attributesItem1.LinkAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem1.LinkAttribute.DefaultValue.ValueString()), &defaultValue29)
			}
			group29 := new(string)
			if !attributesItem1.LinkAttribute.Group.IsUnknown() && !attributesItem1.LinkAttribute.Group.IsNull() {
				*group29 = attributesItem1.LinkAttribute.Group.ValueString()
			} else {
				group29 = nil
			}
			order31 := new(int64)
			if !attributesItem1.LinkAttribute.Order.IsUnknown() && !attributesItem1.LinkAttribute.Order.IsNull() {
				*order31 = attributesItem1.LinkAttribute.Order.ValueInt64()
			} else {
				order31 = nil
			}
			layout29 := new(string)
			if !attributesItem1.LinkAttribute.Layout.IsUnknown() && !attributesItem1.LinkAttribute.Layout.IsNull() {
				*layout29 = attributesItem1.LinkAttribute.Layout.ValueString()
			} else {
				layout29 = nil
			}
			hideLabel29 := new(bool)
			if !attributesItem1.LinkAttribute.HideLabel.IsUnknown() && !attributesItem1.LinkAttribute.HideLabel.IsNull() {
				*hideLabel29 = attributesItem1.LinkAttribute.HideLabel.ValueBool()
			} else {
				hideLabel29 = nil
			}
			icon34 := new(string)
			if !attributesItem1.LinkAttribute.Icon.IsUnknown() && !attributesItem1.LinkAttribute.Icon.IsNull() {
				*icon34 = attributesItem1.LinkAttribute.Icon.ValueString()
			} else {
				icon34 = nil
			}
			renderCondition32 := new(string)
			if !attributesItem1.LinkAttribute.RenderCondition.IsUnknown() && !attributesItem1.LinkAttribute.RenderCondition.IsNull() {
				*renderCondition32 = attributesItem1.LinkAttribute.RenderCondition.ValueString()
			} else {
				renderCondition32 = nil
			}
			var purpose31 []string = []string{}
			for _, purposeItem31 := range attributesItem1.LinkAttribute.Purpose {
				purpose31 = append(purpose31, purposeItem31.ValueString())
			}
			var constraints29 *shared.LinkAttributeConstraints
			if attributesItem1.LinkAttribute.Constraints != nil {
				constraints29 = &shared.LinkAttributeConstraints{}
			}
			featureFlag34 := new(string)
			if !attributesItem1.LinkAttribute.FeatureFlag.IsUnknown() && !attributesItem1.LinkAttribute.FeatureFlag.IsNull() {
				*featureFlag34 = attributesItem1.LinkAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag34 = nil
			}
			var settingsFlag33 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem33 := range attributesItem1.LinkAttribute.SettingsFlag {
				name65 := new(string)
				if !settingsFlagItem33.Name.IsUnknown() && !settingsFlagItem33.Name.IsNull() {
					*name65 = settingsFlagItem33.Name.ValueString()
				} else {
					name65 = nil
				}
				enabled33 := new(bool)
				if !settingsFlagItem33.Enabled.IsUnknown() && !settingsFlagItem33.Enabled.IsNull() {
					*enabled33 = settingsFlagItem33.Enabled.ValueBool()
				} else {
					enabled33 = nil
				}
				settingsFlag33 = append(settingsFlag33, shared.SettingFlag{
					Name:    name65,
					Enabled: enabled33,
				})
			}
			valueFormatter29 := new(string)
			if !attributesItem1.LinkAttribute.ValueFormatter.IsUnknown() && !attributesItem1.LinkAttribute.ValueFormatter.IsNull() {
				*valueFormatter29 = attributesItem1.LinkAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter29 = nil
			}
			previewValueFormatter29 := new(string)
			if !attributesItem1.LinkAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem1.LinkAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter29 = attributesItem1.LinkAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter29 = nil
			}
			entityBuilderDisableEdit29 := new(bool)
			if !attributesItem1.LinkAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem1.LinkAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit29 = attributesItem1.LinkAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit29 = nil
			}
			protected29 := new(bool)
			if !attributesItem1.LinkAttribute.Protected.IsUnknown() && !attributesItem1.LinkAttribute.Protected.IsNull() {
				*protected29 = attributesItem1.LinkAttribute.Protected.ValueBool()
			} else {
				protected29 = nil
			}
			var infoHelpers29 *shared.LinkAttributeInfoHelpers
			if attributesItem1.LinkAttribute.InfoHelpers != nil {
				hintText29 := new(string)
				if !attributesItem1.LinkAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem1.LinkAttribute.InfoHelpers.HintText.IsNull() {
					*hintText29 = attributesItem1.LinkAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText29 = nil
				}
				hintTextKey29 := new(string)
				if !attributesItem1.LinkAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem1.LinkAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey29 = attributesItem1.LinkAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey29 = nil
				}
				hintCustomComponent29 := new(string)
				if !attributesItem1.LinkAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem1.LinkAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent29 = attributesItem1.LinkAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent29 = nil
				}
				hintTooltipPlacement29 := new(string)
				if !attributesItem1.LinkAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem1.LinkAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement29 = attributesItem1.LinkAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement29 = nil
				}
				infoHelpers29 = &shared.LinkAttributeInfoHelpers{
					HintText:             hintText29,
					HintTextKey:          hintTextKey29,
					HintCustomComponent:  hintCustomComponent29,
					HintTooltipPlacement: hintTooltipPlacement29,
				}
			}
			typeVar30 := new(shared.LinkAttributeType)
			if !attributesItem1.LinkAttribute.Type.IsUnknown() && !attributesItem1.LinkAttribute.Type.IsNull() {
				*typeVar30 = shared.LinkAttributeType(attributesItem1.LinkAttribute.Type.ValueString())
			} else {
				typeVar30 = nil
			}
			linkAttribute1 := shared.LinkAttribute{
				ID:                       id34,
				Name:                     name64,
				Label:                    label36,
				Placeholder:              placeholder29,
				Hidden:                   hidden29,
				ShowInTable:              showInTable29,
				Sortable:                 sortable29,
				Required:                 required29,
				Readonly:                 readonly29,
				Deprecated:               deprecated29,
				DefaultValue:             defaultValue29,
				Group:                    group29,
				Order:                    order31,
				Layout:                   layout29,
				HideLabel:                hideLabel29,
				Icon:                     icon34,
				RenderCondition:          renderCondition32,
				Purpose:                  purpose31,
				Constraints:              constraints29,
				FeatureFlag:              featureFlag34,
				SettingsFlag:             settingsFlag33,
				ValueFormatter:           valueFormatter29,
				PreviewValueFormatter:    previewValueFormatter29,
				EntityBuilderDisableEdit: entityBuilderDisableEdit29,
				Protected:                protected29,
				InfoHelpers:              infoHelpers29,
				Type:                     typeVar30,
			}
			attributes1 = append(attributes1, shared.AttributeInput{
				LinkAttribute: &linkAttribute1,
			})
		}
		if attributesItem1.DateAttribute != nil {
			id35 := new(string)
			if !attributesItem1.DateAttribute.ID.IsUnknown() && !attributesItem1.DateAttribute.ID.IsNull() {
				*id35 = attributesItem1.DateAttribute.ID.ValueString()
			} else {
				id35 = nil
			}
			name66 := attributesItem1.DateAttribute.Name.ValueString()
			label37 := attributesItem1.DateAttribute.Label.ValueString()
			placeholder30 := new(string)
			if !attributesItem1.DateAttribute.Placeholder.IsUnknown() && !attributesItem1.DateAttribute.Placeholder.IsNull() {
				*placeholder30 = attributesItem1.DateAttribute.Placeholder.ValueString()
			} else {
				placeholder30 = nil
			}
			hidden30 := new(bool)
			if !attributesItem1.DateAttribute.Hidden.IsUnknown() && !attributesItem1.DateAttribute.Hidden.IsNull() {
				*hidden30 = attributesItem1.DateAttribute.Hidden.ValueBool()
			} else {
				hidden30 = nil
			}
			showInTable30 := new(bool)
			if !attributesItem1.DateAttribute.ShowInTable.IsUnknown() && !attributesItem1.DateAttribute.ShowInTable.IsNull() {
				*showInTable30 = attributesItem1.DateAttribute.ShowInTable.ValueBool()
			} else {
				showInTable30 = nil
			}
			sortable30 := new(bool)
			if !attributesItem1.DateAttribute.Sortable.IsUnknown() && !attributesItem1.DateAttribute.Sortable.IsNull() {
				*sortable30 = attributesItem1.DateAttribute.Sortable.ValueBool()
			} else {
				sortable30 = nil
			}
			required30 := new(bool)
			if !attributesItem1.DateAttribute.Required.IsUnknown() && !attributesItem1.DateAttribute.Required.IsNull() {
				*required30 = attributesItem1.DateAttribute.Required.ValueBool()
			} else {
				required30 = nil
			}
			readonly30 := new(bool)
			if !attributesItem1.DateAttribute.Readonly.IsUnknown() && !attributesItem1.DateAttribute.Readonly.IsNull() {
				*readonly30 = attributesItem1.DateAttribute.Readonly.ValueBool()
			} else {
				readonly30 = nil
			}
			deprecated30 := new(bool)
			if !attributesItem1.DateAttribute.Deprecated.IsUnknown() && !attributesItem1.DateAttribute.Deprecated.IsNull() {
				*deprecated30 = attributesItem1.DateAttribute.Deprecated.ValueBool()
			} else {
				deprecated30 = nil
			}
			var defaultValue30 interface{}
			if !attributesItem1.DateAttribute.DefaultValue.IsUnknown() && !attributesItem1.DateAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem1.DateAttribute.DefaultValue.ValueString()), &defaultValue30)
			}
			group30 := new(string)
			if !attributesItem1.DateAttribute.Group.IsUnknown() && !attributesItem1.DateAttribute.Group.IsNull() {
				*group30 = attributesItem1.DateAttribute.Group.ValueString()
			} else {
				group30 = nil
			}
			order32 := new(int64)
			if !attributesItem1.DateAttribute.Order.IsUnknown() && !attributesItem1.DateAttribute.Order.IsNull() {
				*order32 = attributesItem1.DateAttribute.Order.ValueInt64()
			} else {
				order32 = nil
			}
			layout30 := new(string)
			if !attributesItem1.DateAttribute.Layout.IsUnknown() && !attributesItem1.DateAttribute.Layout.IsNull() {
				*layout30 = attributesItem1.DateAttribute.Layout.ValueString()
			} else {
				layout30 = nil
			}
			hideLabel30 := new(bool)
			if !attributesItem1.DateAttribute.HideLabel.IsUnknown() && !attributesItem1.DateAttribute.HideLabel.IsNull() {
				*hideLabel30 = attributesItem1.DateAttribute.HideLabel.ValueBool()
			} else {
				hideLabel30 = nil
			}
			icon35 := new(string)
			if !attributesItem1.DateAttribute.Icon.IsUnknown() && !attributesItem1.DateAttribute.Icon.IsNull() {
				*icon35 = attributesItem1.DateAttribute.Icon.ValueString()
			} else {
				icon35 = nil
			}
			renderCondition33 := new(string)
			if !attributesItem1.DateAttribute.RenderCondition.IsUnknown() && !attributesItem1.DateAttribute.RenderCondition.IsNull() {
				*renderCondition33 = attributesItem1.DateAttribute.RenderCondition.ValueString()
			} else {
				renderCondition33 = nil
			}
			var purpose32 []string = []string{}
			for _, purposeItem32 := range attributesItem1.DateAttribute.Purpose {
				purpose32 = append(purpose32, purposeItem32.ValueString())
			}
			var constraints30 *shared.DateAttributeConstraints
			if attributesItem1.DateAttribute.Constraints != nil {
				constraints30 = &shared.DateAttributeConstraints{}
			}
			featureFlag35 := new(string)
			if !attributesItem1.DateAttribute.FeatureFlag.IsUnknown() && !attributesItem1.DateAttribute.FeatureFlag.IsNull() {
				*featureFlag35 = attributesItem1.DateAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag35 = nil
			}
			var settingsFlag34 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem34 := range attributesItem1.DateAttribute.SettingsFlag {
				name67 := new(string)
				if !settingsFlagItem34.Name.IsUnknown() && !settingsFlagItem34.Name.IsNull() {
					*name67 = settingsFlagItem34.Name.ValueString()
				} else {
					name67 = nil
				}
				enabled34 := new(bool)
				if !settingsFlagItem34.Enabled.IsUnknown() && !settingsFlagItem34.Enabled.IsNull() {
					*enabled34 = settingsFlagItem34.Enabled.ValueBool()
				} else {
					enabled34 = nil
				}
				settingsFlag34 = append(settingsFlag34, shared.SettingFlag{
					Name:    name67,
					Enabled: enabled34,
				})
			}
			valueFormatter30 := new(string)
			if !attributesItem1.DateAttribute.ValueFormatter.IsUnknown() && !attributesItem1.DateAttribute.ValueFormatter.IsNull() {
				*valueFormatter30 = attributesItem1.DateAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter30 = nil
			}
			previewValueFormatter30 := new(string)
			if !attributesItem1.DateAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem1.DateAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter30 = attributesItem1.DateAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter30 = nil
			}
			entityBuilderDisableEdit30 := new(bool)
			if !attributesItem1.DateAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem1.DateAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit30 = attributesItem1.DateAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit30 = nil
			}
			protected30 := new(bool)
			if !attributesItem1.DateAttribute.Protected.IsUnknown() && !attributesItem1.DateAttribute.Protected.IsNull() {
				*protected30 = attributesItem1.DateAttribute.Protected.ValueBool()
			} else {
				protected30 = nil
			}
			var infoHelpers30 *shared.DateAttributeInfoHelpers
			if attributesItem1.DateAttribute.InfoHelpers != nil {
				hintText30 := new(string)
				if !attributesItem1.DateAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem1.DateAttribute.InfoHelpers.HintText.IsNull() {
					*hintText30 = attributesItem1.DateAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText30 = nil
				}
				hintTextKey30 := new(string)
				if !attributesItem1.DateAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem1.DateAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey30 = attributesItem1.DateAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey30 = nil
				}
				hintCustomComponent30 := new(string)
				if !attributesItem1.DateAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem1.DateAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent30 = attributesItem1.DateAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent30 = nil
				}
				hintTooltipPlacement30 := new(string)
				if !attributesItem1.DateAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem1.DateAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement30 = attributesItem1.DateAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement30 = nil
				}
				infoHelpers30 = &shared.DateAttributeInfoHelpers{
					HintText:             hintText30,
					HintTextKey:          hintTextKey30,
					HintCustomComponent:  hintCustomComponent30,
					HintTooltipPlacement: hintTooltipPlacement30,
				}
			}
			typeVar31 := new(shared.DateAttributeType)
			if !attributesItem1.DateAttribute.Type.IsUnknown() && !attributesItem1.DateAttribute.Type.IsNull() {
				*typeVar31 = shared.DateAttributeType(attributesItem1.DateAttribute.Type.ValueString())
			} else {
				typeVar31 = nil
			}
			dateAttribute1 := shared.DateAttribute{
				ID:                       id35,
				Name:                     name66,
				Label:                    label37,
				Placeholder:              placeholder30,
				Hidden:                   hidden30,
				ShowInTable:              showInTable30,
				Sortable:                 sortable30,
				Required:                 required30,
				Readonly:                 readonly30,
				Deprecated:               deprecated30,
				DefaultValue:             defaultValue30,
				Group:                    group30,
				Order:                    order32,
				Layout:                   layout30,
				HideLabel:                hideLabel30,
				Icon:                     icon35,
				RenderCondition:          renderCondition33,
				Purpose:                  purpose32,
				Constraints:              constraints30,
				FeatureFlag:              featureFlag35,
				SettingsFlag:             settingsFlag34,
				ValueFormatter:           valueFormatter30,
				PreviewValueFormatter:    previewValueFormatter30,
				EntityBuilderDisableEdit: entityBuilderDisableEdit30,
				Protected:                protected30,
				InfoHelpers:              infoHelpers30,
				Type:                     typeVar31,
			}
			attributes1 = append(attributes1, shared.AttributeInput{
				DateAttribute: &dateAttribute1,
			})
		}
		if attributesItem1.CountryAttribute != nil {
			id36 := new(string)
			if !attributesItem1.CountryAttribute.ID.IsUnknown() && !attributesItem1.CountryAttribute.ID.IsNull() {
				*id36 = attributesItem1.CountryAttribute.ID.ValueString()
			} else {
				id36 = nil
			}
			name68 := attributesItem1.CountryAttribute.Name.ValueString()
			label38 := attributesItem1.CountryAttribute.Label.ValueString()
			placeholder31 := new(string)
			if !attributesItem1.CountryAttribute.Placeholder.IsUnknown() && !attributesItem1.CountryAttribute.Placeholder.IsNull() {
				*placeholder31 = attributesItem1.CountryAttribute.Placeholder.ValueString()
			} else {
				placeholder31 = nil
			}
			hidden31 := new(bool)
			if !attributesItem1.CountryAttribute.Hidden.IsUnknown() && !attributesItem1.CountryAttribute.Hidden.IsNull() {
				*hidden31 = attributesItem1.CountryAttribute.Hidden.ValueBool()
			} else {
				hidden31 = nil
			}
			showInTable31 := new(bool)
			if !attributesItem1.CountryAttribute.ShowInTable.IsUnknown() && !attributesItem1.CountryAttribute.ShowInTable.IsNull() {
				*showInTable31 = attributesItem1.CountryAttribute.ShowInTable.ValueBool()
			} else {
				showInTable31 = nil
			}
			sortable31 := new(bool)
			if !attributesItem1.CountryAttribute.Sortable.IsUnknown() && !attributesItem1.CountryAttribute.Sortable.IsNull() {
				*sortable31 = attributesItem1.CountryAttribute.Sortable.ValueBool()
			} else {
				sortable31 = nil
			}
			required31 := new(bool)
			if !attributesItem1.CountryAttribute.Required.IsUnknown() && !attributesItem1.CountryAttribute.Required.IsNull() {
				*required31 = attributesItem1.CountryAttribute.Required.ValueBool()
			} else {
				required31 = nil
			}
			readonly31 := new(bool)
			if !attributesItem1.CountryAttribute.Readonly.IsUnknown() && !attributesItem1.CountryAttribute.Readonly.IsNull() {
				*readonly31 = attributesItem1.CountryAttribute.Readonly.ValueBool()
			} else {
				readonly31 = nil
			}
			deprecated31 := new(bool)
			if !attributesItem1.CountryAttribute.Deprecated.IsUnknown() && !attributesItem1.CountryAttribute.Deprecated.IsNull() {
				*deprecated31 = attributesItem1.CountryAttribute.Deprecated.ValueBool()
			} else {
				deprecated31 = nil
			}
			var defaultValue31 interface{}
			if !attributesItem1.CountryAttribute.DefaultValue.IsUnknown() && !attributesItem1.CountryAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem1.CountryAttribute.DefaultValue.ValueString()), &defaultValue31)
			}
			group31 := new(string)
			if !attributesItem1.CountryAttribute.Group.IsUnknown() && !attributesItem1.CountryAttribute.Group.IsNull() {
				*group31 = attributesItem1.CountryAttribute.Group.ValueString()
			} else {
				group31 = nil
			}
			order33 := new(int64)
			if !attributesItem1.CountryAttribute.Order.IsUnknown() && !attributesItem1.CountryAttribute.Order.IsNull() {
				*order33 = attributesItem1.CountryAttribute.Order.ValueInt64()
			} else {
				order33 = nil
			}
			layout31 := new(string)
			if !attributesItem1.CountryAttribute.Layout.IsUnknown() && !attributesItem1.CountryAttribute.Layout.IsNull() {
				*layout31 = attributesItem1.CountryAttribute.Layout.ValueString()
			} else {
				layout31 = nil
			}
			hideLabel31 := new(bool)
			if !attributesItem1.CountryAttribute.HideLabel.IsUnknown() && !attributesItem1.CountryAttribute.HideLabel.IsNull() {
				*hideLabel31 = attributesItem1.CountryAttribute.HideLabel.ValueBool()
			} else {
				hideLabel31 = nil
			}
			icon36 := new(string)
			if !attributesItem1.CountryAttribute.Icon.IsUnknown() && !attributesItem1.CountryAttribute.Icon.IsNull() {
				*icon36 = attributesItem1.CountryAttribute.Icon.ValueString()
			} else {
				icon36 = nil
			}
			renderCondition34 := new(string)
			if !attributesItem1.CountryAttribute.RenderCondition.IsUnknown() && !attributesItem1.CountryAttribute.RenderCondition.IsNull() {
				*renderCondition34 = attributesItem1.CountryAttribute.RenderCondition.ValueString()
			} else {
				renderCondition34 = nil
			}
			var purpose33 []string = []string{}
			for _, purposeItem33 := range attributesItem1.CountryAttribute.Purpose {
				purpose33 = append(purpose33, purposeItem33.ValueString())
			}
			var constraints31 *shared.CountryAttributeConstraints
			if attributesItem1.CountryAttribute.Constraints != nil {
				constraints31 = &shared.CountryAttributeConstraints{}
			}
			featureFlag36 := new(string)
			if !attributesItem1.CountryAttribute.FeatureFlag.IsUnknown() && !attributesItem1.CountryAttribute.FeatureFlag.IsNull() {
				*featureFlag36 = attributesItem1.CountryAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag36 = nil
			}
			var settingsFlag35 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem35 := range attributesItem1.CountryAttribute.SettingsFlag {
				name69 := new(string)
				if !settingsFlagItem35.Name.IsUnknown() && !settingsFlagItem35.Name.IsNull() {
					*name69 = settingsFlagItem35.Name.ValueString()
				} else {
					name69 = nil
				}
				enabled35 := new(bool)
				if !settingsFlagItem35.Enabled.IsUnknown() && !settingsFlagItem35.Enabled.IsNull() {
					*enabled35 = settingsFlagItem35.Enabled.ValueBool()
				} else {
					enabled35 = nil
				}
				settingsFlag35 = append(settingsFlag35, shared.SettingFlag{
					Name:    name69,
					Enabled: enabled35,
				})
			}
			valueFormatter31 := new(string)
			if !attributesItem1.CountryAttribute.ValueFormatter.IsUnknown() && !attributesItem1.CountryAttribute.ValueFormatter.IsNull() {
				*valueFormatter31 = attributesItem1.CountryAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter31 = nil
			}
			previewValueFormatter31 := new(string)
			if !attributesItem1.CountryAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem1.CountryAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter31 = attributesItem1.CountryAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter31 = nil
			}
			entityBuilderDisableEdit31 := new(bool)
			if !attributesItem1.CountryAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem1.CountryAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit31 = attributesItem1.CountryAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit31 = nil
			}
			protected31 := new(bool)
			if !attributesItem1.CountryAttribute.Protected.IsUnknown() && !attributesItem1.CountryAttribute.Protected.IsNull() {
				*protected31 = attributesItem1.CountryAttribute.Protected.ValueBool()
			} else {
				protected31 = nil
			}
			var infoHelpers31 *shared.CountryAttributeInfoHelpers
			if attributesItem1.CountryAttribute.InfoHelpers != nil {
				hintText31 := new(string)
				if !attributesItem1.CountryAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem1.CountryAttribute.InfoHelpers.HintText.IsNull() {
					*hintText31 = attributesItem1.CountryAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText31 = nil
				}
				hintTextKey31 := new(string)
				if !attributesItem1.CountryAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem1.CountryAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey31 = attributesItem1.CountryAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey31 = nil
				}
				hintCustomComponent31 := new(string)
				if !attributesItem1.CountryAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem1.CountryAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent31 = attributesItem1.CountryAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent31 = nil
				}
				hintTooltipPlacement31 := new(string)
				if !attributesItem1.CountryAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem1.CountryAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement31 = attributesItem1.CountryAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement31 = nil
				}
				infoHelpers31 = &shared.CountryAttributeInfoHelpers{
					HintText:             hintText31,
					HintTextKey:          hintTextKey31,
					HintCustomComponent:  hintCustomComponent31,
					HintTooltipPlacement: hintTooltipPlacement31,
				}
			}
			typeVar32 := new(shared.CountryAttributeType)
			if !attributesItem1.CountryAttribute.Type.IsUnknown() && !attributesItem1.CountryAttribute.Type.IsNull() {
				*typeVar32 = shared.CountryAttributeType(attributesItem1.CountryAttribute.Type.ValueString())
			} else {
				typeVar32 = nil
			}
			countryAttribute1 := shared.CountryAttribute{
				ID:                       id36,
				Name:                     name68,
				Label:                    label38,
				Placeholder:              placeholder31,
				Hidden:                   hidden31,
				ShowInTable:              showInTable31,
				Sortable:                 sortable31,
				Required:                 required31,
				Readonly:                 readonly31,
				Deprecated:               deprecated31,
				DefaultValue:             defaultValue31,
				Group:                    group31,
				Order:                    order33,
				Layout:                   layout31,
				HideLabel:                hideLabel31,
				Icon:                     icon36,
				RenderCondition:          renderCondition34,
				Purpose:                  purpose33,
				Constraints:              constraints31,
				FeatureFlag:              featureFlag36,
				SettingsFlag:             settingsFlag35,
				ValueFormatter:           valueFormatter31,
				PreviewValueFormatter:    previewValueFormatter31,
				EntityBuilderDisableEdit: entityBuilderDisableEdit31,
				Protected:                protected31,
				InfoHelpers:              infoHelpers31,
				Type:                     typeVar32,
			}
			attributes1 = append(attributes1, shared.AttributeInput{
				CountryAttribute: &countryAttribute1,
			})
		}
		if attributesItem1.BooleanAttribute != nil {
			id37 := new(string)
			if !attributesItem1.BooleanAttribute.ID.IsUnknown() && !attributesItem1.BooleanAttribute.ID.IsNull() {
				*id37 = attributesItem1.BooleanAttribute.ID.ValueString()
			} else {
				id37 = nil
			}
			name70 := attributesItem1.BooleanAttribute.Name.ValueString()
			label39 := attributesItem1.BooleanAttribute.Label.ValueString()
			placeholder32 := new(string)
			if !attributesItem1.BooleanAttribute.Placeholder.IsUnknown() && !attributesItem1.BooleanAttribute.Placeholder.IsNull() {
				*placeholder32 = attributesItem1.BooleanAttribute.Placeholder.ValueString()
			} else {
				placeholder32 = nil
			}
			hidden32 := new(bool)
			if !attributesItem1.BooleanAttribute.Hidden.IsUnknown() && !attributesItem1.BooleanAttribute.Hidden.IsNull() {
				*hidden32 = attributesItem1.BooleanAttribute.Hidden.ValueBool()
			} else {
				hidden32 = nil
			}
			showInTable32 := new(bool)
			if !attributesItem1.BooleanAttribute.ShowInTable.IsUnknown() && !attributesItem1.BooleanAttribute.ShowInTable.IsNull() {
				*showInTable32 = attributesItem1.BooleanAttribute.ShowInTable.ValueBool()
			} else {
				showInTable32 = nil
			}
			sortable32 := new(bool)
			if !attributesItem1.BooleanAttribute.Sortable.IsUnknown() && !attributesItem1.BooleanAttribute.Sortable.IsNull() {
				*sortable32 = attributesItem1.BooleanAttribute.Sortable.ValueBool()
			} else {
				sortable32 = nil
			}
			required32 := new(bool)
			if !attributesItem1.BooleanAttribute.Required.IsUnknown() && !attributesItem1.BooleanAttribute.Required.IsNull() {
				*required32 = attributesItem1.BooleanAttribute.Required.ValueBool()
			} else {
				required32 = nil
			}
			readonly32 := new(bool)
			if !attributesItem1.BooleanAttribute.Readonly.IsUnknown() && !attributesItem1.BooleanAttribute.Readonly.IsNull() {
				*readonly32 = attributesItem1.BooleanAttribute.Readonly.ValueBool()
			} else {
				readonly32 = nil
			}
			deprecated32 := new(bool)
			if !attributesItem1.BooleanAttribute.Deprecated.IsUnknown() && !attributesItem1.BooleanAttribute.Deprecated.IsNull() {
				*deprecated32 = attributesItem1.BooleanAttribute.Deprecated.ValueBool()
			} else {
				deprecated32 = nil
			}
			var defaultValue32 interface{}
			if !attributesItem1.BooleanAttribute.DefaultValue.IsUnknown() && !attributesItem1.BooleanAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem1.BooleanAttribute.DefaultValue.ValueString()), &defaultValue32)
			}
			group32 := new(string)
			if !attributesItem1.BooleanAttribute.Group.IsUnknown() && !attributesItem1.BooleanAttribute.Group.IsNull() {
				*group32 = attributesItem1.BooleanAttribute.Group.ValueString()
			} else {
				group32 = nil
			}
			order34 := new(int64)
			if !attributesItem1.BooleanAttribute.Order.IsUnknown() && !attributesItem1.BooleanAttribute.Order.IsNull() {
				*order34 = attributesItem1.BooleanAttribute.Order.ValueInt64()
			} else {
				order34 = nil
			}
			layout32 := new(string)
			if !attributesItem1.BooleanAttribute.Layout.IsUnknown() && !attributesItem1.BooleanAttribute.Layout.IsNull() {
				*layout32 = attributesItem1.BooleanAttribute.Layout.ValueString()
			} else {
				layout32 = nil
			}
			hideLabel32 := new(bool)
			if !attributesItem1.BooleanAttribute.HideLabel.IsUnknown() && !attributesItem1.BooleanAttribute.HideLabel.IsNull() {
				*hideLabel32 = attributesItem1.BooleanAttribute.HideLabel.ValueBool()
			} else {
				hideLabel32 = nil
			}
			icon37 := new(string)
			if !attributesItem1.BooleanAttribute.Icon.IsUnknown() && !attributesItem1.BooleanAttribute.Icon.IsNull() {
				*icon37 = attributesItem1.BooleanAttribute.Icon.ValueString()
			} else {
				icon37 = nil
			}
			renderCondition35 := new(string)
			if !attributesItem1.BooleanAttribute.RenderCondition.IsUnknown() && !attributesItem1.BooleanAttribute.RenderCondition.IsNull() {
				*renderCondition35 = attributesItem1.BooleanAttribute.RenderCondition.ValueString()
			} else {
				renderCondition35 = nil
			}
			var purpose34 []string = []string{}
			for _, purposeItem34 := range attributesItem1.BooleanAttribute.Purpose {
				purpose34 = append(purpose34, purposeItem34.ValueString())
			}
			var constraints32 *shared.BooleanAttributeConstraints
			if attributesItem1.BooleanAttribute.Constraints != nil {
				constraints32 = &shared.BooleanAttributeConstraints{}
			}
			featureFlag37 := new(string)
			if !attributesItem1.BooleanAttribute.FeatureFlag.IsUnknown() && !attributesItem1.BooleanAttribute.FeatureFlag.IsNull() {
				*featureFlag37 = attributesItem1.BooleanAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag37 = nil
			}
			var settingsFlag36 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem36 := range attributesItem1.BooleanAttribute.SettingsFlag {
				name71 := new(string)
				if !settingsFlagItem36.Name.IsUnknown() && !settingsFlagItem36.Name.IsNull() {
					*name71 = settingsFlagItem36.Name.ValueString()
				} else {
					name71 = nil
				}
				enabled36 := new(bool)
				if !settingsFlagItem36.Enabled.IsUnknown() && !settingsFlagItem36.Enabled.IsNull() {
					*enabled36 = settingsFlagItem36.Enabled.ValueBool()
				} else {
					enabled36 = nil
				}
				settingsFlag36 = append(settingsFlag36, shared.SettingFlag{
					Name:    name71,
					Enabled: enabled36,
				})
			}
			valueFormatter32 := new(string)
			if !attributesItem1.BooleanAttribute.ValueFormatter.IsUnknown() && !attributesItem1.BooleanAttribute.ValueFormatter.IsNull() {
				*valueFormatter32 = attributesItem1.BooleanAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter32 = nil
			}
			previewValueFormatter32 := new(string)
			if !attributesItem1.BooleanAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem1.BooleanAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter32 = attributesItem1.BooleanAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter32 = nil
			}
			entityBuilderDisableEdit32 := new(bool)
			if !attributesItem1.BooleanAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem1.BooleanAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit32 = attributesItem1.BooleanAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit32 = nil
			}
			protected32 := new(bool)
			if !attributesItem1.BooleanAttribute.Protected.IsUnknown() && !attributesItem1.BooleanAttribute.Protected.IsNull() {
				*protected32 = attributesItem1.BooleanAttribute.Protected.ValueBool()
			} else {
				protected32 = nil
			}
			var infoHelpers32 *shared.BooleanAttributeInfoHelpers
			if attributesItem1.BooleanAttribute.InfoHelpers != nil {
				hintText32 := new(string)
				if !attributesItem1.BooleanAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem1.BooleanAttribute.InfoHelpers.HintText.IsNull() {
					*hintText32 = attributesItem1.BooleanAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText32 = nil
				}
				hintTextKey32 := new(string)
				if !attributesItem1.BooleanAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem1.BooleanAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey32 = attributesItem1.BooleanAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey32 = nil
				}
				hintCustomComponent32 := new(string)
				if !attributesItem1.BooleanAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem1.BooleanAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent32 = attributesItem1.BooleanAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent32 = nil
				}
				hintTooltipPlacement32 := new(string)
				if !attributesItem1.BooleanAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem1.BooleanAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement32 = attributesItem1.BooleanAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement32 = nil
				}
				infoHelpers32 = &shared.BooleanAttributeInfoHelpers{
					HintText:             hintText32,
					HintTextKey:          hintTextKey32,
					HintCustomComponent:  hintCustomComponent32,
					HintTooltipPlacement: hintTooltipPlacement32,
				}
			}
			typeVar33 := new(shared.BooleanAttributeType)
			if !attributesItem1.BooleanAttribute.Type.IsUnknown() && !attributesItem1.BooleanAttribute.Type.IsNull() {
				*typeVar33 = shared.BooleanAttributeType(attributesItem1.BooleanAttribute.Type.ValueString())
			} else {
				typeVar33 = nil
			}
			booleanAttribute1 := shared.BooleanAttribute{
				ID:                       id37,
				Name:                     name70,
				Label:                    label39,
				Placeholder:              placeholder32,
				Hidden:                   hidden32,
				ShowInTable:              showInTable32,
				Sortable:                 sortable32,
				Required:                 required32,
				Readonly:                 readonly32,
				Deprecated:               deprecated32,
				DefaultValue:             defaultValue32,
				Group:                    group32,
				Order:                    order34,
				Layout:                   layout32,
				HideLabel:                hideLabel32,
				Icon:                     icon37,
				RenderCondition:          renderCondition35,
				Purpose:                  purpose34,
				Constraints:              constraints32,
				FeatureFlag:              featureFlag37,
				SettingsFlag:             settingsFlag36,
				ValueFormatter:           valueFormatter32,
				PreviewValueFormatter:    previewValueFormatter32,
				EntityBuilderDisableEdit: entityBuilderDisableEdit32,
				Protected:                protected32,
				InfoHelpers:              infoHelpers32,
				Type:                     typeVar33,
			}
			attributes1 = append(attributes1, shared.AttributeInput{
				BooleanAttribute: &booleanAttribute1,
			})
		}
		if attributesItem1.SelectAttribute != nil {
			id38 := new(string)
			if !attributesItem1.SelectAttribute.ID.IsUnknown() && !attributesItem1.SelectAttribute.ID.IsNull() {
				*id38 = attributesItem1.SelectAttribute.ID.ValueString()
			} else {
				id38 = nil
			}
			name72 := attributesItem1.SelectAttribute.Name.ValueString()
			label40 := attributesItem1.SelectAttribute.Label.ValueString()
			placeholder33 := new(string)
			if !attributesItem1.SelectAttribute.Placeholder.IsUnknown() && !attributesItem1.SelectAttribute.Placeholder.IsNull() {
				*placeholder33 = attributesItem1.SelectAttribute.Placeholder.ValueString()
			} else {
				placeholder33 = nil
			}
			hidden33 := new(bool)
			if !attributesItem1.SelectAttribute.Hidden.IsUnknown() && !attributesItem1.SelectAttribute.Hidden.IsNull() {
				*hidden33 = attributesItem1.SelectAttribute.Hidden.ValueBool()
			} else {
				hidden33 = nil
			}
			showInTable33 := new(bool)
			if !attributesItem1.SelectAttribute.ShowInTable.IsUnknown() && !attributesItem1.SelectAttribute.ShowInTable.IsNull() {
				*showInTable33 = attributesItem1.SelectAttribute.ShowInTable.ValueBool()
			} else {
				showInTable33 = nil
			}
			sortable33 := new(bool)
			if !attributesItem1.SelectAttribute.Sortable.IsUnknown() && !attributesItem1.SelectAttribute.Sortable.IsNull() {
				*sortable33 = attributesItem1.SelectAttribute.Sortable.ValueBool()
			} else {
				sortable33 = nil
			}
			required33 := new(bool)
			if !attributesItem1.SelectAttribute.Required.IsUnknown() && !attributesItem1.SelectAttribute.Required.IsNull() {
				*required33 = attributesItem1.SelectAttribute.Required.ValueBool()
			} else {
				required33 = nil
			}
			readonly33 := new(bool)
			if !attributesItem1.SelectAttribute.Readonly.IsUnknown() && !attributesItem1.SelectAttribute.Readonly.IsNull() {
				*readonly33 = attributesItem1.SelectAttribute.Readonly.ValueBool()
			} else {
				readonly33 = nil
			}
			deprecated33 := new(bool)
			if !attributesItem1.SelectAttribute.Deprecated.IsUnknown() && !attributesItem1.SelectAttribute.Deprecated.IsNull() {
				*deprecated33 = attributesItem1.SelectAttribute.Deprecated.ValueBool()
			} else {
				deprecated33 = nil
			}
			var defaultValue33 interface{}
			if !attributesItem1.SelectAttribute.DefaultValue.IsUnknown() && !attributesItem1.SelectAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem1.SelectAttribute.DefaultValue.ValueString()), &defaultValue33)
			}
			group33 := new(string)
			if !attributesItem1.SelectAttribute.Group.IsUnknown() && !attributesItem1.SelectAttribute.Group.IsNull() {
				*group33 = attributesItem1.SelectAttribute.Group.ValueString()
			} else {
				group33 = nil
			}
			order35 := new(int64)
			if !attributesItem1.SelectAttribute.Order.IsUnknown() && !attributesItem1.SelectAttribute.Order.IsNull() {
				*order35 = attributesItem1.SelectAttribute.Order.ValueInt64()
			} else {
				order35 = nil
			}
			layout33 := new(string)
			if !attributesItem1.SelectAttribute.Layout.IsUnknown() && !attributesItem1.SelectAttribute.Layout.IsNull() {
				*layout33 = attributesItem1.SelectAttribute.Layout.ValueString()
			} else {
				layout33 = nil
			}
			hideLabel33 := new(bool)
			if !attributesItem1.SelectAttribute.HideLabel.IsUnknown() && !attributesItem1.SelectAttribute.HideLabel.IsNull() {
				*hideLabel33 = attributesItem1.SelectAttribute.HideLabel.ValueBool()
			} else {
				hideLabel33 = nil
			}
			icon38 := new(string)
			if !attributesItem1.SelectAttribute.Icon.IsUnknown() && !attributesItem1.SelectAttribute.Icon.IsNull() {
				*icon38 = attributesItem1.SelectAttribute.Icon.ValueString()
			} else {
				icon38 = nil
			}
			renderCondition36 := new(string)
			if !attributesItem1.SelectAttribute.RenderCondition.IsUnknown() && !attributesItem1.SelectAttribute.RenderCondition.IsNull() {
				*renderCondition36 = attributesItem1.SelectAttribute.RenderCondition.ValueString()
			} else {
				renderCondition36 = nil
			}
			var purpose35 []string = []string{}
			for _, purposeItem35 := range attributesItem1.SelectAttribute.Purpose {
				purpose35 = append(purpose35, purposeItem35.ValueString())
			}
			var constraints33 *shared.SelectAttributeConstraints
			if attributesItem1.SelectAttribute.Constraints != nil {
				constraints33 = &shared.SelectAttributeConstraints{}
			}
			featureFlag38 := new(string)
			if !attributesItem1.SelectAttribute.FeatureFlag.IsUnknown() && !attributesItem1.SelectAttribute.FeatureFlag.IsNull() {
				*featureFlag38 = attributesItem1.SelectAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag38 = nil
			}
			var settingsFlag37 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem37 := range attributesItem1.SelectAttribute.SettingsFlag {
				name73 := new(string)
				if !settingsFlagItem37.Name.IsUnknown() && !settingsFlagItem37.Name.IsNull() {
					*name73 = settingsFlagItem37.Name.ValueString()
				} else {
					name73 = nil
				}
				enabled37 := new(bool)
				if !settingsFlagItem37.Enabled.IsUnknown() && !settingsFlagItem37.Enabled.IsNull() {
					*enabled37 = settingsFlagItem37.Enabled.ValueBool()
				} else {
					enabled37 = nil
				}
				settingsFlag37 = append(settingsFlag37, shared.SettingFlag{
					Name:    name73,
					Enabled: enabled37,
				})
			}
			valueFormatter33 := new(string)
			if !attributesItem1.SelectAttribute.ValueFormatter.IsUnknown() && !attributesItem1.SelectAttribute.ValueFormatter.IsNull() {
				*valueFormatter33 = attributesItem1.SelectAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter33 = nil
			}
			previewValueFormatter33 := new(string)
			if !attributesItem1.SelectAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem1.SelectAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter33 = attributesItem1.SelectAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter33 = nil
			}
			entityBuilderDisableEdit33 := new(bool)
			if !attributesItem1.SelectAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem1.SelectAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit33 = attributesItem1.SelectAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit33 = nil
			}
			protected33 := new(bool)
			if !attributesItem1.SelectAttribute.Protected.IsUnknown() && !attributesItem1.SelectAttribute.Protected.IsNull() {
				*protected33 = attributesItem1.SelectAttribute.Protected.ValueBool()
			} else {
				protected33 = nil
			}
			var infoHelpers33 *shared.SelectAttributeInfoHelpers
			if attributesItem1.SelectAttribute.InfoHelpers != nil {
				hintText33 := new(string)
				if !attributesItem1.SelectAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem1.SelectAttribute.InfoHelpers.HintText.IsNull() {
					*hintText33 = attributesItem1.SelectAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText33 = nil
				}
				hintTextKey33 := new(string)
				if !attributesItem1.SelectAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem1.SelectAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey33 = attributesItem1.SelectAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey33 = nil
				}
				hintCustomComponent33 := new(string)
				if !attributesItem1.SelectAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem1.SelectAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent33 = attributesItem1.SelectAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent33 = nil
				}
				hintTooltipPlacement33 := new(string)
				if !attributesItem1.SelectAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem1.SelectAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement33 = attributesItem1.SelectAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement33 = nil
				}
				infoHelpers33 = &shared.SelectAttributeInfoHelpers{
					HintText:             hintText33,
					HintTextKey:          hintTextKey33,
					HintCustomComponent:  hintCustomComponent33,
					HintTooltipPlacement: hintTooltipPlacement33,
				}
			}
			typeVar34 := new(shared.SelectAttributeType)
			if !attributesItem1.SelectAttribute.Type.IsUnknown() && !attributesItem1.SelectAttribute.Type.IsNull() {
				*typeVar34 = shared.SelectAttributeType(attributesItem1.SelectAttribute.Type.ValueString())
			} else {
				typeVar34 = nil
			}
			var optionsVar5 interface{}
			if !attributesItem1.SelectAttribute.Options.IsUnknown() && !attributesItem1.SelectAttribute.Options.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem1.SelectAttribute.Options.ValueString()), &optionsVar5)
			}
			allowAny2 := new(bool)
			if !attributesItem1.SelectAttribute.AllowAny.IsUnknown() && !attributesItem1.SelectAttribute.AllowAny.IsNull() {
				*allowAny2 = attributesItem1.SelectAttribute.AllowAny.ValueBool()
			} else {
				allowAny2 = nil
			}
			selectAttribute1 := shared.SelectAttribute{
				ID:                       id38,
				Name:                     name72,
				Label:                    label40,
				Placeholder:              placeholder33,
				Hidden:                   hidden33,
				ShowInTable:              showInTable33,
				Sortable:                 sortable33,
				Required:                 required33,
				Readonly:                 readonly33,
				Deprecated:               deprecated33,
				DefaultValue:             defaultValue33,
				Group:                    group33,
				Order:                    order35,
				Layout:                   layout33,
				HideLabel:                hideLabel33,
				Icon:                     icon38,
				RenderCondition:          renderCondition36,
				Purpose:                  purpose35,
				Constraints:              constraints33,
				FeatureFlag:              featureFlag38,
				SettingsFlag:             settingsFlag37,
				ValueFormatter:           valueFormatter33,
				PreviewValueFormatter:    previewValueFormatter33,
				EntityBuilderDisableEdit: entityBuilderDisableEdit33,
				Protected:                protected33,
				InfoHelpers:              infoHelpers33,
				Type:                     typeVar34,
				Options:                  optionsVar5,
				AllowAny:                 allowAny2,
			}
			attributes1 = append(attributes1, shared.AttributeInput{
				SelectAttribute: &selectAttribute1,
			})
		}
		if attributesItem1.MultiSelectAttribute != nil {
			id39 := new(string)
			if !attributesItem1.MultiSelectAttribute.ID.IsUnknown() && !attributesItem1.MultiSelectAttribute.ID.IsNull() {
				*id39 = attributesItem1.MultiSelectAttribute.ID.ValueString()
			} else {
				id39 = nil
			}
			name74 := attributesItem1.MultiSelectAttribute.Name.ValueString()
			label41 := attributesItem1.MultiSelectAttribute.Label.ValueString()
			placeholder34 := new(string)
			if !attributesItem1.MultiSelectAttribute.Placeholder.IsUnknown() && !attributesItem1.MultiSelectAttribute.Placeholder.IsNull() {
				*placeholder34 = attributesItem1.MultiSelectAttribute.Placeholder.ValueString()
			} else {
				placeholder34 = nil
			}
			hidden34 := new(bool)
			if !attributesItem1.MultiSelectAttribute.Hidden.IsUnknown() && !attributesItem1.MultiSelectAttribute.Hidden.IsNull() {
				*hidden34 = attributesItem1.MultiSelectAttribute.Hidden.ValueBool()
			} else {
				hidden34 = nil
			}
			showInTable34 := new(bool)
			if !attributesItem1.MultiSelectAttribute.ShowInTable.IsUnknown() && !attributesItem1.MultiSelectAttribute.ShowInTable.IsNull() {
				*showInTable34 = attributesItem1.MultiSelectAttribute.ShowInTable.ValueBool()
			} else {
				showInTable34 = nil
			}
			sortable34 := new(bool)
			if !attributesItem1.MultiSelectAttribute.Sortable.IsUnknown() && !attributesItem1.MultiSelectAttribute.Sortable.IsNull() {
				*sortable34 = attributesItem1.MultiSelectAttribute.Sortable.ValueBool()
			} else {
				sortable34 = nil
			}
			required34 := new(bool)
			if !attributesItem1.MultiSelectAttribute.Required.IsUnknown() && !attributesItem1.MultiSelectAttribute.Required.IsNull() {
				*required34 = attributesItem1.MultiSelectAttribute.Required.ValueBool()
			} else {
				required34 = nil
			}
			readonly34 := new(bool)
			if !attributesItem1.MultiSelectAttribute.Readonly.IsUnknown() && !attributesItem1.MultiSelectAttribute.Readonly.IsNull() {
				*readonly34 = attributesItem1.MultiSelectAttribute.Readonly.ValueBool()
			} else {
				readonly34 = nil
			}
			deprecated34 := new(bool)
			if !attributesItem1.MultiSelectAttribute.Deprecated.IsUnknown() && !attributesItem1.MultiSelectAttribute.Deprecated.IsNull() {
				*deprecated34 = attributesItem1.MultiSelectAttribute.Deprecated.ValueBool()
			} else {
				deprecated34 = nil
			}
			var defaultValue34 interface{}
			if !attributesItem1.MultiSelectAttribute.DefaultValue.IsUnknown() && !attributesItem1.MultiSelectAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem1.MultiSelectAttribute.DefaultValue.ValueString()), &defaultValue34)
			}
			group34 := new(string)
			if !attributesItem1.MultiSelectAttribute.Group.IsUnknown() && !attributesItem1.MultiSelectAttribute.Group.IsNull() {
				*group34 = attributesItem1.MultiSelectAttribute.Group.ValueString()
			} else {
				group34 = nil
			}
			order36 := new(int64)
			if !attributesItem1.MultiSelectAttribute.Order.IsUnknown() && !attributesItem1.MultiSelectAttribute.Order.IsNull() {
				*order36 = attributesItem1.MultiSelectAttribute.Order.ValueInt64()
			} else {
				order36 = nil
			}
			layout34 := new(string)
			if !attributesItem1.MultiSelectAttribute.Layout.IsUnknown() && !attributesItem1.MultiSelectAttribute.Layout.IsNull() {
				*layout34 = attributesItem1.MultiSelectAttribute.Layout.ValueString()
			} else {
				layout34 = nil
			}
			hideLabel34 := new(bool)
			if !attributesItem1.MultiSelectAttribute.HideLabel.IsUnknown() && !attributesItem1.MultiSelectAttribute.HideLabel.IsNull() {
				*hideLabel34 = attributesItem1.MultiSelectAttribute.HideLabel.ValueBool()
			} else {
				hideLabel34 = nil
			}
			icon39 := new(string)
			if !attributesItem1.MultiSelectAttribute.Icon.IsUnknown() && !attributesItem1.MultiSelectAttribute.Icon.IsNull() {
				*icon39 = attributesItem1.MultiSelectAttribute.Icon.ValueString()
			} else {
				icon39 = nil
			}
			renderCondition37 := new(string)
			if !attributesItem1.MultiSelectAttribute.RenderCondition.IsUnknown() && !attributesItem1.MultiSelectAttribute.RenderCondition.IsNull() {
				*renderCondition37 = attributesItem1.MultiSelectAttribute.RenderCondition.ValueString()
			} else {
				renderCondition37 = nil
			}
			var purpose36 []string = []string{}
			for _, purposeItem36 := range attributesItem1.MultiSelectAttribute.Purpose {
				purpose36 = append(purpose36, purposeItem36.ValueString())
			}
			var constraints34 *shared.MultiSelectAttributeConstraints
			if attributesItem1.MultiSelectAttribute.Constraints != nil {
				constraints34 = &shared.MultiSelectAttributeConstraints{}
			}
			featureFlag39 := new(string)
			if !attributesItem1.MultiSelectAttribute.FeatureFlag.IsUnknown() && !attributesItem1.MultiSelectAttribute.FeatureFlag.IsNull() {
				*featureFlag39 = attributesItem1.MultiSelectAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag39 = nil
			}
			var settingsFlag38 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem38 := range attributesItem1.MultiSelectAttribute.SettingsFlag {
				name75 := new(string)
				if !settingsFlagItem38.Name.IsUnknown() && !settingsFlagItem38.Name.IsNull() {
					*name75 = settingsFlagItem38.Name.ValueString()
				} else {
					name75 = nil
				}
				enabled38 := new(bool)
				if !settingsFlagItem38.Enabled.IsUnknown() && !settingsFlagItem38.Enabled.IsNull() {
					*enabled38 = settingsFlagItem38.Enabled.ValueBool()
				} else {
					enabled38 = nil
				}
				settingsFlag38 = append(settingsFlag38, shared.SettingFlag{
					Name:    name75,
					Enabled: enabled38,
				})
			}
			valueFormatter34 := new(string)
			if !attributesItem1.MultiSelectAttribute.ValueFormatter.IsUnknown() && !attributesItem1.MultiSelectAttribute.ValueFormatter.IsNull() {
				*valueFormatter34 = attributesItem1.MultiSelectAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter34 = nil
			}
			previewValueFormatter34 := new(string)
			if !attributesItem1.MultiSelectAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem1.MultiSelectAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter34 = attributesItem1.MultiSelectAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter34 = nil
			}
			entityBuilderDisableEdit34 := new(bool)
			if !attributesItem1.MultiSelectAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem1.MultiSelectAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit34 = attributesItem1.MultiSelectAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit34 = nil
			}
			protected34 := new(bool)
			if !attributesItem1.MultiSelectAttribute.Protected.IsUnknown() && !attributesItem1.MultiSelectAttribute.Protected.IsNull() {
				*protected34 = attributesItem1.MultiSelectAttribute.Protected.ValueBool()
			} else {
				protected34 = nil
			}
			var infoHelpers34 *shared.MultiSelectAttributeInfoHelpers
			if attributesItem1.MultiSelectAttribute.InfoHelpers != nil {
				hintText34 := new(string)
				if !attributesItem1.MultiSelectAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem1.MultiSelectAttribute.InfoHelpers.HintText.IsNull() {
					*hintText34 = attributesItem1.MultiSelectAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText34 = nil
				}
				hintTextKey34 := new(string)
				if !attributesItem1.MultiSelectAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem1.MultiSelectAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey34 = attributesItem1.MultiSelectAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey34 = nil
				}
				hintCustomComponent34 := new(string)
				if !attributesItem1.MultiSelectAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem1.MultiSelectAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent34 = attributesItem1.MultiSelectAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent34 = nil
				}
				hintTooltipPlacement34 := new(string)
				if !attributesItem1.MultiSelectAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem1.MultiSelectAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement34 = attributesItem1.MultiSelectAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement34 = nil
				}
				infoHelpers34 = &shared.MultiSelectAttributeInfoHelpers{
					HintText:             hintText34,
					HintTextKey:          hintTextKey34,
					HintCustomComponent:  hintCustomComponent34,
					HintTooltipPlacement: hintTooltipPlacement34,
				}
			}
			typeVar35 := new(shared.MultiSelectAttributeType)
			if !attributesItem1.MultiSelectAttribute.Type.IsUnknown() && !attributesItem1.MultiSelectAttribute.Type.IsNull() {
				*typeVar35 = shared.MultiSelectAttributeType(attributesItem1.MultiSelectAttribute.Type.ValueString())
			} else {
				typeVar35 = nil
			}
			disableCaseSensitive1 := new(bool)
			if !attributesItem1.MultiSelectAttribute.DisableCaseSensitive.IsUnknown() && !attributesItem1.MultiSelectAttribute.DisableCaseSensitive.IsNull() {
				*disableCaseSensitive1 = attributesItem1.MultiSelectAttribute.DisableCaseSensitive.ValueBool()
			} else {
				disableCaseSensitive1 = nil
			}
			allowExtraOptions1 := new(bool)
			if !attributesItem1.MultiSelectAttribute.AllowExtraOptions.IsUnknown() && !attributesItem1.MultiSelectAttribute.AllowExtraOptions.IsNull() {
				*allowExtraOptions1 = attributesItem1.MultiSelectAttribute.AllowExtraOptions.ValueBool()
			} else {
				allowExtraOptions1 = nil
			}
			var optionsVar6 []shared.OptionsObj = []shared.OptionsObj{}
			for _, optionsItem4 := range attributesItem1.MultiSelectAttribute.Options {
				if !optionsItem4.Str.IsUnknown() && !optionsItem4.Str.IsNull() {
					str6 := optionsItem4.Str.ValueString()
					optionsVar6 = append(optionsVar6, shared.OptionsObj{
						Str: &str6,
					})
				}
				if optionsItem4.Two != nil {
					value3 := optionsItem4.Two.Value.ValueString()
					title5 := new(string)
					if !optionsItem4.Two.Title.IsUnknown() && !optionsItem4.Two.Title.IsNull() {
						*title5 = optionsItem4.Two.Title.ValueString()
					} else {
						title5 = nil
					}
					twentyOne := shared.Two{
						Value: value3,
						Title: title5,
					}
					optionsVar6 = append(optionsVar6, shared.OptionsObj{
						Two: &twentyOne,
					})
				}
			}
			allowAny3 := new(bool)
			if !attributesItem1.MultiSelectAttribute.AllowAny.IsUnknown() && !attributesItem1.MultiSelectAttribute.AllowAny.IsNull() {
				*allowAny3 = attributesItem1.MultiSelectAttribute.AllowAny.ValueBool()
			} else {
				allowAny3 = nil
			}
			multiSelectAttribute1 := shared.MultiSelectAttribute{
				ID:                       id39,
				Name:                     name74,
				Label:                    label41,
				Placeholder:              placeholder34,
				Hidden:                   hidden34,
				ShowInTable:              showInTable34,
				Sortable:                 sortable34,
				Required:                 required34,
				Readonly:                 readonly34,
				Deprecated:               deprecated34,
				DefaultValue:             defaultValue34,
				Group:                    group34,
				Order:                    order36,
				Layout:                   layout34,
				HideLabel:                hideLabel34,
				Icon:                     icon39,
				RenderCondition:          renderCondition37,
				Purpose:                  purpose36,
				Constraints:              constraints34,
				FeatureFlag:              featureFlag39,
				SettingsFlag:             settingsFlag38,
				ValueFormatter:           valueFormatter34,
				PreviewValueFormatter:    previewValueFormatter34,
				EntityBuilderDisableEdit: entityBuilderDisableEdit34,
				Protected:                protected34,
				InfoHelpers:              infoHelpers34,
				Type:                     typeVar35,
				DisableCaseSensitive:     disableCaseSensitive1,
				AllowExtraOptions:        allowExtraOptions1,
				Options:                  optionsVar6,
				AllowAny:                 allowAny3,
			}
			attributes1 = append(attributes1, shared.AttributeInput{
				MultiSelectAttribute: &multiSelectAttribute1,
			})
		}
		if attributesItem1.StatusAttribute != nil {
			id40 := new(string)
			if !attributesItem1.StatusAttribute.ID.IsUnknown() && !attributesItem1.StatusAttribute.ID.IsNull() {
				*id40 = attributesItem1.StatusAttribute.ID.ValueString()
			} else {
				id40 = nil
			}
			name76 := attributesItem1.StatusAttribute.Name.ValueString()
			label42 := attributesItem1.StatusAttribute.Label.ValueString()
			placeholder35 := new(string)
			if !attributesItem1.StatusAttribute.Placeholder.IsUnknown() && !attributesItem1.StatusAttribute.Placeholder.IsNull() {
				*placeholder35 = attributesItem1.StatusAttribute.Placeholder.ValueString()
			} else {
				placeholder35 = nil
			}
			hidden35 := new(bool)
			if !attributesItem1.StatusAttribute.Hidden.IsUnknown() && !attributesItem1.StatusAttribute.Hidden.IsNull() {
				*hidden35 = attributesItem1.StatusAttribute.Hidden.ValueBool()
			} else {
				hidden35 = nil
			}
			showInTable35 := new(bool)
			if !attributesItem1.StatusAttribute.ShowInTable.IsUnknown() && !attributesItem1.StatusAttribute.ShowInTable.IsNull() {
				*showInTable35 = attributesItem1.StatusAttribute.ShowInTable.ValueBool()
			} else {
				showInTable35 = nil
			}
			sortable35 := new(bool)
			if !attributesItem1.StatusAttribute.Sortable.IsUnknown() && !attributesItem1.StatusAttribute.Sortable.IsNull() {
				*sortable35 = attributesItem1.StatusAttribute.Sortable.ValueBool()
			} else {
				sortable35 = nil
			}
			required35 := new(bool)
			if !attributesItem1.StatusAttribute.Required.IsUnknown() && !attributesItem1.StatusAttribute.Required.IsNull() {
				*required35 = attributesItem1.StatusAttribute.Required.ValueBool()
			} else {
				required35 = nil
			}
			readonly35 := new(bool)
			if !attributesItem1.StatusAttribute.Readonly.IsUnknown() && !attributesItem1.StatusAttribute.Readonly.IsNull() {
				*readonly35 = attributesItem1.StatusAttribute.Readonly.ValueBool()
			} else {
				readonly35 = nil
			}
			deprecated35 := new(bool)
			if !attributesItem1.StatusAttribute.Deprecated.IsUnknown() && !attributesItem1.StatusAttribute.Deprecated.IsNull() {
				*deprecated35 = attributesItem1.StatusAttribute.Deprecated.ValueBool()
			} else {
				deprecated35 = nil
			}
			var defaultValue35 interface{}
			if !attributesItem1.StatusAttribute.DefaultValue.IsUnknown() && !attributesItem1.StatusAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem1.StatusAttribute.DefaultValue.ValueString()), &defaultValue35)
			}
			group35 := new(string)
			if !attributesItem1.StatusAttribute.Group.IsUnknown() && !attributesItem1.StatusAttribute.Group.IsNull() {
				*group35 = attributesItem1.StatusAttribute.Group.ValueString()
			} else {
				group35 = nil
			}
			order37 := new(int64)
			if !attributesItem1.StatusAttribute.Order.IsUnknown() && !attributesItem1.StatusAttribute.Order.IsNull() {
				*order37 = attributesItem1.StatusAttribute.Order.ValueInt64()
			} else {
				order37 = nil
			}
			layout35 := new(string)
			if !attributesItem1.StatusAttribute.Layout.IsUnknown() && !attributesItem1.StatusAttribute.Layout.IsNull() {
				*layout35 = attributesItem1.StatusAttribute.Layout.ValueString()
			} else {
				layout35 = nil
			}
			hideLabel35 := new(bool)
			if !attributesItem1.StatusAttribute.HideLabel.IsUnknown() && !attributesItem1.StatusAttribute.HideLabel.IsNull() {
				*hideLabel35 = attributesItem1.StatusAttribute.HideLabel.ValueBool()
			} else {
				hideLabel35 = nil
			}
			icon40 := new(string)
			if !attributesItem1.StatusAttribute.Icon.IsUnknown() && !attributesItem1.StatusAttribute.Icon.IsNull() {
				*icon40 = attributesItem1.StatusAttribute.Icon.ValueString()
			} else {
				icon40 = nil
			}
			renderCondition38 := new(string)
			if !attributesItem1.StatusAttribute.RenderCondition.IsUnknown() && !attributesItem1.StatusAttribute.RenderCondition.IsNull() {
				*renderCondition38 = attributesItem1.StatusAttribute.RenderCondition.ValueString()
			} else {
				renderCondition38 = nil
			}
			var purpose37 []string = []string{}
			for _, purposeItem37 := range attributesItem1.StatusAttribute.Purpose {
				purpose37 = append(purpose37, purposeItem37.ValueString())
			}
			var constraints35 *shared.StatusAttributeConstraints
			if attributesItem1.StatusAttribute.Constraints != nil {
				constraints35 = &shared.StatusAttributeConstraints{}
			}
			featureFlag40 := new(string)
			if !attributesItem1.StatusAttribute.FeatureFlag.IsUnknown() && !attributesItem1.StatusAttribute.FeatureFlag.IsNull() {
				*featureFlag40 = attributesItem1.StatusAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag40 = nil
			}
			var settingsFlag39 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem39 := range attributesItem1.StatusAttribute.SettingsFlag {
				name77 := new(string)
				if !settingsFlagItem39.Name.IsUnknown() && !settingsFlagItem39.Name.IsNull() {
					*name77 = settingsFlagItem39.Name.ValueString()
				} else {
					name77 = nil
				}
				enabled39 := new(bool)
				if !settingsFlagItem39.Enabled.IsUnknown() && !settingsFlagItem39.Enabled.IsNull() {
					*enabled39 = settingsFlagItem39.Enabled.ValueBool()
				} else {
					enabled39 = nil
				}
				settingsFlag39 = append(settingsFlag39, shared.SettingFlag{
					Name:    name77,
					Enabled: enabled39,
				})
			}
			valueFormatter35 := new(string)
			if !attributesItem1.StatusAttribute.ValueFormatter.IsUnknown() && !attributesItem1.StatusAttribute.ValueFormatter.IsNull() {
				*valueFormatter35 = attributesItem1.StatusAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter35 = nil
			}
			previewValueFormatter35 := new(string)
			if !attributesItem1.StatusAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem1.StatusAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter35 = attributesItem1.StatusAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter35 = nil
			}
			entityBuilderDisableEdit35 := new(bool)
			if !attributesItem1.StatusAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem1.StatusAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit35 = attributesItem1.StatusAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit35 = nil
			}
			protected35 := new(bool)
			if !attributesItem1.StatusAttribute.Protected.IsUnknown() && !attributesItem1.StatusAttribute.Protected.IsNull() {
				*protected35 = attributesItem1.StatusAttribute.Protected.ValueBool()
			} else {
				protected35 = nil
			}
			var infoHelpers35 *shared.StatusAttributeInfoHelpers
			if attributesItem1.StatusAttribute.InfoHelpers != nil {
				hintText35 := new(string)
				if !attributesItem1.StatusAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem1.StatusAttribute.InfoHelpers.HintText.IsNull() {
					*hintText35 = attributesItem1.StatusAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText35 = nil
				}
				hintTextKey35 := new(string)
				if !attributesItem1.StatusAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem1.StatusAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey35 = attributesItem1.StatusAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey35 = nil
				}
				hintCustomComponent35 := new(string)
				if !attributesItem1.StatusAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem1.StatusAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent35 = attributesItem1.StatusAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent35 = nil
				}
				hintTooltipPlacement35 := new(string)
				if !attributesItem1.StatusAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem1.StatusAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement35 = attributesItem1.StatusAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement35 = nil
				}
				infoHelpers35 = &shared.StatusAttributeInfoHelpers{
					HintText:             hintText35,
					HintTextKey:          hintTextKey35,
					HintCustomComponent:  hintCustomComponent35,
					HintTooltipPlacement: hintTooltipPlacement35,
				}
			}
			typeVar36 := new(shared.StatusAttributeType)
			if !attributesItem1.StatusAttribute.Type.IsUnknown() && !attributesItem1.StatusAttribute.Type.IsNull() {
				*typeVar36 = shared.StatusAttributeType(attributesItem1.StatusAttribute.Type.ValueString())
			} else {
				typeVar36 = nil
			}
			var optionsVar7 []shared.StatusAttributeOptions = []shared.StatusAttributeOptions{}
			for _, optionsItem5 := range attributesItem1.StatusAttribute.Options {
				if !optionsItem5.Str.IsUnknown() && !optionsItem5.Str.IsNull() {
					str7 := optionsItem5.Str.ValueString()
					optionsVar7 = append(optionsVar7, shared.StatusAttributeOptions{
						Str: &str7,
					})
				}
				if optionsItem5.Two != nil {
					value4 := optionsItem5.Two.Value.ValueString()
					title6 := new(string)
					if !optionsItem5.Two.Title.IsUnknown() && !optionsItem5.Two.Title.IsNull() {
						*title6 = optionsItem5.Two.Title.ValueString()
					} else {
						title6 = nil
					}
					options21 := shared.Options2{
						Value: value4,
						Title: title6,
					}
					optionsVar7 = append(optionsVar7, shared.StatusAttributeOptions{
						Options2: &options21,
					})
				}
			}
			statusAttribute1 := shared.StatusAttribute{
				ID:                       id40,
				Name:                     name76,
				Label:                    label42,
				Placeholder:              placeholder35,
				Hidden:                   hidden35,
				ShowInTable:              showInTable35,
				Sortable:                 sortable35,
				Required:                 required35,
				Readonly:                 readonly35,
				Deprecated:               deprecated35,
				DefaultValue:             defaultValue35,
				Group:                    group35,
				Order:                    order37,
				Layout:                   layout35,
				HideLabel:                hideLabel35,
				Icon:                     icon40,
				RenderCondition:          renderCondition38,
				Purpose:                  purpose37,
				Constraints:              constraints35,
				FeatureFlag:              featureFlag40,
				SettingsFlag:             settingsFlag39,
				ValueFormatter:           valueFormatter35,
				PreviewValueFormatter:    previewValueFormatter35,
				EntityBuilderDisableEdit: entityBuilderDisableEdit35,
				Protected:                protected35,
				InfoHelpers:              infoHelpers35,
				Type:                     typeVar36,
				Options:                  optionsVar7,
			}
			attributes1 = append(attributes1, shared.AttributeInput{
				StatusAttribute: &statusAttribute1,
			})
		}
		if attributesItem1.SequenceAttribute != nil {
			id41 := new(string)
			if !attributesItem1.SequenceAttribute.ID.IsUnknown() && !attributesItem1.SequenceAttribute.ID.IsNull() {
				*id41 = attributesItem1.SequenceAttribute.ID.ValueString()
			} else {
				id41 = nil
			}
			name78 := attributesItem1.SequenceAttribute.Name.ValueString()
			label43 := attributesItem1.SequenceAttribute.Label.ValueString()
			placeholder36 := new(string)
			if !attributesItem1.SequenceAttribute.Placeholder.IsUnknown() && !attributesItem1.SequenceAttribute.Placeholder.IsNull() {
				*placeholder36 = attributesItem1.SequenceAttribute.Placeholder.ValueString()
			} else {
				placeholder36 = nil
			}
			hidden36 := new(bool)
			if !attributesItem1.SequenceAttribute.Hidden.IsUnknown() && !attributesItem1.SequenceAttribute.Hidden.IsNull() {
				*hidden36 = attributesItem1.SequenceAttribute.Hidden.ValueBool()
			} else {
				hidden36 = nil
			}
			showInTable36 := new(bool)
			if !attributesItem1.SequenceAttribute.ShowInTable.IsUnknown() && !attributesItem1.SequenceAttribute.ShowInTable.IsNull() {
				*showInTable36 = attributesItem1.SequenceAttribute.ShowInTable.ValueBool()
			} else {
				showInTable36 = nil
			}
			sortable36 := new(bool)
			if !attributesItem1.SequenceAttribute.Sortable.IsUnknown() && !attributesItem1.SequenceAttribute.Sortable.IsNull() {
				*sortable36 = attributesItem1.SequenceAttribute.Sortable.ValueBool()
			} else {
				sortable36 = nil
			}
			required36 := new(bool)
			if !attributesItem1.SequenceAttribute.Required.IsUnknown() && !attributesItem1.SequenceAttribute.Required.IsNull() {
				*required36 = attributesItem1.SequenceAttribute.Required.ValueBool()
			} else {
				required36 = nil
			}
			readonly36 := new(bool)
			if !attributesItem1.SequenceAttribute.Readonly.IsUnknown() && !attributesItem1.SequenceAttribute.Readonly.IsNull() {
				*readonly36 = attributesItem1.SequenceAttribute.Readonly.ValueBool()
			} else {
				readonly36 = nil
			}
			deprecated36 := new(bool)
			if !attributesItem1.SequenceAttribute.Deprecated.IsUnknown() && !attributesItem1.SequenceAttribute.Deprecated.IsNull() {
				*deprecated36 = attributesItem1.SequenceAttribute.Deprecated.ValueBool()
			} else {
				deprecated36 = nil
			}
			var defaultValue36 interface{}
			if !attributesItem1.SequenceAttribute.DefaultValue.IsUnknown() && !attributesItem1.SequenceAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem1.SequenceAttribute.DefaultValue.ValueString()), &defaultValue36)
			}
			group36 := new(string)
			if !attributesItem1.SequenceAttribute.Group.IsUnknown() && !attributesItem1.SequenceAttribute.Group.IsNull() {
				*group36 = attributesItem1.SequenceAttribute.Group.ValueString()
			} else {
				group36 = nil
			}
			order38 := new(int64)
			if !attributesItem1.SequenceAttribute.Order.IsUnknown() && !attributesItem1.SequenceAttribute.Order.IsNull() {
				*order38 = attributesItem1.SequenceAttribute.Order.ValueInt64()
			} else {
				order38 = nil
			}
			layout36 := new(string)
			if !attributesItem1.SequenceAttribute.Layout.IsUnknown() && !attributesItem1.SequenceAttribute.Layout.IsNull() {
				*layout36 = attributesItem1.SequenceAttribute.Layout.ValueString()
			} else {
				layout36 = nil
			}
			hideLabel36 := new(bool)
			if !attributesItem1.SequenceAttribute.HideLabel.IsUnknown() && !attributesItem1.SequenceAttribute.HideLabel.IsNull() {
				*hideLabel36 = attributesItem1.SequenceAttribute.HideLabel.ValueBool()
			} else {
				hideLabel36 = nil
			}
			icon41 := new(string)
			if !attributesItem1.SequenceAttribute.Icon.IsUnknown() && !attributesItem1.SequenceAttribute.Icon.IsNull() {
				*icon41 = attributesItem1.SequenceAttribute.Icon.ValueString()
			} else {
				icon41 = nil
			}
			renderCondition39 := new(string)
			if !attributesItem1.SequenceAttribute.RenderCondition.IsUnknown() && !attributesItem1.SequenceAttribute.RenderCondition.IsNull() {
				*renderCondition39 = attributesItem1.SequenceAttribute.RenderCondition.ValueString()
			} else {
				renderCondition39 = nil
			}
			var purpose38 []string = []string{}
			for _, purposeItem38 := range attributesItem1.SequenceAttribute.Purpose {
				purpose38 = append(purpose38, purposeItem38.ValueString())
			}
			var constraints36 *shared.SequenceAttributeConstraints
			if attributesItem1.SequenceAttribute.Constraints != nil {
				constraints36 = &shared.SequenceAttributeConstraints{}
			}
			featureFlag41 := new(string)
			if !attributesItem1.SequenceAttribute.FeatureFlag.IsUnknown() && !attributesItem1.SequenceAttribute.FeatureFlag.IsNull() {
				*featureFlag41 = attributesItem1.SequenceAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag41 = nil
			}
			var settingsFlag40 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem40 := range attributesItem1.SequenceAttribute.SettingsFlag {
				name79 := new(string)
				if !settingsFlagItem40.Name.IsUnknown() && !settingsFlagItem40.Name.IsNull() {
					*name79 = settingsFlagItem40.Name.ValueString()
				} else {
					name79 = nil
				}
				enabled40 := new(bool)
				if !settingsFlagItem40.Enabled.IsUnknown() && !settingsFlagItem40.Enabled.IsNull() {
					*enabled40 = settingsFlagItem40.Enabled.ValueBool()
				} else {
					enabled40 = nil
				}
				settingsFlag40 = append(settingsFlag40, shared.SettingFlag{
					Name:    name79,
					Enabled: enabled40,
				})
			}
			valueFormatter36 := new(string)
			if !attributesItem1.SequenceAttribute.ValueFormatter.IsUnknown() && !attributesItem1.SequenceAttribute.ValueFormatter.IsNull() {
				*valueFormatter36 = attributesItem1.SequenceAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter36 = nil
			}
			previewValueFormatter36 := new(string)
			if !attributesItem1.SequenceAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem1.SequenceAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter36 = attributesItem1.SequenceAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter36 = nil
			}
			entityBuilderDisableEdit36 := new(bool)
			if !attributesItem1.SequenceAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem1.SequenceAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit36 = attributesItem1.SequenceAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit36 = nil
			}
			protected36 := new(bool)
			if !attributesItem1.SequenceAttribute.Protected.IsUnknown() && !attributesItem1.SequenceAttribute.Protected.IsNull() {
				*protected36 = attributesItem1.SequenceAttribute.Protected.ValueBool()
			} else {
				protected36 = nil
			}
			var infoHelpers36 *shared.SequenceAttributeInfoHelpers
			if attributesItem1.SequenceAttribute.InfoHelpers != nil {
				hintText36 := new(string)
				if !attributesItem1.SequenceAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem1.SequenceAttribute.InfoHelpers.HintText.IsNull() {
					*hintText36 = attributesItem1.SequenceAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText36 = nil
				}
				hintTextKey36 := new(string)
				if !attributesItem1.SequenceAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem1.SequenceAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey36 = attributesItem1.SequenceAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey36 = nil
				}
				hintCustomComponent36 := new(string)
				if !attributesItem1.SequenceAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem1.SequenceAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent36 = attributesItem1.SequenceAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent36 = nil
				}
				hintTooltipPlacement36 := new(string)
				if !attributesItem1.SequenceAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem1.SequenceAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement36 = attributesItem1.SequenceAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement36 = nil
				}
				infoHelpers36 = &shared.SequenceAttributeInfoHelpers{
					HintText:             hintText36,
					HintTextKey:          hintTextKey36,
					HintCustomComponent:  hintCustomComponent36,
					HintTooltipPlacement: hintTooltipPlacement36,
				}
			}
			typeVar37 := new(shared.SequenceAttributeType)
			if !attributesItem1.SequenceAttribute.Type.IsUnknown() && !attributesItem1.SequenceAttribute.Type.IsNull() {
				*typeVar37 = shared.SequenceAttributeType(attributesItem1.SequenceAttribute.Type.ValueString())
			} else {
				typeVar37 = nil
			}
			prefix1 := new(string)
			if !attributesItem1.SequenceAttribute.Prefix.IsUnknown() && !attributesItem1.SequenceAttribute.Prefix.IsNull() {
				*prefix1 = attributesItem1.SequenceAttribute.Prefix.ValueString()
			} else {
				prefix1 = nil
			}
			startNumber1 := new(int64)
			if !attributesItem1.SequenceAttribute.StartNumber.IsUnknown() && !attributesItem1.SequenceAttribute.StartNumber.IsNull() {
				*startNumber1 = attributesItem1.SequenceAttribute.StartNumber.ValueInt64()
			} else {
				startNumber1 = nil
			}
			sequenceAttribute1 := shared.SequenceAttribute{
				ID:                       id41,
				Name:                     name78,
				Label:                    label43,
				Placeholder:              placeholder36,
				Hidden:                   hidden36,
				ShowInTable:              showInTable36,
				Sortable:                 sortable36,
				Required:                 required36,
				Readonly:                 readonly36,
				Deprecated:               deprecated36,
				DefaultValue:             defaultValue36,
				Group:                    group36,
				Order:                    order38,
				Layout:                   layout36,
				HideLabel:                hideLabel36,
				Icon:                     icon41,
				RenderCondition:          renderCondition39,
				Purpose:                  purpose38,
				Constraints:              constraints36,
				FeatureFlag:              featureFlag41,
				SettingsFlag:             settingsFlag40,
				ValueFormatter:           valueFormatter36,
				PreviewValueFormatter:    previewValueFormatter36,
				EntityBuilderDisableEdit: entityBuilderDisableEdit36,
				Protected:                protected36,
				InfoHelpers:              infoHelpers36,
				Type:                     typeVar37,
				Prefix:                   prefix1,
				StartNumber:              startNumber1,
			}
			attributes1 = append(attributes1, shared.AttributeInput{
				SequenceAttribute: &sequenceAttribute1,
			})
		}
		if attributesItem1.RelationAttribute != nil {
			id42 := new(string)
			if !attributesItem1.RelationAttribute.ID.IsUnknown() && !attributesItem1.RelationAttribute.ID.IsNull() {
				*id42 = attributesItem1.RelationAttribute.ID.ValueString()
			} else {
				id42 = nil
			}
			name80 := attributesItem1.RelationAttribute.Name.ValueString()
			label44 := attributesItem1.RelationAttribute.Label.ValueString()
			placeholder37 := new(string)
			if !attributesItem1.RelationAttribute.Placeholder.IsUnknown() && !attributesItem1.RelationAttribute.Placeholder.IsNull() {
				*placeholder37 = attributesItem1.RelationAttribute.Placeholder.ValueString()
			} else {
				placeholder37 = nil
			}
			hidden37 := new(bool)
			if !attributesItem1.RelationAttribute.Hidden.IsUnknown() && !attributesItem1.RelationAttribute.Hidden.IsNull() {
				*hidden37 = attributesItem1.RelationAttribute.Hidden.ValueBool()
			} else {
				hidden37 = nil
			}
			showInTable37 := new(bool)
			if !attributesItem1.RelationAttribute.ShowInTable.IsUnknown() && !attributesItem1.RelationAttribute.ShowInTable.IsNull() {
				*showInTable37 = attributesItem1.RelationAttribute.ShowInTable.ValueBool()
			} else {
				showInTable37 = nil
			}
			sortable37 := new(bool)
			if !attributesItem1.RelationAttribute.Sortable.IsUnknown() && !attributesItem1.RelationAttribute.Sortable.IsNull() {
				*sortable37 = attributesItem1.RelationAttribute.Sortable.ValueBool()
			} else {
				sortable37 = nil
			}
			required37 := new(bool)
			if !attributesItem1.RelationAttribute.Required.IsUnknown() && !attributesItem1.RelationAttribute.Required.IsNull() {
				*required37 = attributesItem1.RelationAttribute.Required.ValueBool()
			} else {
				required37 = nil
			}
			readonly37 := new(bool)
			if !attributesItem1.RelationAttribute.Readonly.IsUnknown() && !attributesItem1.RelationAttribute.Readonly.IsNull() {
				*readonly37 = attributesItem1.RelationAttribute.Readonly.ValueBool()
			} else {
				readonly37 = nil
			}
			deprecated37 := new(bool)
			if !attributesItem1.RelationAttribute.Deprecated.IsUnknown() && !attributesItem1.RelationAttribute.Deprecated.IsNull() {
				*deprecated37 = attributesItem1.RelationAttribute.Deprecated.ValueBool()
			} else {
				deprecated37 = nil
			}
			var defaultValue37 interface{}
			if !attributesItem1.RelationAttribute.DefaultValue.IsUnknown() && !attributesItem1.RelationAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem1.RelationAttribute.DefaultValue.ValueString()), &defaultValue37)
			}
			group37 := new(string)
			if !attributesItem1.RelationAttribute.Group.IsUnknown() && !attributesItem1.RelationAttribute.Group.IsNull() {
				*group37 = attributesItem1.RelationAttribute.Group.ValueString()
			} else {
				group37 = nil
			}
			order39 := new(int64)
			if !attributesItem1.RelationAttribute.Order.IsUnknown() && !attributesItem1.RelationAttribute.Order.IsNull() {
				*order39 = attributesItem1.RelationAttribute.Order.ValueInt64()
			} else {
				order39 = nil
			}
			layout37 := new(string)
			if !attributesItem1.RelationAttribute.Layout.IsUnknown() && !attributesItem1.RelationAttribute.Layout.IsNull() {
				*layout37 = attributesItem1.RelationAttribute.Layout.ValueString()
			} else {
				layout37 = nil
			}
			hideLabel37 := new(bool)
			if !attributesItem1.RelationAttribute.HideLabel.IsUnknown() && !attributesItem1.RelationAttribute.HideLabel.IsNull() {
				*hideLabel37 = attributesItem1.RelationAttribute.HideLabel.ValueBool()
			} else {
				hideLabel37 = nil
			}
			icon42 := new(string)
			if !attributesItem1.RelationAttribute.Icon.IsUnknown() && !attributesItem1.RelationAttribute.Icon.IsNull() {
				*icon42 = attributesItem1.RelationAttribute.Icon.ValueString()
			} else {
				icon42 = nil
			}
			renderCondition40 := new(string)
			if !attributesItem1.RelationAttribute.RenderCondition.IsUnknown() && !attributesItem1.RelationAttribute.RenderCondition.IsNull() {
				*renderCondition40 = attributesItem1.RelationAttribute.RenderCondition.ValueString()
			} else {
				renderCondition40 = nil
			}
			var purpose39 []string = []string{}
			for _, purposeItem39 := range attributesItem1.RelationAttribute.Purpose {
				purpose39 = append(purpose39, purposeItem39.ValueString())
			}
			var constraints37 *shared.RelationAttributeConstraints
			if attributesItem1.RelationAttribute.Constraints != nil {
				constraints37 = &shared.RelationAttributeConstraints{}
			}
			featureFlag42 := new(string)
			if !attributesItem1.RelationAttribute.FeatureFlag.IsUnknown() && !attributesItem1.RelationAttribute.FeatureFlag.IsNull() {
				*featureFlag42 = attributesItem1.RelationAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag42 = nil
			}
			var settingsFlag41 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem41 := range attributesItem1.RelationAttribute.SettingsFlag {
				name81 := new(string)
				if !settingsFlagItem41.Name.IsUnknown() && !settingsFlagItem41.Name.IsNull() {
					*name81 = settingsFlagItem41.Name.ValueString()
				} else {
					name81 = nil
				}
				enabled41 := new(bool)
				if !settingsFlagItem41.Enabled.IsUnknown() && !settingsFlagItem41.Enabled.IsNull() {
					*enabled41 = settingsFlagItem41.Enabled.ValueBool()
				} else {
					enabled41 = nil
				}
				settingsFlag41 = append(settingsFlag41, shared.SettingFlag{
					Name:    name81,
					Enabled: enabled41,
				})
			}
			valueFormatter37 := new(string)
			if !attributesItem1.RelationAttribute.ValueFormatter.IsUnknown() && !attributesItem1.RelationAttribute.ValueFormatter.IsNull() {
				*valueFormatter37 = attributesItem1.RelationAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter37 = nil
			}
			previewValueFormatter37 := new(string)
			if !attributesItem1.RelationAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem1.RelationAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter37 = attributesItem1.RelationAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter37 = nil
			}
			entityBuilderDisableEdit37 := new(bool)
			if !attributesItem1.RelationAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem1.RelationAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit37 = attributesItem1.RelationAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit37 = nil
			}
			protected37 := new(bool)
			if !attributesItem1.RelationAttribute.Protected.IsUnknown() && !attributesItem1.RelationAttribute.Protected.IsNull() {
				*protected37 = attributesItem1.RelationAttribute.Protected.ValueBool()
			} else {
				protected37 = nil
			}
			var infoHelpers37 *shared.RelationAttributeInfoHelpers
			if attributesItem1.RelationAttribute.InfoHelpers != nil {
				hintText37 := new(string)
				if !attributesItem1.RelationAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem1.RelationAttribute.InfoHelpers.HintText.IsNull() {
					*hintText37 = attributesItem1.RelationAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText37 = nil
				}
				hintTextKey37 := new(string)
				if !attributesItem1.RelationAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem1.RelationAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey37 = attributesItem1.RelationAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey37 = nil
				}
				hintCustomComponent37 := new(string)
				if !attributesItem1.RelationAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem1.RelationAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent37 = attributesItem1.RelationAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent37 = nil
				}
				hintTooltipPlacement37 := new(string)
				if !attributesItem1.RelationAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem1.RelationAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement37 = attributesItem1.RelationAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement37 = nil
				}
				infoHelpers37 = &shared.RelationAttributeInfoHelpers{
					HintText:             hintText37,
					HintTextKey:          hintTextKey37,
					HintCustomComponent:  hintCustomComponent37,
					HintTooltipPlacement: hintTooltipPlacement37,
				}
			}
			typeVar38 := new(shared.RelationAttributeType)
			if !attributesItem1.RelationAttribute.Type.IsUnknown() && !attributesItem1.RelationAttribute.Type.IsNull() {
				*typeVar38 = shared.RelationAttributeType(attributesItem1.RelationAttribute.Type.ValueString())
			} else {
				typeVar38 = nil
			}
			relationType1 := new(shared.RelationType)
			if !attributesItem1.RelationAttribute.RelationType.IsUnknown() && !attributesItem1.RelationAttribute.RelationType.IsNull() {
				*relationType1 = shared.RelationType(attributesItem1.RelationAttribute.RelationType.ValueString())
			} else {
				relationType1 = nil
			}
			reverseAttributes1 := make(map[string]string)
			for reverseAttributesKey1, reverseAttributesValue1 := range attributesItem1.RelationAttribute.ReverseAttributes {
				reverseAttributesInst1 := reverseAttributesValue1.ValueString()
				reverseAttributes1[reverseAttributesKey1] = reverseAttributesInst1
			}
			relationAffinityMode2 := new(shared.RelationAffinityMode)
			if !attributesItem1.RelationAttribute.RelationAffinityMode.IsUnknown() && !attributesItem1.RelationAttribute.RelationAffinityMode.IsNull() {
				*relationAffinityMode2 = shared.RelationAffinityMode(attributesItem1.RelationAttribute.RelationAffinityMode.ValueString())
			} else {
				relationAffinityMode2 = nil
			}
			enableRelationPicker2 := new(bool)
			if !attributesItem1.RelationAttribute.EnableRelationPicker.IsUnknown() && !attributesItem1.RelationAttribute.EnableRelationPicker.IsNull() {
				*enableRelationPicker2 = attributesItem1.RelationAttribute.EnableRelationPicker.ValueBool()
			} else {
				enableRelationPicker2 = nil
			}
			editMode1 := new(shared.EditMode)
			if !attributesItem1.RelationAttribute.EditMode.IsUnknown() && !attributesItem1.RelationAttribute.EditMode.IsNull() {
				*editMode1 = shared.EditMode(attributesItem1.RelationAttribute.EditMode.ValueString())
			} else {
				editMode1 = nil
			}
			detailsViewModeEnabled1 := new(bool)
			if !attributesItem1.RelationAttribute.DetailsViewModeEnabled.IsUnknown() && !attributesItem1.RelationAttribute.DetailsViewModeEnabled.IsNull() {
				*detailsViewModeEnabled1 = attributesItem1.RelationAttribute.DetailsViewModeEnabled.ValueBool()
			} else {
				detailsViewModeEnabled1 = nil
			}
			var actions1 []shared.RelationAttributeActions = []shared.RelationAttributeActions{}
			for _, actionsItem1 := range attributesItem1.RelationAttribute.Actions {
				actionType1 := new(shared.ActionType)
				if !actionsItem1.ActionType.IsUnknown() && !actionsItem1.ActionType.IsNull() {
					*actionType1 = shared.ActionType(actionsItem1.ActionType.ValueString())
				} else {
					actionType1 = nil
				}
				label45 := new(string)
				if !actionsItem1.Label.IsUnknown() && !actionsItem1.Label.IsNull() {
					*label45 = actionsItem1.Label.ValueString()
				} else {
					label45 = nil
				}
				default1 := new(bool)
				if !actionsItem1.Default.IsUnknown() && !actionsItem1.Default.IsNull() {
					*default1 = actionsItem1.Default.ValueBool()
				} else {
					default1 = nil
				}
				featureFlag43 := new(string)
				if !actionsItem1.FeatureFlag.IsUnknown() && !actionsItem1.FeatureFlag.IsNull() {
					*featureFlag43 = actionsItem1.FeatureFlag.ValueString()
				} else {
					featureFlag43 = nil
				}
				var settingsFlag42 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem42 := range actionsItem1.SettingsFlag {
					name82 := new(string)
					if !settingsFlagItem42.Name.IsUnknown() && !settingsFlagItem42.Name.IsNull() {
						*name82 = settingsFlagItem42.Name.ValueString()
					} else {
						name82 = nil
					}
					enabled42 := new(bool)
					if !settingsFlagItem42.Enabled.IsUnknown() && !settingsFlagItem42.Enabled.IsNull() {
						*enabled42 = settingsFlagItem42.Enabled.ValueBool()
					} else {
						enabled42 = nil
					}
					settingsFlag42 = append(settingsFlag42, shared.SettingFlag{
						Name:    name82,
						Enabled: enabled42,
					})
				}
				var newEntityItem1 *shared.RelationAttributeNewEntityItem
				if actionsItem1.NewEntityItem != nil {
					id43 := actionsItem1.NewEntityItem.ID.ValueString()
					schema1 := actionsItem1.NewEntityItem.Schema.ValueString()
					title7 := new(string)
					if !actionsItem1.NewEntityItem.Title.IsUnknown() && !actionsItem1.NewEntityItem.Title.IsNull() {
						*title7 = actionsItem1.NewEntityItem.Title.ValueString()
					} else {
						title7 = nil
					}
					var tags1 []string = []string{}
					for _, tagsItem1 := range actionsItem1.NewEntityItem.Tags {
						tags1 = append(tags1, tagsItem1.ValueString())
					}
					var acl1 *shared.EntityACL
					if actionsItem1.NewEntityItem.ACL != nil {
						var view1 []string = []string{}
						for _, viewItem1 := range actionsItem1.NewEntityItem.ACL.View {
							view1 = append(view1, viewItem1.ValueString())
						}
						var edit1 []string = []string{}
						for _, editItem1 := range actionsItem1.NewEntityItem.ACL.Edit {
							edit1 = append(edit1, editItem1.ValueString())
						}
						var delete1 []string = []string{}
						for _, deleteItem1 := range actionsItem1.NewEntityItem.ACL.Delete {
							delete1 = append(delete1, deleteItem1.ValueString())
						}
						var additionalProperties4 interface{}
						if !actionsItem1.NewEntityItem.ACL.AdditionalProperties.IsUnknown() && !actionsItem1.NewEntityItem.ACL.AdditionalProperties.IsNull() {
							_ = json.Unmarshal([]byte(actionsItem1.NewEntityItem.ACL.AdditionalProperties.ValueString()), &additionalProperties4)
						}
						acl1 = &shared.EntityACL{
							View:                 view1,
							Edit:                 edit1,
							Delete:               delete1,
							AdditionalProperties: additionalProperties4,
						}
					}
					var additionalProperties5 interface{}
					if !actionsItem1.NewEntityItem.AdditionalProperties.IsUnknown() && !actionsItem1.NewEntityItem.AdditionalProperties.IsNull() {
						_ = json.Unmarshal([]byte(actionsItem1.NewEntityItem.AdditionalProperties.ValueString()), &additionalProperties5)
					}
					newEntityItem1 = &shared.RelationAttributeNewEntityItem{
						ID:                   id43,
						Schema:               schema1,
						Title:                title7,
						Tags:                 tags1,
						ACL:                  acl1,
						AdditionalProperties: additionalProperties5,
					}
				}
				actions1 = append(actions1, shared.RelationAttributeActions{
					ActionType:    actionType1,
					Label:         label45,
					Default:       default1,
					FeatureFlag:   featureFlag43,
					SettingsFlag:  settingsFlag42,
					NewEntityItem: newEntityItem1,
				})
			}
			drawerSize1 := new(shared.DrawerSize)
			if !attributesItem1.RelationAttribute.DrawerSize.IsUnknown() && !attributesItem1.RelationAttribute.DrawerSize.IsNull() {
				*drawerSize1 = shared.DrawerSize(attributesItem1.RelationAttribute.DrawerSize.ValueString())
			} else {
				drawerSize1 = nil
			}
			var summaryFields1 []shared.SummaryFields = []shared.SummaryFields{}
			for _, summaryFieldsItem1 := range attributesItem1.RelationAttribute.SummaryFields {
				if !summaryFieldsItem1.Str.IsUnknown() && !summaryFieldsItem1.Str.IsNull() {
					str8 := summaryFieldsItem1.Str.ValueString()
					summaryFields1 = append(summaryFields1, shared.SummaryFields{
						Str: &str8,
					})
				}
				if summaryFieldsItem1.SummaryField != nil {
					field1 := new(string)
					if !summaryFieldsItem1.SummaryField.Field.IsUnknown() && !summaryFieldsItem1.SummaryField.Field.IsNull() {
						*field1 = summaryFieldsItem1.SummaryField.Field.ValueString()
					} else {
						field1 = nil
					}
					displayAs1 := new(string)
					if !summaryFieldsItem1.SummaryField.DisplayAs.IsUnknown() && !summaryFieldsItem1.SummaryField.DisplayAs.IsNull() {
						*displayAs1 = summaryFieldsItem1.SummaryField.DisplayAs.ValueString()
					} else {
						displayAs1 = nil
					}
					summaryField1 := shared.SummaryField{
						Field:     field1,
						DisplayAs: displayAs1,
					}
					summaryFields1 = append(summaryFields1, shared.SummaryFields{
						SummaryField: &summaryField1,
					})
				}
			}
			hasPrimary4 := new(bool)
			if !attributesItem1.RelationAttribute.HasPrimary.IsUnknown() && !attributesItem1.RelationAttribute.HasPrimary.IsNull() {
				*hasPrimary4 = attributesItem1.RelationAttribute.HasPrimary.ValueBool()
			} else {
				hasPrimary4 = nil
			}
			var allowedSchemas1 []string = []string{}
			for _, allowedSchemasItem1 := range attributesItem1.RelationAttribute.AllowedSchemas {
				allowedSchemas1 = append(allowedSchemas1, allowedSchemasItem1.ValueString())
			}
			enableRelationTags1 := new(bool)
			if !attributesItem1.RelationAttribute.EnableRelationTags.IsUnknown() && !attributesItem1.RelationAttribute.EnableRelationTags.IsNull() {
				*enableRelationTags1 = attributesItem1.RelationAttribute.EnableRelationTags.ValueBool()
			} else {
				enableRelationTags1 = nil
			}
			addButtonLabel1 := new(string)
			if !attributesItem1.RelationAttribute.AddButtonLabel.IsUnknown() && !attributesItem1.RelationAttribute.AddButtonLabel.IsNull() {
				*addButtonLabel1 = attributesItem1.RelationAttribute.AddButtonLabel.ValueString()
			} else {
				addButtonLabel1 = nil
			}
			searchPlaceholder1 := new(string)
			if !attributesItem1.RelationAttribute.SearchPlaceholder.IsUnknown() && !attributesItem1.RelationAttribute.SearchPlaceholder.IsNull() {
				*searchPlaceholder1 = attributesItem1.RelationAttribute.SearchPlaceholder.ValueString()
			} else {
				searchPlaceholder1 = nil
			}
			relationAttributeInput1 := shared.RelationAttributeInput{
				ID:                       id42,
				Name:                     name80,
				Label:                    label44,
				Placeholder:              placeholder37,
				Hidden:                   hidden37,
				ShowInTable:              showInTable37,
				Sortable:                 sortable37,
				Required:                 required37,
				Readonly:                 readonly37,
				Deprecated:               deprecated37,
				DefaultValue:             defaultValue37,
				Group:                    group37,
				Order:                    order39,
				Layout:                   layout37,
				HideLabel:                hideLabel37,
				Icon:                     icon42,
				RenderCondition:          renderCondition40,
				Purpose:                  purpose39,
				Constraints:              constraints37,
				FeatureFlag:              featureFlag42,
				SettingsFlag:             settingsFlag41,
				ValueFormatter:           valueFormatter37,
				PreviewValueFormatter:    previewValueFormatter37,
				EntityBuilderDisableEdit: entityBuilderDisableEdit37,
				Protected:                protected37,
				InfoHelpers:              infoHelpers37,
				Type:                     typeVar38,
				RelationType:             relationType1,
				ReverseAttributes:        reverseAttributes1,
				RelationAffinityMode:     relationAffinityMode2,
				EnableRelationPicker:     enableRelationPicker2,
				EditMode:                 editMode1,
				DetailsViewModeEnabled:   detailsViewModeEnabled1,
				Actions:                  actions1,
				DrawerSize:               drawerSize1,
				SummaryFields:            summaryFields1,
				HasPrimary:               hasPrimary4,
				AllowedSchemas:           allowedSchemas1,
				EnableRelationTags:       enableRelationTags1,
				AddButtonLabel:           addButtonLabel1,
				SearchPlaceholder:        searchPlaceholder1,
			}
			attributes1 = append(attributes1, shared.AttributeInput{
				RelationAttributeInput: &relationAttributeInput1,
			})
		}
		if attributesItem1.UserRelationAttribute != nil {
			id44 := new(string)
			if !attributesItem1.UserRelationAttribute.ID.IsUnknown() && !attributesItem1.UserRelationAttribute.ID.IsNull() {
				*id44 = attributesItem1.UserRelationAttribute.ID.ValueString()
			} else {
				id44 = nil
			}
			name83 := attributesItem1.UserRelationAttribute.Name.ValueString()
			label46 := attributesItem1.UserRelationAttribute.Label.ValueString()
			placeholder38 := new(string)
			if !attributesItem1.UserRelationAttribute.Placeholder.IsUnknown() && !attributesItem1.UserRelationAttribute.Placeholder.IsNull() {
				*placeholder38 = attributesItem1.UserRelationAttribute.Placeholder.ValueString()
			} else {
				placeholder38 = nil
			}
			hidden38 := new(bool)
			if !attributesItem1.UserRelationAttribute.Hidden.IsUnknown() && !attributesItem1.UserRelationAttribute.Hidden.IsNull() {
				*hidden38 = attributesItem1.UserRelationAttribute.Hidden.ValueBool()
			} else {
				hidden38 = nil
			}
			showInTable38 := new(bool)
			if !attributesItem1.UserRelationAttribute.ShowInTable.IsUnknown() && !attributesItem1.UserRelationAttribute.ShowInTable.IsNull() {
				*showInTable38 = attributesItem1.UserRelationAttribute.ShowInTable.ValueBool()
			} else {
				showInTable38 = nil
			}
			sortable38 := new(bool)
			if !attributesItem1.UserRelationAttribute.Sortable.IsUnknown() && !attributesItem1.UserRelationAttribute.Sortable.IsNull() {
				*sortable38 = attributesItem1.UserRelationAttribute.Sortable.ValueBool()
			} else {
				sortable38 = nil
			}
			required38 := new(bool)
			if !attributesItem1.UserRelationAttribute.Required.IsUnknown() && !attributesItem1.UserRelationAttribute.Required.IsNull() {
				*required38 = attributesItem1.UserRelationAttribute.Required.ValueBool()
			} else {
				required38 = nil
			}
			readonly38 := new(bool)
			if !attributesItem1.UserRelationAttribute.Readonly.IsUnknown() && !attributesItem1.UserRelationAttribute.Readonly.IsNull() {
				*readonly38 = attributesItem1.UserRelationAttribute.Readonly.ValueBool()
			} else {
				readonly38 = nil
			}
			deprecated38 := new(bool)
			if !attributesItem1.UserRelationAttribute.Deprecated.IsUnknown() && !attributesItem1.UserRelationAttribute.Deprecated.IsNull() {
				*deprecated38 = attributesItem1.UserRelationAttribute.Deprecated.ValueBool()
			} else {
				deprecated38 = nil
			}
			var defaultValue38 interface{}
			if !attributesItem1.UserRelationAttribute.DefaultValue.IsUnknown() && !attributesItem1.UserRelationAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem1.UserRelationAttribute.DefaultValue.ValueString()), &defaultValue38)
			}
			group38 := new(string)
			if !attributesItem1.UserRelationAttribute.Group.IsUnknown() && !attributesItem1.UserRelationAttribute.Group.IsNull() {
				*group38 = attributesItem1.UserRelationAttribute.Group.ValueString()
			} else {
				group38 = nil
			}
			order40 := new(int64)
			if !attributesItem1.UserRelationAttribute.Order.IsUnknown() && !attributesItem1.UserRelationAttribute.Order.IsNull() {
				*order40 = attributesItem1.UserRelationAttribute.Order.ValueInt64()
			} else {
				order40 = nil
			}
			layout38 := new(string)
			if !attributesItem1.UserRelationAttribute.Layout.IsUnknown() && !attributesItem1.UserRelationAttribute.Layout.IsNull() {
				*layout38 = attributesItem1.UserRelationAttribute.Layout.ValueString()
			} else {
				layout38 = nil
			}
			hideLabel38 := new(bool)
			if !attributesItem1.UserRelationAttribute.HideLabel.IsUnknown() && !attributesItem1.UserRelationAttribute.HideLabel.IsNull() {
				*hideLabel38 = attributesItem1.UserRelationAttribute.HideLabel.ValueBool()
			} else {
				hideLabel38 = nil
			}
			icon43 := new(string)
			if !attributesItem1.UserRelationAttribute.Icon.IsUnknown() && !attributesItem1.UserRelationAttribute.Icon.IsNull() {
				*icon43 = attributesItem1.UserRelationAttribute.Icon.ValueString()
			} else {
				icon43 = nil
			}
			renderCondition41 := new(string)
			if !attributesItem1.UserRelationAttribute.RenderCondition.IsUnknown() && !attributesItem1.UserRelationAttribute.RenderCondition.IsNull() {
				*renderCondition41 = attributesItem1.UserRelationAttribute.RenderCondition.ValueString()
			} else {
				renderCondition41 = nil
			}
			var purpose40 []string = []string{}
			for _, purposeItem40 := range attributesItem1.UserRelationAttribute.Purpose {
				purpose40 = append(purpose40, purposeItem40.ValueString())
			}
			var constraints38 *shared.UserRelationAttributeConstraints
			if attributesItem1.UserRelationAttribute.Constraints != nil {
				constraints38 = &shared.UserRelationAttributeConstraints{}
			}
			featureFlag44 := new(string)
			if !attributesItem1.UserRelationAttribute.FeatureFlag.IsUnknown() && !attributesItem1.UserRelationAttribute.FeatureFlag.IsNull() {
				*featureFlag44 = attributesItem1.UserRelationAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag44 = nil
			}
			var settingsFlag43 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem43 := range attributesItem1.UserRelationAttribute.SettingsFlag {
				name84 := new(string)
				if !settingsFlagItem43.Name.IsUnknown() && !settingsFlagItem43.Name.IsNull() {
					*name84 = settingsFlagItem43.Name.ValueString()
				} else {
					name84 = nil
				}
				enabled43 := new(bool)
				if !settingsFlagItem43.Enabled.IsUnknown() && !settingsFlagItem43.Enabled.IsNull() {
					*enabled43 = settingsFlagItem43.Enabled.ValueBool()
				} else {
					enabled43 = nil
				}
				settingsFlag43 = append(settingsFlag43, shared.SettingFlag{
					Name:    name84,
					Enabled: enabled43,
				})
			}
			valueFormatter38 := new(string)
			if !attributesItem1.UserRelationAttribute.ValueFormatter.IsUnknown() && !attributesItem1.UserRelationAttribute.ValueFormatter.IsNull() {
				*valueFormatter38 = attributesItem1.UserRelationAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter38 = nil
			}
			previewValueFormatter38 := new(string)
			if !attributesItem1.UserRelationAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem1.UserRelationAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter38 = attributesItem1.UserRelationAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter38 = nil
			}
			entityBuilderDisableEdit38 := new(bool)
			if !attributesItem1.UserRelationAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem1.UserRelationAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit38 = attributesItem1.UserRelationAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit38 = nil
			}
			protected38 := new(bool)
			if !attributesItem1.UserRelationAttribute.Protected.IsUnknown() && !attributesItem1.UserRelationAttribute.Protected.IsNull() {
				*protected38 = attributesItem1.UserRelationAttribute.Protected.ValueBool()
			} else {
				protected38 = nil
			}
			var infoHelpers38 *shared.UserRelationAttributeInfoHelpers
			if attributesItem1.UserRelationAttribute.InfoHelpers != nil {
				hintText38 := new(string)
				if !attributesItem1.UserRelationAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem1.UserRelationAttribute.InfoHelpers.HintText.IsNull() {
					*hintText38 = attributesItem1.UserRelationAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText38 = nil
				}
				hintTextKey38 := new(string)
				if !attributesItem1.UserRelationAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem1.UserRelationAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey38 = attributesItem1.UserRelationAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey38 = nil
				}
				hintCustomComponent38 := new(string)
				if !attributesItem1.UserRelationAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem1.UserRelationAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent38 = attributesItem1.UserRelationAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent38 = nil
				}
				hintTooltipPlacement38 := new(string)
				if !attributesItem1.UserRelationAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem1.UserRelationAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement38 = attributesItem1.UserRelationAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement38 = nil
				}
				infoHelpers38 = &shared.UserRelationAttributeInfoHelpers{
					HintText:             hintText38,
					HintTextKey:          hintTextKey38,
					HintCustomComponent:  hintCustomComponent38,
					HintTooltipPlacement: hintTooltipPlacement38,
				}
			}
			typeVar39 := new(shared.UserRelationAttributeType)
			if !attributesItem1.UserRelationAttribute.Type.IsUnknown() && !attributesItem1.UserRelationAttribute.Type.IsNull() {
				*typeVar39 = shared.UserRelationAttributeType(attributesItem1.UserRelationAttribute.Type.ValueString())
			} else {
				typeVar39 = nil
			}
			multiple2 := new(bool)
			if !attributesItem1.UserRelationAttribute.Multiple.IsUnknown() && !attributesItem1.UserRelationAttribute.Multiple.IsNull() {
				*multiple2 = attributesItem1.UserRelationAttribute.Multiple.ValueBool()
			} else {
				multiple2 = nil
			}
			userRelationAttribute1 := shared.UserRelationAttribute{
				ID:                       id44,
				Name:                     name83,
				Label:                    label46,
				Placeholder:              placeholder38,
				Hidden:                   hidden38,
				ShowInTable:              showInTable38,
				Sortable:                 sortable38,
				Required:                 required38,
				Readonly:                 readonly38,
				Deprecated:               deprecated38,
				DefaultValue:             defaultValue38,
				Group:                    group38,
				Order:                    order40,
				Layout:                   layout38,
				HideLabel:                hideLabel38,
				Icon:                     icon43,
				RenderCondition:          renderCondition41,
				Purpose:                  purpose40,
				Constraints:              constraints38,
				FeatureFlag:              featureFlag44,
				SettingsFlag:             settingsFlag43,
				ValueFormatter:           valueFormatter38,
				PreviewValueFormatter:    previewValueFormatter38,
				EntityBuilderDisableEdit: entityBuilderDisableEdit38,
				Protected:                protected38,
				InfoHelpers:              infoHelpers38,
				Type:                     typeVar39,
				Multiple:                 multiple2,
			}
			attributes1 = append(attributes1, shared.AttributeInput{
				UserRelationAttribute: &userRelationAttribute1,
			})
		}
		if attributesItem1.AddressRelationAttribute != nil {
			id45 := new(string)
			if !attributesItem1.AddressRelationAttribute.ID.IsUnknown() && !attributesItem1.AddressRelationAttribute.ID.IsNull() {
				*id45 = attributesItem1.AddressRelationAttribute.ID.ValueString()
			} else {
				id45 = nil
			}
			name85 := attributesItem1.AddressRelationAttribute.Name.ValueString()
			label47 := attributesItem1.AddressRelationAttribute.Label.ValueString()
			placeholder39 := new(string)
			if !attributesItem1.AddressRelationAttribute.Placeholder.IsUnknown() && !attributesItem1.AddressRelationAttribute.Placeholder.IsNull() {
				*placeholder39 = attributesItem1.AddressRelationAttribute.Placeholder.ValueString()
			} else {
				placeholder39 = nil
			}
			hidden39 := new(bool)
			if !attributesItem1.AddressRelationAttribute.Hidden.IsUnknown() && !attributesItem1.AddressRelationAttribute.Hidden.IsNull() {
				*hidden39 = attributesItem1.AddressRelationAttribute.Hidden.ValueBool()
			} else {
				hidden39 = nil
			}
			showInTable39 := new(bool)
			if !attributesItem1.AddressRelationAttribute.ShowInTable.IsUnknown() && !attributesItem1.AddressRelationAttribute.ShowInTable.IsNull() {
				*showInTable39 = attributesItem1.AddressRelationAttribute.ShowInTable.ValueBool()
			} else {
				showInTable39 = nil
			}
			sortable39 := new(bool)
			if !attributesItem1.AddressRelationAttribute.Sortable.IsUnknown() && !attributesItem1.AddressRelationAttribute.Sortable.IsNull() {
				*sortable39 = attributesItem1.AddressRelationAttribute.Sortable.ValueBool()
			} else {
				sortable39 = nil
			}
			required39 := new(bool)
			if !attributesItem1.AddressRelationAttribute.Required.IsUnknown() && !attributesItem1.AddressRelationAttribute.Required.IsNull() {
				*required39 = attributesItem1.AddressRelationAttribute.Required.ValueBool()
			} else {
				required39 = nil
			}
			readonly39 := new(bool)
			if !attributesItem1.AddressRelationAttribute.Readonly.IsUnknown() && !attributesItem1.AddressRelationAttribute.Readonly.IsNull() {
				*readonly39 = attributesItem1.AddressRelationAttribute.Readonly.ValueBool()
			} else {
				readonly39 = nil
			}
			deprecated39 := new(bool)
			if !attributesItem1.AddressRelationAttribute.Deprecated.IsUnknown() && !attributesItem1.AddressRelationAttribute.Deprecated.IsNull() {
				*deprecated39 = attributesItem1.AddressRelationAttribute.Deprecated.ValueBool()
			} else {
				deprecated39 = nil
			}
			var defaultValue39 interface{}
			if !attributesItem1.AddressRelationAttribute.DefaultValue.IsUnknown() && !attributesItem1.AddressRelationAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem1.AddressRelationAttribute.DefaultValue.ValueString()), &defaultValue39)
			}
			group39 := new(string)
			if !attributesItem1.AddressRelationAttribute.Group.IsUnknown() && !attributesItem1.AddressRelationAttribute.Group.IsNull() {
				*group39 = attributesItem1.AddressRelationAttribute.Group.ValueString()
			} else {
				group39 = nil
			}
			order41 := new(int64)
			if !attributesItem1.AddressRelationAttribute.Order.IsUnknown() && !attributesItem1.AddressRelationAttribute.Order.IsNull() {
				*order41 = attributesItem1.AddressRelationAttribute.Order.ValueInt64()
			} else {
				order41 = nil
			}
			layout39 := new(string)
			if !attributesItem1.AddressRelationAttribute.Layout.IsUnknown() && !attributesItem1.AddressRelationAttribute.Layout.IsNull() {
				*layout39 = attributesItem1.AddressRelationAttribute.Layout.ValueString()
			} else {
				layout39 = nil
			}
			hideLabel39 := new(bool)
			if !attributesItem1.AddressRelationAttribute.HideLabel.IsUnknown() && !attributesItem1.AddressRelationAttribute.HideLabel.IsNull() {
				*hideLabel39 = attributesItem1.AddressRelationAttribute.HideLabel.ValueBool()
			} else {
				hideLabel39 = nil
			}
			icon44 := new(string)
			if !attributesItem1.AddressRelationAttribute.Icon.IsUnknown() && !attributesItem1.AddressRelationAttribute.Icon.IsNull() {
				*icon44 = attributesItem1.AddressRelationAttribute.Icon.ValueString()
			} else {
				icon44 = nil
			}
			renderCondition42 := new(string)
			if !attributesItem1.AddressRelationAttribute.RenderCondition.IsUnknown() && !attributesItem1.AddressRelationAttribute.RenderCondition.IsNull() {
				*renderCondition42 = attributesItem1.AddressRelationAttribute.RenderCondition.ValueString()
			} else {
				renderCondition42 = nil
			}
			var purpose41 []string = []string{}
			for _, purposeItem41 := range attributesItem1.AddressRelationAttribute.Purpose {
				purpose41 = append(purpose41, purposeItem41.ValueString())
			}
			var constraints39 *shared.AddressRelationAttributeConstraints
			if attributesItem1.AddressRelationAttribute.Constraints != nil {
				constraints39 = &shared.AddressRelationAttributeConstraints{}
			}
			featureFlag45 := new(string)
			if !attributesItem1.AddressRelationAttribute.FeatureFlag.IsUnknown() && !attributesItem1.AddressRelationAttribute.FeatureFlag.IsNull() {
				*featureFlag45 = attributesItem1.AddressRelationAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag45 = nil
			}
			var settingsFlag44 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem44 := range attributesItem1.AddressRelationAttribute.SettingsFlag {
				name86 := new(string)
				if !settingsFlagItem44.Name.IsUnknown() && !settingsFlagItem44.Name.IsNull() {
					*name86 = settingsFlagItem44.Name.ValueString()
				} else {
					name86 = nil
				}
				enabled44 := new(bool)
				if !settingsFlagItem44.Enabled.IsUnknown() && !settingsFlagItem44.Enabled.IsNull() {
					*enabled44 = settingsFlagItem44.Enabled.ValueBool()
				} else {
					enabled44 = nil
				}
				settingsFlag44 = append(settingsFlag44, shared.SettingFlag{
					Name:    name86,
					Enabled: enabled44,
				})
			}
			valueFormatter39 := new(string)
			if !attributesItem1.AddressRelationAttribute.ValueFormatter.IsUnknown() && !attributesItem1.AddressRelationAttribute.ValueFormatter.IsNull() {
				*valueFormatter39 = attributesItem1.AddressRelationAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter39 = nil
			}
			previewValueFormatter39 := new(string)
			if !attributesItem1.AddressRelationAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem1.AddressRelationAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter39 = attributesItem1.AddressRelationAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter39 = nil
			}
			entityBuilderDisableEdit39 := new(bool)
			if !attributesItem1.AddressRelationAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem1.AddressRelationAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit39 = attributesItem1.AddressRelationAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit39 = nil
			}
			protected39 := new(bool)
			if !attributesItem1.AddressRelationAttribute.Protected.IsUnknown() && !attributesItem1.AddressRelationAttribute.Protected.IsNull() {
				*protected39 = attributesItem1.AddressRelationAttribute.Protected.ValueBool()
			} else {
				protected39 = nil
			}
			var infoHelpers39 *shared.AddressRelationAttributeInfoHelpers
			if attributesItem1.AddressRelationAttribute.InfoHelpers != nil {
				hintText39 := new(string)
				if !attributesItem1.AddressRelationAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem1.AddressRelationAttribute.InfoHelpers.HintText.IsNull() {
					*hintText39 = attributesItem1.AddressRelationAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText39 = nil
				}
				hintTextKey39 := new(string)
				if !attributesItem1.AddressRelationAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem1.AddressRelationAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey39 = attributesItem1.AddressRelationAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey39 = nil
				}
				hintCustomComponent39 := new(string)
				if !attributesItem1.AddressRelationAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem1.AddressRelationAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent39 = attributesItem1.AddressRelationAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent39 = nil
				}
				hintTooltipPlacement39 := new(string)
				if !attributesItem1.AddressRelationAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem1.AddressRelationAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement39 = attributesItem1.AddressRelationAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement39 = nil
				}
				infoHelpers39 = &shared.AddressRelationAttributeInfoHelpers{
					HintText:             hintText39,
					HintTextKey:          hintTextKey39,
					HintCustomComponent:  hintCustomComponent39,
					HintTooltipPlacement: hintTooltipPlacement39,
				}
			}
			typeVar40 := new(shared.AddressRelationAttributeType)
			if !attributesItem1.AddressRelationAttribute.Type.IsUnknown() && !attributesItem1.AddressRelationAttribute.Type.IsNull() {
				*typeVar40 = shared.AddressRelationAttributeType(attributesItem1.AddressRelationAttribute.Type.ValueString())
			} else {
				typeVar40 = nil
			}
			hasPrimary5 := new(bool)
			if !attributesItem1.AddressRelationAttribute.HasPrimary.IsUnknown() && !attributesItem1.AddressRelationAttribute.HasPrimary.IsNull() {
				*hasPrimary5 = attributesItem1.AddressRelationAttribute.HasPrimary.ValueBool()
			} else {
				hasPrimary5 = nil
			}
			addressRelationAttribute1 := shared.AddressRelationAttribute{
				ID:                       id45,
				Name:                     name85,
				Label:                    label47,
				Placeholder:              placeholder39,
				Hidden:                   hidden39,
				ShowInTable:              showInTable39,
				Sortable:                 sortable39,
				Required:                 required39,
				Readonly:                 readonly39,
				Deprecated:               deprecated39,
				DefaultValue:             defaultValue39,
				Group:                    group39,
				Order:                    order41,
				Layout:                   layout39,
				HideLabel:                hideLabel39,
				Icon:                     icon44,
				RenderCondition:          renderCondition42,
				Purpose:                  purpose41,
				Constraints:              constraints39,
				FeatureFlag:              featureFlag45,
				SettingsFlag:             settingsFlag44,
				ValueFormatter:           valueFormatter39,
				PreviewValueFormatter:    previewValueFormatter39,
				EntityBuilderDisableEdit: entityBuilderDisableEdit39,
				Protected:                protected39,
				InfoHelpers:              infoHelpers39,
				Type:                     typeVar40,
				HasPrimary:               hasPrimary5,
			}
			attributes1 = append(attributes1, shared.AttributeInput{
				AddressRelationAttribute: &addressRelationAttribute1,
			})
		}
		if attributesItem1.PaymentMethodRelationAttribute != nil {
			id46 := new(string)
			if !attributesItem1.PaymentMethodRelationAttribute.ID.IsUnknown() && !attributesItem1.PaymentMethodRelationAttribute.ID.IsNull() {
				*id46 = attributesItem1.PaymentMethodRelationAttribute.ID.ValueString()
			} else {
				id46 = nil
			}
			name87 := attributesItem1.PaymentMethodRelationAttribute.Name.ValueString()
			label48 := attributesItem1.PaymentMethodRelationAttribute.Label.ValueString()
			placeholder40 := new(string)
			if !attributesItem1.PaymentMethodRelationAttribute.Placeholder.IsUnknown() && !attributesItem1.PaymentMethodRelationAttribute.Placeholder.IsNull() {
				*placeholder40 = attributesItem1.PaymentMethodRelationAttribute.Placeholder.ValueString()
			} else {
				placeholder40 = nil
			}
			hidden40 := new(bool)
			if !attributesItem1.PaymentMethodRelationAttribute.Hidden.IsUnknown() && !attributesItem1.PaymentMethodRelationAttribute.Hidden.IsNull() {
				*hidden40 = attributesItem1.PaymentMethodRelationAttribute.Hidden.ValueBool()
			} else {
				hidden40 = nil
			}
			showInTable40 := new(bool)
			if !attributesItem1.PaymentMethodRelationAttribute.ShowInTable.IsUnknown() && !attributesItem1.PaymentMethodRelationAttribute.ShowInTable.IsNull() {
				*showInTable40 = attributesItem1.PaymentMethodRelationAttribute.ShowInTable.ValueBool()
			} else {
				showInTable40 = nil
			}
			sortable40 := new(bool)
			if !attributesItem1.PaymentMethodRelationAttribute.Sortable.IsUnknown() && !attributesItem1.PaymentMethodRelationAttribute.Sortable.IsNull() {
				*sortable40 = attributesItem1.PaymentMethodRelationAttribute.Sortable.ValueBool()
			} else {
				sortable40 = nil
			}
			required40 := new(bool)
			if !attributesItem1.PaymentMethodRelationAttribute.Required.IsUnknown() && !attributesItem1.PaymentMethodRelationAttribute.Required.IsNull() {
				*required40 = attributesItem1.PaymentMethodRelationAttribute.Required.ValueBool()
			} else {
				required40 = nil
			}
			readonly40 := new(bool)
			if !attributesItem1.PaymentMethodRelationAttribute.Readonly.IsUnknown() && !attributesItem1.PaymentMethodRelationAttribute.Readonly.IsNull() {
				*readonly40 = attributesItem1.PaymentMethodRelationAttribute.Readonly.ValueBool()
			} else {
				readonly40 = nil
			}
			deprecated40 := new(bool)
			if !attributesItem1.PaymentMethodRelationAttribute.Deprecated.IsUnknown() && !attributesItem1.PaymentMethodRelationAttribute.Deprecated.IsNull() {
				*deprecated40 = attributesItem1.PaymentMethodRelationAttribute.Deprecated.ValueBool()
			} else {
				deprecated40 = nil
			}
			var defaultValue40 interface{}
			if !attributesItem1.PaymentMethodRelationAttribute.DefaultValue.IsUnknown() && !attributesItem1.PaymentMethodRelationAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem1.PaymentMethodRelationAttribute.DefaultValue.ValueString()), &defaultValue40)
			}
			group40 := new(string)
			if !attributesItem1.PaymentMethodRelationAttribute.Group.IsUnknown() && !attributesItem1.PaymentMethodRelationAttribute.Group.IsNull() {
				*group40 = attributesItem1.PaymentMethodRelationAttribute.Group.ValueString()
			} else {
				group40 = nil
			}
			order42 := new(int64)
			if !attributesItem1.PaymentMethodRelationAttribute.Order.IsUnknown() && !attributesItem1.PaymentMethodRelationAttribute.Order.IsNull() {
				*order42 = attributesItem1.PaymentMethodRelationAttribute.Order.ValueInt64()
			} else {
				order42 = nil
			}
			layout40 := new(string)
			if !attributesItem1.PaymentMethodRelationAttribute.Layout.IsUnknown() && !attributesItem1.PaymentMethodRelationAttribute.Layout.IsNull() {
				*layout40 = attributesItem1.PaymentMethodRelationAttribute.Layout.ValueString()
			} else {
				layout40 = nil
			}
			hideLabel40 := new(bool)
			if !attributesItem1.PaymentMethodRelationAttribute.HideLabel.IsUnknown() && !attributesItem1.PaymentMethodRelationAttribute.HideLabel.IsNull() {
				*hideLabel40 = attributesItem1.PaymentMethodRelationAttribute.HideLabel.ValueBool()
			} else {
				hideLabel40 = nil
			}
			icon45 := new(string)
			if !attributesItem1.PaymentMethodRelationAttribute.Icon.IsUnknown() && !attributesItem1.PaymentMethodRelationAttribute.Icon.IsNull() {
				*icon45 = attributesItem1.PaymentMethodRelationAttribute.Icon.ValueString()
			} else {
				icon45 = nil
			}
			renderCondition43 := new(string)
			if !attributesItem1.PaymentMethodRelationAttribute.RenderCondition.IsUnknown() && !attributesItem1.PaymentMethodRelationAttribute.RenderCondition.IsNull() {
				*renderCondition43 = attributesItem1.PaymentMethodRelationAttribute.RenderCondition.ValueString()
			} else {
				renderCondition43 = nil
			}
			var purpose42 []string = []string{}
			for _, purposeItem42 := range attributesItem1.PaymentMethodRelationAttribute.Purpose {
				purpose42 = append(purpose42, purposeItem42.ValueString())
			}
			var constraints40 *shared.PaymentMethodRelationAttributeConstraints
			if attributesItem1.PaymentMethodRelationAttribute.Constraints != nil {
				constraints40 = &shared.PaymentMethodRelationAttributeConstraints{}
			}
			featureFlag46 := new(string)
			if !attributesItem1.PaymentMethodRelationAttribute.FeatureFlag.IsUnknown() && !attributesItem1.PaymentMethodRelationAttribute.FeatureFlag.IsNull() {
				*featureFlag46 = attributesItem1.PaymentMethodRelationAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag46 = nil
			}
			var settingsFlag45 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem45 := range attributesItem1.PaymentMethodRelationAttribute.SettingsFlag {
				name88 := new(string)
				if !settingsFlagItem45.Name.IsUnknown() && !settingsFlagItem45.Name.IsNull() {
					*name88 = settingsFlagItem45.Name.ValueString()
				} else {
					name88 = nil
				}
				enabled45 := new(bool)
				if !settingsFlagItem45.Enabled.IsUnknown() && !settingsFlagItem45.Enabled.IsNull() {
					*enabled45 = settingsFlagItem45.Enabled.ValueBool()
				} else {
					enabled45 = nil
				}
				settingsFlag45 = append(settingsFlag45, shared.SettingFlag{
					Name:    name88,
					Enabled: enabled45,
				})
			}
			valueFormatter40 := new(string)
			if !attributesItem1.PaymentMethodRelationAttribute.ValueFormatter.IsUnknown() && !attributesItem1.PaymentMethodRelationAttribute.ValueFormatter.IsNull() {
				*valueFormatter40 = attributesItem1.PaymentMethodRelationAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter40 = nil
			}
			previewValueFormatter40 := new(string)
			if !attributesItem1.PaymentMethodRelationAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem1.PaymentMethodRelationAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter40 = attributesItem1.PaymentMethodRelationAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter40 = nil
			}
			entityBuilderDisableEdit40 := new(bool)
			if !attributesItem1.PaymentMethodRelationAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem1.PaymentMethodRelationAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit40 = attributesItem1.PaymentMethodRelationAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit40 = nil
			}
			protected40 := new(bool)
			if !attributesItem1.PaymentMethodRelationAttribute.Protected.IsUnknown() && !attributesItem1.PaymentMethodRelationAttribute.Protected.IsNull() {
				*protected40 = attributesItem1.PaymentMethodRelationAttribute.Protected.ValueBool()
			} else {
				protected40 = nil
			}
			var infoHelpers40 *shared.PaymentMethodRelationAttributeInfoHelpers
			if attributesItem1.PaymentMethodRelationAttribute.InfoHelpers != nil {
				hintText40 := new(string)
				if !attributesItem1.PaymentMethodRelationAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem1.PaymentMethodRelationAttribute.InfoHelpers.HintText.IsNull() {
					*hintText40 = attributesItem1.PaymentMethodRelationAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText40 = nil
				}
				hintTextKey40 := new(string)
				if !attributesItem1.PaymentMethodRelationAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem1.PaymentMethodRelationAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey40 = attributesItem1.PaymentMethodRelationAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey40 = nil
				}
				hintCustomComponent40 := new(string)
				if !attributesItem1.PaymentMethodRelationAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem1.PaymentMethodRelationAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent40 = attributesItem1.PaymentMethodRelationAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent40 = nil
				}
				hintTooltipPlacement40 := new(string)
				if !attributesItem1.PaymentMethodRelationAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem1.PaymentMethodRelationAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement40 = attributesItem1.PaymentMethodRelationAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement40 = nil
				}
				infoHelpers40 = &shared.PaymentMethodRelationAttributeInfoHelpers{
					HintText:             hintText40,
					HintTextKey:          hintTextKey40,
					HintCustomComponent:  hintCustomComponent40,
					HintTooltipPlacement: hintTooltipPlacement40,
				}
			}
			typeVar41 := new(shared.PaymentMethodRelationAttributeType)
			if !attributesItem1.PaymentMethodRelationAttribute.Type.IsUnknown() && !attributesItem1.PaymentMethodRelationAttribute.Type.IsNull() {
				*typeVar41 = shared.PaymentMethodRelationAttributeType(attributesItem1.PaymentMethodRelationAttribute.Type.ValueString())
			} else {
				typeVar41 = nil
			}
			hasPrimary6 := new(bool)
			if !attributesItem1.PaymentMethodRelationAttribute.HasPrimary.IsUnknown() && !attributesItem1.PaymentMethodRelationAttribute.HasPrimary.IsNull() {
				*hasPrimary6 = attributesItem1.PaymentMethodRelationAttribute.HasPrimary.ValueBool()
			} else {
				hasPrimary6 = nil
			}
			paymentMethodRelationAttribute1 := shared.PaymentMethodRelationAttribute{
				ID:                       id46,
				Name:                     name87,
				Label:                    label48,
				Placeholder:              placeholder40,
				Hidden:                   hidden40,
				ShowInTable:              showInTable40,
				Sortable:                 sortable40,
				Required:                 required40,
				Readonly:                 readonly40,
				Deprecated:               deprecated40,
				DefaultValue:             defaultValue40,
				Group:                    group40,
				Order:                    order42,
				Layout:                   layout40,
				HideLabel:                hideLabel40,
				Icon:                     icon45,
				RenderCondition:          renderCondition43,
				Purpose:                  purpose42,
				Constraints:              constraints40,
				FeatureFlag:              featureFlag46,
				SettingsFlag:             settingsFlag45,
				ValueFormatter:           valueFormatter40,
				PreviewValueFormatter:    previewValueFormatter40,
				EntityBuilderDisableEdit: entityBuilderDisableEdit40,
				Protected:                protected40,
				InfoHelpers:              infoHelpers40,
				Type:                     typeVar41,
				HasPrimary:               hasPrimary6,
			}
			attributes1 = append(attributes1, shared.AttributeInput{
				PaymentMethodRelationAttribute: &paymentMethodRelationAttribute1,
			})
		}
		if attributesItem1.CurrencyAttribute != nil {
			id47 := new(string)
			if !attributesItem1.CurrencyAttribute.ID.IsUnknown() && !attributesItem1.CurrencyAttribute.ID.IsNull() {
				*id47 = attributesItem1.CurrencyAttribute.ID.ValueString()
			} else {
				id47 = nil
			}
			name89 := attributesItem1.CurrencyAttribute.Name.ValueString()
			label49 := attributesItem1.CurrencyAttribute.Label.ValueString()
			placeholder41 := new(string)
			if !attributesItem1.CurrencyAttribute.Placeholder.IsUnknown() && !attributesItem1.CurrencyAttribute.Placeholder.IsNull() {
				*placeholder41 = attributesItem1.CurrencyAttribute.Placeholder.ValueString()
			} else {
				placeholder41 = nil
			}
			hidden41 := new(bool)
			if !attributesItem1.CurrencyAttribute.Hidden.IsUnknown() && !attributesItem1.CurrencyAttribute.Hidden.IsNull() {
				*hidden41 = attributesItem1.CurrencyAttribute.Hidden.ValueBool()
			} else {
				hidden41 = nil
			}
			showInTable41 := new(bool)
			if !attributesItem1.CurrencyAttribute.ShowInTable.IsUnknown() && !attributesItem1.CurrencyAttribute.ShowInTable.IsNull() {
				*showInTable41 = attributesItem1.CurrencyAttribute.ShowInTable.ValueBool()
			} else {
				showInTable41 = nil
			}
			sortable41 := new(bool)
			if !attributesItem1.CurrencyAttribute.Sortable.IsUnknown() && !attributesItem1.CurrencyAttribute.Sortable.IsNull() {
				*sortable41 = attributesItem1.CurrencyAttribute.Sortable.ValueBool()
			} else {
				sortable41 = nil
			}
			required41 := new(bool)
			if !attributesItem1.CurrencyAttribute.Required.IsUnknown() && !attributesItem1.CurrencyAttribute.Required.IsNull() {
				*required41 = attributesItem1.CurrencyAttribute.Required.ValueBool()
			} else {
				required41 = nil
			}
			readonly41 := new(bool)
			if !attributesItem1.CurrencyAttribute.Readonly.IsUnknown() && !attributesItem1.CurrencyAttribute.Readonly.IsNull() {
				*readonly41 = attributesItem1.CurrencyAttribute.Readonly.ValueBool()
			} else {
				readonly41 = nil
			}
			deprecated41 := new(bool)
			if !attributesItem1.CurrencyAttribute.Deprecated.IsUnknown() && !attributesItem1.CurrencyAttribute.Deprecated.IsNull() {
				*deprecated41 = attributesItem1.CurrencyAttribute.Deprecated.ValueBool()
			} else {
				deprecated41 = nil
			}
			var defaultValue41 interface{}
			if !attributesItem1.CurrencyAttribute.DefaultValue.IsUnknown() && !attributesItem1.CurrencyAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem1.CurrencyAttribute.DefaultValue.ValueString()), &defaultValue41)
			}
			group41 := new(string)
			if !attributesItem1.CurrencyAttribute.Group.IsUnknown() && !attributesItem1.CurrencyAttribute.Group.IsNull() {
				*group41 = attributesItem1.CurrencyAttribute.Group.ValueString()
			} else {
				group41 = nil
			}
			order43 := new(int64)
			if !attributesItem1.CurrencyAttribute.Order.IsUnknown() && !attributesItem1.CurrencyAttribute.Order.IsNull() {
				*order43 = attributesItem1.CurrencyAttribute.Order.ValueInt64()
			} else {
				order43 = nil
			}
			layout41 := new(string)
			if !attributesItem1.CurrencyAttribute.Layout.IsUnknown() && !attributesItem1.CurrencyAttribute.Layout.IsNull() {
				*layout41 = attributesItem1.CurrencyAttribute.Layout.ValueString()
			} else {
				layout41 = nil
			}
			hideLabel41 := new(bool)
			if !attributesItem1.CurrencyAttribute.HideLabel.IsUnknown() && !attributesItem1.CurrencyAttribute.HideLabel.IsNull() {
				*hideLabel41 = attributesItem1.CurrencyAttribute.HideLabel.ValueBool()
			} else {
				hideLabel41 = nil
			}
			icon46 := new(string)
			if !attributesItem1.CurrencyAttribute.Icon.IsUnknown() && !attributesItem1.CurrencyAttribute.Icon.IsNull() {
				*icon46 = attributesItem1.CurrencyAttribute.Icon.ValueString()
			} else {
				icon46 = nil
			}
			renderCondition44 := new(string)
			if !attributesItem1.CurrencyAttribute.RenderCondition.IsUnknown() && !attributesItem1.CurrencyAttribute.RenderCondition.IsNull() {
				*renderCondition44 = attributesItem1.CurrencyAttribute.RenderCondition.ValueString()
			} else {
				renderCondition44 = nil
			}
			var purpose43 []string = []string{}
			for _, purposeItem43 := range attributesItem1.CurrencyAttribute.Purpose {
				purpose43 = append(purpose43, purposeItem43.ValueString())
			}
			var constraints41 *shared.CurrencyAttributeConstraints
			if attributesItem1.CurrencyAttribute.Constraints != nil {
				constraints41 = &shared.CurrencyAttributeConstraints{}
			}
			featureFlag47 := new(string)
			if !attributesItem1.CurrencyAttribute.FeatureFlag.IsUnknown() && !attributesItem1.CurrencyAttribute.FeatureFlag.IsNull() {
				*featureFlag47 = attributesItem1.CurrencyAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag47 = nil
			}
			var settingsFlag46 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem46 := range attributesItem1.CurrencyAttribute.SettingsFlag {
				name90 := new(string)
				if !settingsFlagItem46.Name.IsUnknown() && !settingsFlagItem46.Name.IsNull() {
					*name90 = settingsFlagItem46.Name.ValueString()
				} else {
					name90 = nil
				}
				enabled46 := new(bool)
				if !settingsFlagItem46.Enabled.IsUnknown() && !settingsFlagItem46.Enabled.IsNull() {
					*enabled46 = settingsFlagItem46.Enabled.ValueBool()
				} else {
					enabled46 = nil
				}
				settingsFlag46 = append(settingsFlag46, shared.SettingFlag{
					Name:    name90,
					Enabled: enabled46,
				})
			}
			valueFormatter41 := new(string)
			if !attributesItem1.CurrencyAttribute.ValueFormatter.IsUnknown() && !attributesItem1.CurrencyAttribute.ValueFormatter.IsNull() {
				*valueFormatter41 = attributesItem1.CurrencyAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter41 = nil
			}
			previewValueFormatter41 := new(string)
			if !attributesItem1.CurrencyAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem1.CurrencyAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter41 = attributesItem1.CurrencyAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter41 = nil
			}
			entityBuilderDisableEdit41 := new(bool)
			if !attributesItem1.CurrencyAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem1.CurrencyAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit41 = attributesItem1.CurrencyAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit41 = nil
			}
			protected41 := new(bool)
			if !attributesItem1.CurrencyAttribute.Protected.IsUnknown() && !attributesItem1.CurrencyAttribute.Protected.IsNull() {
				*protected41 = attributesItem1.CurrencyAttribute.Protected.ValueBool()
			} else {
				protected41 = nil
			}
			var infoHelpers41 *shared.CurrencyAttributeInfoHelpers
			if attributesItem1.CurrencyAttribute.InfoHelpers != nil {
				hintText41 := new(string)
				if !attributesItem1.CurrencyAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem1.CurrencyAttribute.InfoHelpers.HintText.IsNull() {
					*hintText41 = attributesItem1.CurrencyAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText41 = nil
				}
				hintTextKey41 := new(string)
				if !attributesItem1.CurrencyAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem1.CurrencyAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey41 = attributesItem1.CurrencyAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey41 = nil
				}
				hintCustomComponent41 := new(string)
				if !attributesItem1.CurrencyAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem1.CurrencyAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent41 = attributesItem1.CurrencyAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent41 = nil
				}
				hintTooltipPlacement41 := new(string)
				if !attributesItem1.CurrencyAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem1.CurrencyAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement41 = attributesItem1.CurrencyAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement41 = nil
				}
				infoHelpers41 = &shared.CurrencyAttributeInfoHelpers{
					HintText:             hintText41,
					HintTextKey:          hintTextKey41,
					HintCustomComponent:  hintCustomComponent41,
					HintTooltipPlacement: hintTooltipPlacement41,
				}
			}
			typeVar42 := shared.CurrencyAttributeType(attributesItem1.CurrencyAttribute.Type.ValueString())
			currencySelectorOnly1 := new(bool)
			if !attributesItem1.CurrencyAttribute.CurrencySelectorOnly.IsUnknown() && !attributesItem1.CurrencyAttribute.CurrencySelectorOnly.IsNull() {
				*currencySelectorOnly1 = attributesItem1.CurrencyAttribute.CurrencySelectorOnly.ValueBool()
			} else {
				currencySelectorOnly1 = nil
			}
			var currency1 []shared.Currency = []shared.Currency{}
			for _, currencyItem1 := range attributesItem1.CurrencyAttribute.Currency {
				if currencyItem1.One != nil {
					code1 := currencyItem1.One.Code.ValueString()
					description1 := currencyItem1.One.Description.ValueString()
					symbol1 := currencyItem1.One.Symbol.ValueString()
					flag1 := new(string)
					if !currencyItem1.One.Flag.IsUnknown() && !currencyItem1.One.Flag.IsNull() {
						*flag1 = currencyItem1.One.Flag.ValueString()
					} else {
						flag1 = nil
					}
					eleven := shared.One{
						Code:        code1,
						Description: description1,
						Symbol:      symbol1,
						Flag:        flag1,
					}
					currency1 = append(currency1, shared.Currency{
						One: &eleven,
					})
				}
			}
			currencyAttribute1 := shared.CurrencyAttribute{
				ID:                       id47,
				Name:                     name89,
				Label:                    label49,
				Placeholder:              placeholder41,
				Hidden:                   hidden41,
				ShowInTable:              showInTable41,
				Sortable:                 sortable41,
				Required:                 required41,
				Readonly:                 readonly41,
				Deprecated:               deprecated41,
				DefaultValue:             defaultValue41,
				Group:                    group41,
				Order:                    order43,
				Layout:                   layout41,
				HideLabel:                hideLabel41,
				Icon:                     icon46,
				RenderCondition:          renderCondition44,
				Purpose:                  purpose43,
				Constraints:              constraints41,
				FeatureFlag:              featureFlag47,
				SettingsFlag:             settingsFlag46,
				ValueFormatter:           valueFormatter41,
				PreviewValueFormatter:    previewValueFormatter41,
				EntityBuilderDisableEdit: entityBuilderDisableEdit41,
				Protected:                protected41,
				InfoHelpers:              infoHelpers41,
				Type:                     typeVar42,
				CurrencySelectorOnly:     currencySelectorOnly1,
				Currency:                 currency1,
			}
			attributes1 = append(attributes1, shared.AttributeInput{
				CurrencyAttribute: &currencyAttribute1,
			})
		}
		if attributesItem1.RepeatableAttribute != nil {
			id48 := new(string)
			if !attributesItem1.RepeatableAttribute.ID.IsUnknown() && !attributesItem1.RepeatableAttribute.ID.IsNull() {
				*id48 = attributesItem1.RepeatableAttribute.ID.ValueString()
			} else {
				id48 = nil
			}
			name91 := attributesItem1.RepeatableAttribute.Name.ValueString()
			label50 := attributesItem1.RepeatableAttribute.Label.ValueString()
			placeholder42 := new(string)
			if !attributesItem1.RepeatableAttribute.Placeholder.IsUnknown() && !attributesItem1.RepeatableAttribute.Placeholder.IsNull() {
				*placeholder42 = attributesItem1.RepeatableAttribute.Placeholder.ValueString()
			} else {
				placeholder42 = nil
			}
			hidden42 := new(bool)
			if !attributesItem1.RepeatableAttribute.Hidden.IsUnknown() && !attributesItem1.RepeatableAttribute.Hidden.IsNull() {
				*hidden42 = attributesItem1.RepeatableAttribute.Hidden.ValueBool()
			} else {
				hidden42 = nil
			}
			showInTable42 := new(bool)
			if !attributesItem1.RepeatableAttribute.ShowInTable.IsUnknown() && !attributesItem1.RepeatableAttribute.ShowInTable.IsNull() {
				*showInTable42 = attributesItem1.RepeatableAttribute.ShowInTable.ValueBool()
			} else {
				showInTable42 = nil
			}
			sortable42 := new(bool)
			if !attributesItem1.RepeatableAttribute.Sortable.IsUnknown() && !attributesItem1.RepeatableAttribute.Sortable.IsNull() {
				*sortable42 = attributesItem1.RepeatableAttribute.Sortable.ValueBool()
			} else {
				sortable42 = nil
			}
			required42 := new(bool)
			if !attributesItem1.RepeatableAttribute.Required.IsUnknown() && !attributesItem1.RepeatableAttribute.Required.IsNull() {
				*required42 = attributesItem1.RepeatableAttribute.Required.ValueBool()
			} else {
				required42 = nil
			}
			readonly42 := new(bool)
			if !attributesItem1.RepeatableAttribute.Readonly.IsUnknown() && !attributesItem1.RepeatableAttribute.Readonly.IsNull() {
				*readonly42 = attributesItem1.RepeatableAttribute.Readonly.ValueBool()
			} else {
				readonly42 = nil
			}
			deprecated42 := new(bool)
			if !attributesItem1.RepeatableAttribute.Deprecated.IsUnknown() && !attributesItem1.RepeatableAttribute.Deprecated.IsNull() {
				*deprecated42 = attributesItem1.RepeatableAttribute.Deprecated.ValueBool()
			} else {
				deprecated42 = nil
			}
			var defaultValue42 interface{}
			if !attributesItem1.RepeatableAttribute.DefaultValue.IsUnknown() && !attributesItem1.RepeatableAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem1.RepeatableAttribute.DefaultValue.ValueString()), &defaultValue42)
			}
			group42 := new(string)
			if !attributesItem1.RepeatableAttribute.Group.IsUnknown() && !attributesItem1.RepeatableAttribute.Group.IsNull() {
				*group42 = attributesItem1.RepeatableAttribute.Group.ValueString()
			} else {
				group42 = nil
			}
			order44 := new(int64)
			if !attributesItem1.RepeatableAttribute.Order.IsUnknown() && !attributesItem1.RepeatableAttribute.Order.IsNull() {
				*order44 = attributesItem1.RepeatableAttribute.Order.ValueInt64()
			} else {
				order44 = nil
			}
			layout42 := new(string)
			if !attributesItem1.RepeatableAttribute.Layout.IsUnknown() && !attributesItem1.RepeatableAttribute.Layout.IsNull() {
				*layout42 = attributesItem1.RepeatableAttribute.Layout.ValueString()
			} else {
				layout42 = nil
			}
			hideLabel42 := new(bool)
			if !attributesItem1.RepeatableAttribute.HideLabel.IsUnknown() && !attributesItem1.RepeatableAttribute.HideLabel.IsNull() {
				*hideLabel42 = attributesItem1.RepeatableAttribute.HideLabel.ValueBool()
			} else {
				hideLabel42 = nil
			}
			icon47 := new(string)
			if !attributesItem1.RepeatableAttribute.Icon.IsUnknown() && !attributesItem1.RepeatableAttribute.Icon.IsNull() {
				*icon47 = attributesItem1.RepeatableAttribute.Icon.ValueString()
			} else {
				icon47 = nil
			}
			renderCondition45 := new(string)
			if !attributesItem1.RepeatableAttribute.RenderCondition.IsUnknown() && !attributesItem1.RepeatableAttribute.RenderCondition.IsNull() {
				*renderCondition45 = attributesItem1.RepeatableAttribute.RenderCondition.ValueString()
			} else {
				renderCondition45 = nil
			}
			var purpose44 []string = []string{}
			for _, purposeItem44 := range attributesItem1.RepeatableAttribute.Purpose {
				purpose44 = append(purpose44, purposeItem44.ValueString())
			}
			var constraints42 *shared.RepeatableAttributeConstraints
			if attributesItem1.RepeatableAttribute.Constraints != nil {
				constraints42 = &shared.RepeatableAttributeConstraints{}
			}
			featureFlag48 := new(string)
			if !attributesItem1.RepeatableAttribute.FeatureFlag.IsUnknown() && !attributesItem1.RepeatableAttribute.FeatureFlag.IsNull() {
				*featureFlag48 = attributesItem1.RepeatableAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag48 = nil
			}
			var settingsFlag47 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem47 := range attributesItem1.RepeatableAttribute.SettingsFlag {
				name92 := new(string)
				if !settingsFlagItem47.Name.IsUnknown() && !settingsFlagItem47.Name.IsNull() {
					*name92 = settingsFlagItem47.Name.ValueString()
				} else {
					name92 = nil
				}
				enabled47 := new(bool)
				if !settingsFlagItem47.Enabled.IsUnknown() && !settingsFlagItem47.Enabled.IsNull() {
					*enabled47 = settingsFlagItem47.Enabled.ValueBool()
				} else {
					enabled47 = nil
				}
				settingsFlag47 = append(settingsFlag47, shared.SettingFlag{
					Name:    name92,
					Enabled: enabled47,
				})
			}
			valueFormatter42 := new(string)
			if !attributesItem1.RepeatableAttribute.ValueFormatter.IsUnknown() && !attributesItem1.RepeatableAttribute.ValueFormatter.IsNull() {
				*valueFormatter42 = attributesItem1.RepeatableAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter42 = nil
			}
			previewValueFormatter42 := new(string)
			if !attributesItem1.RepeatableAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem1.RepeatableAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter42 = attributesItem1.RepeatableAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter42 = nil
			}
			entityBuilderDisableEdit42 := new(bool)
			if !attributesItem1.RepeatableAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem1.RepeatableAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit42 = attributesItem1.RepeatableAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit42 = nil
			}
			protected42 := new(bool)
			if !attributesItem1.RepeatableAttribute.Protected.IsUnknown() && !attributesItem1.RepeatableAttribute.Protected.IsNull() {
				*protected42 = attributesItem1.RepeatableAttribute.Protected.ValueBool()
			} else {
				protected42 = nil
			}
			var infoHelpers42 *shared.RepeatableAttributeInfoHelpers
			if attributesItem1.RepeatableAttribute.InfoHelpers != nil {
				hintText42 := new(string)
				if !attributesItem1.RepeatableAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem1.RepeatableAttribute.InfoHelpers.HintText.IsNull() {
					*hintText42 = attributesItem1.RepeatableAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText42 = nil
				}
				hintTextKey42 := new(string)
				if !attributesItem1.RepeatableAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem1.RepeatableAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey42 = attributesItem1.RepeatableAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey42 = nil
				}
				hintCustomComponent42 := new(string)
				if !attributesItem1.RepeatableAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem1.RepeatableAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent42 = attributesItem1.RepeatableAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent42 = nil
				}
				hintTooltipPlacement42 := new(string)
				if !attributesItem1.RepeatableAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem1.RepeatableAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement42 = attributesItem1.RepeatableAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement42 = nil
				}
				infoHelpers42 = &shared.RepeatableAttributeInfoHelpers{
					HintText:             hintText42,
					HintTextKey:          hintTextKey42,
					HintCustomComponent:  hintCustomComponent42,
					HintTooltipPlacement: hintTooltipPlacement42,
				}
			}
			repeatable1 := new(bool)
			if !attributesItem1.RepeatableAttribute.Repeatable.IsUnknown() && !attributesItem1.RepeatableAttribute.Repeatable.IsNull() {
				*repeatable1 = attributesItem1.RepeatableAttribute.Repeatable.ValueBool()
			} else {
				repeatable1 = nil
			}
			hasPrimary7 := new(bool)
			if !attributesItem1.RepeatableAttribute.HasPrimary.IsUnknown() && !attributesItem1.RepeatableAttribute.HasPrimary.IsNull() {
				*hasPrimary7 = attributesItem1.RepeatableAttribute.HasPrimary.ValueBool()
			} else {
				hasPrimary7 = nil
			}
			relationAffinityMode3 := new(shared.RepeatableAttributeRelationAffinityMode)
			if !attributesItem1.RepeatableAttribute.RelationAffinityMode.IsUnknown() && !attributesItem1.RepeatableAttribute.RelationAffinityMode.IsNull() {
				*relationAffinityMode3 = shared.RepeatableAttributeRelationAffinityMode(attributesItem1.RepeatableAttribute.RelationAffinityMode.ValueString())
			} else {
				relationAffinityMode3 = nil
			}
			typeVar43 := new(shared.RepeatableAttributeType)
			if !attributesItem1.RepeatableAttribute.Type.IsUnknown() && !attributesItem1.RepeatableAttribute.Type.IsNull() {
				*typeVar43 = shared.RepeatableAttributeType(attributesItem1.RepeatableAttribute.Type.ValueString())
			} else {
				typeVar43 = nil
			}
			enableRelationPicker3 := new(bool)
			if !attributesItem1.RepeatableAttribute.EnableRelationPicker.IsUnknown() && !attributesItem1.RepeatableAttribute.EnableRelationPicker.IsNull() {
				*enableRelationPicker3 = attributesItem1.RepeatableAttribute.EnableRelationPicker.ValueBool()
			} else {
				enableRelationPicker3 = nil
			}
			repeatableAttribute1 := shared.RepeatableAttribute{
				ID:                       id48,
				Name:                     name91,
				Label:                    label50,
				Placeholder:              placeholder42,
				Hidden:                   hidden42,
				ShowInTable:              showInTable42,
				Sortable:                 sortable42,
				Required:                 required42,
				Readonly:                 readonly42,
				Deprecated:               deprecated42,
				DefaultValue:             defaultValue42,
				Group:                    group42,
				Order:                    order44,
				Layout:                   layout42,
				HideLabel:                hideLabel42,
				Icon:                     icon47,
				RenderCondition:          renderCondition45,
				Purpose:                  purpose44,
				Constraints:              constraints42,
				FeatureFlag:              featureFlag48,
				SettingsFlag:             settingsFlag47,
				ValueFormatter:           valueFormatter42,
				PreviewValueFormatter:    previewValueFormatter42,
				EntityBuilderDisableEdit: entityBuilderDisableEdit42,
				Protected:                protected42,
				InfoHelpers:              infoHelpers42,
				Repeatable:               repeatable1,
				HasPrimary:               hasPrimary7,
				RelationAffinityMode:     relationAffinityMode3,
				Type:                     typeVar43,
				EnableRelationPicker:     enableRelationPicker3,
			}
			attributes1 = append(attributes1, shared.AttributeInput{
				RepeatableAttribute: &repeatableAttribute1,
			})
		}
		if attributesItem1.TagsAttribute != nil {
			id49 := new(string)
			if !attributesItem1.TagsAttribute.ID.IsUnknown() && !attributesItem1.TagsAttribute.ID.IsNull() {
				*id49 = attributesItem1.TagsAttribute.ID.ValueString()
			} else {
				id49 = nil
			}
			name93 := attributesItem1.TagsAttribute.Name.ValueString()
			label51 := attributesItem1.TagsAttribute.Label.ValueString()
			placeholder43 := new(string)
			if !attributesItem1.TagsAttribute.Placeholder.IsUnknown() && !attributesItem1.TagsAttribute.Placeholder.IsNull() {
				*placeholder43 = attributesItem1.TagsAttribute.Placeholder.ValueString()
			} else {
				placeholder43 = nil
			}
			hidden43 := new(bool)
			if !attributesItem1.TagsAttribute.Hidden.IsUnknown() && !attributesItem1.TagsAttribute.Hidden.IsNull() {
				*hidden43 = attributesItem1.TagsAttribute.Hidden.ValueBool()
			} else {
				hidden43 = nil
			}
			showInTable43 := new(bool)
			if !attributesItem1.TagsAttribute.ShowInTable.IsUnknown() && !attributesItem1.TagsAttribute.ShowInTable.IsNull() {
				*showInTable43 = attributesItem1.TagsAttribute.ShowInTable.ValueBool()
			} else {
				showInTable43 = nil
			}
			sortable43 := new(bool)
			if !attributesItem1.TagsAttribute.Sortable.IsUnknown() && !attributesItem1.TagsAttribute.Sortable.IsNull() {
				*sortable43 = attributesItem1.TagsAttribute.Sortable.ValueBool()
			} else {
				sortable43 = nil
			}
			required43 := new(bool)
			if !attributesItem1.TagsAttribute.Required.IsUnknown() && !attributesItem1.TagsAttribute.Required.IsNull() {
				*required43 = attributesItem1.TagsAttribute.Required.ValueBool()
			} else {
				required43 = nil
			}
			readonly43 := new(bool)
			if !attributesItem1.TagsAttribute.Readonly.IsUnknown() && !attributesItem1.TagsAttribute.Readonly.IsNull() {
				*readonly43 = attributesItem1.TagsAttribute.Readonly.ValueBool()
			} else {
				readonly43 = nil
			}
			deprecated43 := new(bool)
			if !attributesItem1.TagsAttribute.Deprecated.IsUnknown() && !attributesItem1.TagsAttribute.Deprecated.IsNull() {
				*deprecated43 = attributesItem1.TagsAttribute.Deprecated.ValueBool()
			} else {
				deprecated43 = nil
			}
			var defaultValue43 interface{}
			if !attributesItem1.TagsAttribute.DefaultValue.IsUnknown() && !attributesItem1.TagsAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem1.TagsAttribute.DefaultValue.ValueString()), &defaultValue43)
			}
			group43 := new(string)
			if !attributesItem1.TagsAttribute.Group.IsUnknown() && !attributesItem1.TagsAttribute.Group.IsNull() {
				*group43 = attributesItem1.TagsAttribute.Group.ValueString()
			} else {
				group43 = nil
			}
			order45 := new(int64)
			if !attributesItem1.TagsAttribute.Order.IsUnknown() && !attributesItem1.TagsAttribute.Order.IsNull() {
				*order45 = attributesItem1.TagsAttribute.Order.ValueInt64()
			} else {
				order45 = nil
			}
			layout43 := new(string)
			if !attributesItem1.TagsAttribute.Layout.IsUnknown() && !attributesItem1.TagsAttribute.Layout.IsNull() {
				*layout43 = attributesItem1.TagsAttribute.Layout.ValueString()
			} else {
				layout43 = nil
			}
			hideLabel43 := new(bool)
			if !attributesItem1.TagsAttribute.HideLabel.IsUnknown() && !attributesItem1.TagsAttribute.HideLabel.IsNull() {
				*hideLabel43 = attributesItem1.TagsAttribute.HideLabel.ValueBool()
			} else {
				hideLabel43 = nil
			}
			icon48 := new(string)
			if !attributesItem1.TagsAttribute.Icon.IsUnknown() && !attributesItem1.TagsAttribute.Icon.IsNull() {
				*icon48 = attributesItem1.TagsAttribute.Icon.ValueString()
			} else {
				icon48 = nil
			}
			renderCondition46 := new(string)
			if !attributesItem1.TagsAttribute.RenderCondition.IsUnknown() && !attributesItem1.TagsAttribute.RenderCondition.IsNull() {
				*renderCondition46 = attributesItem1.TagsAttribute.RenderCondition.ValueString()
			} else {
				renderCondition46 = nil
			}
			var purpose45 []string = []string{}
			for _, purposeItem45 := range attributesItem1.TagsAttribute.Purpose {
				purpose45 = append(purpose45, purposeItem45.ValueString())
			}
			var constraints43 *shared.TagsAttributeConstraints
			if attributesItem1.TagsAttribute.Constraints != nil {
				constraints43 = &shared.TagsAttributeConstraints{}
			}
			featureFlag49 := new(string)
			if !attributesItem1.TagsAttribute.FeatureFlag.IsUnknown() && !attributesItem1.TagsAttribute.FeatureFlag.IsNull() {
				*featureFlag49 = attributesItem1.TagsAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag49 = nil
			}
			var settingsFlag48 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem48 := range attributesItem1.TagsAttribute.SettingsFlag {
				name94 := new(string)
				if !settingsFlagItem48.Name.IsUnknown() && !settingsFlagItem48.Name.IsNull() {
					*name94 = settingsFlagItem48.Name.ValueString()
				} else {
					name94 = nil
				}
				enabled48 := new(bool)
				if !settingsFlagItem48.Enabled.IsUnknown() && !settingsFlagItem48.Enabled.IsNull() {
					*enabled48 = settingsFlagItem48.Enabled.ValueBool()
				} else {
					enabled48 = nil
				}
				settingsFlag48 = append(settingsFlag48, shared.SettingFlag{
					Name:    name94,
					Enabled: enabled48,
				})
			}
			valueFormatter43 := new(string)
			if !attributesItem1.TagsAttribute.ValueFormatter.IsUnknown() && !attributesItem1.TagsAttribute.ValueFormatter.IsNull() {
				*valueFormatter43 = attributesItem1.TagsAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter43 = nil
			}
			previewValueFormatter43 := new(string)
			if !attributesItem1.TagsAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem1.TagsAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter43 = attributesItem1.TagsAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter43 = nil
			}
			entityBuilderDisableEdit43 := new(bool)
			if !attributesItem1.TagsAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem1.TagsAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit43 = attributesItem1.TagsAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit43 = nil
			}
			protected43 := new(bool)
			if !attributesItem1.TagsAttribute.Protected.IsUnknown() && !attributesItem1.TagsAttribute.Protected.IsNull() {
				*protected43 = attributesItem1.TagsAttribute.Protected.ValueBool()
			} else {
				protected43 = nil
			}
			var infoHelpers43 *shared.TagsAttributeInfoHelpers
			if attributesItem1.TagsAttribute.InfoHelpers != nil {
				hintText43 := new(string)
				if !attributesItem1.TagsAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem1.TagsAttribute.InfoHelpers.HintText.IsNull() {
					*hintText43 = attributesItem1.TagsAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText43 = nil
				}
				hintTextKey43 := new(string)
				if !attributesItem1.TagsAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem1.TagsAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey43 = attributesItem1.TagsAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey43 = nil
				}
				hintCustomComponent43 := new(string)
				if !attributesItem1.TagsAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem1.TagsAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent43 = attributesItem1.TagsAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent43 = nil
				}
				hintTooltipPlacement43 := new(string)
				if !attributesItem1.TagsAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem1.TagsAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement43 = attributesItem1.TagsAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement43 = nil
				}
				infoHelpers43 = &shared.TagsAttributeInfoHelpers{
					HintText:             hintText43,
					HintTextKey:          hintTextKey43,
					HintCustomComponent:  hintCustomComponent43,
					HintTooltipPlacement: hintTooltipPlacement43,
				}
			}
			typeVar44 := new(shared.TagsAttributeType)
			if !attributesItem1.TagsAttribute.Type.IsUnknown() && !attributesItem1.TagsAttribute.Type.IsNull() {
				*typeVar44 = shared.TagsAttributeType(attributesItem1.TagsAttribute.Type.ValueString())
			} else {
				typeVar44 = nil
			}
			var optionsVar8 []string = []string{}
			for _, optionsItem6 := range attributesItem1.TagsAttribute.Options {
				optionsVar8 = append(optionsVar8, optionsItem6.ValueString())
			}
			var suggestions1 []string = []string{}
			for _, suggestionsItem1 := range attributesItem1.TagsAttribute.Suggestions {
				suggestions1 = append(suggestions1, suggestionsItem1.ValueString())
			}
			tagsAttribute1 := shared.TagsAttribute{
				ID:                       id49,
				Name:                     name93,
				Label:                    label51,
				Placeholder:              placeholder43,
				Hidden:                   hidden43,
				ShowInTable:              showInTable43,
				Sortable:                 sortable43,
				Required:                 required43,
				Readonly:                 readonly43,
				Deprecated:               deprecated43,
				DefaultValue:             defaultValue43,
				Group:                    group43,
				Order:                    order45,
				Layout:                   layout43,
				HideLabel:                hideLabel43,
				Icon:                     icon48,
				RenderCondition:          renderCondition46,
				Purpose:                  purpose45,
				Constraints:              constraints43,
				FeatureFlag:              featureFlag49,
				SettingsFlag:             settingsFlag48,
				ValueFormatter:           valueFormatter43,
				PreviewValueFormatter:    previewValueFormatter43,
				EntityBuilderDisableEdit: entityBuilderDisableEdit43,
				Protected:                protected43,
				InfoHelpers:              infoHelpers43,
				Type:                     typeVar44,
				Options:                  optionsVar8,
				Suggestions:              suggestions1,
			}
			attributes1 = append(attributes1, shared.AttributeInput{
				TagsAttribute: &tagsAttribute1,
			})
		}
		if attributesItem1.NumberAttribute != nil {
			id50 := new(string)
			if !attributesItem1.NumberAttribute.ID.IsUnknown() && !attributesItem1.NumberAttribute.ID.IsNull() {
				*id50 = attributesItem1.NumberAttribute.ID.ValueString()
			} else {
				id50 = nil
			}
			name95 := attributesItem1.NumberAttribute.Name.ValueString()
			label52 := attributesItem1.NumberAttribute.Label.ValueString()
			placeholder44 := new(string)
			if !attributesItem1.NumberAttribute.Placeholder.IsUnknown() && !attributesItem1.NumberAttribute.Placeholder.IsNull() {
				*placeholder44 = attributesItem1.NumberAttribute.Placeholder.ValueString()
			} else {
				placeholder44 = nil
			}
			hidden44 := new(bool)
			if !attributesItem1.NumberAttribute.Hidden.IsUnknown() && !attributesItem1.NumberAttribute.Hidden.IsNull() {
				*hidden44 = attributesItem1.NumberAttribute.Hidden.ValueBool()
			} else {
				hidden44 = nil
			}
			showInTable44 := new(bool)
			if !attributesItem1.NumberAttribute.ShowInTable.IsUnknown() && !attributesItem1.NumberAttribute.ShowInTable.IsNull() {
				*showInTable44 = attributesItem1.NumberAttribute.ShowInTable.ValueBool()
			} else {
				showInTable44 = nil
			}
			sortable44 := new(bool)
			if !attributesItem1.NumberAttribute.Sortable.IsUnknown() && !attributesItem1.NumberAttribute.Sortable.IsNull() {
				*sortable44 = attributesItem1.NumberAttribute.Sortable.ValueBool()
			} else {
				sortable44 = nil
			}
			required44 := new(bool)
			if !attributesItem1.NumberAttribute.Required.IsUnknown() && !attributesItem1.NumberAttribute.Required.IsNull() {
				*required44 = attributesItem1.NumberAttribute.Required.ValueBool()
			} else {
				required44 = nil
			}
			readonly44 := new(bool)
			if !attributesItem1.NumberAttribute.Readonly.IsUnknown() && !attributesItem1.NumberAttribute.Readonly.IsNull() {
				*readonly44 = attributesItem1.NumberAttribute.Readonly.ValueBool()
			} else {
				readonly44 = nil
			}
			deprecated44 := new(bool)
			if !attributesItem1.NumberAttribute.Deprecated.IsUnknown() && !attributesItem1.NumberAttribute.Deprecated.IsNull() {
				*deprecated44 = attributesItem1.NumberAttribute.Deprecated.ValueBool()
			} else {
				deprecated44 = nil
			}
			var defaultValue44 interface{}
			if !attributesItem1.NumberAttribute.DefaultValue.IsUnknown() && !attributesItem1.NumberAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem1.NumberAttribute.DefaultValue.ValueString()), &defaultValue44)
			}
			group44 := new(string)
			if !attributesItem1.NumberAttribute.Group.IsUnknown() && !attributesItem1.NumberAttribute.Group.IsNull() {
				*group44 = attributesItem1.NumberAttribute.Group.ValueString()
			} else {
				group44 = nil
			}
			order46 := new(int64)
			if !attributesItem1.NumberAttribute.Order.IsUnknown() && !attributesItem1.NumberAttribute.Order.IsNull() {
				*order46 = attributesItem1.NumberAttribute.Order.ValueInt64()
			} else {
				order46 = nil
			}
			layout44 := new(string)
			if !attributesItem1.NumberAttribute.Layout.IsUnknown() && !attributesItem1.NumberAttribute.Layout.IsNull() {
				*layout44 = attributesItem1.NumberAttribute.Layout.ValueString()
			} else {
				layout44 = nil
			}
			hideLabel44 := new(bool)
			if !attributesItem1.NumberAttribute.HideLabel.IsUnknown() && !attributesItem1.NumberAttribute.HideLabel.IsNull() {
				*hideLabel44 = attributesItem1.NumberAttribute.HideLabel.ValueBool()
			} else {
				hideLabel44 = nil
			}
			icon49 := new(string)
			if !attributesItem1.NumberAttribute.Icon.IsUnknown() && !attributesItem1.NumberAttribute.Icon.IsNull() {
				*icon49 = attributesItem1.NumberAttribute.Icon.ValueString()
			} else {
				icon49 = nil
			}
			renderCondition47 := new(string)
			if !attributesItem1.NumberAttribute.RenderCondition.IsUnknown() && !attributesItem1.NumberAttribute.RenderCondition.IsNull() {
				*renderCondition47 = attributesItem1.NumberAttribute.RenderCondition.ValueString()
			} else {
				renderCondition47 = nil
			}
			var purpose46 []string = []string{}
			for _, purposeItem46 := range attributesItem1.NumberAttribute.Purpose {
				purpose46 = append(purpose46, purposeItem46.ValueString())
			}
			var constraints44 *shared.NumberAttributeConstraints
			if attributesItem1.NumberAttribute.Constraints != nil {
				constraints44 = &shared.NumberAttributeConstraints{}
			}
			featureFlag50 := new(string)
			if !attributesItem1.NumberAttribute.FeatureFlag.IsUnknown() && !attributesItem1.NumberAttribute.FeatureFlag.IsNull() {
				*featureFlag50 = attributesItem1.NumberAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag50 = nil
			}
			var settingsFlag49 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem49 := range attributesItem1.NumberAttribute.SettingsFlag {
				name96 := new(string)
				if !settingsFlagItem49.Name.IsUnknown() && !settingsFlagItem49.Name.IsNull() {
					*name96 = settingsFlagItem49.Name.ValueString()
				} else {
					name96 = nil
				}
				enabled49 := new(bool)
				if !settingsFlagItem49.Enabled.IsUnknown() && !settingsFlagItem49.Enabled.IsNull() {
					*enabled49 = settingsFlagItem49.Enabled.ValueBool()
				} else {
					enabled49 = nil
				}
				settingsFlag49 = append(settingsFlag49, shared.SettingFlag{
					Name:    name96,
					Enabled: enabled49,
				})
			}
			valueFormatter44 := new(string)
			if !attributesItem1.NumberAttribute.ValueFormatter.IsUnknown() && !attributesItem1.NumberAttribute.ValueFormatter.IsNull() {
				*valueFormatter44 = attributesItem1.NumberAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter44 = nil
			}
			previewValueFormatter44 := new(string)
			if !attributesItem1.NumberAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem1.NumberAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter44 = attributesItem1.NumberAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter44 = nil
			}
			entityBuilderDisableEdit44 := new(bool)
			if !attributesItem1.NumberAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem1.NumberAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit44 = attributesItem1.NumberAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit44 = nil
			}
			protected44 := new(bool)
			if !attributesItem1.NumberAttribute.Protected.IsUnknown() && !attributesItem1.NumberAttribute.Protected.IsNull() {
				*protected44 = attributesItem1.NumberAttribute.Protected.ValueBool()
			} else {
				protected44 = nil
			}
			var infoHelpers44 *shared.NumberAttributeInfoHelpers
			if attributesItem1.NumberAttribute.InfoHelpers != nil {
				hintText44 := new(string)
				if !attributesItem1.NumberAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem1.NumberAttribute.InfoHelpers.HintText.IsNull() {
					*hintText44 = attributesItem1.NumberAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText44 = nil
				}
				hintTextKey44 := new(string)
				if !attributesItem1.NumberAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem1.NumberAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey44 = attributesItem1.NumberAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey44 = nil
				}
				hintCustomComponent44 := new(string)
				if !attributesItem1.NumberAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem1.NumberAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent44 = attributesItem1.NumberAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent44 = nil
				}
				hintTooltipPlacement44 := new(string)
				if !attributesItem1.NumberAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem1.NumberAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement44 = attributesItem1.NumberAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement44 = nil
				}
				infoHelpers44 = &shared.NumberAttributeInfoHelpers{
					HintText:             hintText44,
					HintTextKey:          hintTextKey44,
					HintCustomComponent:  hintCustomComponent44,
					HintTooltipPlacement: hintTooltipPlacement44,
				}
			}
			typeVar45 := new(shared.NumberAttributeType)
			if !attributesItem1.NumberAttribute.Type.IsUnknown() && !attributesItem1.NumberAttribute.Type.IsNull() {
				*typeVar45 = shared.NumberAttributeType(attributesItem1.NumberAttribute.Type.ValueString())
			} else {
				typeVar45 = nil
			}
			format1 := new(string)
			if !attributesItem1.NumberAttribute.Format.IsUnknown() && !attributesItem1.NumberAttribute.Format.IsNull() {
				*format1 = attributesItem1.NumberAttribute.Format.ValueString()
			} else {
				format1 = nil
			}
			showSeparator1 := new(bool)
			if !attributesItem1.NumberAttribute.ShowSeparator.IsUnknown() && !attributesItem1.NumberAttribute.ShowSeparator.IsNull() {
				*showSeparator1 = attributesItem1.NumberAttribute.ShowSeparator.ValueBool()
			} else {
				showSeparator1 = nil
			}
			numberAttribute1 := shared.NumberAttribute{
				ID:                       id50,
				Name:                     name95,
				Label:                    label52,
				Placeholder:              placeholder44,
				Hidden:                   hidden44,
				ShowInTable:              showInTable44,
				Sortable:                 sortable44,
				Required:                 required44,
				Readonly:                 readonly44,
				Deprecated:               deprecated44,
				DefaultValue:             defaultValue44,
				Group:                    group44,
				Order:                    order46,
				Layout:                   layout44,
				HideLabel:                hideLabel44,
				Icon:                     icon49,
				RenderCondition:          renderCondition47,
				Purpose:                  purpose46,
				Constraints:              constraints44,
				FeatureFlag:              featureFlag50,
				SettingsFlag:             settingsFlag49,
				ValueFormatter:           valueFormatter44,
				PreviewValueFormatter:    previewValueFormatter44,
				EntityBuilderDisableEdit: entityBuilderDisableEdit44,
				Protected:                protected44,
				InfoHelpers:              infoHelpers44,
				Type:                     typeVar45,
				Format:                   format1,
				ShowSeparator:            showSeparator1,
			}
			attributes1 = append(attributes1, shared.AttributeInput{
				NumberAttribute: &numberAttribute1,
			})
		}
		if attributesItem1.ConsentAttribute != nil {
			id51 := new(string)
			if !attributesItem1.ConsentAttribute.ID.IsUnknown() && !attributesItem1.ConsentAttribute.ID.IsNull() {
				*id51 = attributesItem1.ConsentAttribute.ID.ValueString()
			} else {
				id51 = nil
			}
			name97 := attributesItem1.ConsentAttribute.Name.ValueString()
			label53 := attributesItem1.ConsentAttribute.Label.ValueString()
			placeholder45 := new(string)
			if !attributesItem1.ConsentAttribute.Placeholder.IsUnknown() && !attributesItem1.ConsentAttribute.Placeholder.IsNull() {
				*placeholder45 = attributesItem1.ConsentAttribute.Placeholder.ValueString()
			} else {
				placeholder45 = nil
			}
			hidden45 := new(bool)
			if !attributesItem1.ConsentAttribute.Hidden.IsUnknown() && !attributesItem1.ConsentAttribute.Hidden.IsNull() {
				*hidden45 = attributesItem1.ConsentAttribute.Hidden.ValueBool()
			} else {
				hidden45 = nil
			}
			showInTable45 := new(bool)
			if !attributesItem1.ConsentAttribute.ShowInTable.IsUnknown() && !attributesItem1.ConsentAttribute.ShowInTable.IsNull() {
				*showInTable45 = attributesItem1.ConsentAttribute.ShowInTable.ValueBool()
			} else {
				showInTable45 = nil
			}
			sortable45 := new(bool)
			if !attributesItem1.ConsentAttribute.Sortable.IsUnknown() && !attributesItem1.ConsentAttribute.Sortable.IsNull() {
				*sortable45 = attributesItem1.ConsentAttribute.Sortable.ValueBool()
			} else {
				sortable45 = nil
			}
			required45 := new(bool)
			if !attributesItem1.ConsentAttribute.Required.IsUnknown() && !attributesItem1.ConsentAttribute.Required.IsNull() {
				*required45 = attributesItem1.ConsentAttribute.Required.ValueBool()
			} else {
				required45 = nil
			}
			readonly45 := new(bool)
			if !attributesItem1.ConsentAttribute.Readonly.IsUnknown() && !attributesItem1.ConsentAttribute.Readonly.IsNull() {
				*readonly45 = attributesItem1.ConsentAttribute.Readonly.ValueBool()
			} else {
				readonly45 = nil
			}
			deprecated45 := new(bool)
			if !attributesItem1.ConsentAttribute.Deprecated.IsUnknown() && !attributesItem1.ConsentAttribute.Deprecated.IsNull() {
				*deprecated45 = attributesItem1.ConsentAttribute.Deprecated.ValueBool()
			} else {
				deprecated45 = nil
			}
			var defaultValue45 interface{}
			if !attributesItem1.ConsentAttribute.DefaultValue.IsUnknown() && !attributesItem1.ConsentAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem1.ConsentAttribute.DefaultValue.ValueString()), &defaultValue45)
			}
			group45 := new(string)
			if !attributesItem1.ConsentAttribute.Group.IsUnknown() && !attributesItem1.ConsentAttribute.Group.IsNull() {
				*group45 = attributesItem1.ConsentAttribute.Group.ValueString()
			} else {
				group45 = nil
			}
			order47 := new(int64)
			if !attributesItem1.ConsentAttribute.Order.IsUnknown() && !attributesItem1.ConsentAttribute.Order.IsNull() {
				*order47 = attributesItem1.ConsentAttribute.Order.ValueInt64()
			} else {
				order47 = nil
			}
			layout45 := new(string)
			if !attributesItem1.ConsentAttribute.Layout.IsUnknown() && !attributesItem1.ConsentAttribute.Layout.IsNull() {
				*layout45 = attributesItem1.ConsentAttribute.Layout.ValueString()
			} else {
				layout45 = nil
			}
			hideLabel45 := new(bool)
			if !attributesItem1.ConsentAttribute.HideLabel.IsUnknown() && !attributesItem1.ConsentAttribute.HideLabel.IsNull() {
				*hideLabel45 = attributesItem1.ConsentAttribute.HideLabel.ValueBool()
			} else {
				hideLabel45 = nil
			}
			icon50 := new(string)
			if !attributesItem1.ConsentAttribute.Icon.IsUnknown() && !attributesItem1.ConsentAttribute.Icon.IsNull() {
				*icon50 = attributesItem1.ConsentAttribute.Icon.ValueString()
			} else {
				icon50 = nil
			}
			renderCondition48 := new(string)
			if !attributesItem1.ConsentAttribute.RenderCondition.IsUnknown() && !attributesItem1.ConsentAttribute.RenderCondition.IsNull() {
				*renderCondition48 = attributesItem1.ConsentAttribute.RenderCondition.ValueString()
			} else {
				renderCondition48 = nil
			}
			var purpose47 []string = []string{}
			for _, purposeItem47 := range attributesItem1.ConsentAttribute.Purpose {
				purpose47 = append(purpose47, purposeItem47.ValueString())
			}
			var constraints45 *shared.ConsentAttributeConstraints
			if attributesItem1.ConsentAttribute.Constraints != nil {
				constraints45 = &shared.ConsentAttributeConstraints{}
			}
			featureFlag51 := new(string)
			if !attributesItem1.ConsentAttribute.FeatureFlag.IsUnknown() && !attributesItem1.ConsentAttribute.FeatureFlag.IsNull() {
				*featureFlag51 = attributesItem1.ConsentAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag51 = nil
			}
			var settingsFlag50 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem50 := range attributesItem1.ConsentAttribute.SettingsFlag {
				name98 := new(string)
				if !settingsFlagItem50.Name.IsUnknown() && !settingsFlagItem50.Name.IsNull() {
					*name98 = settingsFlagItem50.Name.ValueString()
				} else {
					name98 = nil
				}
				enabled50 := new(bool)
				if !settingsFlagItem50.Enabled.IsUnknown() && !settingsFlagItem50.Enabled.IsNull() {
					*enabled50 = settingsFlagItem50.Enabled.ValueBool()
				} else {
					enabled50 = nil
				}
				settingsFlag50 = append(settingsFlag50, shared.SettingFlag{
					Name:    name98,
					Enabled: enabled50,
				})
			}
			valueFormatter45 := new(string)
			if !attributesItem1.ConsentAttribute.ValueFormatter.IsUnknown() && !attributesItem1.ConsentAttribute.ValueFormatter.IsNull() {
				*valueFormatter45 = attributesItem1.ConsentAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter45 = nil
			}
			previewValueFormatter45 := new(string)
			if !attributesItem1.ConsentAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem1.ConsentAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter45 = attributesItem1.ConsentAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter45 = nil
			}
			entityBuilderDisableEdit45 := new(bool)
			if !attributesItem1.ConsentAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem1.ConsentAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit45 = attributesItem1.ConsentAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit45 = nil
			}
			protected45 := new(bool)
			if !attributesItem1.ConsentAttribute.Protected.IsUnknown() && !attributesItem1.ConsentAttribute.Protected.IsNull() {
				*protected45 = attributesItem1.ConsentAttribute.Protected.ValueBool()
			} else {
				protected45 = nil
			}
			var infoHelpers45 *shared.ConsentAttributeInfoHelpers
			if attributesItem1.ConsentAttribute.InfoHelpers != nil {
				hintText45 := new(string)
				if !attributesItem1.ConsentAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem1.ConsentAttribute.InfoHelpers.HintText.IsNull() {
					*hintText45 = attributesItem1.ConsentAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText45 = nil
				}
				hintTextKey45 := new(string)
				if !attributesItem1.ConsentAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem1.ConsentAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey45 = attributesItem1.ConsentAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey45 = nil
				}
				hintCustomComponent45 := new(string)
				if !attributesItem1.ConsentAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem1.ConsentAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent45 = attributesItem1.ConsentAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent45 = nil
				}
				hintTooltipPlacement45 := new(string)
				if !attributesItem1.ConsentAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem1.ConsentAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement45 = attributesItem1.ConsentAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement45 = nil
				}
				infoHelpers45 = &shared.ConsentAttributeInfoHelpers{
					HintText:             hintText45,
					HintTextKey:          hintTextKey45,
					HintCustomComponent:  hintCustomComponent45,
					HintTooltipPlacement: hintTooltipPlacement45,
				}
			}
			typeVar46 := shared.ConsentAttributeType(attributesItem1.ConsentAttribute.Type.ValueString())
			topic1 := attributesItem1.ConsentAttribute.Topic.ValueString()
			var identifiers1 []string = []string{}
			for _, identifiersItem1 := range attributesItem1.ConsentAttribute.Identifiers {
				identifiers1 = append(identifiers1, identifiersItem1.ValueString())
			}
			consentAttribute1 := shared.ConsentAttribute{
				ID:                       id51,
				Name:                     name97,
				Label:                    label53,
				Placeholder:              placeholder45,
				Hidden:                   hidden45,
				ShowInTable:              showInTable45,
				Sortable:                 sortable45,
				Required:                 required45,
				Readonly:                 readonly45,
				Deprecated:               deprecated45,
				DefaultValue:             defaultValue45,
				Group:                    group45,
				Order:                    order47,
				Layout:                   layout45,
				HideLabel:                hideLabel45,
				Icon:                     icon50,
				RenderCondition:          renderCondition48,
				Purpose:                  purpose47,
				Constraints:              constraints45,
				FeatureFlag:              featureFlag51,
				SettingsFlag:             settingsFlag50,
				ValueFormatter:           valueFormatter45,
				PreviewValueFormatter:    previewValueFormatter45,
				EntityBuilderDisableEdit: entityBuilderDisableEdit45,
				Protected:                protected45,
				InfoHelpers:              infoHelpers45,
				Type:                     typeVar46,
				Topic:                    topic1,
				Identifiers:              identifiers1,
			}
			attributes1 = append(attributes1, shared.AttributeInput{
				ConsentAttribute: &consentAttribute1,
			})
		}
		if attributesItem1.InternalAttribute != nil {
			id52 := new(string)
			if !attributesItem1.InternalAttribute.ID.IsUnknown() && !attributesItem1.InternalAttribute.ID.IsNull() {
				*id52 = attributesItem1.InternalAttribute.ID.ValueString()
			} else {
				id52 = nil
			}
			name99 := attributesItem1.InternalAttribute.Name.ValueString()
			label54 := attributesItem1.InternalAttribute.Label.ValueString()
			placeholder46 := new(string)
			if !attributesItem1.InternalAttribute.Placeholder.IsUnknown() && !attributesItem1.InternalAttribute.Placeholder.IsNull() {
				*placeholder46 = attributesItem1.InternalAttribute.Placeholder.ValueString()
			} else {
				placeholder46 = nil
			}
			hidden46 := new(bool)
			if !attributesItem1.InternalAttribute.Hidden.IsUnknown() && !attributesItem1.InternalAttribute.Hidden.IsNull() {
				*hidden46 = attributesItem1.InternalAttribute.Hidden.ValueBool()
			} else {
				hidden46 = nil
			}
			showInTable46 := new(bool)
			if !attributesItem1.InternalAttribute.ShowInTable.IsUnknown() && !attributesItem1.InternalAttribute.ShowInTable.IsNull() {
				*showInTable46 = attributesItem1.InternalAttribute.ShowInTable.ValueBool()
			} else {
				showInTable46 = nil
			}
			sortable46 := new(bool)
			if !attributesItem1.InternalAttribute.Sortable.IsUnknown() && !attributesItem1.InternalAttribute.Sortable.IsNull() {
				*sortable46 = attributesItem1.InternalAttribute.Sortable.ValueBool()
			} else {
				sortable46 = nil
			}
			required46 := new(bool)
			if !attributesItem1.InternalAttribute.Required.IsUnknown() && !attributesItem1.InternalAttribute.Required.IsNull() {
				*required46 = attributesItem1.InternalAttribute.Required.ValueBool()
			} else {
				required46 = nil
			}
			readonly46 := new(bool)
			if !attributesItem1.InternalAttribute.Readonly.IsUnknown() && !attributesItem1.InternalAttribute.Readonly.IsNull() {
				*readonly46 = attributesItem1.InternalAttribute.Readonly.ValueBool()
			} else {
				readonly46 = nil
			}
			deprecated46 := new(bool)
			if !attributesItem1.InternalAttribute.Deprecated.IsUnknown() && !attributesItem1.InternalAttribute.Deprecated.IsNull() {
				*deprecated46 = attributesItem1.InternalAttribute.Deprecated.ValueBool()
			} else {
				deprecated46 = nil
			}
			var defaultValue46 interface{}
			if !attributesItem1.InternalAttribute.DefaultValue.IsUnknown() && !attributesItem1.InternalAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem1.InternalAttribute.DefaultValue.ValueString()), &defaultValue46)
			}
			group46 := new(string)
			if !attributesItem1.InternalAttribute.Group.IsUnknown() && !attributesItem1.InternalAttribute.Group.IsNull() {
				*group46 = attributesItem1.InternalAttribute.Group.ValueString()
			} else {
				group46 = nil
			}
			order48 := new(int64)
			if !attributesItem1.InternalAttribute.Order.IsUnknown() && !attributesItem1.InternalAttribute.Order.IsNull() {
				*order48 = attributesItem1.InternalAttribute.Order.ValueInt64()
			} else {
				order48 = nil
			}
			layout46 := new(string)
			if !attributesItem1.InternalAttribute.Layout.IsUnknown() && !attributesItem1.InternalAttribute.Layout.IsNull() {
				*layout46 = attributesItem1.InternalAttribute.Layout.ValueString()
			} else {
				layout46 = nil
			}
			hideLabel46 := new(bool)
			if !attributesItem1.InternalAttribute.HideLabel.IsUnknown() && !attributesItem1.InternalAttribute.HideLabel.IsNull() {
				*hideLabel46 = attributesItem1.InternalAttribute.HideLabel.ValueBool()
			} else {
				hideLabel46 = nil
			}
			icon51 := new(string)
			if !attributesItem1.InternalAttribute.Icon.IsUnknown() && !attributesItem1.InternalAttribute.Icon.IsNull() {
				*icon51 = attributesItem1.InternalAttribute.Icon.ValueString()
			} else {
				icon51 = nil
			}
			renderCondition49 := new(string)
			if !attributesItem1.InternalAttribute.RenderCondition.IsUnknown() && !attributesItem1.InternalAttribute.RenderCondition.IsNull() {
				*renderCondition49 = attributesItem1.InternalAttribute.RenderCondition.ValueString()
			} else {
				renderCondition49 = nil
			}
			var purpose48 []string = []string{}
			for _, purposeItem48 := range attributesItem1.InternalAttribute.Purpose {
				purpose48 = append(purpose48, purposeItem48.ValueString())
			}
			var constraints46 *shared.InternalAttributeConstraints
			if attributesItem1.InternalAttribute.Constraints != nil {
				constraints46 = &shared.InternalAttributeConstraints{}
			}
			featureFlag52 := new(string)
			if !attributesItem1.InternalAttribute.FeatureFlag.IsUnknown() && !attributesItem1.InternalAttribute.FeatureFlag.IsNull() {
				*featureFlag52 = attributesItem1.InternalAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag52 = nil
			}
			var settingsFlag51 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem51 := range attributesItem1.InternalAttribute.SettingsFlag {
				name100 := new(string)
				if !settingsFlagItem51.Name.IsUnknown() && !settingsFlagItem51.Name.IsNull() {
					*name100 = settingsFlagItem51.Name.ValueString()
				} else {
					name100 = nil
				}
				enabled51 := new(bool)
				if !settingsFlagItem51.Enabled.IsUnknown() && !settingsFlagItem51.Enabled.IsNull() {
					*enabled51 = settingsFlagItem51.Enabled.ValueBool()
				} else {
					enabled51 = nil
				}
				settingsFlag51 = append(settingsFlag51, shared.SettingFlag{
					Name:    name100,
					Enabled: enabled51,
				})
			}
			valueFormatter46 := new(string)
			if !attributesItem1.InternalAttribute.ValueFormatter.IsUnknown() && !attributesItem1.InternalAttribute.ValueFormatter.IsNull() {
				*valueFormatter46 = attributesItem1.InternalAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter46 = nil
			}
			previewValueFormatter46 := new(string)
			if !attributesItem1.InternalAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem1.InternalAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter46 = attributesItem1.InternalAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter46 = nil
			}
			entityBuilderDisableEdit46 := new(bool)
			if !attributesItem1.InternalAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem1.InternalAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit46 = attributesItem1.InternalAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit46 = nil
			}
			protected46 := new(bool)
			if !attributesItem1.InternalAttribute.Protected.IsUnknown() && !attributesItem1.InternalAttribute.Protected.IsNull() {
				*protected46 = attributesItem1.InternalAttribute.Protected.ValueBool()
			} else {
				protected46 = nil
			}
			var infoHelpers46 *shared.InternalAttributeInfoHelpers
			if attributesItem1.InternalAttribute.InfoHelpers != nil {
				hintText46 := new(string)
				if !attributesItem1.InternalAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem1.InternalAttribute.InfoHelpers.HintText.IsNull() {
					*hintText46 = attributesItem1.InternalAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText46 = nil
				}
				hintTextKey46 := new(string)
				if !attributesItem1.InternalAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem1.InternalAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey46 = attributesItem1.InternalAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey46 = nil
				}
				hintCustomComponent46 := new(string)
				if !attributesItem1.InternalAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem1.InternalAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent46 = attributesItem1.InternalAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent46 = nil
				}
				hintTooltipPlacement46 := new(string)
				if !attributesItem1.InternalAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem1.InternalAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement46 = attributesItem1.InternalAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement46 = nil
				}
				infoHelpers46 = &shared.InternalAttributeInfoHelpers{
					HintText:             hintText46,
					HintTextKey:          hintTextKey46,
					HintCustomComponent:  hintCustomComponent46,
					HintTooltipPlacement: hintTooltipPlacement46,
				}
			}
			typeVar47 := new(shared.InternalAttributeType)
			if !attributesItem1.InternalAttribute.Type.IsUnknown() && !attributesItem1.InternalAttribute.Type.IsNull() {
				*typeVar47 = shared.InternalAttributeType(attributesItem1.InternalAttribute.Type.ValueString())
			} else {
				typeVar47 = nil
			}
			internalAttribute1 := shared.InternalAttribute{
				ID:                       id52,
				Name:                     name99,
				Label:                    label54,
				Placeholder:              placeholder46,
				Hidden:                   hidden46,
				ShowInTable:              showInTable46,
				Sortable:                 sortable46,
				Required:                 required46,
				Readonly:                 readonly46,
				Deprecated:               deprecated46,
				DefaultValue:             defaultValue46,
				Group:                    group46,
				Order:                    order48,
				Layout:                   layout46,
				HideLabel:                hideLabel46,
				Icon:                     icon51,
				RenderCondition:          renderCondition49,
				Purpose:                  purpose48,
				Constraints:              constraints46,
				FeatureFlag:              featureFlag52,
				SettingsFlag:             settingsFlag51,
				ValueFormatter:           valueFormatter46,
				PreviewValueFormatter:    previewValueFormatter46,
				EntityBuilderDisableEdit: entityBuilderDisableEdit46,
				Protected:                protected46,
				InfoHelpers:              infoHelpers46,
				Type:                     typeVar47,
			}
			attributes1 = append(attributes1, shared.AttributeInput{
				InternalAttribute: &internalAttribute1,
			})
		}
		if attributesItem1.OrderedListAttribute != nil {
			id53 := new(string)
			if !attributesItem1.OrderedListAttribute.ID.IsUnknown() && !attributesItem1.OrderedListAttribute.ID.IsNull() {
				*id53 = attributesItem1.OrderedListAttribute.ID.ValueString()
			} else {
				id53 = nil
			}
			name101 := attributesItem1.OrderedListAttribute.Name.ValueString()
			label55 := attributesItem1.OrderedListAttribute.Label.ValueString()
			placeholder47 := new(string)
			if !attributesItem1.OrderedListAttribute.Placeholder.IsUnknown() && !attributesItem1.OrderedListAttribute.Placeholder.IsNull() {
				*placeholder47 = attributesItem1.OrderedListAttribute.Placeholder.ValueString()
			} else {
				placeholder47 = nil
			}
			hidden47 := new(bool)
			if !attributesItem1.OrderedListAttribute.Hidden.IsUnknown() && !attributesItem1.OrderedListAttribute.Hidden.IsNull() {
				*hidden47 = attributesItem1.OrderedListAttribute.Hidden.ValueBool()
			} else {
				hidden47 = nil
			}
			showInTable47 := new(bool)
			if !attributesItem1.OrderedListAttribute.ShowInTable.IsUnknown() && !attributesItem1.OrderedListAttribute.ShowInTable.IsNull() {
				*showInTable47 = attributesItem1.OrderedListAttribute.ShowInTable.ValueBool()
			} else {
				showInTable47 = nil
			}
			sortable47 := new(bool)
			if !attributesItem1.OrderedListAttribute.Sortable.IsUnknown() && !attributesItem1.OrderedListAttribute.Sortable.IsNull() {
				*sortable47 = attributesItem1.OrderedListAttribute.Sortable.ValueBool()
			} else {
				sortable47 = nil
			}
			required47 := new(bool)
			if !attributesItem1.OrderedListAttribute.Required.IsUnknown() && !attributesItem1.OrderedListAttribute.Required.IsNull() {
				*required47 = attributesItem1.OrderedListAttribute.Required.ValueBool()
			} else {
				required47 = nil
			}
			readonly47 := new(bool)
			if !attributesItem1.OrderedListAttribute.Readonly.IsUnknown() && !attributesItem1.OrderedListAttribute.Readonly.IsNull() {
				*readonly47 = attributesItem1.OrderedListAttribute.Readonly.ValueBool()
			} else {
				readonly47 = nil
			}
			deprecated47 := new(bool)
			if !attributesItem1.OrderedListAttribute.Deprecated.IsUnknown() && !attributesItem1.OrderedListAttribute.Deprecated.IsNull() {
				*deprecated47 = attributesItem1.OrderedListAttribute.Deprecated.ValueBool()
			} else {
				deprecated47 = nil
			}
			var defaultValue47 interface{}
			if !attributesItem1.OrderedListAttribute.DefaultValue.IsUnknown() && !attributesItem1.OrderedListAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem1.OrderedListAttribute.DefaultValue.ValueString()), &defaultValue47)
			}
			group47 := new(string)
			if !attributesItem1.OrderedListAttribute.Group.IsUnknown() && !attributesItem1.OrderedListAttribute.Group.IsNull() {
				*group47 = attributesItem1.OrderedListAttribute.Group.ValueString()
			} else {
				group47 = nil
			}
			order49 := new(int64)
			if !attributesItem1.OrderedListAttribute.Order.IsUnknown() && !attributesItem1.OrderedListAttribute.Order.IsNull() {
				*order49 = attributesItem1.OrderedListAttribute.Order.ValueInt64()
			} else {
				order49 = nil
			}
			layout47 := new(string)
			if !attributesItem1.OrderedListAttribute.Layout.IsUnknown() && !attributesItem1.OrderedListAttribute.Layout.IsNull() {
				*layout47 = attributesItem1.OrderedListAttribute.Layout.ValueString()
			} else {
				layout47 = nil
			}
			hideLabel47 := new(bool)
			if !attributesItem1.OrderedListAttribute.HideLabel.IsUnknown() && !attributesItem1.OrderedListAttribute.HideLabel.IsNull() {
				*hideLabel47 = attributesItem1.OrderedListAttribute.HideLabel.ValueBool()
			} else {
				hideLabel47 = nil
			}
			icon52 := new(string)
			if !attributesItem1.OrderedListAttribute.Icon.IsUnknown() && !attributesItem1.OrderedListAttribute.Icon.IsNull() {
				*icon52 = attributesItem1.OrderedListAttribute.Icon.ValueString()
			} else {
				icon52 = nil
			}
			renderCondition50 := new(string)
			if !attributesItem1.OrderedListAttribute.RenderCondition.IsUnknown() && !attributesItem1.OrderedListAttribute.RenderCondition.IsNull() {
				*renderCondition50 = attributesItem1.OrderedListAttribute.RenderCondition.ValueString()
			} else {
				renderCondition50 = nil
			}
			var purpose49 []string = []string{}
			for _, purposeItem49 := range attributesItem1.OrderedListAttribute.Purpose {
				purpose49 = append(purpose49, purposeItem49.ValueString())
			}
			var constraints47 *shared.OrderedListAttributeConstraints
			if attributesItem1.OrderedListAttribute.Constraints != nil {
				constraints47 = &shared.OrderedListAttributeConstraints{}
			}
			featureFlag53 := new(string)
			if !attributesItem1.OrderedListAttribute.FeatureFlag.IsUnknown() && !attributesItem1.OrderedListAttribute.FeatureFlag.IsNull() {
				*featureFlag53 = attributesItem1.OrderedListAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag53 = nil
			}
			var settingsFlag52 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem52 := range attributesItem1.OrderedListAttribute.SettingsFlag {
				name102 := new(string)
				if !settingsFlagItem52.Name.IsUnknown() && !settingsFlagItem52.Name.IsNull() {
					*name102 = settingsFlagItem52.Name.ValueString()
				} else {
					name102 = nil
				}
				enabled52 := new(bool)
				if !settingsFlagItem52.Enabled.IsUnknown() && !settingsFlagItem52.Enabled.IsNull() {
					*enabled52 = settingsFlagItem52.Enabled.ValueBool()
				} else {
					enabled52 = nil
				}
				settingsFlag52 = append(settingsFlag52, shared.SettingFlag{
					Name:    name102,
					Enabled: enabled52,
				})
			}
			valueFormatter47 := new(string)
			if !attributesItem1.OrderedListAttribute.ValueFormatter.IsUnknown() && !attributesItem1.OrderedListAttribute.ValueFormatter.IsNull() {
				*valueFormatter47 = attributesItem1.OrderedListAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter47 = nil
			}
			previewValueFormatter47 := new(string)
			if !attributesItem1.OrderedListAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem1.OrderedListAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter47 = attributesItem1.OrderedListAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter47 = nil
			}
			entityBuilderDisableEdit47 := new(bool)
			if !attributesItem1.OrderedListAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem1.OrderedListAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit47 = attributesItem1.OrderedListAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit47 = nil
			}
			protected47 := new(bool)
			if !attributesItem1.OrderedListAttribute.Protected.IsUnknown() && !attributesItem1.OrderedListAttribute.Protected.IsNull() {
				*protected47 = attributesItem1.OrderedListAttribute.Protected.ValueBool()
			} else {
				protected47 = nil
			}
			var infoHelpers47 *shared.OrderedListAttributeInfoHelpers
			if attributesItem1.OrderedListAttribute.InfoHelpers != nil {
				hintText47 := new(string)
				if !attributesItem1.OrderedListAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem1.OrderedListAttribute.InfoHelpers.HintText.IsNull() {
					*hintText47 = attributesItem1.OrderedListAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText47 = nil
				}
				hintTextKey47 := new(string)
				if !attributesItem1.OrderedListAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem1.OrderedListAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey47 = attributesItem1.OrderedListAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey47 = nil
				}
				hintCustomComponent47 := new(string)
				if !attributesItem1.OrderedListAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem1.OrderedListAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent47 = attributesItem1.OrderedListAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent47 = nil
				}
				hintTooltipPlacement47 := new(string)
				if !attributesItem1.OrderedListAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem1.OrderedListAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement47 = attributesItem1.OrderedListAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement47 = nil
				}
				infoHelpers47 = &shared.OrderedListAttributeInfoHelpers{
					HintText:             hintText47,
					HintTextKey:          hintTextKey47,
					HintCustomComponent:  hintCustomComponent47,
					HintTooltipPlacement: hintTooltipPlacement47,
				}
			}
			typeVar48 := new(shared.OrderedListAttributeType)
			if !attributesItem1.OrderedListAttribute.Type.IsUnknown() && !attributesItem1.OrderedListAttribute.Type.IsNull() {
				*typeVar48 = shared.OrderedListAttributeType(attributesItem1.OrderedListAttribute.Type.ValueString())
			} else {
				typeVar48 = nil
			}
			orderedListAttribute1 := shared.OrderedListAttribute{
				ID:                       id53,
				Name:                     name101,
				Label:                    label55,
				Placeholder:              placeholder47,
				Hidden:                   hidden47,
				ShowInTable:              showInTable47,
				Sortable:                 sortable47,
				Required:                 required47,
				Readonly:                 readonly47,
				Deprecated:               deprecated47,
				DefaultValue:             defaultValue47,
				Group:                    group47,
				Order:                    order49,
				Layout:                   layout47,
				HideLabel:                hideLabel47,
				Icon:                     icon52,
				RenderCondition:          renderCondition50,
				Purpose:                  purpose49,
				Constraints:              constraints47,
				FeatureFlag:              featureFlag53,
				SettingsFlag:             settingsFlag52,
				ValueFormatter:           valueFormatter47,
				PreviewValueFormatter:    previewValueFormatter47,
				EntityBuilderDisableEdit: entityBuilderDisableEdit47,
				Protected:                protected47,
				InfoHelpers:              infoHelpers47,
				Type:                     typeVar48,
			}
			attributes1 = append(attributes1, shared.AttributeInput{
				OrderedListAttribute: &orderedListAttribute1,
			})
		}
		if attributesItem1.FileAttribute != nil {
			id54 := new(string)
			if !attributesItem1.FileAttribute.ID.IsUnknown() && !attributesItem1.FileAttribute.ID.IsNull() {
				*id54 = attributesItem1.FileAttribute.ID.ValueString()
			} else {
				id54 = nil
			}
			name103 := attributesItem1.FileAttribute.Name.ValueString()
			label56 := attributesItem1.FileAttribute.Label.ValueString()
			placeholder48 := new(string)
			if !attributesItem1.FileAttribute.Placeholder.IsUnknown() && !attributesItem1.FileAttribute.Placeholder.IsNull() {
				*placeholder48 = attributesItem1.FileAttribute.Placeholder.ValueString()
			} else {
				placeholder48 = nil
			}
			hidden48 := new(bool)
			if !attributesItem1.FileAttribute.Hidden.IsUnknown() && !attributesItem1.FileAttribute.Hidden.IsNull() {
				*hidden48 = attributesItem1.FileAttribute.Hidden.ValueBool()
			} else {
				hidden48 = nil
			}
			showInTable48 := new(bool)
			if !attributesItem1.FileAttribute.ShowInTable.IsUnknown() && !attributesItem1.FileAttribute.ShowInTable.IsNull() {
				*showInTable48 = attributesItem1.FileAttribute.ShowInTable.ValueBool()
			} else {
				showInTable48 = nil
			}
			sortable48 := new(bool)
			if !attributesItem1.FileAttribute.Sortable.IsUnknown() && !attributesItem1.FileAttribute.Sortable.IsNull() {
				*sortable48 = attributesItem1.FileAttribute.Sortable.ValueBool()
			} else {
				sortable48 = nil
			}
			required48 := new(bool)
			if !attributesItem1.FileAttribute.Required.IsUnknown() && !attributesItem1.FileAttribute.Required.IsNull() {
				*required48 = attributesItem1.FileAttribute.Required.ValueBool()
			} else {
				required48 = nil
			}
			readonly48 := new(bool)
			if !attributesItem1.FileAttribute.Readonly.IsUnknown() && !attributesItem1.FileAttribute.Readonly.IsNull() {
				*readonly48 = attributesItem1.FileAttribute.Readonly.ValueBool()
			} else {
				readonly48 = nil
			}
			deprecated48 := new(bool)
			if !attributesItem1.FileAttribute.Deprecated.IsUnknown() && !attributesItem1.FileAttribute.Deprecated.IsNull() {
				*deprecated48 = attributesItem1.FileAttribute.Deprecated.ValueBool()
			} else {
				deprecated48 = nil
			}
			var defaultValue48 interface{}
			if !attributesItem1.FileAttribute.DefaultValue.IsUnknown() && !attributesItem1.FileAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem1.FileAttribute.DefaultValue.ValueString()), &defaultValue48)
			}
			group48 := new(string)
			if !attributesItem1.FileAttribute.Group.IsUnknown() && !attributesItem1.FileAttribute.Group.IsNull() {
				*group48 = attributesItem1.FileAttribute.Group.ValueString()
			} else {
				group48 = nil
			}
			order50 := new(int64)
			if !attributesItem1.FileAttribute.Order.IsUnknown() && !attributesItem1.FileAttribute.Order.IsNull() {
				*order50 = attributesItem1.FileAttribute.Order.ValueInt64()
			} else {
				order50 = nil
			}
			layout48 := new(string)
			if !attributesItem1.FileAttribute.Layout.IsUnknown() && !attributesItem1.FileAttribute.Layout.IsNull() {
				*layout48 = attributesItem1.FileAttribute.Layout.ValueString()
			} else {
				layout48 = nil
			}
			hideLabel48 := new(bool)
			if !attributesItem1.FileAttribute.HideLabel.IsUnknown() && !attributesItem1.FileAttribute.HideLabel.IsNull() {
				*hideLabel48 = attributesItem1.FileAttribute.HideLabel.ValueBool()
			} else {
				hideLabel48 = nil
			}
			icon53 := new(string)
			if !attributesItem1.FileAttribute.Icon.IsUnknown() && !attributesItem1.FileAttribute.Icon.IsNull() {
				*icon53 = attributesItem1.FileAttribute.Icon.ValueString()
			} else {
				icon53 = nil
			}
			renderCondition51 := new(string)
			if !attributesItem1.FileAttribute.RenderCondition.IsUnknown() && !attributesItem1.FileAttribute.RenderCondition.IsNull() {
				*renderCondition51 = attributesItem1.FileAttribute.RenderCondition.ValueString()
			} else {
				renderCondition51 = nil
			}
			var purpose50 []string = []string{}
			for _, purposeItem50 := range attributesItem1.FileAttribute.Purpose {
				purpose50 = append(purpose50, purposeItem50.ValueString())
			}
			var constraints48 *shared.FileAttributeConstraints
			if attributesItem1.FileAttribute.Constraints != nil {
				constraints48 = &shared.FileAttributeConstraints{}
			}
			featureFlag54 := new(string)
			if !attributesItem1.FileAttribute.FeatureFlag.IsUnknown() && !attributesItem1.FileAttribute.FeatureFlag.IsNull() {
				*featureFlag54 = attributesItem1.FileAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag54 = nil
			}
			var settingsFlag53 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem53 := range attributesItem1.FileAttribute.SettingsFlag {
				name104 := new(string)
				if !settingsFlagItem53.Name.IsUnknown() && !settingsFlagItem53.Name.IsNull() {
					*name104 = settingsFlagItem53.Name.ValueString()
				} else {
					name104 = nil
				}
				enabled53 := new(bool)
				if !settingsFlagItem53.Enabled.IsUnknown() && !settingsFlagItem53.Enabled.IsNull() {
					*enabled53 = settingsFlagItem53.Enabled.ValueBool()
				} else {
					enabled53 = nil
				}
				settingsFlag53 = append(settingsFlag53, shared.SettingFlag{
					Name:    name104,
					Enabled: enabled53,
				})
			}
			valueFormatter48 := new(string)
			if !attributesItem1.FileAttribute.ValueFormatter.IsUnknown() && !attributesItem1.FileAttribute.ValueFormatter.IsNull() {
				*valueFormatter48 = attributesItem1.FileAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter48 = nil
			}
			previewValueFormatter48 := new(string)
			if !attributesItem1.FileAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem1.FileAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter48 = attributesItem1.FileAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter48 = nil
			}
			entityBuilderDisableEdit48 := new(bool)
			if !attributesItem1.FileAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem1.FileAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit48 = attributesItem1.FileAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit48 = nil
			}
			protected48 := new(bool)
			if !attributesItem1.FileAttribute.Protected.IsUnknown() && !attributesItem1.FileAttribute.Protected.IsNull() {
				*protected48 = attributesItem1.FileAttribute.Protected.ValueBool()
			} else {
				protected48 = nil
			}
			var infoHelpers48 *shared.FileAttributeInfoHelpers
			if attributesItem1.FileAttribute.InfoHelpers != nil {
				hintText48 := new(string)
				if !attributesItem1.FileAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem1.FileAttribute.InfoHelpers.HintText.IsNull() {
					*hintText48 = attributesItem1.FileAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText48 = nil
				}
				hintTextKey48 := new(string)
				if !attributesItem1.FileAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem1.FileAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey48 = attributesItem1.FileAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey48 = nil
				}
				hintCustomComponent48 := new(string)
				if !attributesItem1.FileAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem1.FileAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent48 = attributesItem1.FileAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent48 = nil
				}
				hintTooltipPlacement48 := new(string)
				if !attributesItem1.FileAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem1.FileAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement48 = attributesItem1.FileAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement48 = nil
				}
				infoHelpers48 = &shared.FileAttributeInfoHelpers{
					HintText:             hintText48,
					HintTextKey:          hintTextKey48,
					HintCustomComponent:  hintCustomComponent48,
					HintTooltipPlacement: hintTooltipPlacement48,
				}
			}
			typeVar49 := shared.FileAttributeType(attributesItem1.FileAttribute.Type.ValueString())
			multiple3 := new(bool)
			if !attributesItem1.FileAttribute.Multiple.IsUnknown() && !attributesItem1.FileAttribute.Multiple.IsNull() {
				*multiple3 = attributesItem1.FileAttribute.Multiple.ValueBool()
			} else {
				multiple3 = nil
			}
			var allowedExtensions1 []string = []string{}
			for _, allowedExtensionsItem1 := range attributesItem1.FileAttribute.AllowedExtensions {
				allowedExtensions1 = append(allowedExtensions1, allowedExtensionsItem1.ValueString())
			}
			displayImagesLandscaped1 := new(bool)
			if !attributesItem1.FileAttribute.DisplayImagesLandscaped.IsUnknown() && !attributesItem1.FileAttribute.DisplayImagesLandscaped.IsNull() {
				*displayImagesLandscaped1 = attributesItem1.FileAttribute.DisplayImagesLandscaped.ValueBool()
			} else {
				displayImagesLandscaped1 = nil
			}
			enableDescription1 := new(bool)
			if !attributesItem1.FileAttribute.EnableDescription.IsUnknown() && !attributesItem1.FileAttribute.EnableDescription.IsNull() {
				*enableDescription1 = attributesItem1.FileAttribute.EnableDescription.ValueBool()
			} else {
				enableDescription1 = nil
			}
			defaultAccessControl1 := new(shared.DefaultAccessControl)
			if !attributesItem1.FileAttribute.DefaultAccessControl.IsUnknown() && !attributesItem1.FileAttribute.DefaultAccessControl.IsNull() {
				*defaultAccessControl1 = shared.DefaultAccessControl(attributesItem1.FileAttribute.DefaultAccessControl.ValueString())
			} else {
				defaultAccessControl1 = nil
			}
			fileAttribute1 := shared.FileAttribute{
				ID:                       id54,
				Name:                     name103,
				Label:                    label56,
				Placeholder:              placeholder48,
				Hidden:                   hidden48,
				ShowInTable:              showInTable48,
				Sortable:                 sortable48,
				Required:                 required48,
				Readonly:                 readonly48,
				Deprecated:               deprecated48,
				DefaultValue:             defaultValue48,
				Group:                    group48,
				Order:                    order50,
				Layout:                   layout48,
				HideLabel:                hideLabel48,
				Icon:                     icon53,
				RenderCondition:          renderCondition51,
				Purpose:                  purpose50,
				Constraints:              constraints48,
				FeatureFlag:              featureFlag54,
				SettingsFlag:             settingsFlag53,
				ValueFormatter:           valueFormatter48,
				PreviewValueFormatter:    previewValueFormatter48,
				EntityBuilderDisableEdit: entityBuilderDisableEdit48,
				Protected:                protected48,
				InfoHelpers:              infoHelpers48,
				Type:                     typeVar49,
				Multiple:                 multiple3,
				AllowedExtensions:        allowedExtensions1,
				DisplayImagesLandscaped:  displayImagesLandscaped1,
				EnableDescription:        enableDescription1,
				DefaultAccessControl:     defaultAccessControl1,
			}
			attributes1 = append(attributes1, shared.AttributeInput{
				FileAttribute: &fileAttribute1,
			})
		}
		if attributesItem1.ComputedAttribute != nil {
			id55 := new(string)
			if !attributesItem1.ComputedAttribute.ID.IsUnknown() && !attributesItem1.ComputedAttribute.ID.IsNull() {
				*id55 = attributesItem1.ComputedAttribute.ID.ValueString()
			} else {
				id55 = nil
			}
			name105 := attributesItem1.ComputedAttribute.Name.ValueString()
			label57 := attributesItem1.ComputedAttribute.Label.ValueString()
			placeholder49 := new(string)
			if !attributesItem1.ComputedAttribute.Placeholder.IsUnknown() && !attributesItem1.ComputedAttribute.Placeholder.IsNull() {
				*placeholder49 = attributesItem1.ComputedAttribute.Placeholder.ValueString()
			} else {
				placeholder49 = nil
			}
			hidden49 := new(bool)
			if !attributesItem1.ComputedAttribute.Hidden.IsUnknown() && !attributesItem1.ComputedAttribute.Hidden.IsNull() {
				*hidden49 = attributesItem1.ComputedAttribute.Hidden.ValueBool()
			} else {
				hidden49 = nil
			}
			showInTable49 := new(bool)
			if !attributesItem1.ComputedAttribute.ShowInTable.IsUnknown() && !attributesItem1.ComputedAttribute.ShowInTable.IsNull() {
				*showInTable49 = attributesItem1.ComputedAttribute.ShowInTable.ValueBool()
			} else {
				showInTable49 = nil
			}
			sortable49 := new(bool)
			if !attributesItem1.ComputedAttribute.Sortable.IsUnknown() && !attributesItem1.ComputedAttribute.Sortable.IsNull() {
				*sortable49 = attributesItem1.ComputedAttribute.Sortable.ValueBool()
			} else {
				sortable49 = nil
			}
			required49 := new(bool)
			if !attributesItem1.ComputedAttribute.Required.IsUnknown() && !attributesItem1.ComputedAttribute.Required.IsNull() {
				*required49 = attributesItem1.ComputedAttribute.Required.ValueBool()
			} else {
				required49 = nil
			}
			readonly49 := new(bool)
			if !attributesItem1.ComputedAttribute.Readonly.IsUnknown() && !attributesItem1.ComputedAttribute.Readonly.IsNull() {
				*readonly49 = attributesItem1.ComputedAttribute.Readonly.ValueBool()
			} else {
				readonly49 = nil
			}
			deprecated49 := new(bool)
			if !attributesItem1.ComputedAttribute.Deprecated.IsUnknown() && !attributesItem1.ComputedAttribute.Deprecated.IsNull() {
				*deprecated49 = attributesItem1.ComputedAttribute.Deprecated.ValueBool()
			} else {
				deprecated49 = nil
			}
			var defaultValue49 interface{}
			if !attributesItem1.ComputedAttribute.DefaultValue.IsUnknown() && !attributesItem1.ComputedAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem1.ComputedAttribute.DefaultValue.ValueString()), &defaultValue49)
			}
			group49 := new(string)
			if !attributesItem1.ComputedAttribute.Group.IsUnknown() && !attributesItem1.ComputedAttribute.Group.IsNull() {
				*group49 = attributesItem1.ComputedAttribute.Group.ValueString()
			} else {
				group49 = nil
			}
			order51 := new(int64)
			if !attributesItem1.ComputedAttribute.Order.IsUnknown() && !attributesItem1.ComputedAttribute.Order.IsNull() {
				*order51 = attributesItem1.ComputedAttribute.Order.ValueInt64()
			} else {
				order51 = nil
			}
			layout49 := new(string)
			if !attributesItem1.ComputedAttribute.Layout.IsUnknown() && !attributesItem1.ComputedAttribute.Layout.IsNull() {
				*layout49 = attributesItem1.ComputedAttribute.Layout.ValueString()
			} else {
				layout49 = nil
			}
			hideLabel49 := new(bool)
			if !attributesItem1.ComputedAttribute.HideLabel.IsUnknown() && !attributesItem1.ComputedAttribute.HideLabel.IsNull() {
				*hideLabel49 = attributesItem1.ComputedAttribute.HideLabel.ValueBool()
			} else {
				hideLabel49 = nil
			}
			icon54 := new(string)
			if !attributesItem1.ComputedAttribute.Icon.IsUnknown() && !attributesItem1.ComputedAttribute.Icon.IsNull() {
				*icon54 = attributesItem1.ComputedAttribute.Icon.ValueString()
			} else {
				icon54 = nil
			}
			renderCondition52 := new(string)
			if !attributesItem1.ComputedAttribute.RenderCondition.IsUnknown() && !attributesItem1.ComputedAttribute.RenderCondition.IsNull() {
				*renderCondition52 = attributesItem1.ComputedAttribute.RenderCondition.ValueString()
			} else {
				renderCondition52 = nil
			}
			var purpose51 []string = []string{}
			for _, purposeItem51 := range attributesItem1.ComputedAttribute.Purpose {
				purpose51 = append(purpose51, purposeItem51.ValueString())
			}
			var constraints49 *shared.ComputedAttributeConstraints
			if attributesItem1.ComputedAttribute.Constraints != nil {
				constraints49 = &shared.ComputedAttributeConstraints{}
			}
			featureFlag55 := new(string)
			if !attributesItem1.ComputedAttribute.FeatureFlag.IsUnknown() && !attributesItem1.ComputedAttribute.FeatureFlag.IsNull() {
				*featureFlag55 = attributesItem1.ComputedAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag55 = nil
			}
			var settingsFlag54 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem54 := range attributesItem1.ComputedAttribute.SettingsFlag {
				name106 := new(string)
				if !settingsFlagItem54.Name.IsUnknown() && !settingsFlagItem54.Name.IsNull() {
					*name106 = settingsFlagItem54.Name.ValueString()
				} else {
					name106 = nil
				}
				enabled54 := new(bool)
				if !settingsFlagItem54.Enabled.IsUnknown() && !settingsFlagItem54.Enabled.IsNull() {
					*enabled54 = settingsFlagItem54.Enabled.ValueBool()
				} else {
					enabled54 = nil
				}
				settingsFlag54 = append(settingsFlag54, shared.SettingFlag{
					Name:    name106,
					Enabled: enabled54,
				})
			}
			valueFormatter49 := new(string)
			if !attributesItem1.ComputedAttribute.ValueFormatter.IsUnknown() && !attributesItem1.ComputedAttribute.ValueFormatter.IsNull() {
				*valueFormatter49 = attributesItem1.ComputedAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter49 = nil
			}
			previewValueFormatter49 := new(string)
			if !attributesItem1.ComputedAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem1.ComputedAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter49 = attributesItem1.ComputedAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter49 = nil
			}
			entityBuilderDisableEdit49 := new(bool)
			if !attributesItem1.ComputedAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem1.ComputedAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit49 = attributesItem1.ComputedAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit49 = nil
			}
			protected49 := new(bool)
			if !attributesItem1.ComputedAttribute.Protected.IsUnknown() && !attributesItem1.ComputedAttribute.Protected.IsNull() {
				*protected49 = attributesItem1.ComputedAttribute.Protected.ValueBool()
			} else {
				protected49 = nil
			}
			var infoHelpers49 *shared.ComputedAttributeInfoHelpers
			if attributesItem1.ComputedAttribute.InfoHelpers != nil {
				hintText49 := new(string)
				if !attributesItem1.ComputedAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem1.ComputedAttribute.InfoHelpers.HintText.IsNull() {
					*hintText49 = attributesItem1.ComputedAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText49 = nil
				}
				hintTextKey49 := new(string)
				if !attributesItem1.ComputedAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem1.ComputedAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey49 = attributesItem1.ComputedAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey49 = nil
				}
				hintCustomComponent49 := new(string)
				if !attributesItem1.ComputedAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem1.ComputedAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent49 = attributesItem1.ComputedAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent49 = nil
				}
				hintTooltipPlacement49 := new(string)
				if !attributesItem1.ComputedAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem1.ComputedAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement49 = attributesItem1.ComputedAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement49 = nil
				}
				infoHelpers49 = &shared.ComputedAttributeInfoHelpers{
					HintText:             hintText49,
					HintTextKey:          hintTextKey49,
					HintCustomComponent:  hintCustomComponent49,
					HintTooltipPlacement: hintTooltipPlacement49,
				}
			}
			typeVar50 := new(shared.ComputedAttributeType)
			if !attributesItem1.ComputedAttribute.Type.IsUnknown() && !attributesItem1.ComputedAttribute.Type.IsNull() {
				*typeVar50 = shared.ComputedAttributeType(attributesItem1.ComputedAttribute.Type.ValueString())
			} else {
				typeVar50 = nil
			}
			computedAttribute1 := shared.ComputedAttribute{
				ID:                       id55,
				Name:                     name105,
				Label:                    label57,
				Placeholder:              placeholder49,
				Hidden:                   hidden49,
				ShowInTable:              showInTable49,
				Sortable:                 sortable49,
				Required:                 required49,
				Readonly:                 readonly49,
				Deprecated:               deprecated49,
				DefaultValue:             defaultValue49,
				Group:                    group49,
				Order:                    order51,
				Layout:                   layout49,
				HideLabel:                hideLabel49,
				Icon:                     icon54,
				RenderCondition:          renderCondition52,
				Purpose:                  purpose51,
				Constraints:              constraints49,
				FeatureFlag:              featureFlag55,
				SettingsFlag:             settingsFlag54,
				ValueFormatter:           valueFormatter49,
				PreviewValueFormatter:    previewValueFormatter49,
				EntityBuilderDisableEdit: entityBuilderDisableEdit49,
				Protected:                protected49,
				InfoHelpers:              infoHelpers49,
				Type:                     typeVar50,
			}
			attributes1 = append(attributes1, shared.AttributeInput{
				ComputedAttribute: &computedAttribute1,
			})
		}
		if attributesItem1.PartnerStatusAttribute != nil {
			id56 := new(string)
			if !attributesItem1.PartnerStatusAttribute.ID.IsUnknown() && !attributesItem1.PartnerStatusAttribute.ID.IsNull() {
				*id56 = attributesItem1.PartnerStatusAttribute.ID.ValueString()
			} else {
				id56 = nil
			}
			name107 := attributesItem1.PartnerStatusAttribute.Name.ValueString()
			label58 := attributesItem1.PartnerStatusAttribute.Label.ValueString()
			placeholder50 := new(string)
			if !attributesItem1.PartnerStatusAttribute.Placeholder.IsUnknown() && !attributesItem1.PartnerStatusAttribute.Placeholder.IsNull() {
				*placeholder50 = attributesItem1.PartnerStatusAttribute.Placeholder.ValueString()
			} else {
				placeholder50 = nil
			}
			hidden50 := new(bool)
			if !attributesItem1.PartnerStatusAttribute.Hidden.IsUnknown() && !attributesItem1.PartnerStatusAttribute.Hidden.IsNull() {
				*hidden50 = attributesItem1.PartnerStatusAttribute.Hidden.ValueBool()
			} else {
				hidden50 = nil
			}
			showInTable50 := new(bool)
			if !attributesItem1.PartnerStatusAttribute.ShowInTable.IsUnknown() && !attributesItem1.PartnerStatusAttribute.ShowInTable.IsNull() {
				*showInTable50 = attributesItem1.PartnerStatusAttribute.ShowInTable.ValueBool()
			} else {
				showInTable50 = nil
			}
			sortable50 := new(bool)
			if !attributesItem1.PartnerStatusAttribute.Sortable.IsUnknown() && !attributesItem1.PartnerStatusAttribute.Sortable.IsNull() {
				*sortable50 = attributesItem1.PartnerStatusAttribute.Sortable.ValueBool()
			} else {
				sortable50 = nil
			}
			required50 := new(bool)
			if !attributesItem1.PartnerStatusAttribute.Required.IsUnknown() && !attributesItem1.PartnerStatusAttribute.Required.IsNull() {
				*required50 = attributesItem1.PartnerStatusAttribute.Required.ValueBool()
			} else {
				required50 = nil
			}
			readonly50 := new(bool)
			if !attributesItem1.PartnerStatusAttribute.Readonly.IsUnknown() && !attributesItem1.PartnerStatusAttribute.Readonly.IsNull() {
				*readonly50 = attributesItem1.PartnerStatusAttribute.Readonly.ValueBool()
			} else {
				readonly50 = nil
			}
			deprecated50 := new(bool)
			if !attributesItem1.PartnerStatusAttribute.Deprecated.IsUnknown() && !attributesItem1.PartnerStatusAttribute.Deprecated.IsNull() {
				*deprecated50 = attributesItem1.PartnerStatusAttribute.Deprecated.ValueBool()
			} else {
				deprecated50 = nil
			}
			var defaultValue50 interface{}
			if !attributesItem1.PartnerStatusAttribute.DefaultValue.IsUnknown() && !attributesItem1.PartnerStatusAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem1.PartnerStatusAttribute.DefaultValue.ValueString()), &defaultValue50)
			}
			group50 := new(string)
			if !attributesItem1.PartnerStatusAttribute.Group.IsUnknown() && !attributesItem1.PartnerStatusAttribute.Group.IsNull() {
				*group50 = attributesItem1.PartnerStatusAttribute.Group.ValueString()
			} else {
				group50 = nil
			}
			order52 := new(int64)
			if !attributesItem1.PartnerStatusAttribute.Order.IsUnknown() && !attributesItem1.PartnerStatusAttribute.Order.IsNull() {
				*order52 = attributesItem1.PartnerStatusAttribute.Order.ValueInt64()
			} else {
				order52 = nil
			}
			layout50 := new(string)
			if !attributesItem1.PartnerStatusAttribute.Layout.IsUnknown() && !attributesItem1.PartnerStatusAttribute.Layout.IsNull() {
				*layout50 = attributesItem1.PartnerStatusAttribute.Layout.ValueString()
			} else {
				layout50 = nil
			}
			hideLabel50 := new(bool)
			if !attributesItem1.PartnerStatusAttribute.HideLabel.IsUnknown() && !attributesItem1.PartnerStatusAttribute.HideLabel.IsNull() {
				*hideLabel50 = attributesItem1.PartnerStatusAttribute.HideLabel.ValueBool()
			} else {
				hideLabel50 = nil
			}
			icon55 := new(string)
			if !attributesItem1.PartnerStatusAttribute.Icon.IsUnknown() && !attributesItem1.PartnerStatusAttribute.Icon.IsNull() {
				*icon55 = attributesItem1.PartnerStatusAttribute.Icon.ValueString()
			} else {
				icon55 = nil
			}
			renderCondition53 := new(string)
			if !attributesItem1.PartnerStatusAttribute.RenderCondition.IsUnknown() && !attributesItem1.PartnerStatusAttribute.RenderCondition.IsNull() {
				*renderCondition53 = attributesItem1.PartnerStatusAttribute.RenderCondition.ValueString()
			} else {
				renderCondition53 = nil
			}
			var purpose52 []string = []string{}
			for _, purposeItem52 := range attributesItem1.PartnerStatusAttribute.Purpose {
				purpose52 = append(purpose52, purposeItem52.ValueString())
			}
			var constraints50 *shared.PartnerStatusAttributeConstraints
			if attributesItem1.PartnerStatusAttribute.Constraints != nil {
				constraints50 = &shared.PartnerStatusAttributeConstraints{}
			}
			featureFlag56 := new(string)
			if !attributesItem1.PartnerStatusAttribute.FeatureFlag.IsUnknown() && !attributesItem1.PartnerStatusAttribute.FeatureFlag.IsNull() {
				*featureFlag56 = attributesItem1.PartnerStatusAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag56 = nil
			}
			var settingsFlag55 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem55 := range attributesItem1.PartnerStatusAttribute.SettingsFlag {
				name108 := new(string)
				if !settingsFlagItem55.Name.IsUnknown() && !settingsFlagItem55.Name.IsNull() {
					*name108 = settingsFlagItem55.Name.ValueString()
				} else {
					name108 = nil
				}
				enabled55 := new(bool)
				if !settingsFlagItem55.Enabled.IsUnknown() && !settingsFlagItem55.Enabled.IsNull() {
					*enabled55 = settingsFlagItem55.Enabled.ValueBool()
				} else {
					enabled55 = nil
				}
				settingsFlag55 = append(settingsFlag55, shared.SettingFlag{
					Name:    name108,
					Enabled: enabled55,
				})
			}
			valueFormatter50 := new(string)
			if !attributesItem1.PartnerStatusAttribute.ValueFormatter.IsUnknown() && !attributesItem1.PartnerStatusAttribute.ValueFormatter.IsNull() {
				*valueFormatter50 = attributesItem1.PartnerStatusAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter50 = nil
			}
			previewValueFormatter50 := new(string)
			if !attributesItem1.PartnerStatusAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem1.PartnerStatusAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter50 = attributesItem1.PartnerStatusAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter50 = nil
			}
			entityBuilderDisableEdit50 := new(bool)
			if !attributesItem1.PartnerStatusAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem1.PartnerStatusAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit50 = attributesItem1.PartnerStatusAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit50 = nil
			}
			protected50 := new(bool)
			if !attributesItem1.PartnerStatusAttribute.Protected.IsUnknown() && !attributesItem1.PartnerStatusAttribute.Protected.IsNull() {
				*protected50 = attributesItem1.PartnerStatusAttribute.Protected.ValueBool()
			} else {
				protected50 = nil
			}
			var infoHelpers50 *shared.PartnerStatusAttributeInfoHelpers
			if attributesItem1.PartnerStatusAttribute.InfoHelpers != nil {
				hintText50 := new(string)
				if !attributesItem1.PartnerStatusAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem1.PartnerStatusAttribute.InfoHelpers.HintText.IsNull() {
					*hintText50 = attributesItem1.PartnerStatusAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText50 = nil
				}
				hintTextKey50 := new(string)
				if !attributesItem1.PartnerStatusAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem1.PartnerStatusAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey50 = attributesItem1.PartnerStatusAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey50 = nil
				}
				hintCustomComponent50 := new(string)
				if !attributesItem1.PartnerStatusAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem1.PartnerStatusAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent50 = attributesItem1.PartnerStatusAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent50 = nil
				}
				hintTooltipPlacement50 := new(string)
				if !attributesItem1.PartnerStatusAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem1.PartnerStatusAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement50 = attributesItem1.PartnerStatusAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement50 = nil
				}
				infoHelpers50 = &shared.PartnerStatusAttributeInfoHelpers{
					HintText:             hintText50,
					HintTextKey:          hintTextKey50,
					HintCustomComponent:  hintCustomComponent50,
					HintTooltipPlacement: hintTooltipPlacement50,
				}
			}
			typeVar51 := new(shared.PartnerStatusAttributeType)
			if !attributesItem1.PartnerStatusAttribute.Type.IsUnknown() && !attributesItem1.PartnerStatusAttribute.Type.IsNull() {
				*typeVar51 = shared.PartnerStatusAttributeType(attributesItem1.PartnerStatusAttribute.Type.ValueString())
			} else {
				typeVar51 = nil
			}
			partnerStatusAttribute1 := shared.PartnerStatusAttribute{
				ID:                       id56,
				Name:                     name107,
				Label:                    label58,
				Placeholder:              placeholder50,
				Hidden:                   hidden50,
				ShowInTable:              showInTable50,
				Sortable:                 sortable50,
				Required:                 required50,
				Readonly:                 readonly50,
				Deprecated:               deprecated50,
				DefaultValue:             defaultValue50,
				Group:                    group50,
				Order:                    order52,
				Layout:                   layout50,
				HideLabel:                hideLabel50,
				Icon:                     icon55,
				RenderCondition:          renderCondition53,
				Purpose:                  purpose52,
				Constraints:              constraints50,
				FeatureFlag:              featureFlag56,
				SettingsFlag:             settingsFlag55,
				ValueFormatter:           valueFormatter50,
				PreviewValueFormatter:    previewValueFormatter50,
				EntityBuilderDisableEdit: entityBuilderDisableEdit50,
				Protected:                protected50,
				InfoHelpers:              infoHelpers50,
				Type:                     typeVar51,
			}
			attributes1 = append(attributes1, shared.AttributeInput{
				PartnerStatusAttribute: &partnerStatusAttribute1,
			})
		}
		if attributesItem1.InvitationEmailAttribute != nil {
			id57 := new(string)
			if !attributesItem1.InvitationEmailAttribute.ID.IsUnknown() && !attributesItem1.InvitationEmailAttribute.ID.IsNull() {
				*id57 = attributesItem1.InvitationEmailAttribute.ID.ValueString()
			} else {
				id57 = nil
			}
			name109 := attributesItem1.InvitationEmailAttribute.Name.ValueString()
			label59 := attributesItem1.InvitationEmailAttribute.Label.ValueString()
			placeholder51 := new(string)
			if !attributesItem1.InvitationEmailAttribute.Placeholder.IsUnknown() && !attributesItem1.InvitationEmailAttribute.Placeholder.IsNull() {
				*placeholder51 = attributesItem1.InvitationEmailAttribute.Placeholder.ValueString()
			} else {
				placeholder51 = nil
			}
			hidden51 := new(bool)
			if !attributesItem1.InvitationEmailAttribute.Hidden.IsUnknown() && !attributesItem1.InvitationEmailAttribute.Hidden.IsNull() {
				*hidden51 = attributesItem1.InvitationEmailAttribute.Hidden.ValueBool()
			} else {
				hidden51 = nil
			}
			showInTable51 := new(bool)
			if !attributesItem1.InvitationEmailAttribute.ShowInTable.IsUnknown() && !attributesItem1.InvitationEmailAttribute.ShowInTable.IsNull() {
				*showInTable51 = attributesItem1.InvitationEmailAttribute.ShowInTable.ValueBool()
			} else {
				showInTable51 = nil
			}
			sortable51 := new(bool)
			if !attributesItem1.InvitationEmailAttribute.Sortable.IsUnknown() && !attributesItem1.InvitationEmailAttribute.Sortable.IsNull() {
				*sortable51 = attributesItem1.InvitationEmailAttribute.Sortable.ValueBool()
			} else {
				sortable51 = nil
			}
			required51 := new(bool)
			if !attributesItem1.InvitationEmailAttribute.Required.IsUnknown() && !attributesItem1.InvitationEmailAttribute.Required.IsNull() {
				*required51 = attributesItem1.InvitationEmailAttribute.Required.ValueBool()
			} else {
				required51 = nil
			}
			readonly51 := new(bool)
			if !attributesItem1.InvitationEmailAttribute.Readonly.IsUnknown() && !attributesItem1.InvitationEmailAttribute.Readonly.IsNull() {
				*readonly51 = attributesItem1.InvitationEmailAttribute.Readonly.ValueBool()
			} else {
				readonly51 = nil
			}
			deprecated51 := new(bool)
			if !attributesItem1.InvitationEmailAttribute.Deprecated.IsUnknown() && !attributesItem1.InvitationEmailAttribute.Deprecated.IsNull() {
				*deprecated51 = attributesItem1.InvitationEmailAttribute.Deprecated.ValueBool()
			} else {
				deprecated51 = nil
			}
			var defaultValue51 interface{}
			if !attributesItem1.InvitationEmailAttribute.DefaultValue.IsUnknown() && !attributesItem1.InvitationEmailAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem1.InvitationEmailAttribute.DefaultValue.ValueString()), &defaultValue51)
			}
			group51 := new(string)
			if !attributesItem1.InvitationEmailAttribute.Group.IsUnknown() && !attributesItem1.InvitationEmailAttribute.Group.IsNull() {
				*group51 = attributesItem1.InvitationEmailAttribute.Group.ValueString()
			} else {
				group51 = nil
			}
			order53 := new(int64)
			if !attributesItem1.InvitationEmailAttribute.Order.IsUnknown() && !attributesItem1.InvitationEmailAttribute.Order.IsNull() {
				*order53 = attributesItem1.InvitationEmailAttribute.Order.ValueInt64()
			} else {
				order53 = nil
			}
			layout51 := new(string)
			if !attributesItem1.InvitationEmailAttribute.Layout.IsUnknown() && !attributesItem1.InvitationEmailAttribute.Layout.IsNull() {
				*layout51 = attributesItem1.InvitationEmailAttribute.Layout.ValueString()
			} else {
				layout51 = nil
			}
			hideLabel51 := new(bool)
			if !attributesItem1.InvitationEmailAttribute.HideLabel.IsUnknown() && !attributesItem1.InvitationEmailAttribute.HideLabel.IsNull() {
				*hideLabel51 = attributesItem1.InvitationEmailAttribute.HideLabel.ValueBool()
			} else {
				hideLabel51 = nil
			}
			icon56 := new(string)
			if !attributesItem1.InvitationEmailAttribute.Icon.IsUnknown() && !attributesItem1.InvitationEmailAttribute.Icon.IsNull() {
				*icon56 = attributesItem1.InvitationEmailAttribute.Icon.ValueString()
			} else {
				icon56 = nil
			}
			renderCondition54 := new(string)
			if !attributesItem1.InvitationEmailAttribute.RenderCondition.IsUnknown() && !attributesItem1.InvitationEmailAttribute.RenderCondition.IsNull() {
				*renderCondition54 = attributesItem1.InvitationEmailAttribute.RenderCondition.ValueString()
			} else {
				renderCondition54 = nil
			}
			var purpose53 []string = []string{}
			for _, purposeItem53 := range attributesItem1.InvitationEmailAttribute.Purpose {
				purpose53 = append(purpose53, purposeItem53.ValueString())
			}
			var constraints51 *shared.InvitationEmailAttributeConstraints
			if attributesItem1.InvitationEmailAttribute.Constraints != nil {
				constraints51 = &shared.InvitationEmailAttributeConstraints{}
			}
			featureFlag57 := new(string)
			if !attributesItem1.InvitationEmailAttribute.FeatureFlag.IsUnknown() && !attributesItem1.InvitationEmailAttribute.FeatureFlag.IsNull() {
				*featureFlag57 = attributesItem1.InvitationEmailAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag57 = nil
			}
			var settingsFlag56 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem56 := range attributesItem1.InvitationEmailAttribute.SettingsFlag {
				name110 := new(string)
				if !settingsFlagItem56.Name.IsUnknown() && !settingsFlagItem56.Name.IsNull() {
					*name110 = settingsFlagItem56.Name.ValueString()
				} else {
					name110 = nil
				}
				enabled56 := new(bool)
				if !settingsFlagItem56.Enabled.IsUnknown() && !settingsFlagItem56.Enabled.IsNull() {
					*enabled56 = settingsFlagItem56.Enabled.ValueBool()
				} else {
					enabled56 = nil
				}
				settingsFlag56 = append(settingsFlag56, shared.SettingFlag{
					Name:    name110,
					Enabled: enabled56,
				})
			}
			valueFormatter51 := new(string)
			if !attributesItem1.InvitationEmailAttribute.ValueFormatter.IsUnknown() && !attributesItem1.InvitationEmailAttribute.ValueFormatter.IsNull() {
				*valueFormatter51 = attributesItem1.InvitationEmailAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter51 = nil
			}
			previewValueFormatter51 := new(string)
			if !attributesItem1.InvitationEmailAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem1.InvitationEmailAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter51 = attributesItem1.InvitationEmailAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter51 = nil
			}
			entityBuilderDisableEdit51 := new(bool)
			if !attributesItem1.InvitationEmailAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem1.InvitationEmailAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit51 = attributesItem1.InvitationEmailAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit51 = nil
			}
			protected51 := new(bool)
			if !attributesItem1.InvitationEmailAttribute.Protected.IsUnknown() && !attributesItem1.InvitationEmailAttribute.Protected.IsNull() {
				*protected51 = attributesItem1.InvitationEmailAttribute.Protected.ValueBool()
			} else {
				protected51 = nil
			}
			var infoHelpers51 *shared.InvitationEmailAttributeInfoHelpers
			if attributesItem1.InvitationEmailAttribute.InfoHelpers != nil {
				hintText51 := new(string)
				if !attributesItem1.InvitationEmailAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem1.InvitationEmailAttribute.InfoHelpers.HintText.IsNull() {
					*hintText51 = attributesItem1.InvitationEmailAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText51 = nil
				}
				hintTextKey51 := new(string)
				if !attributesItem1.InvitationEmailAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem1.InvitationEmailAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey51 = attributesItem1.InvitationEmailAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey51 = nil
				}
				hintCustomComponent51 := new(string)
				if !attributesItem1.InvitationEmailAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem1.InvitationEmailAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent51 = attributesItem1.InvitationEmailAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent51 = nil
				}
				hintTooltipPlacement51 := new(string)
				if !attributesItem1.InvitationEmailAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem1.InvitationEmailAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement51 = attributesItem1.InvitationEmailAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement51 = nil
				}
				infoHelpers51 = &shared.InvitationEmailAttributeInfoHelpers{
					HintText:             hintText51,
					HintTextKey:          hintTextKey51,
					HintCustomComponent:  hintCustomComponent51,
					HintTooltipPlacement: hintTooltipPlacement51,
				}
			}
			typeVar52 := new(shared.InvitationEmailAttributeType)
			if !attributesItem1.InvitationEmailAttribute.Type.IsUnknown() && !attributesItem1.InvitationEmailAttribute.Type.IsNull() {
				*typeVar52 = shared.InvitationEmailAttributeType(attributesItem1.InvitationEmailAttribute.Type.ValueString())
			} else {
				typeVar52 = nil
			}
			invitationEmailAttribute1 := shared.InvitationEmailAttribute{
				ID:                       id57,
				Name:                     name109,
				Label:                    label59,
				Placeholder:              placeholder51,
				Hidden:                   hidden51,
				ShowInTable:              showInTable51,
				Sortable:                 sortable51,
				Required:                 required51,
				Readonly:                 readonly51,
				Deprecated:               deprecated51,
				DefaultValue:             defaultValue51,
				Group:                    group51,
				Order:                    order53,
				Layout:                   layout51,
				HideLabel:                hideLabel51,
				Icon:                     icon56,
				RenderCondition:          renderCondition54,
				Purpose:                  purpose53,
				Constraints:              constraints51,
				FeatureFlag:              featureFlag57,
				SettingsFlag:             settingsFlag56,
				ValueFormatter:           valueFormatter51,
				PreviewValueFormatter:    previewValueFormatter51,
				EntityBuilderDisableEdit: entityBuilderDisableEdit51,
				Protected:                protected51,
				InfoHelpers:              infoHelpers51,
				Type:                     typeVar52,
			}
			attributes1 = append(attributes1, shared.AttributeInput{
				InvitationEmailAttribute: &invitationEmailAttribute1,
			})
		}
		if attributesItem1.AutomationAttribute != nil {
			id58 := new(string)
			if !attributesItem1.AutomationAttribute.ID.IsUnknown() && !attributesItem1.AutomationAttribute.ID.IsNull() {
				*id58 = attributesItem1.AutomationAttribute.ID.ValueString()
			} else {
				id58 = nil
			}
			name111 := attributesItem1.AutomationAttribute.Name.ValueString()
			label60 := attributesItem1.AutomationAttribute.Label.ValueString()
			placeholder52 := new(string)
			if !attributesItem1.AutomationAttribute.Placeholder.IsUnknown() && !attributesItem1.AutomationAttribute.Placeholder.IsNull() {
				*placeholder52 = attributesItem1.AutomationAttribute.Placeholder.ValueString()
			} else {
				placeholder52 = nil
			}
			hidden52 := new(bool)
			if !attributesItem1.AutomationAttribute.Hidden.IsUnknown() && !attributesItem1.AutomationAttribute.Hidden.IsNull() {
				*hidden52 = attributesItem1.AutomationAttribute.Hidden.ValueBool()
			} else {
				hidden52 = nil
			}
			showInTable52 := new(bool)
			if !attributesItem1.AutomationAttribute.ShowInTable.IsUnknown() && !attributesItem1.AutomationAttribute.ShowInTable.IsNull() {
				*showInTable52 = attributesItem1.AutomationAttribute.ShowInTable.ValueBool()
			} else {
				showInTable52 = nil
			}
			sortable52 := new(bool)
			if !attributesItem1.AutomationAttribute.Sortable.IsUnknown() && !attributesItem1.AutomationAttribute.Sortable.IsNull() {
				*sortable52 = attributesItem1.AutomationAttribute.Sortable.ValueBool()
			} else {
				sortable52 = nil
			}
			required52 := new(bool)
			if !attributesItem1.AutomationAttribute.Required.IsUnknown() && !attributesItem1.AutomationAttribute.Required.IsNull() {
				*required52 = attributesItem1.AutomationAttribute.Required.ValueBool()
			} else {
				required52 = nil
			}
			readonly52 := new(bool)
			if !attributesItem1.AutomationAttribute.Readonly.IsUnknown() && !attributesItem1.AutomationAttribute.Readonly.IsNull() {
				*readonly52 = attributesItem1.AutomationAttribute.Readonly.ValueBool()
			} else {
				readonly52 = nil
			}
			deprecated52 := new(bool)
			if !attributesItem1.AutomationAttribute.Deprecated.IsUnknown() && !attributesItem1.AutomationAttribute.Deprecated.IsNull() {
				*deprecated52 = attributesItem1.AutomationAttribute.Deprecated.ValueBool()
			} else {
				deprecated52 = nil
			}
			var defaultValue52 interface{}
			if !attributesItem1.AutomationAttribute.DefaultValue.IsUnknown() && !attributesItem1.AutomationAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem1.AutomationAttribute.DefaultValue.ValueString()), &defaultValue52)
			}
			group52 := new(string)
			if !attributesItem1.AutomationAttribute.Group.IsUnknown() && !attributesItem1.AutomationAttribute.Group.IsNull() {
				*group52 = attributesItem1.AutomationAttribute.Group.ValueString()
			} else {
				group52 = nil
			}
			order54 := new(int64)
			if !attributesItem1.AutomationAttribute.Order.IsUnknown() && !attributesItem1.AutomationAttribute.Order.IsNull() {
				*order54 = attributesItem1.AutomationAttribute.Order.ValueInt64()
			} else {
				order54 = nil
			}
			layout52 := new(string)
			if !attributesItem1.AutomationAttribute.Layout.IsUnknown() && !attributesItem1.AutomationAttribute.Layout.IsNull() {
				*layout52 = attributesItem1.AutomationAttribute.Layout.ValueString()
			} else {
				layout52 = nil
			}
			hideLabel52 := new(bool)
			if !attributesItem1.AutomationAttribute.HideLabel.IsUnknown() && !attributesItem1.AutomationAttribute.HideLabel.IsNull() {
				*hideLabel52 = attributesItem1.AutomationAttribute.HideLabel.ValueBool()
			} else {
				hideLabel52 = nil
			}
			icon57 := new(string)
			if !attributesItem1.AutomationAttribute.Icon.IsUnknown() && !attributesItem1.AutomationAttribute.Icon.IsNull() {
				*icon57 = attributesItem1.AutomationAttribute.Icon.ValueString()
			} else {
				icon57 = nil
			}
			renderCondition55 := new(string)
			if !attributesItem1.AutomationAttribute.RenderCondition.IsUnknown() && !attributesItem1.AutomationAttribute.RenderCondition.IsNull() {
				*renderCondition55 = attributesItem1.AutomationAttribute.RenderCondition.ValueString()
			} else {
				renderCondition55 = nil
			}
			var purpose54 []string = []string{}
			for _, purposeItem54 := range attributesItem1.AutomationAttribute.Purpose {
				purpose54 = append(purpose54, purposeItem54.ValueString())
			}
			var constraints52 *shared.AutomationAttributeConstraints
			if attributesItem1.AutomationAttribute.Constraints != nil {
				constraints52 = &shared.AutomationAttributeConstraints{}
			}
			featureFlag58 := new(string)
			if !attributesItem1.AutomationAttribute.FeatureFlag.IsUnknown() && !attributesItem1.AutomationAttribute.FeatureFlag.IsNull() {
				*featureFlag58 = attributesItem1.AutomationAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag58 = nil
			}
			var settingsFlag57 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem57 := range attributesItem1.AutomationAttribute.SettingsFlag {
				name112 := new(string)
				if !settingsFlagItem57.Name.IsUnknown() && !settingsFlagItem57.Name.IsNull() {
					*name112 = settingsFlagItem57.Name.ValueString()
				} else {
					name112 = nil
				}
				enabled57 := new(bool)
				if !settingsFlagItem57.Enabled.IsUnknown() && !settingsFlagItem57.Enabled.IsNull() {
					*enabled57 = settingsFlagItem57.Enabled.ValueBool()
				} else {
					enabled57 = nil
				}
				settingsFlag57 = append(settingsFlag57, shared.SettingFlag{
					Name:    name112,
					Enabled: enabled57,
				})
			}
			valueFormatter52 := new(string)
			if !attributesItem1.AutomationAttribute.ValueFormatter.IsUnknown() && !attributesItem1.AutomationAttribute.ValueFormatter.IsNull() {
				*valueFormatter52 = attributesItem1.AutomationAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter52 = nil
			}
			previewValueFormatter52 := new(string)
			if !attributesItem1.AutomationAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem1.AutomationAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter52 = attributesItem1.AutomationAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter52 = nil
			}
			entityBuilderDisableEdit52 := new(bool)
			if !attributesItem1.AutomationAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem1.AutomationAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit52 = attributesItem1.AutomationAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit52 = nil
			}
			protected52 := new(bool)
			if !attributesItem1.AutomationAttribute.Protected.IsUnknown() && !attributesItem1.AutomationAttribute.Protected.IsNull() {
				*protected52 = attributesItem1.AutomationAttribute.Protected.ValueBool()
			} else {
				protected52 = nil
			}
			var infoHelpers52 *shared.AutomationAttributeInfoHelpers
			if attributesItem1.AutomationAttribute.InfoHelpers != nil {
				hintText52 := new(string)
				if !attributesItem1.AutomationAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem1.AutomationAttribute.InfoHelpers.HintText.IsNull() {
					*hintText52 = attributesItem1.AutomationAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText52 = nil
				}
				hintTextKey52 := new(string)
				if !attributesItem1.AutomationAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem1.AutomationAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey52 = attributesItem1.AutomationAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey52 = nil
				}
				hintCustomComponent52 := new(string)
				if !attributesItem1.AutomationAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem1.AutomationAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent52 = attributesItem1.AutomationAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent52 = nil
				}
				hintTooltipPlacement52 := new(string)
				if !attributesItem1.AutomationAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem1.AutomationAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement52 = attributesItem1.AutomationAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement52 = nil
				}
				infoHelpers52 = &shared.AutomationAttributeInfoHelpers{
					HintText:             hintText52,
					HintTextKey:          hintTextKey52,
					HintCustomComponent:  hintCustomComponent52,
					HintTooltipPlacement: hintTooltipPlacement52,
				}
			}
			typeVar53 := new(shared.AutomationAttributeType)
			if !attributesItem1.AutomationAttribute.Type.IsUnknown() && !attributesItem1.AutomationAttribute.Type.IsNull() {
				*typeVar53 = shared.AutomationAttributeType(attributesItem1.AutomationAttribute.Type.ValueString())
			} else {
				typeVar53 = nil
			}
			automationAttribute1 := shared.AutomationAttribute{
				ID:                       id58,
				Name:                     name111,
				Label:                    label60,
				Placeholder:              placeholder52,
				Hidden:                   hidden52,
				ShowInTable:              showInTable52,
				Sortable:                 sortable52,
				Required:                 required52,
				Readonly:                 readonly52,
				Deprecated:               deprecated52,
				DefaultValue:             defaultValue52,
				Group:                    group52,
				Order:                    order54,
				Layout:                   layout52,
				HideLabel:                hideLabel52,
				Icon:                     icon57,
				RenderCondition:          renderCondition55,
				Purpose:                  purpose54,
				Constraints:              constraints52,
				FeatureFlag:              featureFlag58,
				SettingsFlag:             settingsFlag57,
				ValueFormatter:           valueFormatter52,
				PreviewValueFormatter:    previewValueFormatter52,
				EntityBuilderDisableEdit: entityBuilderDisableEdit52,
				Protected:                protected52,
				InfoHelpers:              infoHelpers52,
				Type:                     typeVar53,
			}
			attributes1 = append(attributes1, shared.AttributeInput{
				AutomationAttribute: &automationAttribute1,
			})
		}
		if attributesItem1.InternalUserAttribute != nil {
			id59 := new(string)
			if !attributesItem1.InternalUserAttribute.ID.IsUnknown() && !attributesItem1.InternalUserAttribute.ID.IsNull() {
				*id59 = attributesItem1.InternalUserAttribute.ID.ValueString()
			} else {
				id59 = nil
			}
			name113 := attributesItem1.InternalUserAttribute.Name.ValueString()
			label61 := attributesItem1.InternalUserAttribute.Label.ValueString()
			placeholder53 := new(string)
			if !attributesItem1.InternalUserAttribute.Placeholder.IsUnknown() && !attributesItem1.InternalUserAttribute.Placeholder.IsNull() {
				*placeholder53 = attributesItem1.InternalUserAttribute.Placeholder.ValueString()
			} else {
				placeholder53 = nil
			}
			hidden53 := new(bool)
			if !attributesItem1.InternalUserAttribute.Hidden.IsUnknown() && !attributesItem1.InternalUserAttribute.Hidden.IsNull() {
				*hidden53 = attributesItem1.InternalUserAttribute.Hidden.ValueBool()
			} else {
				hidden53 = nil
			}
			showInTable53 := new(bool)
			if !attributesItem1.InternalUserAttribute.ShowInTable.IsUnknown() && !attributesItem1.InternalUserAttribute.ShowInTable.IsNull() {
				*showInTable53 = attributesItem1.InternalUserAttribute.ShowInTable.ValueBool()
			} else {
				showInTable53 = nil
			}
			sortable53 := new(bool)
			if !attributesItem1.InternalUserAttribute.Sortable.IsUnknown() && !attributesItem1.InternalUserAttribute.Sortable.IsNull() {
				*sortable53 = attributesItem1.InternalUserAttribute.Sortable.ValueBool()
			} else {
				sortable53 = nil
			}
			required53 := new(bool)
			if !attributesItem1.InternalUserAttribute.Required.IsUnknown() && !attributesItem1.InternalUserAttribute.Required.IsNull() {
				*required53 = attributesItem1.InternalUserAttribute.Required.ValueBool()
			} else {
				required53 = nil
			}
			readonly53 := new(bool)
			if !attributesItem1.InternalUserAttribute.Readonly.IsUnknown() && !attributesItem1.InternalUserAttribute.Readonly.IsNull() {
				*readonly53 = attributesItem1.InternalUserAttribute.Readonly.ValueBool()
			} else {
				readonly53 = nil
			}
			deprecated53 := new(bool)
			if !attributesItem1.InternalUserAttribute.Deprecated.IsUnknown() && !attributesItem1.InternalUserAttribute.Deprecated.IsNull() {
				*deprecated53 = attributesItem1.InternalUserAttribute.Deprecated.ValueBool()
			} else {
				deprecated53 = nil
			}
			var defaultValue53 interface{}
			if !attributesItem1.InternalUserAttribute.DefaultValue.IsUnknown() && !attributesItem1.InternalUserAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem1.InternalUserAttribute.DefaultValue.ValueString()), &defaultValue53)
			}
			group53 := new(string)
			if !attributesItem1.InternalUserAttribute.Group.IsUnknown() && !attributesItem1.InternalUserAttribute.Group.IsNull() {
				*group53 = attributesItem1.InternalUserAttribute.Group.ValueString()
			} else {
				group53 = nil
			}
			order55 := new(int64)
			if !attributesItem1.InternalUserAttribute.Order.IsUnknown() && !attributesItem1.InternalUserAttribute.Order.IsNull() {
				*order55 = attributesItem1.InternalUserAttribute.Order.ValueInt64()
			} else {
				order55 = nil
			}
			layout53 := new(string)
			if !attributesItem1.InternalUserAttribute.Layout.IsUnknown() && !attributesItem1.InternalUserAttribute.Layout.IsNull() {
				*layout53 = attributesItem1.InternalUserAttribute.Layout.ValueString()
			} else {
				layout53 = nil
			}
			hideLabel53 := new(bool)
			if !attributesItem1.InternalUserAttribute.HideLabel.IsUnknown() && !attributesItem1.InternalUserAttribute.HideLabel.IsNull() {
				*hideLabel53 = attributesItem1.InternalUserAttribute.HideLabel.ValueBool()
			} else {
				hideLabel53 = nil
			}
			icon58 := new(string)
			if !attributesItem1.InternalUserAttribute.Icon.IsUnknown() && !attributesItem1.InternalUserAttribute.Icon.IsNull() {
				*icon58 = attributesItem1.InternalUserAttribute.Icon.ValueString()
			} else {
				icon58 = nil
			}
			renderCondition56 := new(string)
			if !attributesItem1.InternalUserAttribute.RenderCondition.IsUnknown() && !attributesItem1.InternalUserAttribute.RenderCondition.IsNull() {
				*renderCondition56 = attributesItem1.InternalUserAttribute.RenderCondition.ValueString()
			} else {
				renderCondition56 = nil
			}
			var purpose55 []string = []string{}
			for _, purposeItem55 := range attributesItem1.InternalUserAttribute.Purpose {
				purpose55 = append(purpose55, purposeItem55.ValueString())
			}
			var constraints53 *shared.InternalUserAttributeConstraints
			if attributesItem1.InternalUserAttribute.Constraints != nil {
				constraints53 = &shared.InternalUserAttributeConstraints{}
			}
			featureFlag59 := new(string)
			if !attributesItem1.InternalUserAttribute.FeatureFlag.IsUnknown() && !attributesItem1.InternalUserAttribute.FeatureFlag.IsNull() {
				*featureFlag59 = attributesItem1.InternalUserAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag59 = nil
			}
			var settingsFlag58 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem58 := range attributesItem1.InternalUserAttribute.SettingsFlag {
				name114 := new(string)
				if !settingsFlagItem58.Name.IsUnknown() && !settingsFlagItem58.Name.IsNull() {
					*name114 = settingsFlagItem58.Name.ValueString()
				} else {
					name114 = nil
				}
				enabled58 := new(bool)
				if !settingsFlagItem58.Enabled.IsUnknown() && !settingsFlagItem58.Enabled.IsNull() {
					*enabled58 = settingsFlagItem58.Enabled.ValueBool()
				} else {
					enabled58 = nil
				}
				settingsFlag58 = append(settingsFlag58, shared.SettingFlag{
					Name:    name114,
					Enabled: enabled58,
				})
			}
			valueFormatter53 := new(string)
			if !attributesItem1.InternalUserAttribute.ValueFormatter.IsUnknown() && !attributesItem1.InternalUserAttribute.ValueFormatter.IsNull() {
				*valueFormatter53 = attributesItem1.InternalUserAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter53 = nil
			}
			previewValueFormatter53 := new(string)
			if !attributesItem1.InternalUserAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem1.InternalUserAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter53 = attributesItem1.InternalUserAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter53 = nil
			}
			entityBuilderDisableEdit53 := new(bool)
			if !attributesItem1.InternalUserAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem1.InternalUserAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit53 = attributesItem1.InternalUserAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit53 = nil
			}
			protected53 := new(bool)
			if !attributesItem1.InternalUserAttribute.Protected.IsUnknown() && !attributesItem1.InternalUserAttribute.Protected.IsNull() {
				*protected53 = attributesItem1.InternalUserAttribute.Protected.ValueBool()
			} else {
				protected53 = nil
			}
			var infoHelpers53 *shared.InternalUserAttributeInfoHelpers
			if attributesItem1.InternalUserAttribute.InfoHelpers != nil {
				hintText53 := new(string)
				if !attributesItem1.InternalUserAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem1.InternalUserAttribute.InfoHelpers.HintText.IsNull() {
					*hintText53 = attributesItem1.InternalUserAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText53 = nil
				}
				hintTextKey53 := new(string)
				if !attributesItem1.InternalUserAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem1.InternalUserAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey53 = attributesItem1.InternalUserAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey53 = nil
				}
				hintCustomComponent53 := new(string)
				if !attributesItem1.InternalUserAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem1.InternalUserAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent53 = attributesItem1.InternalUserAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent53 = nil
				}
				hintTooltipPlacement53 := new(string)
				if !attributesItem1.InternalUserAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem1.InternalUserAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement53 = attributesItem1.InternalUserAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement53 = nil
				}
				infoHelpers53 = &shared.InternalUserAttributeInfoHelpers{
					HintText:             hintText53,
					HintTextKey:          hintTextKey53,
					HintCustomComponent:  hintCustomComponent53,
					HintTooltipPlacement: hintTooltipPlacement53,
				}
			}
			typeVar54 := new(shared.InternalUserAttributeType)
			if !attributesItem1.InternalUserAttribute.Type.IsUnknown() && !attributesItem1.InternalUserAttribute.Type.IsNull() {
				*typeVar54 = shared.InternalUserAttributeType(attributesItem1.InternalUserAttribute.Type.ValueString())
			} else {
				typeVar54 = nil
			}
			internalUserAttribute1 := shared.InternalUserAttribute{
				ID:                       id59,
				Name:                     name113,
				Label:                    label61,
				Placeholder:              placeholder53,
				Hidden:                   hidden53,
				ShowInTable:              showInTable53,
				Sortable:                 sortable53,
				Required:                 required53,
				Readonly:                 readonly53,
				Deprecated:               deprecated53,
				DefaultValue:             defaultValue53,
				Group:                    group53,
				Order:                    order55,
				Layout:                   layout53,
				HideLabel:                hideLabel53,
				Icon:                     icon58,
				RenderCondition:          renderCondition56,
				Purpose:                  purpose55,
				Constraints:              constraints53,
				FeatureFlag:              featureFlag59,
				SettingsFlag:             settingsFlag58,
				ValueFormatter:           valueFormatter53,
				PreviewValueFormatter:    previewValueFormatter53,
				EntityBuilderDisableEdit: entityBuilderDisableEdit53,
				Protected:                protected53,
				InfoHelpers:              infoHelpers53,
				Type:                     typeVar54,
			}
			attributes1 = append(attributes1, shared.AttributeInput{
				InternalUserAttribute: &internalUserAttribute1,
			})
		}
		if attributesItem1.PurposeAttribute != nil {
			id60 := new(string)
			if !attributesItem1.PurposeAttribute.ID.IsUnknown() && !attributesItem1.PurposeAttribute.ID.IsNull() {
				*id60 = attributesItem1.PurposeAttribute.ID.ValueString()
			} else {
				id60 = nil
			}
			name115 := attributesItem1.PurposeAttribute.Name.ValueString()
			label62 := attributesItem1.PurposeAttribute.Label.ValueString()
			placeholder54 := new(string)
			if !attributesItem1.PurposeAttribute.Placeholder.IsUnknown() && !attributesItem1.PurposeAttribute.Placeholder.IsNull() {
				*placeholder54 = attributesItem1.PurposeAttribute.Placeholder.ValueString()
			} else {
				placeholder54 = nil
			}
			hidden54 := new(bool)
			if !attributesItem1.PurposeAttribute.Hidden.IsUnknown() && !attributesItem1.PurposeAttribute.Hidden.IsNull() {
				*hidden54 = attributesItem1.PurposeAttribute.Hidden.ValueBool()
			} else {
				hidden54 = nil
			}
			showInTable54 := new(bool)
			if !attributesItem1.PurposeAttribute.ShowInTable.IsUnknown() && !attributesItem1.PurposeAttribute.ShowInTable.IsNull() {
				*showInTable54 = attributesItem1.PurposeAttribute.ShowInTable.ValueBool()
			} else {
				showInTable54 = nil
			}
			sortable54 := new(bool)
			if !attributesItem1.PurposeAttribute.Sortable.IsUnknown() && !attributesItem1.PurposeAttribute.Sortable.IsNull() {
				*sortable54 = attributesItem1.PurposeAttribute.Sortable.ValueBool()
			} else {
				sortable54 = nil
			}
			required54 := new(bool)
			if !attributesItem1.PurposeAttribute.Required.IsUnknown() && !attributesItem1.PurposeAttribute.Required.IsNull() {
				*required54 = attributesItem1.PurposeAttribute.Required.ValueBool()
			} else {
				required54 = nil
			}
			readonly54 := new(bool)
			if !attributesItem1.PurposeAttribute.Readonly.IsUnknown() && !attributesItem1.PurposeAttribute.Readonly.IsNull() {
				*readonly54 = attributesItem1.PurposeAttribute.Readonly.ValueBool()
			} else {
				readonly54 = nil
			}
			deprecated54 := new(bool)
			if !attributesItem1.PurposeAttribute.Deprecated.IsUnknown() && !attributesItem1.PurposeAttribute.Deprecated.IsNull() {
				*deprecated54 = attributesItem1.PurposeAttribute.Deprecated.ValueBool()
			} else {
				deprecated54 = nil
			}
			var defaultValue54 interface{}
			if !attributesItem1.PurposeAttribute.DefaultValue.IsUnknown() && !attributesItem1.PurposeAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem1.PurposeAttribute.DefaultValue.ValueString()), &defaultValue54)
			}
			group54 := new(string)
			if !attributesItem1.PurposeAttribute.Group.IsUnknown() && !attributesItem1.PurposeAttribute.Group.IsNull() {
				*group54 = attributesItem1.PurposeAttribute.Group.ValueString()
			} else {
				group54 = nil
			}
			order56 := new(int64)
			if !attributesItem1.PurposeAttribute.Order.IsUnknown() && !attributesItem1.PurposeAttribute.Order.IsNull() {
				*order56 = attributesItem1.PurposeAttribute.Order.ValueInt64()
			} else {
				order56 = nil
			}
			layout54 := new(string)
			if !attributesItem1.PurposeAttribute.Layout.IsUnknown() && !attributesItem1.PurposeAttribute.Layout.IsNull() {
				*layout54 = attributesItem1.PurposeAttribute.Layout.ValueString()
			} else {
				layout54 = nil
			}
			hideLabel54 := new(bool)
			if !attributesItem1.PurposeAttribute.HideLabel.IsUnknown() && !attributesItem1.PurposeAttribute.HideLabel.IsNull() {
				*hideLabel54 = attributesItem1.PurposeAttribute.HideLabel.ValueBool()
			} else {
				hideLabel54 = nil
			}
			icon59 := new(string)
			if !attributesItem1.PurposeAttribute.Icon.IsUnknown() && !attributesItem1.PurposeAttribute.Icon.IsNull() {
				*icon59 = attributesItem1.PurposeAttribute.Icon.ValueString()
			} else {
				icon59 = nil
			}
			renderCondition57 := new(string)
			if !attributesItem1.PurposeAttribute.RenderCondition.IsUnknown() && !attributesItem1.PurposeAttribute.RenderCondition.IsNull() {
				*renderCondition57 = attributesItem1.PurposeAttribute.RenderCondition.ValueString()
			} else {
				renderCondition57 = nil
			}
			var purpose56 []string = []string{}
			for _, purposeItem56 := range attributesItem1.PurposeAttribute.Purpose {
				purpose56 = append(purpose56, purposeItem56.ValueString())
			}
			var constraints54 *shared.PurposeAttributeConstraints
			if attributesItem1.PurposeAttribute.Constraints != nil {
				constraints54 = &shared.PurposeAttributeConstraints{}
			}
			featureFlag60 := new(string)
			if !attributesItem1.PurposeAttribute.FeatureFlag.IsUnknown() && !attributesItem1.PurposeAttribute.FeatureFlag.IsNull() {
				*featureFlag60 = attributesItem1.PurposeAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag60 = nil
			}
			var settingsFlag59 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem59 := range attributesItem1.PurposeAttribute.SettingsFlag {
				name116 := new(string)
				if !settingsFlagItem59.Name.IsUnknown() && !settingsFlagItem59.Name.IsNull() {
					*name116 = settingsFlagItem59.Name.ValueString()
				} else {
					name116 = nil
				}
				enabled59 := new(bool)
				if !settingsFlagItem59.Enabled.IsUnknown() && !settingsFlagItem59.Enabled.IsNull() {
					*enabled59 = settingsFlagItem59.Enabled.ValueBool()
				} else {
					enabled59 = nil
				}
				settingsFlag59 = append(settingsFlag59, shared.SettingFlag{
					Name:    name116,
					Enabled: enabled59,
				})
			}
			valueFormatter54 := new(string)
			if !attributesItem1.PurposeAttribute.ValueFormatter.IsUnknown() && !attributesItem1.PurposeAttribute.ValueFormatter.IsNull() {
				*valueFormatter54 = attributesItem1.PurposeAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter54 = nil
			}
			previewValueFormatter54 := new(string)
			if !attributesItem1.PurposeAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem1.PurposeAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter54 = attributesItem1.PurposeAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter54 = nil
			}
			entityBuilderDisableEdit54 := new(bool)
			if !attributesItem1.PurposeAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem1.PurposeAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit54 = attributesItem1.PurposeAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit54 = nil
			}
			protected54 := new(bool)
			if !attributesItem1.PurposeAttribute.Protected.IsUnknown() && !attributesItem1.PurposeAttribute.Protected.IsNull() {
				*protected54 = attributesItem1.PurposeAttribute.Protected.ValueBool()
			} else {
				protected54 = nil
			}
			var infoHelpers54 *shared.PurposeAttributeInfoHelpers
			if attributesItem1.PurposeAttribute.InfoHelpers != nil {
				hintText54 := new(string)
				if !attributesItem1.PurposeAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem1.PurposeAttribute.InfoHelpers.HintText.IsNull() {
					*hintText54 = attributesItem1.PurposeAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText54 = nil
				}
				hintTextKey54 := new(string)
				if !attributesItem1.PurposeAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem1.PurposeAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey54 = attributesItem1.PurposeAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey54 = nil
				}
				hintCustomComponent54 := new(string)
				if !attributesItem1.PurposeAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem1.PurposeAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent54 = attributesItem1.PurposeAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent54 = nil
				}
				hintTooltipPlacement54 := new(string)
				if !attributesItem1.PurposeAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem1.PurposeAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement54 = attributesItem1.PurposeAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement54 = nil
				}
				infoHelpers54 = &shared.PurposeAttributeInfoHelpers{
					HintText:             hintText54,
					HintTextKey:          hintTextKey54,
					HintCustomComponent:  hintCustomComponent54,
					HintTooltipPlacement: hintTooltipPlacement54,
				}
			}
			slug2 := new(string)
			if !attributesItem1.PurposeAttribute.Slug.IsUnknown() && !attributesItem1.PurposeAttribute.Slug.IsNull() {
				*slug2 = attributesItem1.PurposeAttribute.Slug.ValueString()
			} else {
				slug2 = nil
			}
			var parents1 []string = []string{}
			for _, parentsItem1 := range attributesItem1.PurposeAttribute.Parents {
				parents1 = append(parents1, parentsItem1.ValueString())
			}
			createdAt1 := new(time.Time)
			if !attributesItem1.PurposeAttribute.CreatedAt.IsUnknown() && !attributesItem1.PurposeAttribute.CreatedAt.IsNull() {
				*createdAt1, _ = time.Parse(time.RFC3339Nano, attributesItem1.PurposeAttribute.CreatedAt.ValueString())
			} else {
				createdAt1 = nil
			}
			updatedAt1 := new(time.Time)
			if !attributesItem1.PurposeAttribute.UpdatedAt.IsUnknown() && !attributesItem1.PurposeAttribute.UpdatedAt.IsNull() {
				*updatedAt1, _ = time.Parse(time.RFC3339Nano, attributesItem1.PurposeAttribute.UpdatedAt.ValueString())
			} else {
				updatedAt1 = nil
			}
			typeVar55 := new(shared.PurposeAttributeType)
			if !attributesItem1.PurposeAttribute.Type.IsUnknown() && !attributesItem1.PurposeAttribute.Type.IsNull() {
				*typeVar55 = shared.PurposeAttributeType(attributesItem1.PurposeAttribute.Type.ValueString())
			} else {
				typeVar55 = nil
			}
			purposeAttribute1 := shared.PurposeAttribute{
				ID:                       id60,
				Name:                     name115,
				Label:                    label62,
				Placeholder:              placeholder54,
				Hidden:                   hidden54,
				ShowInTable:              showInTable54,
				Sortable:                 sortable54,
				Required:                 required54,
				Readonly:                 readonly54,
				Deprecated:               deprecated54,
				DefaultValue:             defaultValue54,
				Group:                    group54,
				Order:                    order56,
				Layout:                   layout54,
				HideLabel:                hideLabel54,
				Icon:                     icon59,
				RenderCondition:          renderCondition57,
				Purpose:                  purpose56,
				Constraints:              constraints54,
				FeatureFlag:              featureFlag60,
				SettingsFlag:             settingsFlag59,
				ValueFormatter:           valueFormatter54,
				PreviewValueFormatter:    previewValueFormatter54,
				EntityBuilderDisableEdit: entityBuilderDisableEdit54,
				Protected:                protected54,
				InfoHelpers:              infoHelpers54,
				Slug:                     slug2,
				Parents:                  parents1,
				CreatedAt:                createdAt1,
				UpdatedAt:                updatedAt1,
				Type:                     typeVar55,
			}
			attributes1 = append(attributes1, shared.AttributeInput{
				PurposeAttribute: &purposeAttribute1,
			})
		}
		if attributesItem1.PartnerOrganisationAttribute != nil {
			id61 := new(string)
			if !attributesItem1.PartnerOrganisationAttribute.ID.IsUnknown() && !attributesItem1.PartnerOrganisationAttribute.ID.IsNull() {
				*id61 = attributesItem1.PartnerOrganisationAttribute.ID.ValueString()
			} else {
				id61 = nil
			}
			name117 := attributesItem1.PartnerOrganisationAttribute.Name.ValueString()
			label63 := attributesItem1.PartnerOrganisationAttribute.Label.ValueString()
			placeholder55 := new(string)
			if !attributesItem1.PartnerOrganisationAttribute.Placeholder.IsUnknown() && !attributesItem1.PartnerOrganisationAttribute.Placeholder.IsNull() {
				*placeholder55 = attributesItem1.PartnerOrganisationAttribute.Placeholder.ValueString()
			} else {
				placeholder55 = nil
			}
			hidden55 := new(bool)
			if !attributesItem1.PartnerOrganisationAttribute.Hidden.IsUnknown() && !attributesItem1.PartnerOrganisationAttribute.Hidden.IsNull() {
				*hidden55 = attributesItem1.PartnerOrganisationAttribute.Hidden.ValueBool()
			} else {
				hidden55 = nil
			}
			showInTable55 := new(bool)
			if !attributesItem1.PartnerOrganisationAttribute.ShowInTable.IsUnknown() && !attributesItem1.PartnerOrganisationAttribute.ShowInTable.IsNull() {
				*showInTable55 = attributesItem1.PartnerOrganisationAttribute.ShowInTable.ValueBool()
			} else {
				showInTable55 = nil
			}
			sortable55 := new(bool)
			if !attributesItem1.PartnerOrganisationAttribute.Sortable.IsUnknown() && !attributesItem1.PartnerOrganisationAttribute.Sortable.IsNull() {
				*sortable55 = attributesItem1.PartnerOrganisationAttribute.Sortable.ValueBool()
			} else {
				sortable55 = nil
			}
			required55 := new(bool)
			if !attributesItem1.PartnerOrganisationAttribute.Required.IsUnknown() && !attributesItem1.PartnerOrganisationAttribute.Required.IsNull() {
				*required55 = attributesItem1.PartnerOrganisationAttribute.Required.ValueBool()
			} else {
				required55 = nil
			}
			readonly55 := new(bool)
			if !attributesItem1.PartnerOrganisationAttribute.Readonly.IsUnknown() && !attributesItem1.PartnerOrganisationAttribute.Readonly.IsNull() {
				*readonly55 = attributesItem1.PartnerOrganisationAttribute.Readonly.ValueBool()
			} else {
				readonly55 = nil
			}
			deprecated55 := new(bool)
			if !attributesItem1.PartnerOrganisationAttribute.Deprecated.IsUnknown() && !attributesItem1.PartnerOrganisationAttribute.Deprecated.IsNull() {
				*deprecated55 = attributesItem1.PartnerOrganisationAttribute.Deprecated.ValueBool()
			} else {
				deprecated55 = nil
			}
			var defaultValue55 interface{}
			if !attributesItem1.PartnerOrganisationAttribute.DefaultValue.IsUnknown() && !attributesItem1.PartnerOrganisationAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem1.PartnerOrganisationAttribute.DefaultValue.ValueString()), &defaultValue55)
			}
			group55 := new(string)
			if !attributesItem1.PartnerOrganisationAttribute.Group.IsUnknown() && !attributesItem1.PartnerOrganisationAttribute.Group.IsNull() {
				*group55 = attributesItem1.PartnerOrganisationAttribute.Group.ValueString()
			} else {
				group55 = nil
			}
			order57 := new(int64)
			if !attributesItem1.PartnerOrganisationAttribute.Order.IsUnknown() && !attributesItem1.PartnerOrganisationAttribute.Order.IsNull() {
				*order57 = attributesItem1.PartnerOrganisationAttribute.Order.ValueInt64()
			} else {
				order57 = nil
			}
			layout55 := new(string)
			if !attributesItem1.PartnerOrganisationAttribute.Layout.IsUnknown() && !attributesItem1.PartnerOrganisationAttribute.Layout.IsNull() {
				*layout55 = attributesItem1.PartnerOrganisationAttribute.Layout.ValueString()
			} else {
				layout55 = nil
			}
			hideLabel55 := new(bool)
			if !attributesItem1.PartnerOrganisationAttribute.HideLabel.IsUnknown() && !attributesItem1.PartnerOrganisationAttribute.HideLabel.IsNull() {
				*hideLabel55 = attributesItem1.PartnerOrganisationAttribute.HideLabel.ValueBool()
			} else {
				hideLabel55 = nil
			}
			icon60 := new(string)
			if !attributesItem1.PartnerOrganisationAttribute.Icon.IsUnknown() && !attributesItem1.PartnerOrganisationAttribute.Icon.IsNull() {
				*icon60 = attributesItem1.PartnerOrganisationAttribute.Icon.ValueString()
			} else {
				icon60 = nil
			}
			renderCondition58 := new(string)
			if !attributesItem1.PartnerOrganisationAttribute.RenderCondition.IsUnknown() && !attributesItem1.PartnerOrganisationAttribute.RenderCondition.IsNull() {
				*renderCondition58 = attributesItem1.PartnerOrganisationAttribute.RenderCondition.ValueString()
			} else {
				renderCondition58 = nil
			}
			var purpose57 []string = []string{}
			for _, purposeItem57 := range attributesItem1.PartnerOrganisationAttribute.Purpose {
				purpose57 = append(purpose57, purposeItem57.ValueString())
			}
			var constraints55 *shared.PartnerOrganisationAttributeConstraints
			if attributesItem1.PartnerOrganisationAttribute.Constraints != nil {
				constraints55 = &shared.PartnerOrganisationAttributeConstraints{}
			}
			featureFlag61 := new(string)
			if !attributesItem1.PartnerOrganisationAttribute.FeatureFlag.IsUnknown() && !attributesItem1.PartnerOrganisationAttribute.FeatureFlag.IsNull() {
				*featureFlag61 = attributesItem1.PartnerOrganisationAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag61 = nil
			}
			var settingsFlag60 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem60 := range attributesItem1.PartnerOrganisationAttribute.SettingsFlag {
				name118 := new(string)
				if !settingsFlagItem60.Name.IsUnknown() && !settingsFlagItem60.Name.IsNull() {
					*name118 = settingsFlagItem60.Name.ValueString()
				} else {
					name118 = nil
				}
				enabled60 := new(bool)
				if !settingsFlagItem60.Enabled.IsUnknown() && !settingsFlagItem60.Enabled.IsNull() {
					*enabled60 = settingsFlagItem60.Enabled.ValueBool()
				} else {
					enabled60 = nil
				}
				settingsFlag60 = append(settingsFlag60, shared.SettingFlag{
					Name:    name118,
					Enabled: enabled60,
				})
			}
			valueFormatter55 := new(string)
			if !attributesItem1.PartnerOrganisationAttribute.ValueFormatter.IsUnknown() && !attributesItem1.PartnerOrganisationAttribute.ValueFormatter.IsNull() {
				*valueFormatter55 = attributesItem1.PartnerOrganisationAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter55 = nil
			}
			previewValueFormatter55 := new(string)
			if !attributesItem1.PartnerOrganisationAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem1.PartnerOrganisationAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter55 = attributesItem1.PartnerOrganisationAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter55 = nil
			}
			entityBuilderDisableEdit55 := new(bool)
			if !attributesItem1.PartnerOrganisationAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem1.PartnerOrganisationAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit55 = attributesItem1.PartnerOrganisationAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit55 = nil
			}
			protected55 := new(bool)
			if !attributesItem1.PartnerOrganisationAttribute.Protected.IsUnknown() && !attributesItem1.PartnerOrganisationAttribute.Protected.IsNull() {
				*protected55 = attributesItem1.PartnerOrganisationAttribute.Protected.ValueBool()
			} else {
				protected55 = nil
			}
			var infoHelpers55 *shared.PartnerOrganisationAttributeInfoHelpers
			if attributesItem1.PartnerOrganisationAttribute.InfoHelpers != nil {
				hintText55 := new(string)
				if !attributesItem1.PartnerOrganisationAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem1.PartnerOrganisationAttribute.InfoHelpers.HintText.IsNull() {
					*hintText55 = attributesItem1.PartnerOrganisationAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText55 = nil
				}
				hintTextKey55 := new(string)
				if !attributesItem1.PartnerOrganisationAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem1.PartnerOrganisationAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey55 = attributesItem1.PartnerOrganisationAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey55 = nil
				}
				hintCustomComponent55 := new(string)
				if !attributesItem1.PartnerOrganisationAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem1.PartnerOrganisationAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent55 = attributesItem1.PartnerOrganisationAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent55 = nil
				}
				hintTooltipPlacement55 := new(string)
				if !attributesItem1.PartnerOrganisationAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem1.PartnerOrganisationAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement55 = attributesItem1.PartnerOrganisationAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement55 = nil
				}
				infoHelpers55 = &shared.PartnerOrganisationAttributeInfoHelpers{
					HintText:             hintText55,
					HintTextKey:          hintTextKey55,
					HintCustomComponent:  hintCustomComponent55,
					HintTooltipPlacement: hintTooltipPlacement55,
				}
			}
			typeVar56 := new(shared.PartnerOrganisationAttributeType)
			if !attributesItem1.PartnerOrganisationAttribute.Type.IsUnknown() && !attributesItem1.PartnerOrganisationAttribute.Type.IsNull() {
				*typeVar56 = shared.PartnerOrganisationAttributeType(attributesItem1.PartnerOrganisationAttribute.Type.ValueString())
			} else {
				typeVar56 = nil
			}
			partnerOrganisationAttribute1 := shared.PartnerOrganisationAttribute{
				ID:                       id61,
				Name:                     name117,
				Label:                    label63,
				Placeholder:              placeholder55,
				Hidden:                   hidden55,
				ShowInTable:              showInTable55,
				Sortable:                 sortable55,
				Required:                 required55,
				Readonly:                 readonly55,
				Deprecated:               deprecated55,
				DefaultValue:             defaultValue55,
				Group:                    group55,
				Order:                    order57,
				Layout:                   layout55,
				HideLabel:                hideLabel55,
				Icon:                     icon60,
				RenderCondition:          renderCondition58,
				Purpose:                  purpose57,
				Constraints:              constraints55,
				FeatureFlag:              featureFlag61,
				SettingsFlag:             settingsFlag60,
				ValueFormatter:           valueFormatter55,
				PreviewValueFormatter:    previewValueFormatter55,
				EntityBuilderDisableEdit: entityBuilderDisableEdit55,
				Protected:                protected55,
				InfoHelpers:              infoHelpers55,
				Type:                     typeVar56,
			}
			attributes1 = append(attributes1, shared.AttributeInput{
				PartnerOrganisationAttribute: &partnerOrganisationAttribute1,
			})
		}
	}
	explicitSearchMappings := make(map[string]shared.SearchMappings)
	for explicitSearchMappingsKey, explicitSearchMappingsValue := range r.ExplicitSearchMappings {
		index := new(bool)
		if !explicitSearchMappingsValue.Index.IsUnknown() && !explicitSearchMappingsValue.Index.IsNull() {
			*index = explicitSearchMappingsValue.Index.ValueBool()
		} else {
			index = nil
		}
		typeVar57 := new(shared.SearchMappingsType)
		if !explicitSearchMappingsValue.Type.IsUnknown() && !explicitSearchMappingsValue.Type.IsNull() {
			*typeVar57 = shared.SearchMappingsType(explicitSearchMappingsValue.Type.ValueString())
		} else {
			typeVar57 = nil
		}
		fields := make(map[string]interface{})
		for fieldsKey, fieldsValue := range explicitSearchMappingsValue.Fields {
			var fieldsInst interface{}
			_ = json.Unmarshal([]byte(fieldsValue.ValueString()), &fieldsInst)
			fields[fieldsKey] = fieldsInst
		}
		explicitSearchMappingsInst := shared.SearchMappings{
			Index:  index,
			Type:   typeVar57,
			Fields: fields,
		}
		explicitSearchMappings[explicitSearchMappingsKey] = explicitSearchMappingsInst
	}
	out := shared.EntitySchemaItemInput{
		ID:                     id,
		Comment:                comment,
		Source:                 source,
		Slug:                   slug,
		Version:                version,
		Blueprint:              blueprint,
		FeatureFlag:            featureFlag,
		EnableSetting:          enableSetting,
		Name:                   name,
		Plural:                 plural,
		Published:              published,
		Draft:                  draft,
		Icon:                   icon,
		TitleTemplate:          titleTemplate,
		UIConfig:               uiConfig,
		Capabilities:           capabilities,
		GroupSettings:          groupSettings,
		LayoutSettings:         layoutSettings,
		DialogConfig:           dialogConfig,
		Attributes:             attributes1,
		ExplicitSearchMappings: explicitSearchMappings,
	}
	return &out
}

func (r *SchemaResourceModel) RefreshFromSharedEntitySchemaItem(resp *shared.EntitySchemaItem) {
	if resp != nil {
		r.Attributes = []tfTypes.Attribute{}
		if len(r.Attributes) > len(resp.Attributes) {
			r.Attributes = r.Attributes[:len(resp.Attributes)]
		}
		for attributesCount, attributesItem := range resp.Attributes {
			var attributes1 tfTypes.Attribute
			if attributesItem.AddressRelationAttribute != nil {
				attributes1.AddressRelationAttribute = &tfTypes.AddressRelationAttribute{}
				attributes1.AddressRelationAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.AddressRelationAttribute.Purpose {
					attributes1.AddressRelationAttribute.Purpose = append(attributes1.AddressRelationAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.AddressRelationAttribute.Constraints == nil {
					attributes1.AddressRelationAttribute.Constraints = nil
				} else {
					attributes1.AddressRelationAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.AddressRelationAttribute.DefaultValue == nil {
					attributes1.AddressRelationAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult, _ := json.Marshal(attributesItem.AddressRelationAttribute.DefaultValue)
					attributes1.AddressRelationAttribute.DefaultValue = types.StringValue(string(defaultValueResult))
				}
				attributes1.AddressRelationAttribute.Deprecated = types.BoolPointerValue(attributesItem.AddressRelationAttribute.Deprecated)
				attributes1.AddressRelationAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.AddressRelationAttribute.EntityBuilderDisableEdit)
				attributes1.AddressRelationAttribute.FeatureFlag = types.StringPointerValue(attributesItem.AddressRelationAttribute.FeatureFlag)
				attributes1.AddressRelationAttribute.Group = types.StringPointerValue(attributesItem.AddressRelationAttribute.Group)
				attributes1.AddressRelationAttribute.HasPrimary = types.BoolPointerValue(attributesItem.AddressRelationAttribute.HasPrimary)
				attributes1.AddressRelationAttribute.Hidden = types.BoolPointerValue(attributesItem.AddressRelationAttribute.Hidden)
				attributes1.AddressRelationAttribute.HideLabel = types.BoolPointerValue(attributesItem.AddressRelationAttribute.HideLabel)
				attributes1.AddressRelationAttribute.Icon = types.StringPointerValue(attributesItem.AddressRelationAttribute.Icon)
				attributes1.AddressRelationAttribute.ID = types.StringPointerValue(attributesItem.AddressRelationAttribute.ID)
				if attributesItem.AddressRelationAttribute.InfoHelpers == nil {
					attributes1.AddressRelationAttribute.InfoHelpers = nil
				} else {
					attributes1.AddressRelationAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.AddressRelationAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.AddressRelationAttribute.InfoHelpers.HintCustomComponent)
					attributes1.AddressRelationAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.AddressRelationAttribute.InfoHelpers.HintText)
					attributes1.AddressRelationAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.AddressRelationAttribute.InfoHelpers.HintTextKey)
					attributes1.AddressRelationAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.AddressRelationAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.AddressRelationAttribute.Label = types.StringValue(attributesItem.AddressRelationAttribute.Label)
				attributes1.AddressRelationAttribute.Layout = types.StringPointerValue(attributesItem.AddressRelationAttribute.Layout)
				attributes1.AddressRelationAttribute.Name = types.StringValue(attributesItem.AddressRelationAttribute.Name)
				attributes1.AddressRelationAttribute.Order = types.Int64PointerValue(attributesItem.AddressRelationAttribute.Order)
				attributes1.AddressRelationAttribute.Placeholder = types.StringPointerValue(attributesItem.AddressRelationAttribute.Placeholder)
				attributes1.AddressRelationAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.AddressRelationAttribute.PreviewValueFormatter)
				attributes1.AddressRelationAttribute.Protected = types.BoolPointerValue(attributesItem.AddressRelationAttribute.Protected)
				attributes1.AddressRelationAttribute.Readonly = types.BoolPointerValue(attributesItem.AddressRelationAttribute.Readonly)
				attributes1.AddressRelationAttribute.RenderCondition = types.StringPointerValue(attributesItem.AddressRelationAttribute.RenderCondition)
				attributes1.AddressRelationAttribute.Required = types.BoolPointerValue(attributesItem.AddressRelationAttribute.Required)
				attributes1.AddressRelationAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount, settingsFlagItem := range attributesItem.AddressRelationAttribute.SettingsFlag {
					var settingsFlag1 tfTypes.SettingFlag
					settingsFlag1.Enabled = types.BoolPointerValue(settingsFlagItem.Enabled)
					settingsFlag1.Name = types.StringPointerValue(settingsFlagItem.Name)
					if settingsFlagCount+1 > len(attributes1.AddressRelationAttribute.SettingsFlag) {
						attributes1.AddressRelationAttribute.SettingsFlag = append(attributes1.AddressRelationAttribute.SettingsFlag, settingsFlag1)
					} else {
						attributes1.AddressRelationAttribute.SettingsFlag[settingsFlagCount].Enabled = settingsFlag1.Enabled
						attributes1.AddressRelationAttribute.SettingsFlag[settingsFlagCount].Name = settingsFlag1.Name
					}
				}
				attributes1.AddressRelationAttribute.ShowInTable = types.BoolPointerValue(attributesItem.AddressRelationAttribute.ShowInTable)
				attributes1.AddressRelationAttribute.Sortable = types.BoolPointerValue(attributesItem.AddressRelationAttribute.Sortable)
				if attributesItem.AddressRelationAttribute.Type != nil {
					attributes1.AddressRelationAttribute.Type = types.StringValue(string(*attributesItem.AddressRelationAttribute.Type))
				} else {
					attributes1.AddressRelationAttribute.Type = types.StringNull()
				}
				attributes1.AddressRelationAttribute.ValueFormatter = types.StringPointerValue(attributesItem.AddressRelationAttribute.ValueFormatter)
			}
			if attributesItem.AutomationAttribute != nil {
				attributes1.AutomationAttribute = &tfTypes.AutomationAttribute{}
				attributes1.AutomationAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.AutomationAttribute.Purpose {
					attributes1.AutomationAttribute.Purpose = append(attributes1.AutomationAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.AutomationAttribute.Constraints == nil {
					attributes1.AutomationAttribute.Constraints = nil
				} else {
					attributes1.AutomationAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.AutomationAttribute.DefaultValue == nil {
					attributes1.AutomationAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult1, _ := json.Marshal(attributesItem.AutomationAttribute.DefaultValue)
					attributes1.AutomationAttribute.DefaultValue = types.StringValue(string(defaultValueResult1))
				}
				attributes1.AutomationAttribute.Deprecated = types.BoolPointerValue(attributesItem.AutomationAttribute.Deprecated)
				attributes1.AutomationAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.AutomationAttribute.EntityBuilderDisableEdit)
				attributes1.AutomationAttribute.FeatureFlag = types.StringPointerValue(attributesItem.AutomationAttribute.FeatureFlag)
				attributes1.AutomationAttribute.Group = types.StringPointerValue(attributesItem.AutomationAttribute.Group)
				attributes1.AutomationAttribute.Hidden = types.BoolPointerValue(attributesItem.AutomationAttribute.Hidden)
				attributes1.AutomationAttribute.HideLabel = types.BoolPointerValue(attributesItem.AutomationAttribute.HideLabel)
				attributes1.AutomationAttribute.Icon = types.StringPointerValue(attributesItem.AutomationAttribute.Icon)
				attributes1.AutomationAttribute.ID = types.StringPointerValue(attributesItem.AutomationAttribute.ID)
				if attributesItem.AutomationAttribute.InfoHelpers == nil {
					attributes1.AutomationAttribute.InfoHelpers = nil
				} else {
					attributes1.AutomationAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.AutomationAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.AutomationAttribute.InfoHelpers.HintCustomComponent)
					attributes1.AutomationAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.AutomationAttribute.InfoHelpers.HintText)
					attributes1.AutomationAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.AutomationAttribute.InfoHelpers.HintTextKey)
					attributes1.AutomationAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.AutomationAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.AutomationAttribute.Label = types.StringValue(attributesItem.AutomationAttribute.Label)
				attributes1.AutomationAttribute.Layout = types.StringPointerValue(attributesItem.AutomationAttribute.Layout)
				attributes1.AutomationAttribute.Name = types.StringValue(attributesItem.AutomationAttribute.Name)
				attributes1.AutomationAttribute.Order = types.Int64PointerValue(attributesItem.AutomationAttribute.Order)
				attributes1.AutomationAttribute.Placeholder = types.StringPointerValue(attributesItem.AutomationAttribute.Placeholder)
				attributes1.AutomationAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.AutomationAttribute.PreviewValueFormatter)
				attributes1.AutomationAttribute.Protected = types.BoolPointerValue(attributesItem.AutomationAttribute.Protected)
				attributes1.AutomationAttribute.Readonly = types.BoolPointerValue(attributesItem.AutomationAttribute.Readonly)
				attributes1.AutomationAttribute.RenderCondition = types.StringPointerValue(attributesItem.AutomationAttribute.RenderCondition)
				attributes1.AutomationAttribute.Required = types.BoolPointerValue(attributesItem.AutomationAttribute.Required)
				attributes1.AutomationAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount1, settingsFlagItem1 := range attributesItem.AutomationAttribute.SettingsFlag {
					var settingsFlag3 tfTypes.SettingFlag
					settingsFlag3.Enabled = types.BoolPointerValue(settingsFlagItem1.Enabled)
					settingsFlag3.Name = types.StringPointerValue(settingsFlagItem1.Name)
					if settingsFlagCount1+1 > len(attributes1.AutomationAttribute.SettingsFlag) {
						attributes1.AutomationAttribute.SettingsFlag = append(attributes1.AutomationAttribute.SettingsFlag, settingsFlag3)
					} else {
						attributes1.AutomationAttribute.SettingsFlag[settingsFlagCount1].Enabled = settingsFlag3.Enabled
						attributes1.AutomationAttribute.SettingsFlag[settingsFlagCount1].Name = settingsFlag3.Name
					}
				}
				attributes1.AutomationAttribute.ShowInTable = types.BoolPointerValue(attributesItem.AutomationAttribute.ShowInTable)
				attributes1.AutomationAttribute.Sortable = types.BoolPointerValue(attributesItem.AutomationAttribute.Sortable)
				if attributesItem.AutomationAttribute.Type != nil {
					attributes1.AutomationAttribute.Type = types.StringValue(string(*attributesItem.AutomationAttribute.Type))
				} else {
					attributes1.AutomationAttribute.Type = types.StringNull()
				}
				attributes1.AutomationAttribute.ValueFormatter = types.StringPointerValue(attributesItem.AutomationAttribute.ValueFormatter)
			}
			if attributesItem.BooleanAttribute != nil {
				attributes1.BooleanAttribute = &tfTypes.BooleanAttribute{}
				attributes1.BooleanAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.BooleanAttribute.Purpose {
					attributes1.BooleanAttribute.Purpose = append(attributes1.BooleanAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.BooleanAttribute.Constraints == nil {
					attributes1.BooleanAttribute.Constraints = nil
				} else {
					attributes1.BooleanAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.BooleanAttribute.DefaultValue == nil {
					attributes1.BooleanAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult2, _ := json.Marshal(attributesItem.BooleanAttribute.DefaultValue)
					attributes1.BooleanAttribute.DefaultValue = types.StringValue(string(defaultValueResult2))
				}
				attributes1.BooleanAttribute.Deprecated = types.BoolPointerValue(attributesItem.BooleanAttribute.Deprecated)
				attributes1.BooleanAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.BooleanAttribute.EntityBuilderDisableEdit)
				attributes1.BooleanAttribute.FeatureFlag = types.StringPointerValue(attributesItem.BooleanAttribute.FeatureFlag)
				attributes1.BooleanAttribute.Group = types.StringPointerValue(attributesItem.BooleanAttribute.Group)
				attributes1.BooleanAttribute.Hidden = types.BoolPointerValue(attributesItem.BooleanAttribute.Hidden)
				attributes1.BooleanAttribute.HideLabel = types.BoolPointerValue(attributesItem.BooleanAttribute.HideLabel)
				attributes1.BooleanAttribute.Icon = types.StringPointerValue(attributesItem.BooleanAttribute.Icon)
				attributes1.BooleanAttribute.ID = types.StringPointerValue(attributesItem.BooleanAttribute.ID)
				if attributesItem.BooleanAttribute.InfoHelpers == nil {
					attributes1.BooleanAttribute.InfoHelpers = nil
				} else {
					attributes1.BooleanAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.BooleanAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.BooleanAttribute.InfoHelpers.HintCustomComponent)
					attributes1.BooleanAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.BooleanAttribute.InfoHelpers.HintText)
					attributes1.BooleanAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.BooleanAttribute.InfoHelpers.HintTextKey)
					attributes1.BooleanAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.BooleanAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.BooleanAttribute.Label = types.StringValue(attributesItem.BooleanAttribute.Label)
				attributes1.BooleanAttribute.Layout = types.StringPointerValue(attributesItem.BooleanAttribute.Layout)
				attributes1.BooleanAttribute.Name = types.StringValue(attributesItem.BooleanAttribute.Name)
				attributes1.BooleanAttribute.Order = types.Int64PointerValue(attributesItem.BooleanAttribute.Order)
				attributes1.BooleanAttribute.Placeholder = types.StringPointerValue(attributesItem.BooleanAttribute.Placeholder)
				attributes1.BooleanAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.BooleanAttribute.PreviewValueFormatter)
				attributes1.BooleanAttribute.Protected = types.BoolPointerValue(attributesItem.BooleanAttribute.Protected)
				attributes1.BooleanAttribute.Readonly = types.BoolPointerValue(attributesItem.BooleanAttribute.Readonly)
				attributes1.BooleanAttribute.RenderCondition = types.StringPointerValue(attributesItem.BooleanAttribute.RenderCondition)
				attributes1.BooleanAttribute.Required = types.BoolPointerValue(attributesItem.BooleanAttribute.Required)
				attributes1.BooleanAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount2, settingsFlagItem2 := range attributesItem.BooleanAttribute.SettingsFlag {
					var settingsFlag5 tfTypes.SettingFlag
					settingsFlag5.Enabled = types.BoolPointerValue(settingsFlagItem2.Enabled)
					settingsFlag5.Name = types.StringPointerValue(settingsFlagItem2.Name)
					if settingsFlagCount2+1 > len(attributes1.BooleanAttribute.SettingsFlag) {
						attributes1.BooleanAttribute.SettingsFlag = append(attributes1.BooleanAttribute.SettingsFlag, settingsFlag5)
					} else {
						attributes1.BooleanAttribute.SettingsFlag[settingsFlagCount2].Enabled = settingsFlag5.Enabled
						attributes1.BooleanAttribute.SettingsFlag[settingsFlagCount2].Name = settingsFlag5.Name
					}
				}
				attributes1.BooleanAttribute.ShowInTable = types.BoolPointerValue(attributesItem.BooleanAttribute.ShowInTable)
				attributes1.BooleanAttribute.Sortable = types.BoolPointerValue(attributesItem.BooleanAttribute.Sortable)
				if attributesItem.BooleanAttribute.Type != nil {
					attributes1.BooleanAttribute.Type = types.StringValue(string(*attributesItem.BooleanAttribute.Type))
				} else {
					attributes1.BooleanAttribute.Type = types.StringNull()
				}
				attributes1.BooleanAttribute.ValueFormatter = types.StringPointerValue(attributesItem.BooleanAttribute.ValueFormatter)
			}
			if attributesItem.ComputedAttribute != nil {
				attributes1.ComputedAttribute = &tfTypes.ComputedAttribute{}
				attributes1.ComputedAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.ComputedAttribute.Purpose {
					attributes1.ComputedAttribute.Purpose = append(attributes1.ComputedAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.ComputedAttribute.Constraints == nil {
					attributes1.ComputedAttribute.Constraints = nil
				} else {
					attributes1.ComputedAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.ComputedAttribute.DefaultValue == nil {
					attributes1.ComputedAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult3, _ := json.Marshal(attributesItem.ComputedAttribute.DefaultValue)
					attributes1.ComputedAttribute.DefaultValue = types.StringValue(string(defaultValueResult3))
				}
				attributes1.ComputedAttribute.Deprecated = types.BoolPointerValue(attributesItem.ComputedAttribute.Deprecated)
				attributes1.ComputedAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.ComputedAttribute.EntityBuilderDisableEdit)
				attributes1.ComputedAttribute.FeatureFlag = types.StringPointerValue(attributesItem.ComputedAttribute.FeatureFlag)
				attributes1.ComputedAttribute.Group = types.StringPointerValue(attributesItem.ComputedAttribute.Group)
				attributes1.ComputedAttribute.Hidden = types.BoolPointerValue(attributesItem.ComputedAttribute.Hidden)
				attributes1.ComputedAttribute.HideLabel = types.BoolPointerValue(attributesItem.ComputedAttribute.HideLabel)
				attributes1.ComputedAttribute.Icon = types.StringPointerValue(attributesItem.ComputedAttribute.Icon)
				attributes1.ComputedAttribute.ID = types.StringPointerValue(attributesItem.ComputedAttribute.ID)
				if attributesItem.ComputedAttribute.InfoHelpers == nil {
					attributes1.ComputedAttribute.InfoHelpers = nil
				} else {
					attributes1.ComputedAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.ComputedAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.ComputedAttribute.InfoHelpers.HintCustomComponent)
					attributes1.ComputedAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.ComputedAttribute.InfoHelpers.HintText)
					attributes1.ComputedAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.ComputedAttribute.InfoHelpers.HintTextKey)
					attributes1.ComputedAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.ComputedAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.ComputedAttribute.Label = types.StringValue(attributesItem.ComputedAttribute.Label)
				attributes1.ComputedAttribute.Layout = types.StringPointerValue(attributesItem.ComputedAttribute.Layout)
				attributes1.ComputedAttribute.Name = types.StringValue(attributesItem.ComputedAttribute.Name)
				attributes1.ComputedAttribute.Order = types.Int64PointerValue(attributesItem.ComputedAttribute.Order)
				attributes1.ComputedAttribute.Placeholder = types.StringPointerValue(attributesItem.ComputedAttribute.Placeholder)
				attributes1.ComputedAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.ComputedAttribute.PreviewValueFormatter)
				attributes1.ComputedAttribute.Protected = types.BoolPointerValue(attributesItem.ComputedAttribute.Protected)
				attributes1.ComputedAttribute.Readonly = types.BoolPointerValue(attributesItem.ComputedAttribute.Readonly)
				attributes1.ComputedAttribute.RenderCondition = types.StringPointerValue(attributesItem.ComputedAttribute.RenderCondition)
				attributes1.ComputedAttribute.Required = types.BoolPointerValue(attributesItem.ComputedAttribute.Required)
				attributes1.ComputedAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount3, settingsFlagItem3 := range attributesItem.ComputedAttribute.SettingsFlag {
					var settingsFlag7 tfTypes.SettingFlag
					settingsFlag7.Enabled = types.BoolPointerValue(settingsFlagItem3.Enabled)
					settingsFlag7.Name = types.StringPointerValue(settingsFlagItem3.Name)
					if settingsFlagCount3+1 > len(attributes1.ComputedAttribute.SettingsFlag) {
						attributes1.ComputedAttribute.SettingsFlag = append(attributes1.ComputedAttribute.SettingsFlag, settingsFlag7)
					} else {
						attributes1.ComputedAttribute.SettingsFlag[settingsFlagCount3].Enabled = settingsFlag7.Enabled
						attributes1.ComputedAttribute.SettingsFlag[settingsFlagCount3].Name = settingsFlag7.Name
					}
				}
				attributes1.ComputedAttribute.ShowInTable = types.BoolPointerValue(attributesItem.ComputedAttribute.ShowInTable)
				attributes1.ComputedAttribute.Sortable = types.BoolPointerValue(attributesItem.ComputedAttribute.Sortable)
				if attributesItem.ComputedAttribute.Type != nil {
					attributes1.ComputedAttribute.Type = types.StringValue(string(*attributesItem.ComputedAttribute.Type))
				} else {
					attributes1.ComputedAttribute.Type = types.StringNull()
				}
				attributes1.ComputedAttribute.ValueFormatter = types.StringPointerValue(attributesItem.ComputedAttribute.ValueFormatter)
			}
			if attributesItem.ConsentAttribute != nil {
				attributes1.ConsentAttribute = &tfTypes.ConsentAttribute{}
				attributes1.ConsentAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.ConsentAttribute.Purpose {
					attributes1.ConsentAttribute.Purpose = append(attributes1.ConsentAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.ConsentAttribute.Constraints == nil {
					attributes1.ConsentAttribute.Constraints = nil
				} else {
					attributes1.ConsentAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.ConsentAttribute.DefaultValue == nil {
					attributes1.ConsentAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult4, _ := json.Marshal(attributesItem.ConsentAttribute.DefaultValue)
					attributes1.ConsentAttribute.DefaultValue = types.StringValue(string(defaultValueResult4))
				}
				attributes1.ConsentAttribute.Deprecated = types.BoolPointerValue(attributesItem.ConsentAttribute.Deprecated)
				attributes1.ConsentAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.ConsentAttribute.EntityBuilderDisableEdit)
				attributes1.ConsentAttribute.FeatureFlag = types.StringPointerValue(attributesItem.ConsentAttribute.FeatureFlag)
				attributes1.ConsentAttribute.Group = types.StringPointerValue(attributesItem.ConsentAttribute.Group)
				attributes1.ConsentAttribute.Hidden = types.BoolPointerValue(attributesItem.ConsentAttribute.Hidden)
				attributes1.ConsentAttribute.HideLabel = types.BoolPointerValue(attributesItem.ConsentAttribute.HideLabel)
				attributes1.ConsentAttribute.Icon = types.StringPointerValue(attributesItem.ConsentAttribute.Icon)
				attributes1.ConsentAttribute.ID = types.StringPointerValue(attributesItem.ConsentAttribute.ID)
				attributes1.ConsentAttribute.Identifiers = []types.String{}
				for _, v := range attributesItem.ConsentAttribute.Identifiers {
					attributes1.ConsentAttribute.Identifiers = append(attributes1.ConsentAttribute.Identifiers, types.StringValue(v))
				}
				if attributesItem.ConsentAttribute.InfoHelpers == nil {
					attributes1.ConsentAttribute.InfoHelpers = nil
				} else {
					attributes1.ConsentAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.ConsentAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.ConsentAttribute.InfoHelpers.HintCustomComponent)
					attributes1.ConsentAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.ConsentAttribute.InfoHelpers.HintText)
					attributes1.ConsentAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.ConsentAttribute.InfoHelpers.HintTextKey)
					attributes1.ConsentAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.ConsentAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.ConsentAttribute.Label = types.StringValue(attributesItem.ConsentAttribute.Label)
				attributes1.ConsentAttribute.Layout = types.StringPointerValue(attributesItem.ConsentAttribute.Layout)
				attributes1.ConsentAttribute.Name = types.StringValue(attributesItem.ConsentAttribute.Name)
				attributes1.ConsentAttribute.Order = types.Int64PointerValue(attributesItem.ConsentAttribute.Order)
				attributes1.ConsentAttribute.Placeholder = types.StringPointerValue(attributesItem.ConsentAttribute.Placeholder)
				attributes1.ConsentAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.ConsentAttribute.PreviewValueFormatter)
				attributes1.ConsentAttribute.Protected = types.BoolPointerValue(attributesItem.ConsentAttribute.Protected)
				attributes1.ConsentAttribute.Readonly = types.BoolPointerValue(attributesItem.ConsentAttribute.Readonly)
				attributes1.ConsentAttribute.RenderCondition = types.StringPointerValue(attributesItem.ConsentAttribute.RenderCondition)
				attributes1.ConsentAttribute.Required = types.BoolPointerValue(attributesItem.ConsentAttribute.Required)
				attributes1.ConsentAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount4, settingsFlagItem4 := range attributesItem.ConsentAttribute.SettingsFlag {
					var settingsFlag9 tfTypes.SettingFlag
					settingsFlag9.Enabled = types.BoolPointerValue(settingsFlagItem4.Enabled)
					settingsFlag9.Name = types.StringPointerValue(settingsFlagItem4.Name)
					if settingsFlagCount4+1 > len(attributes1.ConsentAttribute.SettingsFlag) {
						attributes1.ConsentAttribute.SettingsFlag = append(attributes1.ConsentAttribute.SettingsFlag, settingsFlag9)
					} else {
						attributes1.ConsentAttribute.SettingsFlag[settingsFlagCount4].Enabled = settingsFlag9.Enabled
						attributes1.ConsentAttribute.SettingsFlag[settingsFlagCount4].Name = settingsFlag9.Name
					}
				}
				attributes1.ConsentAttribute.ShowInTable = types.BoolPointerValue(attributesItem.ConsentAttribute.ShowInTable)
				attributes1.ConsentAttribute.Sortable = types.BoolPointerValue(attributesItem.ConsentAttribute.Sortable)
				attributes1.ConsentAttribute.Topic = types.StringValue(attributesItem.ConsentAttribute.Topic)
				attributes1.ConsentAttribute.Type = types.StringValue(string(attributesItem.ConsentAttribute.Type))
				attributes1.ConsentAttribute.ValueFormatter = types.StringPointerValue(attributesItem.ConsentAttribute.ValueFormatter)
			}
			if attributesItem.CountryAttribute != nil {
				attributes1.CountryAttribute = &tfTypes.CountryAttribute{}
				attributes1.CountryAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.CountryAttribute.Purpose {
					attributes1.CountryAttribute.Purpose = append(attributes1.CountryAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.CountryAttribute.Constraints == nil {
					attributes1.CountryAttribute.Constraints = nil
				} else {
					attributes1.CountryAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.CountryAttribute.DefaultValue == nil {
					attributes1.CountryAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult5, _ := json.Marshal(attributesItem.CountryAttribute.DefaultValue)
					attributes1.CountryAttribute.DefaultValue = types.StringValue(string(defaultValueResult5))
				}
				attributes1.CountryAttribute.Deprecated = types.BoolPointerValue(attributesItem.CountryAttribute.Deprecated)
				attributes1.CountryAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.CountryAttribute.EntityBuilderDisableEdit)
				attributes1.CountryAttribute.FeatureFlag = types.StringPointerValue(attributesItem.CountryAttribute.FeatureFlag)
				attributes1.CountryAttribute.Group = types.StringPointerValue(attributesItem.CountryAttribute.Group)
				attributes1.CountryAttribute.Hidden = types.BoolPointerValue(attributesItem.CountryAttribute.Hidden)
				attributes1.CountryAttribute.HideLabel = types.BoolPointerValue(attributesItem.CountryAttribute.HideLabel)
				attributes1.CountryAttribute.Icon = types.StringPointerValue(attributesItem.CountryAttribute.Icon)
				attributes1.CountryAttribute.ID = types.StringPointerValue(attributesItem.CountryAttribute.ID)
				if attributesItem.CountryAttribute.InfoHelpers == nil {
					attributes1.CountryAttribute.InfoHelpers = nil
				} else {
					attributes1.CountryAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.CountryAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.CountryAttribute.InfoHelpers.HintCustomComponent)
					attributes1.CountryAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.CountryAttribute.InfoHelpers.HintText)
					attributes1.CountryAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.CountryAttribute.InfoHelpers.HintTextKey)
					attributes1.CountryAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.CountryAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.CountryAttribute.Label = types.StringValue(attributesItem.CountryAttribute.Label)
				attributes1.CountryAttribute.Layout = types.StringPointerValue(attributesItem.CountryAttribute.Layout)
				attributes1.CountryAttribute.Name = types.StringValue(attributesItem.CountryAttribute.Name)
				attributes1.CountryAttribute.Order = types.Int64PointerValue(attributesItem.CountryAttribute.Order)
				attributes1.CountryAttribute.Placeholder = types.StringPointerValue(attributesItem.CountryAttribute.Placeholder)
				attributes1.CountryAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.CountryAttribute.PreviewValueFormatter)
				attributes1.CountryAttribute.Protected = types.BoolPointerValue(attributesItem.CountryAttribute.Protected)
				attributes1.CountryAttribute.Readonly = types.BoolPointerValue(attributesItem.CountryAttribute.Readonly)
				attributes1.CountryAttribute.RenderCondition = types.StringPointerValue(attributesItem.CountryAttribute.RenderCondition)
				attributes1.CountryAttribute.Required = types.BoolPointerValue(attributesItem.CountryAttribute.Required)
				attributes1.CountryAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount5, settingsFlagItem5 := range attributesItem.CountryAttribute.SettingsFlag {
					var settingsFlag11 tfTypes.SettingFlag
					settingsFlag11.Enabled = types.BoolPointerValue(settingsFlagItem5.Enabled)
					settingsFlag11.Name = types.StringPointerValue(settingsFlagItem5.Name)
					if settingsFlagCount5+1 > len(attributes1.CountryAttribute.SettingsFlag) {
						attributes1.CountryAttribute.SettingsFlag = append(attributes1.CountryAttribute.SettingsFlag, settingsFlag11)
					} else {
						attributes1.CountryAttribute.SettingsFlag[settingsFlagCount5].Enabled = settingsFlag11.Enabled
						attributes1.CountryAttribute.SettingsFlag[settingsFlagCount5].Name = settingsFlag11.Name
					}
				}
				attributes1.CountryAttribute.ShowInTable = types.BoolPointerValue(attributesItem.CountryAttribute.ShowInTable)
				attributes1.CountryAttribute.Sortable = types.BoolPointerValue(attributesItem.CountryAttribute.Sortable)
				if attributesItem.CountryAttribute.Type != nil {
					attributes1.CountryAttribute.Type = types.StringValue(string(*attributesItem.CountryAttribute.Type))
				} else {
					attributes1.CountryAttribute.Type = types.StringNull()
				}
				attributes1.CountryAttribute.ValueFormatter = types.StringPointerValue(attributesItem.CountryAttribute.ValueFormatter)
			}
			if attributesItem.CurrencyAttribute != nil {
				attributes1.CurrencyAttribute = &tfTypes.CurrencyAttribute{}
				attributes1.CurrencyAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.CurrencyAttribute.Purpose {
					attributes1.CurrencyAttribute.Purpose = append(attributes1.CurrencyAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.CurrencyAttribute.Constraints == nil {
					attributes1.CurrencyAttribute.Constraints = nil
				} else {
					attributes1.CurrencyAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				attributes1.CurrencyAttribute.Currency = []tfTypes.Currency{}
				for currencyCount, currencyItem := range attributesItem.CurrencyAttribute.Currency {
					var currency1 tfTypes.Currency
					if currencyItem.One != nil {
						currency1.One = &tfTypes.One{}
						currency1.One.Code = types.StringValue(currencyItem.One.Code)
						currency1.One.Description = types.StringValue(currencyItem.One.Description)
						currency1.One.Flag = types.StringPointerValue(currencyItem.One.Flag)
						currency1.One.Symbol = types.StringValue(currencyItem.One.Symbol)
					}
					if currencyCount+1 > len(attributes1.CurrencyAttribute.Currency) {
						attributes1.CurrencyAttribute.Currency = append(attributes1.CurrencyAttribute.Currency, currency1)
					} else {
						attributes1.CurrencyAttribute.Currency[currencyCount].One = currency1.One
					}
				}
				attributes1.CurrencyAttribute.CurrencySelectorOnly = types.BoolPointerValue(attributesItem.CurrencyAttribute.CurrencySelectorOnly)
				if attributesItem.CurrencyAttribute.DefaultValue == nil {
					attributes1.CurrencyAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult6, _ := json.Marshal(attributesItem.CurrencyAttribute.DefaultValue)
					attributes1.CurrencyAttribute.DefaultValue = types.StringValue(string(defaultValueResult6))
				}
				attributes1.CurrencyAttribute.Deprecated = types.BoolPointerValue(attributesItem.CurrencyAttribute.Deprecated)
				attributes1.CurrencyAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.CurrencyAttribute.EntityBuilderDisableEdit)
				attributes1.CurrencyAttribute.FeatureFlag = types.StringPointerValue(attributesItem.CurrencyAttribute.FeatureFlag)
				attributes1.CurrencyAttribute.Group = types.StringPointerValue(attributesItem.CurrencyAttribute.Group)
				attributes1.CurrencyAttribute.Hidden = types.BoolPointerValue(attributesItem.CurrencyAttribute.Hidden)
				attributes1.CurrencyAttribute.HideLabel = types.BoolPointerValue(attributesItem.CurrencyAttribute.HideLabel)
				attributes1.CurrencyAttribute.Icon = types.StringPointerValue(attributesItem.CurrencyAttribute.Icon)
				attributes1.CurrencyAttribute.ID = types.StringPointerValue(attributesItem.CurrencyAttribute.ID)
				if attributesItem.CurrencyAttribute.InfoHelpers == nil {
					attributes1.CurrencyAttribute.InfoHelpers = nil
				} else {
					attributes1.CurrencyAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.CurrencyAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.CurrencyAttribute.InfoHelpers.HintCustomComponent)
					attributes1.CurrencyAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.CurrencyAttribute.InfoHelpers.HintText)
					attributes1.CurrencyAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.CurrencyAttribute.InfoHelpers.HintTextKey)
					attributes1.CurrencyAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.CurrencyAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.CurrencyAttribute.Label = types.StringValue(attributesItem.CurrencyAttribute.Label)
				attributes1.CurrencyAttribute.Layout = types.StringPointerValue(attributesItem.CurrencyAttribute.Layout)
				attributes1.CurrencyAttribute.Name = types.StringValue(attributesItem.CurrencyAttribute.Name)
				attributes1.CurrencyAttribute.Order = types.Int64PointerValue(attributesItem.CurrencyAttribute.Order)
				attributes1.CurrencyAttribute.Placeholder = types.StringPointerValue(attributesItem.CurrencyAttribute.Placeholder)
				attributes1.CurrencyAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.CurrencyAttribute.PreviewValueFormatter)
				attributes1.CurrencyAttribute.Protected = types.BoolPointerValue(attributesItem.CurrencyAttribute.Protected)
				attributes1.CurrencyAttribute.Readonly = types.BoolPointerValue(attributesItem.CurrencyAttribute.Readonly)
				attributes1.CurrencyAttribute.RenderCondition = types.StringPointerValue(attributesItem.CurrencyAttribute.RenderCondition)
				attributes1.CurrencyAttribute.Required = types.BoolPointerValue(attributesItem.CurrencyAttribute.Required)
				attributes1.CurrencyAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount6, settingsFlagItem6 := range attributesItem.CurrencyAttribute.SettingsFlag {
					var settingsFlag13 tfTypes.SettingFlag
					settingsFlag13.Enabled = types.BoolPointerValue(settingsFlagItem6.Enabled)
					settingsFlag13.Name = types.StringPointerValue(settingsFlagItem6.Name)
					if settingsFlagCount6+1 > len(attributes1.CurrencyAttribute.SettingsFlag) {
						attributes1.CurrencyAttribute.SettingsFlag = append(attributes1.CurrencyAttribute.SettingsFlag, settingsFlag13)
					} else {
						attributes1.CurrencyAttribute.SettingsFlag[settingsFlagCount6].Enabled = settingsFlag13.Enabled
						attributes1.CurrencyAttribute.SettingsFlag[settingsFlagCount6].Name = settingsFlag13.Name
					}
				}
				attributes1.CurrencyAttribute.ShowInTable = types.BoolPointerValue(attributesItem.CurrencyAttribute.ShowInTable)
				attributes1.CurrencyAttribute.Sortable = types.BoolPointerValue(attributesItem.CurrencyAttribute.Sortable)
				attributes1.CurrencyAttribute.Type = types.StringValue(string(attributesItem.CurrencyAttribute.Type))
				attributes1.CurrencyAttribute.ValueFormatter = types.StringPointerValue(attributesItem.CurrencyAttribute.ValueFormatter)
			}
			if attributesItem.DateAttribute != nil {
				attributes1.DateAttribute = &tfTypes.DateAttribute{}
				attributes1.DateAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.DateAttribute.Purpose {
					attributes1.DateAttribute.Purpose = append(attributes1.DateAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.DateAttribute.Constraints == nil {
					attributes1.DateAttribute.Constraints = nil
				} else {
					attributes1.DateAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.DateAttribute.DefaultValue == nil {
					attributes1.DateAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult7, _ := json.Marshal(attributesItem.DateAttribute.DefaultValue)
					attributes1.DateAttribute.DefaultValue = types.StringValue(string(defaultValueResult7))
				}
				attributes1.DateAttribute.Deprecated = types.BoolPointerValue(attributesItem.DateAttribute.Deprecated)
				attributes1.DateAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.DateAttribute.EntityBuilderDisableEdit)
				attributes1.DateAttribute.FeatureFlag = types.StringPointerValue(attributesItem.DateAttribute.FeatureFlag)
				attributes1.DateAttribute.Group = types.StringPointerValue(attributesItem.DateAttribute.Group)
				attributes1.DateAttribute.Hidden = types.BoolPointerValue(attributesItem.DateAttribute.Hidden)
				attributes1.DateAttribute.HideLabel = types.BoolPointerValue(attributesItem.DateAttribute.HideLabel)
				attributes1.DateAttribute.Icon = types.StringPointerValue(attributesItem.DateAttribute.Icon)
				attributes1.DateAttribute.ID = types.StringPointerValue(attributesItem.DateAttribute.ID)
				if attributesItem.DateAttribute.InfoHelpers == nil {
					attributes1.DateAttribute.InfoHelpers = nil
				} else {
					attributes1.DateAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.DateAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.DateAttribute.InfoHelpers.HintCustomComponent)
					attributes1.DateAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.DateAttribute.InfoHelpers.HintText)
					attributes1.DateAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.DateAttribute.InfoHelpers.HintTextKey)
					attributes1.DateAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.DateAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.DateAttribute.Label = types.StringValue(attributesItem.DateAttribute.Label)
				attributes1.DateAttribute.Layout = types.StringPointerValue(attributesItem.DateAttribute.Layout)
				attributes1.DateAttribute.Name = types.StringValue(attributesItem.DateAttribute.Name)
				attributes1.DateAttribute.Order = types.Int64PointerValue(attributesItem.DateAttribute.Order)
				attributes1.DateAttribute.Placeholder = types.StringPointerValue(attributesItem.DateAttribute.Placeholder)
				attributes1.DateAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.DateAttribute.PreviewValueFormatter)
				attributes1.DateAttribute.Protected = types.BoolPointerValue(attributesItem.DateAttribute.Protected)
				attributes1.DateAttribute.Readonly = types.BoolPointerValue(attributesItem.DateAttribute.Readonly)
				attributes1.DateAttribute.RenderCondition = types.StringPointerValue(attributesItem.DateAttribute.RenderCondition)
				attributes1.DateAttribute.Required = types.BoolPointerValue(attributesItem.DateAttribute.Required)
				attributes1.DateAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount7, settingsFlagItem7 := range attributesItem.DateAttribute.SettingsFlag {
					var settingsFlag15 tfTypes.SettingFlag
					settingsFlag15.Enabled = types.BoolPointerValue(settingsFlagItem7.Enabled)
					settingsFlag15.Name = types.StringPointerValue(settingsFlagItem7.Name)
					if settingsFlagCount7+1 > len(attributes1.DateAttribute.SettingsFlag) {
						attributes1.DateAttribute.SettingsFlag = append(attributes1.DateAttribute.SettingsFlag, settingsFlag15)
					} else {
						attributes1.DateAttribute.SettingsFlag[settingsFlagCount7].Enabled = settingsFlag15.Enabled
						attributes1.DateAttribute.SettingsFlag[settingsFlagCount7].Name = settingsFlag15.Name
					}
				}
				attributes1.DateAttribute.ShowInTable = types.BoolPointerValue(attributesItem.DateAttribute.ShowInTable)
				attributes1.DateAttribute.Sortable = types.BoolPointerValue(attributesItem.DateAttribute.Sortable)
				if attributesItem.DateAttribute.Type != nil {
					attributes1.DateAttribute.Type = types.StringValue(string(*attributesItem.DateAttribute.Type))
				} else {
					attributes1.DateAttribute.Type = types.StringNull()
				}
				attributes1.DateAttribute.ValueFormatter = types.StringPointerValue(attributesItem.DateAttribute.ValueFormatter)
			}
			if attributesItem.FileAttribute != nil {
				attributes1.FileAttribute = &tfTypes.FileAttribute{}
				attributes1.FileAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.FileAttribute.Purpose {
					attributes1.FileAttribute.Purpose = append(attributes1.FileAttribute.Purpose, types.StringValue(v))
				}
				attributes1.FileAttribute.AllowedExtensions = []types.String{}
				for _, v := range attributesItem.FileAttribute.AllowedExtensions {
					attributes1.FileAttribute.AllowedExtensions = append(attributes1.FileAttribute.AllowedExtensions, types.StringValue(v))
				}
				if attributesItem.FileAttribute.Constraints == nil {
					attributes1.FileAttribute.Constraints = nil
				} else {
					attributes1.FileAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.FileAttribute.DefaultAccessControl != nil {
					attributes1.FileAttribute.DefaultAccessControl = types.StringValue(string(*attributesItem.FileAttribute.DefaultAccessControl))
				} else {
					attributes1.FileAttribute.DefaultAccessControl = types.StringNull()
				}
				if attributesItem.FileAttribute.DefaultValue == nil {
					attributes1.FileAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult8, _ := json.Marshal(attributesItem.FileAttribute.DefaultValue)
					attributes1.FileAttribute.DefaultValue = types.StringValue(string(defaultValueResult8))
				}
				attributes1.FileAttribute.Deprecated = types.BoolPointerValue(attributesItem.FileAttribute.Deprecated)
				attributes1.FileAttribute.DisplayImagesLandscaped = types.BoolPointerValue(attributesItem.FileAttribute.DisplayImagesLandscaped)
				attributes1.FileAttribute.EnableDescription = types.BoolPointerValue(attributesItem.FileAttribute.EnableDescription)
				attributes1.FileAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.FileAttribute.EntityBuilderDisableEdit)
				attributes1.FileAttribute.FeatureFlag = types.StringPointerValue(attributesItem.FileAttribute.FeatureFlag)
				attributes1.FileAttribute.Group = types.StringPointerValue(attributesItem.FileAttribute.Group)
				attributes1.FileAttribute.Hidden = types.BoolPointerValue(attributesItem.FileAttribute.Hidden)
				attributes1.FileAttribute.HideLabel = types.BoolPointerValue(attributesItem.FileAttribute.HideLabel)
				attributes1.FileAttribute.Icon = types.StringPointerValue(attributesItem.FileAttribute.Icon)
				attributes1.FileAttribute.ID = types.StringPointerValue(attributesItem.FileAttribute.ID)
				if attributesItem.FileAttribute.InfoHelpers == nil {
					attributes1.FileAttribute.InfoHelpers = nil
				} else {
					attributes1.FileAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.FileAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.FileAttribute.InfoHelpers.HintCustomComponent)
					attributes1.FileAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.FileAttribute.InfoHelpers.HintText)
					attributes1.FileAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.FileAttribute.InfoHelpers.HintTextKey)
					attributes1.FileAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.FileAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.FileAttribute.Label = types.StringValue(attributesItem.FileAttribute.Label)
				attributes1.FileAttribute.Layout = types.StringPointerValue(attributesItem.FileAttribute.Layout)
				attributes1.FileAttribute.Multiple = types.BoolPointerValue(attributesItem.FileAttribute.Multiple)
				attributes1.FileAttribute.Name = types.StringValue(attributesItem.FileAttribute.Name)
				attributes1.FileAttribute.Order = types.Int64PointerValue(attributesItem.FileAttribute.Order)
				attributes1.FileAttribute.Placeholder = types.StringPointerValue(attributesItem.FileAttribute.Placeholder)
				attributes1.FileAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.FileAttribute.PreviewValueFormatter)
				attributes1.FileAttribute.Protected = types.BoolPointerValue(attributesItem.FileAttribute.Protected)
				attributes1.FileAttribute.Readonly = types.BoolPointerValue(attributesItem.FileAttribute.Readonly)
				attributes1.FileAttribute.RenderCondition = types.StringPointerValue(attributesItem.FileAttribute.RenderCondition)
				attributes1.FileAttribute.Required = types.BoolPointerValue(attributesItem.FileAttribute.Required)
				attributes1.FileAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount8, settingsFlagItem8 := range attributesItem.FileAttribute.SettingsFlag {
					var settingsFlag17 tfTypes.SettingFlag
					settingsFlag17.Enabled = types.BoolPointerValue(settingsFlagItem8.Enabled)
					settingsFlag17.Name = types.StringPointerValue(settingsFlagItem8.Name)
					if settingsFlagCount8+1 > len(attributes1.FileAttribute.SettingsFlag) {
						attributes1.FileAttribute.SettingsFlag = append(attributes1.FileAttribute.SettingsFlag, settingsFlag17)
					} else {
						attributes1.FileAttribute.SettingsFlag[settingsFlagCount8].Enabled = settingsFlag17.Enabled
						attributes1.FileAttribute.SettingsFlag[settingsFlagCount8].Name = settingsFlag17.Name
					}
				}
				attributes1.FileAttribute.ShowInTable = types.BoolPointerValue(attributesItem.FileAttribute.ShowInTable)
				attributes1.FileAttribute.Sortable = types.BoolPointerValue(attributesItem.FileAttribute.Sortable)
				attributes1.FileAttribute.Type = types.StringValue(string(attributesItem.FileAttribute.Type))
				attributes1.FileAttribute.ValueFormatter = types.StringPointerValue(attributesItem.FileAttribute.ValueFormatter)
			}
			if attributesItem.InternalAttribute != nil {
				attributes1.InternalAttribute = &tfTypes.InternalAttribute{}
				attributes1.InternalAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.InternalAttribute.Purpose {
					attributes1.InternalAttribute.Purpose = append(attributes1.InternalAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.InternalAttribute.Constraints == nil {
					attributes1.InternalAttribute.Constraints = nil
				} else {
					attributes1.InternalAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.InternalAttribute.DefaultValue == nil {
					attributes1.InternalAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult9, _ := json.Marshal(attributesItem.InternalAttribute.DefaultValue)
					attributes1.InternalAttribute.DefaultValue = types.StringValue(string(defaultValueResult9))
				}
				attributes1.InternalAttribute.Deprecated = types.BoolPointerValue(attributesItem.InternalAttribute.Deprecated)
				attributes1.InternalAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.InternalAttribute.EntityBuilderDisableEdit)
				attributes1.InternalAttribute.FeatureFlag = types.StringPointerValue(attributesItem.InternalAttribute.FeatureFlag)
				attributes1.InternalAttribute.Group = types.StringPointerValue(attributesItem.InternalAttribute.Group)
				attributes1.InternalAttribute.Hidden = types.BoolPointerValue(attributesItem.InternalAttribute.Hidden)
				attributes1.InternalAttribute.HideLabel = types.BoolPointerValue(attributesItem.InternalAttribute.HideLabel)
				attributes1.InternalAttribute.Icon = types.StringPointerValue(attributesItem.InternalAttribute.Icon)
				attributes1.InternalAttribute.ID = types.StringPointerValue(attributesItem.InternalAttribute.ID)
				if attributesItem.InternalAttribute.InfoHelpers == nil {
					attributes1.InternalAttribute.InfoHelpers = nil
				} else {
					attributes1.InternalAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.InternalAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.InternalAttribute.InfoHelpers.HintCustomComponent)
					attributes1.InternalAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.InternalAttribute.InfoHelpers.HintText)
					attributes1.InternalAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.InternalAttribute.InfoHelpers.HintTextKey)
					attributes1.InternalAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.InternalAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.InternalAttribute.Label = types.StringValue(attributesItem.InternalAttribute.Label)
				attributes1.InternalAttribute.Layout = types.StringPointerValue(attributesItem.InternalAttribute.Layout)
				attributes1.InternalAttribute.Name = types.StringValue(attributesItem.InternalAttribute.Name)
				attributes1.InternalAttribute.Order = types.Int64PointerValue(attributesItem.InternalAttribute.Order)
				attributes1.InternalAttribute.Placeholder = types.StringPointerValue(attributesItem.InternalAttribute.Placeholder)
				attributes1.InternalAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.InternalAttribute.PreviewValueFormatter)
				attributes1.InternalAttribute.Protected = types.BoolPointerValue(attributesItem.InternalAttribute.Protected)
				attributes1.InternalAttribute.Readonly = types.BoolPointerValue(attributesItem.InternalAttribute.Readonly)
				attributes1.InternalAttribute.RenderCondition = types.StringPointerValue(attributesItem.InternalAttribute.RenderCondition)
				attributes1.InternalAttribute.Required = types.BoolPointerValue(attributesItem.InternalAttribute.Required)
				attributes1.InternalAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount9, settingsFlagItem9 := range attributesItem.InternalAttribute.SettingsFlag {
					var settingsFlag19 tfTypes.SettingFlag
					settingsFlag19.Enabled = types.BoolPointerValue(settingsFlagItem9.Enabled)
					settingsFlag19.Name = types.StringPointerValue(settingsFlagItem9.Name)
					if settingsFlagCount9+1 > len(attributes1.InternalAttribute.SettingsFlag) {
						attributes1.InternalAttribute.SettingsFlag = append(attributes1.InternalAttribute.SettingsFlag, settingsFlag19)
					} else {
						attributes1.InternalAttribute.SettingsFlag[settingsFlagCount9].Enabled = settingsFlag19.Enabled
						attributes1.InternalAttribute.SettingsFlag[settingsFlagCount9].Name = settingsFlag19.Name
					}
				}
				attributes1.InternalAttribute.ShowInTable = types.BoolPointerValue(attributesItem.InternalAttribute.ShowInTable)
				attributes1.InternalAttribute.Sortable = types.BoolPointerValue(attributesItem.InternalAttribute.Sortable)
				if attributesItem.InternalAttribute.Type != nil {
					attributes1.InternalAttribute.Type = types.StringValue(string(*attributesItem.InternalAttribute.Type))
				} else {
					attributes1.InternalAttribute.Type = types.StringNull()
				}
				attributes1.InternalAttribute.ValueFormatter = types.StringPointerValue(attributesItem.InternalAttribute.ValueFormatter)
			}
			if attributesItem.InternalUserAttribute != nil {
				attributes1.InternalUserAttribute = &tfTypes.InternalUserAttribute{}
				attributes1.InternalUserAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.InternalUserAttribute.Purpose {
					attributes1.InternalUserAttribute.Purpose = append(attributes1.InternalUserAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.InternalUserAttribute.Constraints == nil {
					attributes1.InternalUserAttribute.Constraints = nil
				} else {
					attributes1.InternalUserAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.InternalUserAttribute.DefaultValue == nil {
					attributes1.InternalUserAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult10, _ := json.Marshal(attributesItem.InternalUserAttribute.DefaultValue)
					attributes1.InternalUserAttribute.DefaultValue = types.StringValue(string(defaultValueResult10))
				}
				attributes1.InternalUserAttribute.Deprecated = types.BoolPointerValue(attributesItem.InternalUserAttribute.Deprecated)
				attributes1.InternalUserAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.InternalUserAttribute.EntityBuilderDisableEdit)
				attributes1.InternalUserAttribute.FeatureFlag = types.StringPointerValue(attributesItem.InternalUserAttribute.FeatureFlag)
				attributes1.InternalUserAttribute.Group = types.StringPointerValue(attributesItem.InternalUserAttribute.Group)
				attributes1.InternalUserAttribute.Hidden = types.BoolPointerValue(attributesItem.InternalUserAttribute.Hidden)
				attributes1.InternalUserAttribute.HideLabel = types.BoolPointerValue(attributesItem.InternalUserAttribute.HideLabel)
				attributes1.InternalUserAttribute.Icon = types.StringPointerValue(attributesItem.InternalUserAttribute.Icon)
				attributes1.InternalUserAttribute.ID = types.StringPointerValue(attributesItem.InternalUserAttribute.ID)
				if attributesItem.InternalUserAttribute.InfoHelpers == nil {
					attributes1.InternalUserAttribute.InfoHelpers = nil
				} else {
					attributes1.InternalUserAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.InternalUserAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.InternalUserAttribute.InfoHelpers.HintCustomComponent)
					attributes1.InternalUserAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.InternalUserAttribute.InfoHelpers.HintText)
					attributes1.InternalUserAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.InternalUserAttribute.InfoHelpers.HintTextKey)
					attributes1.InternalUserAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.InternalUserAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.InternalUserAttribute.Label = types.StringValue(attributesItem.InternalUserAttribute.Label)
				attributes1.InternalUserAttribute.Layout = types.StringPointerValue(attributesItem.InternalUserAttribute.Layout)
				attributes1.InternalUserAttribute.Name = types.StringValue(attributesItem.InternalUserAttribute.Name)
				attributes1.InternalUserAttribute.Order = types.Int64PointerValue(attributesItem.InternalUserAttribute.Order)
				attributes1.InternalUserAttribute.Placeholder = types.StringPointerValue(attributesItem.InternalUserAttribute.Placeholder)
				attributes1.InternalUserAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.InternalUserAttribute.PreviewValueFormatter)
				attributes1.InternalUserAttribute.Protected = types.BoolPointerValue(attributesItem.InternalUserAttribute.Protected)
				attributes1.InternalUserAttribute.Readonly = types.BoolPointerValue(attributesItem.InternalUserAttribute.Readonly)
				attributes1.InternalUserAttribute.RenderCondition = types.StringPointerValue(attributesItem.InternalUserAttribute.RenderCondition)
				attributes1.InternalUserAttribute.Required = types.BoolPointerValue(attributesItem.InternalUserAttribute.Required)
				attributes1.InternalUserAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount10, settingsFlagItem10 := range attributesItem.InternalUserAttribute.SettingsFlag {
					var settingsFlag21 tfTypes.SettingFlag
					settingsFlag21.Enabled = types.BoolPointerValue(settingsFlagItem10.Enabled)
					settingsFlag21.Name = types.StringPointerValue(settingsFlagItem10.Name)
					if settingsFlagCount10+1 > len(attributes1.InternalUserAttribute.SettingsFlag) {
						attributes1.InternalUserAttribute.SettingsFlag = append(attributes1.InternalUserAttribute.SettingsFlag, settingsFlag21)
					} else {
						attributes1.InternalUserAttribute.SettingsFlag[settingsFlagCount10].Enabled = settingsFlag21.Enabled
						attributes1.InternalUserAttribute.SettingsFlag[settingsFlagCount10].Name = settingsFlag21.Name
					}
				}
				attributes1.InternalUserAttribute.ShowInTable = types.BoolPointerValue(attributesItem.InternalUserAttribute.ShowInTable)
				attributes1.InternalUserAttribute.Sortable = types.BoolPointerValue(attributesItem.InternalUserAttribute.Sortable)
				if attributesItem.InternalUserAttribute.Type != nil {
					attributes1.InternalUserAttribute.Type = types.StringValue(string(*attributesItem.InternalUserAttribute.Type))
				} else {
					attributes1.InternalUserAttribute.Type = types.StringNull()
				}
				attributes1.InternalUserAttribute.ValueFormatter = types.StringPointerValue(attributesItem.InternalUserAttribute.ValueFormatter)
			}
			if attributesItem.InvitationEmailAttribute != nil {
				attributes1.InvitationEmailAttribute = &tfTypes.InvitationEmailAttribute{}
				attributes1.InvitationEmailAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.InvitationEmailAttribute.Purpose {
					attributes1.InvitationEmailAttribute.Purpose = append(attributes1.InvitationEmailAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.InvitationEmailAttribute.Constraints == nil {
					attributes1.InvitationEmailAttribute.Constraints = nil
				} else {
					attributes1.InvitationEmailAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.InvitationEmailAttribute.DefaultValue == nil {
					attributes1.InvitationEmailAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult11, _ := json.Marshal(attributesItem.InvitationEmailAttribute.DefaultValue)
					attributes1.InvitationEmailAttribute.DefaultValue = types.StringValue(string(defaultValueResult11))
				}
				attributes1.InvitationEmailAttribute.Deprecated = types.BoolPointerValue(attributesItem.InvitationEmailAttribute.Deprecated)
				attributes1.InvitationEmailAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.InvitationEmailAttribute.EntityBuilderDisableEdit)
				attributes1.InvitationEmailAttribute.FeatureFlag = types.StringPointerValue(attributesItem.InvitationEmailAttribute.FeatureFlag)
				attributes1.InvitationEmailAttribute.Group = types.StringPointerValue(attributesItem.InvitationEmailAttribute.Group)
				attributes1.InvitationEmailAttribute.Hidden = types.BoolPointerValue(attributesItem.InvitationEmailAttribute.Hidden)
				attributes1.InvitationEmailAttribute.HideLabel = types.BoolPointerValue(attributesItem.InvitationEmailAttribute.HideLabel)
				attributes1.InvitationEmailAttribute.Icon = types.StringPointerValue(attributesItem.InvitationEmailAttribute.Icon)
				attributes1.InvitationEmailAttribute.ID = types.StringPointerValue(attributesItem.InvitationEmailAttribute.ID)
				if attributesItem.InvitationEmailAttribute.InfoHelpers == nil {
					attributes1.InvitationEmailAttribute.InfoHelpers = nil
				} else {
					attributes1.InvitationEmailAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.InvitationEmailAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.InvitationEmailAttribute.InfoHelpers.HintCustomComponent)
					attributes1.InvitationEmailAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.InvitationEmailAttribute.InfoHelpers.HintText)
					attributes1.InvitationEmailAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.InvitationEmailAttribute.InfoHelpers.HintTextKey)
					attributes1.InvitationEmailAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.InvitationEmailAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.InvitationEmailAttribute.Label = types.StringValue(attributesItem.InvitationEmailAttribute.Label)
				attributes1.InvitationEmailAttribute.Layout = types.StringPointerValue(attributesItem.InvitationEmailAttribute.Layout)
				attributes1.InvitationEmailAttribute.Name = types.StringValue(attributesItem.InvitationEmailAttribute.Name)
				attributes1.InvitationEmailAttribute.Order = types.Int64PointerValue(attributesItem.InvitationEmailAttribute.Order)
				attributes1.InvitationEmailAttribute.Placeholder = types.StringPointerValue(attributesItem.InvitationEmailAttribute.Placeholder)
				attributes1.InvitationEmailAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.InvitationEmailAttribute.PreviewValueFormatter)
				attributes1.InvitationEmailAttribute.Protected = types.BoolPointerValue(attributesItem.InvitationEmailAttribute.Protected)
				attributes1.InvitationEmailAttribute.Readonly = types.BoolPointerValue(attributesItem.InvitationEmailAttribute.Readonly)
				attributes1.InvitationEmailAttribute.RenderCondition = types.StringPointerValue(attributesItem.InvitationEmailAttribute.RenderCondition)
				attributes1.InvitationEmailAttribute.Required = types.BoolPointerValue(attributesItem.InvitationEmailAttribute.Required)
				attributes1.InvitationEmailAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount11, settingsFlagItem11 := range attributesItem.InvitationEmailAttribute.SettingsFlag {
					var settingsFlag23 tfTypes.SettingFlag
					settingsFlag23.Enabled = types.BoolPointerValue(settingsFlagItem11.Enabled)
					settingsFlag23.Name = types.StringPointerValue(settingsFlagItem11.Name)
					if settingsFlagCount11+1 > len(attributes1.InvitationEmailAttribute.SettingsFlag) {
						attributes1.InvitationEmailAttribute.SettingsFlag = append(attributes1.InvitationEmailAttribute.SettingsFlag, settingsFlag23)
					} else {
						attributes1.InvitationEmailAttribute.SettingsFlag[settingsFlagCount11].Enabled = settingsFlag23.Enabled
						attributes1.InvitationEmailAttribute.SettingsFlag[settingsFlagCount11].Name = settingsFlag23.Name
					}
				}
				attributes1.InvitationEmailAttribute.ShowInTable = types.BoolPointerValue(attributesItem.InvitationEmailAttribute.ShowInTable)
				attributes1.InvitationEmailAttribute.Sortable = types.BoolPointerValue(attributesItem.InvitationEmailAttribute.Sortable)
				if attributesItem.InvitationEmailAttribute.Type != nil {
					attributes1.InvitationEmailAttribute.Type = types.StringValue(string(*attributesItem.InvitationEmailAttribute.Type))
				} else {
					attributes1.InvitationEmailAttribute.Type = types.StringNull()
				}
				attributes1.InvitationEmailAttribute.ValueFormatter = types.StringPointerValue(attributesItem.InvitationEmailAttribute.ValueFormatter)
			}
			if attributesItem.LinkAttribute != nil {
				attributes1.LinkAttribute = &tfTypes.LinkAttribute{}
				attributes1.LinkAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.LinkAttribute.Purpose {
					attributes1.LinkAttribute.Purpose = append(attributes1.LinkAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.LinkAttribute.Constraints == nil {
					attributes1.LinkAttribute.Constraints = nil
				} else {
					attributes1.LinkAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.LinkAttribute.DefaultValue == nil {
					attributes1.LinkAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult12, _ := json.Marshal(attributesItem.LinkAttribute.DefaultValue)
					attributes1.LinkAttribute.DefaultValue = types.StringValue(string(defaultValueResult12))
				}
				attributes1.LinkAttribute.Deprecated = types.BoolPointerValue(attributesItem.LinkAttribute.Deprecated)
				attributes1.LinkAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.LinkAttribute.EntityBuilderDisableEdit)
				attributes1.LinkAttribute.FeatureFlag = types.StringPointerValue(attributesItem.LinkAttribute.FeatureFlag)
				attributes1.LinkAttribute.Group = types.StringPointerValue(attributesItem.LinkAttribute.Group)
				attributes1.LinkAttribute.Hidden = types.BoolPointerValue(attributesItem.LinkAttribute.Hidden)
				attributes1.LinkAttribute.HideLabel = types.BoolPointerValue(attributesItem.LinkAttribute.HideLabel)
				attributes1.LinkAttribute.Icon = types.StringPointerValue(attributesItem.LinkAttribute.Icon)
				attributes1.LinkAttribute.ID = types.StringPointerValue(attributesItem.LinkAttribute.ID)
				if attributesItem.LinkAttribute.InfoHelpers == nil {
					attributes1.LinkAttribute.InfoHelpers = nil
				} else {
					attributes1.LinkAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.LinkAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.LinkAttribute.InfoHelpers.HintCustomComponent)
					attributes1.LinkAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.LinkAttribute.InfoHelpers.HintText)
					attributes1.LinkAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.LinkAttribute.InfoHelpers.HintTextKey)
					attributes1.LinkAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.LinkAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.LinkAttribute.Label = types.StringValue(attributesItem.LinkAttribute.Label)
				attributes1.LinkAttribute.Layout = types.StringPointerValue(attributesItem.LinkAttribute.Layout)
				attributes1.LinkAttribute.Name = types.StringValue(attributesItem.LinkAttribute.Name)
				attributes1.LinkAttribute.Order = types.Int64PointerValue(attributesItem.LinkAttribute.Order)
				attributes1.LinkAttribute.Placeholder = types.StringPointerValue(attributesItem.LinkAttribute.Placeholder)
				attributes1.LinkAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.LinkAttribute.PreviewValueFormatter)
				attributes1.LinkAttribute.Protected = types.BoolPointerValue(attributesItem.LinkAttribute.Protected)
				attributes1.LinkAttribute.Readonly = types.BoolPointerValue(attributesItem.LinkAttribute.Readonly)
				attributes1.LinkAttribute.RenderCondition = types.StringPointerValue(attributesItem.LinkAttribute.RenderCondition)
				attributes1.LinkAttribute.Required = types.BoolPointerValue(attributesItem.LinkAttribute.Required)
				attributes1.LinkAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount12, settingsFlagItem12 := range attributesItem.LinkAttribute.SettingsFlag {
					var settingsFlag25 tfTypes.SettingFlag
					settingsFlag25.Enabled = types.BoolPointerValue(settingsFlagItem12.Enabled)
					settingsFlag25.Name = types.StringPointerValue(settingsFlagItem12.Name)
					if settingsFlagCount12+1 > len(attributes1.LinkAttribute.SettingsFlag) {
						attributes1.LinkAttribute.SettingsFlag = append(attributes1.LinkAttribute.SettingsFlag, settingsFlag25)
					} else {
						attributes1.LinkAttribute.SettingsFlag[settingsFlagCount12].Enabled = settingsFlag25.Enabled
						attributes1.LinkAttribute.SettingsFlag[settingsFlagCount12].Name = settingsFlag25.Name
					}
				}
				attributes1.LinkAttribute.ShowInTable = types.BoolPointerValue(attributesItem.LinkAttribute.ShowInTable)
				attributes1.LinkAttribute.Sortable = types.BoolPointerValue(attributesItem.LinkAttribute.Sortable)
				if attributesItem.LinkAttribute.Type != nil {
					attributes1.LinkAttribute.Type = types.StringValue(string(*attributesItem.LinkAttribute.Type))
				} else {
					attributes1.LinkAttribute.Type = types.StringNull()
				}
				attributes1.LinkAttribute.ValueFormatter = types.StringPointerValue(attributesItem.LinkAttribute.ValueFormatter)
			}
			if attributesItem.MultiSelectAttribute != nil {
				attributes1.MultiSelectAttribute = &tfTypes.MultiSelectAttribute{}
				attributes1.MultiSelectAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.MultiSelectAttribute.Purpose {
					attributes1.MultiSelectAttribute.Purpose = append(attributes1.MultiSelectAttribute.Purpose, types.StringValue(v))
				}
				attributes1.MultiSelectAttribute.AllowAny = types.BoolPointerValue(attributesItem.MultiSelectAttribute.AllowAny)
				attributes1.MultiSelectAttribute.AllowExtraOptions = types.BoolPointerValue(attributesItem.MultiSelectAttribute.AllowExtraOptions)
				if attributesItem.MultiSelectAttribute.Constraints == nil {
					attributes1.MultiSelectAttribute.Constraints = nil
				} else {
					attributes1.MultiSelectAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.MultiSelectAttribute.DefaultValue == nil {
					attributes1.MultiSelectAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult13, _ := json.Marshal(attributesItem.MultiSelectAttribute.DefaultValue)
					attributes1.MultiSelectAttribute.DefaultValue = types.StringValue(string(defaultValueResult13))
				}
				attributes1.MultiSelectAttribute.Deprecated = types.BoolPointerValue(attributesItem.MultiSelectAttribute.Deprecated)
				attributes1.MultiSelectAttribute.DisableCaseSensitive = types.BoolPointerValue(attributesItem.MultiSelectAttribute.DisableCaseSensitive)
				attributes1.MultiSelectAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.MultiSelectAttribute.EntityBuilderDisableEdit)
				attributes1.MultiSelectAttribute.FeatureFlag = types.StringPointerValue(attributesItem.MultiSelectAttribute.FeatureFlag)
				attributes1.MultiSelectAttribute.Group = types.StringPointerValue(attributesItem.MultiSelectAttribute.Group)
				attributes1.MultiSelectAttribute.Hidden = types.BoolPointerValue(attributesItem.MultiSelectAttribute.Hidden)
				attributes1.MultiSelectAttribute.HideLabel = types.BoolPointerValue(attributesItem.MultiSelectAttribute.HideLabel)
				attributes1.MultiSelectAttribute.Icon = types.StringPointerValue(attributesItem.MultiSelectAttribute.Icon)
				attributes1.MultiSelectAttribute.ID = types.StringPointerValue(attributesItem.MultiSelectAttribute.ID)
				if attributesItem.MultiSelectAttribute.InfoHelpers == nil {
					attributes1.MultiSelectAttribute.InfoHelpers = nil
				} else {
					attributes1.MultiSelectAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.MultiSelectAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.MultiSelectAttribute.InfoHelpers.HintCustomComponent)
					attributes1.MultiSelectAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.MultiSelectAttribute.InfoHelpers.HintText)
					attributes1.MultiSelectAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.MultiSelectAttribute.InfoHelpers.HintTextKey)
					attributes1.MultiSelectAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.MultiSelectAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.MultiSelectAttribute.Label = types.StringValue(attributesItem.MultiSelectAttribute.Label)
				attributes1.MultiSelectAttribute.Layout = types.StringPointerValue(attributesItem.MultiSelectAttribute.Layout)
				attributes1.MultiSelectAttribute.Name = types.StringValue(attributesItem.MultiSelectAttribute.Name)
				attributes1.MultiSelectAttribute.Options = []tfTypes.OptionsObj{}
				for optionsVarCount, optionsVarItem := range attributesItem.MultiSelectAttribute.Options {
					var optionsVar1 tfTypes.OptionsObj
					if optionsVarItem.Str != nil {
						optionsVar1.Str = types.StringPointerValue(optionsVarItem.Str)
					}
					if optionsVarItem.Two != nil {
						optionsVar1.Two = &tfTypes.Two{}
						optionsVar1.Two.Title = types.StringPointerValue(optionsVarItem.Two.Title)
						optionsVar1.Two.Value = types.StringValue(optionsVarItem.Two.Value)
					}
					if optionsVarCount+1 > len(attributes1.MultiSelectAttribute.Options) {
						attributes1.MultiSelectAttribute.Options = append(attributes1.MultiSelectAttribute.Options, optionsVar1)
					} else {
						attributes1.MultiSelectAttribute.Options[optionsVarCount].Str = optionsVar1.Str
						attributes1.MultiSelectAttribute.Options[optionsVarCount].Two = optionsVar1.Two
					}
				}
				attributes1.MultiSelectAttribute.Order = types.Int64PointerValue(attributesItem.MultiSelectAttribute.Order)
				attributes1.MultiSelectAttribute.Placeholder = types.StringPointerValue(attributesItem.MultiSelectAttribute.Placeholder)
				attributes1.MultiSelectAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.MultiSelectAttribute.PreviewValueFormatter)
				attributes1.MultiSelectAttribute.Protected = types.BoolPointerValue(attributesItem.MultiSelectAttribute.Protected)
				attributes1.MultiSelectAttribute.Readonly = types.BoolPointerValue(attributesItem.MultiSelectAttribute.Readonly)
				attributes1.MultiSelectAttribute.RenderCondition = types.StringPointerValue(attributesItem.MultiSelectAttribute.RenderCondition)
				attributes1.MultiSelectAttribute.Required = types.BoolPointerValue(attributesItem.MultiSelectAttribute.Required)
				attributes1.MultiSelectAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount13, settingsFlagItem13 := range attributesItem.MultiSelectAttribute.SettingsFlag {
					var settingsFlag27 tfTypes.SettingFlag
					settingsFlag27.Enabled = types.BoolPointerValue(settingsFlagItem13.Enabled)
					settingsFlag27.Name = types.StringPointerValue(settingsFlagItem13.Name)
					if settingsFlagCount13+1 > len(attributes1.MultiSelectAttribute.SettingsFlag) {
						attributes1.MultiSelectAttribute.SettingsFlag = append(attributes1.MultiSelectAttribute.SettingsFlag, settingsFlag27)
					} else {
						attributes1.MultiSelectAttribute.SettingsFlag[settingsFlagCount13].Enabled = settingsFlag27.Enabled
						attributes1.MultiSelectAttribute.SettingsFlag[settingsFlagCount13].Name = settingsFlag27.Name
					}
				}
				attributes1.MultiSelectAttribute.ShowInTable = types.BoolPointerValue(attributesItem.MultiSelectAttribute.ShowInTable)
				attributes1.MultiSelectAttribute.Sortable = types.BoolPointerValue(attributesItem.MultiSelectAttribute.Sortable)
				if attributesItem.MultiSelectAttribute.Type != nil {
					attributes1.MultiSelectAttribute.Type = types.StringValue(string(*attributesItem.MultiSelectAttribute.Type))
				} else {
					attributes1.MultiSelectAttribute.Type = types.StringNull()
				}
				attributes1.MultiSelectAttribute.ValueFormatter = types.StringPointerValue(attributesItem.MultiSelectAttribute.ValueFormatter)
			}
			if attributesItem.NumberAttribute != nil {
				attributes1.NumberAttribute = &tfTypes.NumberAttribute{}
				attributes1.NumberAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.NumberAttribute.Purpose {
					attributes1.NumberAttribute.Purpose = append(attributes1.NumberAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.NumberAttribute.Constraints == nil {
					attributes1.NumberAttribute.Constraints = nil
				} else {
					attributes1.NumberAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.NumberAttribute.DefaultValue == nil {
					attributes1.NumberAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult14, _ := json.Marshal(attributesItem.NumberAttribute.DefaultValue)
					attributes1.NumberAttribute.DefaultValue = types.StringValue(string(defaultValueResult14))
				}
				attributes1.NumberAttribute.Deprecated = types.BoolPointerValue(attributesItem.NumberAttribute.Deprecated)
				attributes1.NumberAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.NumberAttribute.EntityBuilderDisableEdit)
				attributes1.NumberAttribute.FeatureFlag = types.StringPointerValue(attributesItem.NumberAttribute.FeatureFlag)
				attributes1.NumberAttribute.Format = types.StringPointerValue(attributesItem.NumberAttribute.Format)
				attributes1.NumberAttribute.Group = types.StringPointerValue(attributesItem.NumberAttribute.Group)
				attributes1.NumberAttribute.Hidden = types.BoolPointerValue(attributesItem.NumberAttribute.Hidden)
				attributes1.NumberAttribute.HideLabel = types.BoolPointerValue(attributesItem.NumberAttribute.HideLabel)
				attributes1.NumberAttribute.Icon = types.StringPointerValue(attributesItem.NumberAttribute.Icon)
				attributes1.NumberAttribute.ID = types.StringPointerValue(attributesItem.NumberAttribute.ID)
				if attributesItem.NumberAttribute.InfoHelpers == nil {
					attributes1.NumberAttribute.InfoHelpers = nil
				} else {
					attributes1.NumberAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.NumberAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.NumberAttribute.InfoHelpers.HintCustomComponent)
					attributes1.NumberAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.NumberAttribute.InfoHelpers.HintText)
					attributes1.NumberAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.NumberAttribute.InfoHelpers.HintTextKey)
					attributes1.NumberAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.NumberAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.NumberAttribute.Label = types.StringValue(attributesItem.NumberAttribute.Label)
				attributes1.NumberAttribute.Layout = types.StringPointerValue(attributesItem.NumberAttribute.Layout)
				attributes1.NumberAttribute.Name = types.StringValue(attributesItem.NumberAttribute.Name)
				attributes1.NumberAttribute.Order = types.Int64PointerValue(attributesItem.NumberAttribute.Order)
				attributes1.NumberAttribute.Placeholder = types.StringPointerValue(attributesItem.NumberAttribute.Placeholder)
				attributes1.NumberAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.NumberAttribute.PreviewValueFormatter)
				attributes1.NumberAttribute.Protected = types.BoolPointerValue(attributesItem.NumberAttribute.Protected)
				attributes1.NumberAttribute.Readonly = types.BoolPointerValue(attributesItem.NumberAttribute.Readonly)
				attributes1.NumberAttribute.RenderCondition = types.StringPointerValue(attributesItem.NumberAttribute.RenderCondition)
				attributes1.NumberAttribute.Required = types.BoolPointerValue(attributesItem.NumberAttribute.Required)
				attributes1.NumberAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount14, settingsFlagItem14 := range attributesItem.NumberAttribute.SettingsFlag {
					var settingsFlag29 tfTypes.SettingFlag
					settingsFlag29.Enabled = types.BoolPointerValue(settingsFlagItem14.Enabled)
					settingsFlag29.Name = types.StringPointerValue(settingsFlagItem14.Name)
					if settingsFlagCount14+1 > len(attributes1.NumberAttribute.SettingsFlag) {
						attributes1.NumberAttribute.SettingsFlag = append(attributes1.NumberAttribute.SettingsFlag, settingsFlag29)
					} else {
						attributes1.NumberAttribute.SettingsFlag[settingsFlagCount14].Enabled = settingsFlag29.Enabled
						attributes1.NumberAttribute.SettingsFlag[settingsFlagCount14].Name = settingsFlag29.Name
					}
				}
				attributes1.NumberAttribute.ShowInTable = types.BoolPointerValue(attributesItem.NumberAttribute.ShowInTable)
				attributes1.NumberAttribute.ShowSeparator = types.BoolPointerValue(attributesItem.NumberAttribute.ShowSeparator)
				attributes1.NumberAttribute.Sortable = types.BoolPointerValue(attributesItem.NumberAttribute.Sortable)
				if attributesItem.NumberAttribute.Type != nil {
					attributes1.NumberAttribute.Type = types.StringValue(string(*attributesItem.NumberAttribute.Type))
				} else {
					attributes1.NumberAttribute.Type = types.StringNull()
				}
				attributes1.NumberAttribute.ValueFormatter = types.StringPointerValue(attributesItem.NumberAttribute.ValueFormatter)
			}
			if attributesItem.OrderedListAttribute != nil {
				attributes1.OrderedListAttribute = &tfTypes.OrderedListAttribute{}
				attributes1.OrderedListAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.OrderedListAttribute.Purpose {
					attributes1.OrderedListAttribute.Purpose = append(attributes1.OrderedListAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.OrderedListAttribute.Constraints == nil {
					attributes1.OrderedListAttribute.Constraints = nil
				} else {
					attributes1.OrderedListAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.OrderedListAttribute.DefaultValue == nil {
					attributes1.OrderedListAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult15, _ := json.Marshal(attributesItem.OrderedListAttribute.DefaultValue)
					attributes1.OrderedListAttribute.DefaultValue = types.StringValue(string(defaultValueResult15))
				}
				attributes1.OrderedListAttribute.Deprecated = types.BoolPointerValue(attributesItem.OrderedListAttribute.Deprecated)
				attributes1.OrderedListAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.OrderedListAttribute.EntityBuilderDisableEdit)
				attributes1.OrderedListAttribute.FeatureFlag = types.StringPointerValue(attributesItem.OrderedListAttribute.FeatureFlag)
				attributes1.OrderedListAttribute.Group = types.StringPointerValue(attributesItem.OrderedListAttribute.Group)
				attributes1.OrderedListAttribute.Hidden = types.BoolPointerValue(attributesItem.OrderedListAttribute.Hidden)
				attributes1.OrderedListAttribute.HideLabel = types.BoolPointerValue(attributesItem.OrderedListAttribute.HideLabel)
				attributes1.OrderedListAttribute.Icon = types.StringPointerValue(attributesItem.OrderedListAttribute.Icon)
				attributes1.OrderedListAttribute.ID = types.StringPointerValue(attributesItem.OrderedListAttribute.ID)
				if attributesItem.OrderedListAttribute.InfoHelpers == nil {
					attributes1.OrderedListAttribute.InfoHelpers = nil
				} else {
					attributes1.OrderedListAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.OrderedListAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.OrderedListAttribute.InfoHelpers.HintCustomComponent)
					attributes1.OrderedListAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.OrderedListAttribute.InfoHelpers.HintText)
					attributes1.OrderedListAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.OrderedListAttribute.InfoHelpers.HintTextKey)
					attributes1.OrderedListAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.OrderedListAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.OrderedListAttribute.Label = types.StringValue(attributesItem.OrderedListAttribute.Label)
				attributes1.OrderedListAttribute.Layout = types.StringPointerValue(attributesItem.OrderedListAttribute.Layout)
				attributes1.OrderedListAttribute.Name = types.StringValue(attributesItem.OrderedListAttribute.Name)
				attributes1.OrderedListAttribute.Order = types.Int64PointerValue(attributesItem.OrderedListAttribute.Order)
				attributes1.OrderedListAttribute.Placeholder = types.StringPointerValue(attributesItem.OrderedListAttribute.Placeholder)
				attributes1.OrderedListAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.OrderedListAttribute.PreviewValueFormatter)
				attributes1.OrderedListAttribute.Protected = types.BoolPointerValue(attributesItem.OrderedListAttribute.Protected)
				attributes1.OrderedListAttribute.Readonly = types.BoolPointerValue(attributesItem.OrderedListAttribute.Readonly)
				attributes1.OrderedListAttribute.RenderCondition = types.StringPointerValue(attributesItem.OrderedListAttribute.RenderCondition)
				attributes1.OrderedListAttribute.Required = types.BoolPointerValue(attributesItem.OrderedListAttribute.Required)
				attributes1.OrderedListAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount15, settingsFlagItem15 := range attributesItem.OrderedListAttribute.SettingsFlag {
					var settingsFlag31 tfTypes.SettingFlag
					settingsFlag31.Enabled = types.BoolPointerValue(settingsFlagItem15.Enabled)
					settingsFlag31.Name = types.StringPointerValue(settingsFlagItem15.Name)
					if settingsFlagCount15+1 > len(attributes1.OrderedListAttribute.SettingsFlag) {
						attributes1.OrderedListAttribute.SettingsFlag = append(attributes1.OrderedListAttribute.SettingsFlag, settingsFlag31)
					} else {
						attributes1.OrderedListAttribute.SettingsFlag[settingsFlagCount15].Enabled = settingsFlag31.Enabled
						attributes1.OrderedListAttribute.SettingsFlag[settingsFlagCount15].Name = settingsFlag31.Name
					}
				}
				attributes1.OrderedListAttribute.ShowInTable = types.BoolPointerValue(attributesItem.OrderedListAttribute.ShowInTable)
				attributes1.OrderedListAttribute.Sortable = types.BoolPointerValue(attributesItem.OrderedListAttribute.Sortable)
				if attributesItem.OrderedListAttribute.Type != nil {
					attributes1.OrderedListAttribute.Type = types.StringValue(string(*attributesItem.OrderedListAttribute.Type))
				} else {
					attributes1.OrderedListAttribute.Type = types.StringNull()
				}
				attributes1.OrderedListAttribute.ValueFormatter = types.StringPointerValue(attributesItem.OrderedListAttribute.ValueFormatter)
			}
			if attributesItem.PartnerOrganisationAttribute != nil {
				attributes1.PartnerOrganisationAttribute = &tfTypes.PartnerOrganisationAttribute{}
				attributes1.PartnerOrganisationAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.PartnerOrganisationAttribute.Purpose {
					attributes1.PartnerOrganisationAttribute.Purpose = append(attributes1.PartnerOrganisationAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.PartnerOrganisationAttribute.Constraints == nil {
					attributes1.PartnerOrganisationAttribute.Constraints = nil
				} else {
					attributes1.PartnerOrganisationAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.PartnerOrganisationAttribute.DefaultValue == nil {
					attributes1.PartnerOrganisationAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult16, _ := json.Marshal(attributesItem.PartnerOrganisationAttribute.DefaultValue)
					attributes1.PartnerOrganisationAttribute.DefaultValue = types.StringValue(string(defaultValueResult16))
				}
				attributes1.PartnerOrganisationAttribute.Deprecated = types.BoolPointerValue(attributesItem.PartnerOrganisationAttribute.Deprecated)
				attributes1.PartnerOrganisationAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.PartnerOrganisationAttribute.EntityBuilderDisableEdit)
				attributes1.PartnerOrganisationAttribute.FeatureFlag = types.StringPointerValue(attributesItem.PartnerOrganisationAttribute.FeatureFlag)
				attributes1.PartnerOrganisationAttribute.Group = types.StringPointerValue(attributesItem.PartnerOrganisationAttribute.Group)
				attributes1.PartnerOrganisationAttribute.Hidden = types.BoolPointerValue(attributesItem.PartnerOrganisationAttribute.Hidden)
				attributes1.PartnerOrganisationAttribute.HideLabel = types.BoolPointerValue(attributesItem.PartnerOrganisationAttribute.HideLabel)
				attributes1.PartnerOrganisationAttribute.Icon = types.StringPointerValue(attributesItem.PartnerOrganisationAttribute.Icon)
				attributes1.PartnerOrganisationAttribute.ID = types.StringPointerValue(attributesItem.PartnerOrganisationAttribute.ID)
				if attributesItem.PartnerOrganisationAttribute.InfoHelpers == nil {
					attributes1.PartnerOrganisationAttribute.InfoHelpers = nil
				} else {
					attributes1.PartnerOrganisationAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.PartnerOrganisationAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintCustomComponent)
					attributes1.PartnerOrganisationAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintText)
					attributes1.PartnerOrganisationAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintTextKey)
					attributes1.PartnerOrganisationAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.PartnerOrganisationAttribute.Label = types.StringValue(attributesItem.PartnerOrganisationAttribute.Label)
				attributes1.PartnerOrganisationAttribute.Layout = types.StringPointerValue(attributesItem.PartnerOrganisationAttribute.Layout)
				attributes1.PartnerOrganisationAttribute.Name = types.StringValue(attributesItem.PartnerOrganisationAttribute.Name)
				attributes1.PartnerOrganisationAttribute.Order = types.Int64PointerValue(attributesItem.PartnerOrganisationAttribute.Order)
				attributes1.PartnerOrganisationAttribute.Placeholder = types.StringPointerValue(attributesItem.PartnerOrganisationAttribute.Placeholder)
				attributes1.PartnerOrganisationAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.PartnerOrganisationAttribute.PreviewValueFormatter)
				attributes1.PartnerOrganisationAttribute.Protected = types.BoolPointerValue(attributesItem.PartnerOrganisationAttribute.Protected)
				attributes1.PartnerOrganisationAttribute.Readonly = types.BoolPointerValue(attributesItem.PartnerOrganisationAttribute.Readonly)
				attributes1.PartnerOrganisationAttribute.RenderCondition = types.StringPointerValue(attributesItem.PartnerOrganisationAttribute.RenderCondition)
				attributes1.PartnerOrganisationAttribute.Required = types.BoolPointerValue(attributesItem.PartnerOrganisationAttribute.Required)
				attributes1.PartnerOrganisationAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount16, settingsFlagItem16 := range attributesItem.PartnerOrganisationAttribute.SettingsFlag {
					var settingsFlag33 tfTypes.SettingFlag
					settingsFlag33.Enabled = types.BoolPointerValue(settingsFlagItem16.Enabled)
					settingsFlag33.Name = types.StringPointerValue(settingsFlagItem16.Name)
					if settingsFlagCount16+1 > len(attributes1.PartnerOrganisationAttribute.SettingsFlag) {
						attributes1.PartnerOrganisationAttribute.SettingsFlag = append(attributes1.PartnerOrganisationAttribute.SettingsFlag, settingsFlag33)
					} else {
						attributes1.PartnerOrganisationAttribute.SettingsFlag[settingsFlagCount16].Enabled = settingsFlag33.Enabled
						attributes1.PartnerOrganisationAttribute.SettingsFlag[settingsFlagCount16].Name = settingsFlag33.Name
					}
				}
				attributes1.PartnerOrganisationAttribute.ShowInTable = types.BoolPointerValue(attributesItem.PartnerOrganisationAttribute.ShowInTable)
				attributes1.PartnerOrganisationAttribute.Sortable = types.BoolPointerValue(attributesItem.PartnerOrganisationAttribute.Sortable)
				if attributesItem.PartnerOrganisationAttribute.Type != nil {
					attributes1.PartnerOrganisationAttribute.Type = types.StringValue(string(*attributesItem.PartnerOrganisationAttribute.Type))
				} else {
					attributes1.PartnerOrganisationAttribute.Type = types.StringNull()
				}
				attributes1.PartnerOrganisationAttribute.ValueFormatter = types.StringPointerValue(attributesItem.PartnerOrganisationAttribute.ValueFormatter)
			}
			if attributesItem.PartnerStatusAttribute != nil {
				attributes1.PartnerStatusAttribute = &tfTypes.PartnerStatusAttribute{}
				attributes1.PartnerStatusAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.PartnerStatusAttribute.Purpose {
					attributes1.PartnerStatusAttribute.Purpose = append(attributes1.PartnerStatusAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.PartnerStatusAttribute.Constraints == nil {
					attributes1.PartnerStatusAttribute.Constraints = nil
				} else {
					attributes1.PartnerStatusAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.PartnerStatusAttribute.DefaultValue == nil {
					attributes1.PartnerStatusAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult17, _ := json.Marshal(attributesItem.PartnerStatusAttribute.DefaultValue)
					attributes1.PartnerStatusAttribute.DefaultValue = types.StringValue(string(defaultValueResult17))
				}
				attributes1.PartnerStatusAttribute.Deprecated = types.BoolPointerValue(attributesItem.PartnerStatusAttribute.Deprecated)
				attributes1.PartnerStatusAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.PartnerStatusAttribute.EntityBuilderDisableEdit)
				attributes1.PartnerStatusAttribute.FeatureFlag = types.StringPointerValue(attributesItem.PartnerStatusAttribute.FeatureFlag)
				attributes1.PartnerStatusAttribute.Group = types.StringPointerValue(attributesItem.PartnerStatusAttribute.Group)
				attributes1.PartnerStatusAttribute.Hidden = types.BoolPointerValue(attributesItem.PartnerStatusAttribute.Hidden)
				attributes1.PartnerStatusAttribute.HideLabel = types.BoolPointerValue(attributesItem.PartnerStatusAttribute.HideLabel)
				attributes1.PartnerStatusAttribute.Icon = types.StringPointerValue(attributesItem.PartnerStatusAttribute.Icon)
				attributes1.PartnerStatusAttribute.ID = types.StringPointerValue(attributesItem.PartnerStatusAttribute.ID)
				if attributesItem.PartnerStatusAttribute.InfoHelpers == nil {
					attributes1.PartnerStatusAttribute.InfoHelpers = nil
				} else {
					attributes1.PartnerStatusAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.PartnerStatusAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.PartnerStatusAttribute.InfoHelpers.HintCustomComponent)
					attributes1.PartnerStatusAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.PartnerStatusAttribute.InfoHelpers.HintText)
					attributes1.PartnerStatusAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.PartnerStatusAttribute.InfoHelpers.HintTextKey)
					attributes1.PartnerStatusAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.PartnerStatusAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.PartnerStatusAttribute.Label = types.StringValue(attributesItem.PartnerStatusAttribute.Label)
				attributes1.PartnerStatusAttribute.Layout = types.StringPointerValue(attributesItem.PartnerStatusAttribute.Layout)
				attributes1.PartnerStatusAttribute.Name = types.StringValue(attributesItem.PartnerStatusAttribute.Name)
				attributes1.PartnerStatusAttribute.Order = types.Int64PointerValue(attributesItem.PartnerStatusAttribute.Order)
				attributes1.PartnerStatusAttribute.Placeholder = types.StringPointerValue(attributesItem.PartnerStatusAttribute.Placeholder)
				attributes1.PartnerStatusAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.PartnerStatusAttribute.PreviewValueFormatter)
				attributes1.PartnerStatusAttribute.Protected = types.BoolPointerValue(attributesItem.PartnerStatusAttribute.Protected)
				attributes1.PartnerStatusAttribute.Readonly = types.BoolPointerValue(attributesItem.PartnerStatusAttribute.Readonly)
				attributes1.PartnerStatusAttribute.RenderCondition = types.StringPointerValue(attributesItem.PartnerStatusAttribute.RenderCondition)
				attributes1.PartnerStatusAttribute.Required = types.BoolPointerValue(attributesItem.PartnerStatusAttribute.Required)
				attributes1.PartnerStatusAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount17, settingsFlagItem17 := range attributesItem.PartnerStatusAttribute.SettingsFlag {
					var settingsFlag35 tfTypes.SettingFlag
					settingsFlag35.Enabled = types.BoolPointerValue(settingsFlagItem17.Enabled)
					settingsFlag35.Name = types.StringPointerValue(settingsFlagItem17.Name)
					if settingsFlagCount17+1 > len(attributes1.PartnerStatusAttribute.SettingsFlag) {
						attributes1.PartnerStatusAttribute.SettingsFlag = append(attributes1.PartnerStatusAttribute.SettingsFlag, settingsFlag35)
					} else {
						attributes1.PartnerStatusAttribute.SettingsFlag[settingsFlagCount17].Enabled = settingsFlag35.Enabled
						attributes1.PartnerStatusAttribute.SettingsFlag[settingsFlagCount17].Name = settingsFlag35.Name
					}
				}
				attributes1.PartnerStatusAttribute.ShowInTable = types.BoolPointerValue(attributesItem.PartnerStatusAttribute.ShowInTable)
				attributes1.PartnerStatusAttribute.Sortable = types.BoolPointerValue(attributesItem.PartnerStatusAttribute.Sortable)
				if attributesItem.PartnerStatusAttribute.Type != nil {
					attributes1.PartnerStatusAttribute.Type = types.StringValue(string(*attributesItem.PartnerStatusAttribute.Type))
				} else {
					attributes1.PartnerStatusAttribute.Type = types.StringNull()
				}
				attributes1.PartnerStatusAttribute.ValueFormatter = types.StringPointerValue(attributesItem.PartnerStatusAttribute.ValueFormatter)
			}
			if attributesItem.PaymentMethodRelationAttribute != nil {
				attributes1.PaymentMethodRelationAttribute = &tfTypes.PaymentMethodRelationAttribute{}
				attributes1.PaymentMethodRelationAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.PaymentMethodRelationAttribute.Purpose {
					attributes1.PaymentMethodRelationAttribute.Purpose = append(attributes1.PaymentMethodRelationAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.PaymentMethodRelationAttribute.Constraints == nil {
					attributes1.PaymentMethodRelationAttribute.Constraints = nil
				} else {
					attributes1.PaymentMethodRelationAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.PaymentMethodRelationAttribute.DefaultValue == nil {
					attributes1.PaymentMethodRelationAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult18, _ := json.Marshal(attributesItem.PaymentMethodRelationAttribute.DefaultValue)
					attributes1.PaymentMethodRelationAttribute.DefaultValue = types.StringValue(string(defaultValueResult18))
				}
				attributes1.PaymentMethodRelationAttribute.Deprecated = types.BoolPointerValue(attributesItem.PaymentMethodRelationAttribute.Deprecated)
				attributes1.PaymentMethodRelationAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.PaymentMethodRelationAttribute.EntityBuilderDisableEdit)
				attributes1.PaymentMethodRelationAttribute.FeatureFlag = types.StringPointerValue(attributesItem.PaymentMethodRelationAttribute.FeatureFlag)
				attributes1.PaymentMethodRelationAttribute.Group = types.StringPointerValue(attributesItem.PaymentMethodRelationAttribute.Group)
				attributes1.PaymentMethodRelationAttribute.HasPrimary = types.BoolPointerValue(attributesItem.PaymentMethodRelationAttribute.HasPrimary)
				attributes1.PaymentMethodRelationAttribute.Hidden = types.BoolPointerValue(attributesItem.PaymentMethodRelationAttribute.Hidden)
				attributes1.PaymentMethodRelationAttribute.HideLabel = types.BoolPointerValue(attributesItem.PaymentMethodRelationAttribute.HideLabel)
				attributes1.PaymentMethodRelationAttribute.Icon = types.StringPointerValue(attributesItem.PaymentMethodRelationAttribute.Icon)
				attributes1.PaymentMethodRelationAttribute.ID = types.StringPointerValue(attributesItem.PaymentMethodRelationAttribute.ID)
				if attributesItem.PaymentMethodRelationAttribute.InfoHelpers == nil {
					attributes1.PaymentMethodRelationAttribute.InfoHelpers = nil
				} else {
					attributes1.PaymentMethodRelationAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.PaymentMethodRelationAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintCustomComponent)
					attributes1.PaymentMethodRelationAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintText)
					attributes1.PaymentMethodRelationAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintTextKey)
					attributes1.PaymentMethodRelationAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.PaymentMethodRelationAttribute.Label = types.StringValue(attributesItem.PaymentMethodRelationAttribute.Label)
				attributes1.PaymentMethodRelationAttribute.Layout = types.StringPointerValue(attributesItem.PaymentMethodRelationAttribute.Layout)
				attributes1.PaymentMethodRelationAttribute.Name = types.StringValue(attributesItem.PaymentMethodRelationAttribute.Name)
				attributes1.PaymentMethodRelationAttribute.Order = types.Int64PointerValue(attributesItem.PaymentMethodRelationAttribute.Order)
				attributes1.PaymentMethodRelationAttribute.Placeholder = types.StringPointerValue(attributesItem.PaymentMethodRelationAttribute.Placeholder)
				attributes1.PaymentMethodRelationAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.PaymentMethodRelationAttribute.PreviewValueFormatter)
				attributes1.PaymentMethodRelationAttribute.Protected = types.BoolPointerValue(attributesItem.PaymentMethodRelationAttribute.Protected)
				attributes1.PaymentMethodRelationAttribute.Readonly = types.BoolPointerValue(attributesItem.PaymentMethodRelationAttribute.Readonly)
				attributes1.PaymentMethodRelationAttribute.RenderCondition = types.StringPointerValue(attributesItem.PaymentMethodRelationAttribute.RenderCondition)
				attributes1.PaymentMethodRelationAttribute.Required = types.BoolPointerValue(attributesItem.PaymentMethodRelationAttribute.Required)
				attributes1.PaymentMethodRelationAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount18, settingsFlagItem18 := range attributesItem.PaymentMethodRelationAttribute.SettingsFlag {
					var settingsFlag37 tfTypes.SettingFlag
					settingsFlag37.Enabled = types.BoolPointerValue(settingsFlagItem18.Enabled)
					settingsFlag37.Name = types.StringPointerValue(settingsFlagItem18.Name)
					if settingsFlagCount18+1 > len(attributes1.PaymentMethodRelationAttribute.SettingsFlag) {
						attributes1.PaymentMethodRelationAttribute.SettingsFlag = append(attributes1.PaymentMethodRelationAttribute.SettingsFlag, settingsFlag37)
					} else {
						attributes1.PaymentMethodRelationAttribute.SettingsFlag[settingsFlagCount18].Enabled = settingsFlag37.Enabled
						attributes1.PaymentMethodRelationAttribute.SettingsFlag[settingsFlagCount18].Name = settingsFlag37.Name
					}
				}
				attributes1.PaymentMethodRelationAttribute.ShowInTable = types.BoolPointerValue(attributesItem.PaymentMethodRelationAttribute.ShowInTable)
				attributes1.PaymentMethodRelationAttribute.Sortable = types.BoolPointerValue(attributesItem.PaymentMethodRelationAttribute.Sortable)
				if attributesItem.PaymentMethodRelationAttribute.Type != nil {
					attributes1.PaymentMethodRelationAttribute.Type = types.StringValue(string(*attributesItem.PaymentMethodRelationAttribute.Type))
				} else {
					attributes1.PaymentMethodRelationAttribute.Type = types.StringNull()
				}
				attributes1.PaymentMethodRelationAttribute.ValueFormatter = types.StringPointerValue(attributesItem.PaymentMethodRelationAttribute.ValueFormatter)
			}
			if attributesItem.PurposeAttribute != nil {
				attributes1.PurposeAttribute = &tfTypes.PurposeAttribute{}
				attributes1.PurposeAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.PurposeAttribute.Purpose {
					attributes1.PurposeAttribute.Purpose = append(attributes1.PurposeAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.PurposeAttribute.Constraints == nil {
					attributes1.PurposeAttribute.Constraints = nil
				} else {
					attributes1.PurposeAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.PurposeAttribute.CreatedAt != nil {
					attributes1.PurposeAttribute.CreatedAt = types.StringValue(attributesItem.PurposeAttribute.CreatedAt.Format(time.RFC3339Nano))
				} else {
					attributes1.PurposeAttribute.CreatedAt = types.StringNull()
				}
				if attributesItem.PurposeAttribute.DefaultValue == nil {
					attributes1.PurposeAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult19, _ := json.Marshal(attributesItem.PurposeAttribute.DefaultValue)
					attributes1.PurposeAttribute.DefaultValue = types.StringValue(string(defaultValueResult19))
				}
				attributes1.PurposeAttribute.Deprecated = types.BoolPointerValue(attributesItem.PurposeAttribute.Deprecated)
				attributes1.PurposeAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.PurposeAttribute.EntityBuilderDisableEdit)
				attributes1.PurposeAttribute.FeatureFlag = types.StringPointerValue(attributesItem.PurposeAttribute.FeatureFlag)
				attributes1.PurposeAttribute.Group = types.StringPointerValue(attributesItem.PurposeAttribute.Group)
				attributes1.PurposeAttribute.Hidden = types.BoolPointerValue(attributesItem.PurposeAttribute.Hidden)
				attributes1.PurposeAttribute.HideLabel = types.BoolPointerValue(attributesItem.PurposeAttribute.HideLabel)
				attributes1.PurposeAttribute.Icon = types.StringPointerValue(attributesItem.PurposeAttribute.Icon)
				attributes1.PurposeAttribute.ID = types.StringPointerValue(attributesItem.PurposeAttribute.ID)
				if attributesItem.PurposeAttribute.InfoHelpers == nil {
					attributes1.PurposeAttribute.InfoHelpers = nil
				} else {
					attributes1.PurposeAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.PurposeAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.PurposeAttribute.InfoHelpers.HintCustomComponent)
					attributes1.PurposeAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.PurposeAttribute.InfoHelpers.HintText)
					attributes1.PurposeAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.PurposeAttribute.InfoHelpers.HintTextKey)
					attributes1.PurposeAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.PurposeAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.PurposeAttribute.Label = types.StringValue(attributesItem.PurposeAttribute.Label)
				attributes1.PurposeAttribute.Layout = types.StringPointerValue(attributesItem.PurposeAttribute.Layout)
				attributes1.PurposeAttribute.Name = types.StringValue(attributesItem.PurposeAttribute.Name)
				attributes1.PurposeAttribute.Order = types.Int64PointerValue(attributesItem.PurposeAttribute.Order)
				attributes1.PurposeAttribute.Parents = []types.String{}
				for _, v := range attributesItem.PurposeAttribute.Parents {
					attributes1.PurposeAttribute.Parents = append(attributes1.PurposeAttribute.Parents, types.StringValue(v))
				}
				attributes1.PurposeAttribute.Placeholder = types.StringPointerValue(attributesItem.PurposeAttribute.Placeholder)
				attributes1.PurposeAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.PurposeAttribute.PreviewValueFormatter)
				attributes1.PurposeAttribute.Protected = types.BoolPointerValue(attributesItem.PurposeAttribute.Protected)
				attributes1.PurposeAttribute.Readonly = types.BoolPointerValue(attributesItem.PurposeAttribute.Readonly)
				attributes1.PurposeAttribute.RenderCondition = types.StringPointerValue(attributesItem.PurposeAttribute.RenderCondition)
				attributes1.PurposeAttribute.Required = types.BoolPointerValue(attributesItem.PurposeAttribute.Required)
				attributes1.PurposeAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount19, settingsFlagItem19 := range attributesItem.PurposeAttribute.SettingsFlag {
					var settingsFlag39 tfTypes.SettingFlag
					settingsFlag39.Enabled = types.BoolPointerValue(settingsFlagItem19.Enabled)
					settingsFlag39.Name = types.StringPointerValue(settingsFlagItem19.Name)
					if settingsFlagCount19+1 > len(attributes1.PurposeAttribute.SettingsFlag) {
						attributes1.PurposeAttribute.SettingsFlag = append(attributes1.PurposeAttribute.SettingsFlag, settingsFlag39)
					} else {
						attributes1.PurposeAttribute.SettingsFlag[settingsFlagCount19].Enabled = settingsFlag39.Enabled
						attributes1.PurposeAttribute.SettingsFlag[settingsFlagCount19].Name = settingsFlag39.Name
					}
				}
				attributes1.PurposeAttribute.ShowInTable = types.BoolPointerValue(attributesItem.PurposeAttribute.ShowInTable)
				attributes1.PurposeAttribute.Slug = types.StringPointerValue(attributesItem.PurposeAttribute.Slug)
				attributes1.PurposeAttribute.Sortable = types.BoolPointerValue(attributesItem.PurposeAttribute.Sortable)
				if attributesItem.PurposeAttribute.Type != nil {
					attributes1.PurposeAttribute.Type = types.StringValue(string(*attributesItem.PurposeAttribute.Type))
				} else {
					attributes1.PurposeAttribute.Type = types.StringNull()
				}
				if attributesItem.PurposeAttribute.UpdatedAt != nil {
					attributes1.PurposeAttribute.UpdatedAt = types.StringValue(attributesItem.PurposeAttribute.UpdatedAt.Format(time.RFC3339Nano))
				} else {
					attributes1.PurposeAttribute.UpdatedAt = types.StringNull()
				}
				attributes1.PurposeAttribute.ValueFormatter = types.StringPointerValue(attributesItem.PurposeAttribute.ValueFormatter)
			}
			if attributesItem.RelationAttribute != nil {
				attributes1.RelationAttribute = &tfTypes.RelationAttribute{}
				attributes1.RelationAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.RelationAttribute.Purpose {
					attributes1.RelationAttribute.Purpose = append(attributes1.RelationAttribute.Purpose, types.StringValue(v))
				}
				attributes1.RelationAttribute.Actions = []tfTypes.Actions{}
				for actionsCount, actionsItem := range attributesItem.RelationAttribute.Actions {
					var actions1 tfTypes.Actions
					if actionsItem.ActionType != nil {
						actions1.ActionType = types.StringValue(string(*actionsItem.ActionType))
					} else {
						actions1.ActionType = types.StringNull()
					}
					actions1.Default = types.BoolPointerValue(actionsItem.Default)
					actions1.FeatureFlag = types.StringPointerValue(actionsItem.FeatureFlag)
					actions1.Label = types.StringPointerValue(actionsItem.Label)
					if actionsItem.NewEntityItem == nil {
						actions1.NewEntityItem = nil
					} else {
						actions1.NewEntityItem = &tfTypes.RelationAttributeNewEntityItem{}
						if actionsItem.NewEntityItem.ACL == nil {
							actions1.NewEntityItem.ACL = nil
						} else {
							actions1.NewEntityItem.ACL = &tfTypes.EntityACL{}
							if actionsItem.NewEntityItem.ACL.AdditionalProperties == nil {
								actions1.NewEntityItem.ACL.AdditionalProperties = types.StringNull()
							} else {
								additionalPropertiesResult, _ := json.Marshal(actionsItem.NewEntityItem.ACL.AdditionalProperties)
								actions1.NewEntityItem.ACL.AdditionalProperties = types.StringValue(string(additionalPropertiesResult))
							}
							actions1.NewEntityItem.ACL.Delete = []types.String{}
							for _, v := range actionsItem.NewEntityItem.ACL.Delete {
								actions1.NewEntityItem.ACL.Delete = append(actions1.NewEntityItem.ACL.Delete, types.StringValue(v))
							}
							actions1.NewEntityItem.ACL.Edit = []types.String{}
							for _, v := range actionsItem.NewEntityItem.ACL.Edit {
								actions1.NewEntityItem.ACL.Edit = append(actions1.NewEntityItem.ACL.Edit, types.StringValue(v))
							}
							actions1.NewEntityItem.ACL.View = []types.String{}
							for _, v := range actionsItem.NewEntityItem.ACL.View {
								actions1.NewEntityItem.ACL.View = append(actions1.NewEntityItem.ACL.View, types.StringValue(v))
							}
						}
						if actionsItem.NewEntityItem.CreatedAt != nil {
							actions1.NewEntityItem.CreatedAt = types.StringValue(actionsItem.NewEntityItem.CreatedAt.Format(time.RFC3339Nano))
						} else {
							actions1.NewEntityItem.CreatedAt = types.StringNull()
						}
						actions1.NewEntityItem.ID = types.StringValue(actionsItem.NewEntityItem.ID)
						actions1.NewEntityItem.Org = types.StringValue(actionsItem.NewEntityItem.Org)
						actions1.NewEntityItem.Owners = []tfTypes.EntityOwner{}
						for ownersCount, ownersItem := range actionsItem.NewEntityItem.Owners {
							var owners1 tfTypes.EntityOwner
							owners1.OrgID = types.StringValue(ownersItem.OrgID)
							owners1.UserID = types.StringPointerValue(ownersItem.UserID)
							if ownersCount+1 > len(actions1.NewEntityItem.Owners) {
								actions1.NewEntityItem.Owners = append(actions1.NewEntityItem.Owners, owners1)
							} else {
								actions1.NewEntityItem.Owners[ownersCount].OrgID = owners1.OrgID
								actions1.NewEntityItem.Owners[ownersCount].UserID = owners1.UserID
							}
						}
						actions1.NewEntityItem.Schema = types.StringValue(actionsItem.NewEntityItem.Schema)
						actions1.NewEntityItem.Tags = []types.String{}
						for _, v := range actionsItem.NewEntityItem.Tags {
							actions1.NewEntityItem.Tags = append(actions1.NewEntityItem.Tags, types.StringValue(v))
						}
						actions1.NewEntityItem.Title = types.StringPointerValue(actionsItem.NewEntityItem.Title)
						if actionsItem.NewEntityItem.UpdatedAt != nil {
							actions1.NewEntityItem.UpdatedAt = types.StringValue(actionsItem.NewEntityItem.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							actions1.NewEntityItem.UpdatedAt = types.StringNull()
						}
						if actionsItem.NewEntityItem.AdditionalProperties == nil {
							actions1.NewEntityItem.AdditionalProperties = types.StringNull()
						} else {
							additionalPropertiesResult1, _ := json.Marshal(actionsItem.NewEntityItem.AdditionalProperties)
							actions1.NewEntityItem.AdditionalProperties = types.StringValue(string(additionalPropertiesResult1))
						}
					}
					actions1.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount20, settingsFlagItem20 := range actionsItem.SettingsFlag {
						var settingsFlag41 tfTypes.SettingFlag
						settingsFlag41.Enabled = types.BoolPointerValue(settingsFlagItem20.Enabled)
						settingsFlag41.Name = types.StringPointerValue(settingsFlagItem20.Name)
						if settingsFlagCount20+1 > len(actions1.SettingsFlag) {
							actions1.SettingsFlag = append(actions1.SettingsFlag, settingsFlag41)
						} else {
							actions1.SettingsFlag[settingsFlagCount20].Enabled = settingsFlag41.Enabled
							actions1.SettingsFlag[settingsFlagCount20].Name = settingsFlag41.Name
						}
					}
					if actionsCount+1 > len(attributes1.RelationAttribute.Actions) {
						attributes1.RelationAttribute.Actions = append(attributes1.RelationAttribute.Actions, actions1)
					} else {
						attributes1.RelationAttribute.Actions[actionsCount].ActionType = actions1.ActionType
						attributes1.RelationAttribute.Actions[actionsCount].Default = actions1.Default
						attributes1.RelationAttribute.Actions[actionsCount].FeatureFlag = actions1.FeatureFlag
						attributes1.RelationAttribute.Actions[actionsCount].Label = actions1.Label
						attributes1.RelationAttribute.Actions[actionsCount].NewEntityItem = actions1.NewEntityItem
						attributes1.RelationAttribute.Actions[actionsCount].SettingsFlag = actions1.SettingsFlag
					}
				}
				attributes1.RelationAttribute.AddButtonLabel = types.StringPointerValue(attributesItem.RelationAttribute.AddButtonLabel)
				attributes1.RelationAttribute.AllowedSchemas = []types.String{}
				for _, v := range attributesItem.RelationAttribute.AllowedSchemas {
					attributes1.RelationAttribute.AllowedSchemas = append(attributes1.RelationAttribute.AllowedSchemas, types.StringValue(v))
				}
				if attributesItem.RelationAttribute.Constraints == nil {
					attributes1.RelationAttribute.Constraints = nil
				} else {
					attributes1.RelationAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.RelationAttribute.DefaultValue == nil {
					attributes1.RelationAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult20, _ := json.Marshal(attributesItem.RelationAttribute.DefaultValue)
					attributes1.RelationAttribute.DefaultValue = types.StringValue(string(defaultValueResult20))
				}
				attributes1.RelationAttribute.Deprecated = types.BoolPointerValue(attributesItem.RelationAttribute.Deprecated)
				attributes1.RelationAttribute.DetailsViewModeEnabled = types.BoolPointerValue(attributesItem.RelationAttribute.DetailsViewModeEnabled)
				if attributesItem.RelationAttribute.DrawerSize != nil {
					attributes1.RelationAttribute.DrawerSize = types.StringValue(string(*attributesItem.RelationAttribute.DrawerSize))
				} else {
					attributes1.RelationAttribute.DrawerSize = types.StringNull()
				}
				if attributesItem.RelationAttribute.EditMode != nil {
					attributes1.RelationAttribute.EditMode = types.StringValue(string(*attributesItem.RelationAttribute.EditMode))
				} else {
					attributes1.RelationAttribute.EditMode = types.StringNull()
				}
				attributes1.RelationAttribute.EnableRelationPicker = types.BoolPointerValue(attributesItem.RelationAttribute.EnableRelationPicker)
				attributes1.RelationAttribute.EnableRelationTags = types.BoolPointerValue(attributesItem.RelationAttribute.EnableRelationTags)
				attributes1.RelationAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.RelationAttribute.EntityBuilderDisableEdit)
				attributes1.RelationAttribute.FeatureFlag = types.StringPointerValue(attributesItem.RelationAttribute.FeatureFlag)
				attributes1.RelationAttribute.Group = types.StringPointerValue(attributesItem.RelationAttribute.Group)
				attributes1.RelationAttribute.HasPrimary = types.BoolPointerValue(attributesItem.RelationAttribute.HasPrimary)
				attributes1.RelationAttribute.Hidden = types.BoolPointerValue(attributesItem.RelationAttribute.Hidden)
				attributes1.RelationAttribute.HideLabel = types.BoolPointerValue(attributesItem.RelationAttribute.HideLabel)
				attributes1.RelationAttribute.Icon = types.StringPointerValue(attributesItem.RelationAttribute.Icon)
				attributes1.RelationAttribute.ID = types.StringPointerValue(attributesItem.RelationAttribute.ID)
				if attributesItem.RelationAttribute.InfoHelpers == nil {
					attributes1.RelationAttribute.InfoHelpers = nil
				} else {
					attributes1.RelationAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.RelationAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.RelationAttribute.InfoHelpers.HintCustomComponent)
					attributes1.RelationAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.RelationAttribute.InfoHelpers.HintText)
					attributes1.RelationAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.RelationAttribute.InfoHelpers.HintTextKey)
					attributes1.RelationAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.RelationAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.RelationAttribute.Label = types.StringValue(attributesItem.RelationAttribute.Label)
				attributes1.RelationAttribute.Layout = types.StringPointerValue(attributesItem.RelationAttribute.Layout)
				attributes1.RelationAttribute.Name = types.StringValue(attributesItem.RelationAttribute.Name)
				attributes1.RelationAttribute.Order = types.Int64PointerValue(attributesItem.RelationAttribute.Order)
				attributes1.RelationAttribute.Placeholder = types.StringPointerValue(attributesItem.RelationAttribute.Placeholder)
				attributes1.RelationAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.RelationAttribute.PreviewValueFormatter)
				attributes1.RelationAttribute.Protected = types.BoolPointerValue(attributesItem.RelationAttribute.Protected)
				attributes1.RelationAttribute.Readonly = types.BoolPointerValue(attributesItem.RelationAttribute.Readonly)
				if attributesItem.RelationAttribute.RelationAffinityMode != nil {
					attributes1.RelationAttribute.RelationAffinityMode = types.StringValue(string(*attributesItem.RelationAttribute.RelationAffinityMode))
				} else {
					attributes1.RelationAttribute.RelationAffinityMode = types.StringNull()
				}
				if attributesItem.RelationAttribute.RelationType != nil {
					attributes1.RelationAttribute.RelationType = types.StringValue(string(*attributesItem.RelationAttribute.RelationType))
				} else {
					attributes1.RelationAttribute.RelationType = types.StringNull()
				}
				attributes1.RelationAttribute.RenderCondition = types.StringPointerValue(attributesItem.RelationAttribute.RenderCondition)
				attributes1.RelationAttribute.Required = types.BoolPointerValue(attributesItem.RelationAttribute.Required)
				if len(attributesItem.RelationAttribute.ReverseAttributes) > 0 {
					attributes1.RelationAttribute.ReverseAttributes = make(map[string]types.String)
					for key, value1 := range attributesItem.RelationAttribute.ReverseAttributes {
						attributes1.RelationAttribute.ReverseAttributes[key] = types.StringValue(value1)
					}
				}
				attributes1.RelationAttribute.SearchPlaceholder = types.StringPointerValue(attributesItem.RelationAttribute.SearchPlaceholder)
				attributes1.RelationAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount21, settingsFlagItem21 := range attributesItem.RelationAttribute.SettingsFlag {
					var settingsFlag43 tfTypes.SettingFlag
					settingsFlag43.Enabled = types.BoolPointerValue(settingsFlagItem21.Enabled)
					settingsFlag43.Name = types.StringPointerValue(settingsFlagItem21.Name)
					if settingsFlagCount21+1 > len(attributes1.RelationAttribute.SettingsFlag) {
						attributes1.RelationAttribute.SettingsFlag = append(attributes1.RelationAttribute.SettingsFlag, settingsFlag43)
					} else {
						attributes1.RelationAttribute.SettingsFlag[settingsFlagCount21].Enabled = settingsFlag43.Enabled
						attributes1.RelationAttribute.SettingsFlag[settingsFlagCount21].Name = settingsFlag43.Name
					}
				}
				attributes1.RelationAttribute.ShowInTable = types.BoolPointerValue(attributesItem.RelationAttribute.ShowInTable)
				attributes1.RelationAttribute.Sortable = types.BoolPointerValue(attributesItem.RelationAttribute.Sortable)
				attributes1.RelationAttribute.SummaryFields = []tfTypes.SummaryFields{}
				for summaryFieldsCount, summaryFieldsItem := range attributesItem.RelationAttribute.SummaryFields {
					var summaryFields1 tfTypes.SummaryFields
					if summaryFieldsItem.Str != nil {
						summaryFields1.Str = types.StringPointerValue(summaryFieldsItem.Str)
					}
					if summaryFieldsItem.SummaryField != nil {
						summaryFields1.SummaryField = &tfTypes.SummaryField{}
						summaryFields1.SummaryField.DisplayAs = types.StringPointerValue(summaryFieldsItem.SummaryField.DisplayAs)
						summaryFields1.SummaryField.Field = types.StringPointerValue(summaryFieldsItem.SummaryField.Field)
					}
					if summaryFieldsCount+1 > len(attributes1.RelationAttribute.SummaryFields) {
						attributes1.RelationAttribute.SummaryFields = append(attributes1.RelationAttribute.SummaryFields, summaryFields1)
					} else {
						attributes1.RelationAttribute.SummaryFields[summaryFieldsCount].Str = summaryFields1.Str
						attributes1.RelationAttribute.SummaryFields[summaryFieldsCount].SummaryField = summaryFields1.SummaryField
					}
				}
				if attributesItem.RelationAttribute.Type != nil {
					attributes1.RelationAttribute.Type = types.StringValue(string(*attributesItem.RelationAttribute.Type))
				} else {
					attributes1.RelationAttribute.Type = types.StringNull()
				}
				attributes1.RelationAttribute.ValueFormatter = types.StringPointerValue(attributesItem.RelationAttribute.ValueFormatter)
			}
			if attributesItem.RepeatableAttribute != nil {
				attributes1.RepeatableAttribute = &tfTypes.RepeatableAttribute{}
				attributes1.RepeatableAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.RepeatableAttribute.Purpose {
					attributes1.RepeatableAttribute.Purpose = append(attributes1.RepeatableAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.RepeatableAttribute.Constraints == nil {
					attributes1.RepeatableAttribute.Constraints = nil
				} else {
					attributes1.RepeatableAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.RepeatableAttribute.DefaultValue == nil {
					attributes1.RepeatableAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult21, _ := json.Marshal(attributesItem.RepeatableAttribute.DefaultValue)
					attributes1.RepeatableAttribute.DefaultValue = types.StringValue(string(defaultValueResult21))
				}
				attributes1.RepeatableAttribute.Deprecated = types.BoolPointerValue(attributesItem.RepeatableAttribute.Deprecated)
				attributes1.RepeatableAttribute.EnableRelationPicker = types.BoolPointerValue(attributesItem.RepeatableAttribute.EnableRelationPicker)
				attributes1.RepeatableAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.RepeatableAttribute.EntityBuilderDisableEdit)
				attributes1.RepeatableAttribute.FeatureFlag = types.StringPointerValue(attributesItem.RepeatableAttribute.FeatureFlag)
				attributes1.RepeatableAttribute.Group = types.StringPointerValue(attributesItem.RepeatableAttribute.Group)
				attributes1.RepeatableAttribute.HasPrimary = types.BoolPointerValue(attributesItem.RepeatableAttribute.HasPrimary)
				attributes1.RepeatableAttribute.Hidden = types.BoolPointerValue(attributesItem.RepeatableAttribute.Hidden)
				attributes1.RepeatableAttribute.HideLabel = types.BoolPointerValue(attributesItem.RepeatableAttribute.HideLabel)
				attributes1.RepeatableAttribute.Icon = types.StringPointerValue(attributesItem.RepeatableAttribute.Icon)
				attributes1.RepeatableAttribute.ID = types.StringPointerValue(attributesItem.RepeatableAttribute.ID)
				if attributesItem.RepeatableAttribute.InfoHelpers == nil {
					attributes1.RepeatableAttribute.InfoHelpers = nil
				} else {
					attributes1.RepeatableAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.RepeatableAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.RepeatableAttribute.InfoHelpers.HintCustomComponent)
					attributes1.RepeatableAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.RepeatableAttribute.InfoHelpers.HintText)
					attributes1.RepeatableAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.RepeatableAttribute.InfoHelpers.HintTextKey)
					attributes1.RepeatableAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.RepeatableAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.RepeatableAttribute.Label = types.StringValue(attributesItem.RepeatableAttribute.Label)
				attributes1.RepeatableAttribute.Layout = types.StringPointerValue(attributesItem.RepeatableAttribute.Layout)
				attributes1.RepeatableAttribute.Name = types.StringValue(attributesItem.RepeatableAttribute.Name)
				attributes1.RepeatableAttribute.Order = types.Int64PointerValue(attributesItem.RepeatableAttribute.Order)
				attributes1.RepeatableAttribute.Placeholder = types.StringPointerValue(attributesItem.RepeatableAttribute.Placeholder)
				attributes1.RepeatableAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.RepeatableAttribute.PreviewValueFormatter)
				attributes1.RepeatableAttribute.Protected = types.BoolPointerValue(attributesItem.RepeatableAttribute.Protected)
				attributes1.RepeatableAttribute.Readonly = types.BoolPointerValue(attributesItem.RepeatableAttribute.Readonly)
				if attributesItem.RepeatableAttribute.RelationAffinityMode != nil {
					attributes1.RepeatableAttribute.RelationAffinityMode = types.StringValue(string(*attributesItem.RepeatableAttribute.RelationAffinityMode))
				} else {
					attributes1.RepeatableAttribute.RelationAffinityMode = types.StringNull()
				}
				attributes1.RepeatableAttribute.RenderCondition = types.StringPointerValue(attributesItem.RepeatableAttribute.RenderCondition)
				attributes1.RepeatableAttribute.Repeatable = types.BoolPointerValue(attributesItem.RepeatableAttribute.Repeatable)
				attributes1.RepeatableAttribute.Required = types.BoolPointerValue(attributesItem.RepeatableAttribute.Required)
				attributes1.RepeatableAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount22, settingsFlagItem22 := range attributesItem.RepeatableAttribute.SettingsFlag {
					var settingsFlag45 tfTypes.SettingFlag
					settingsFlag45.Enabled = types.BoolPointerValue(settingsFlagItem22.Enabled)
					settingsFlag45.Name = types.StringPointerValue(settingsFlagItem22.Name)
					if settingsFlagCount22+1 > len(attributes1.RepeatableAttribute.SettingsFlag) {
						attributes1.RepeatableAttribute.SettingsFlag = append(attributes1.RepeatableAttribute.SettingsFlag, settingsFlag45)
					} else {
						attributes1.RepeatableAttribute.SettingsFlag[settingsFlagCount22].Enabled = settingsFlag45.Enabled
						attributes1.RepeatableAttribute.SettingsFlag[settingsFlagCount22].Name = settingsFlag45.Name
					}
				}
				attributes1.RepeatableAttribute.ShowInTable = types.BoolPointerValue(attributesItem.RepeatableAttribute.ShowInTable)
				attributes1.RepeatableAttribute.Sortable = types.BoolPointerValue(attributesItem.RepeatableAttribute.Sortable)
				if attributesItem.RepeatableAttribute.Type != nil {
					attributes1.RepeatableAttribute.Type = types.StringValue(string(*attributesItem.RepeatableAttribute.Type))
				} else {
					attributes1.RepeatableAttribute.Type = types.StringNull()
				}
				attributes1.RepeatableAttribute.ValueFormatter = types.StringPointerValue(attributesItem.RepeatableAttribute.ValueFormatter)
			}
			if attributesItem.SelectAttribute != nil {
				attributes1.SelectAttribute = &tfTypes.SelectAttribute{}
				attributes1.SelectAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.SelectAttribute.Purpose {
					attributes1.SelectAttribute.Purpose = append(attributes1.SelectAttribute.Purpose, types.StringValue(v))
				}
				attributes1.SelectAttribute.AllowAny = types.BoolPointerValue(attributesItem.SelectAttribute.AllowAny)
				if attributesItem.SelectAttribute.Constraints == nil {
					attributes1.SelectAttribute.Constraints = nil
				} else {
					attributes1.SelectAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.SelectAttribute.DefaultValue == nil {
					attributes1.SelectAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult22, _ := json.Marshal(attributesItem.SelectAttribute.DefaultValue)
					attributes1.SelectAttribute.DefaultValue = types.StringValue(string(defaultValueResult22))
				}
				attributes1.SelectAttribute.Deprecated = types.BoolPointerValue(attributesItem.SelectAttribute.Deprecated)
				attributes1.SelectAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.SelectAttribute.EntityBuilderDisableEdit)
				attributes1.SelectAttribute.FeatureFlag = types.StringPointerValue(attributesItem.SelectAttribute.FeatureFlag)
				attributes1.SelectAttribute.Group = types.StringPointerValue(attributesItem.SelectAttribute.Group)
				attributes1.SelectAttribute.Hidden = types.BoolPointerValue(attributesItem.SelectAttribute.Hidden)
				attributes1.SelectAttribute.HideLabel = types.BoolPointerValue(attributesItem.SelectAttribute.HideLabel)
				attributes1.SelectAttribute.Icon = types.StringPointerValue(attributesItem.SelectAttribute.Icon)
				attributes1.SelectAttribute.ID = types.StringPointerValue(attributesItem.SelectAttribute.ID)
				if attributesItem.SelectAttribute.InfoHelpers == nil {
					attributes1.SelectAttribute.InfoHelpers = nil
				} else {
					attributes1.SelectAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.SelectAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.SelectAttribute.InfoHelpers.HintCustomComponent)
					attributes1.SelectAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.SelectAttribute.InfoHelpers.HintText)
					attributes1.SelectAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.SelectAttribute.InfoHelpers.HintTextKey)
					attributes1.SelectAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.SelectAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.SelectAttribute.Label = types.StringValue(attributesItem.SelectAttribute.Label)
				attributes1.SelectAttribute.Layout = types.StringPointerValue(attributesItem.SelectAttribute.Layout)
				attributes1.SelectAttribute.Name = types.StringValue(attributesItem.SelectAttribute.Name)
				if attributesItem.SelectAttribute.Options == nil {
					attributes1.SelectAttribute.Options = types.StringNull()
				} else {
					optionsVarResult, _ := json.Marshal(attributesItem.SelectAttribute.Options)
					attributes1.SelectAttribute.Options = types.StringValue(string(optionsVarResult))
				}
				attributes1.SelectAttribute.Order = types.Int64PointerValue(attributesItem.SelectAttribute.Order)
				attributes1.SelectAttribute.Placeholder = types.StringPointerValue(attributesItem.SelectAttribute.Placeholder)
				attributes1.SelectAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.SelectAttribute.PreviewValueFormatter)
				attributes1.SelectAttribute.Protected = types.BoolPointerValue(attributesItem.SelectAttribute.Protected)
				attributes1.SelectAttribute.Readonly = types.BoolPointerValue(attributesItem.SelectAttribute.Readonly)
				attributes1.SelectAttribute.RenderCondition = types.StringPointerValue(attributesItem.SelectAttribute.RenderCondition)
				attributes1.SelectAttribute.Required = types.BoolPointerValue(attributesItem.SelectAttribute.Required)
				attributes1.SelectAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount23, settingsFlagItem23 := range attributesItem.SelectAttribute.SettingsFlag {
					var settingsFlag47 tfTypes.SettingFlag
					settingsFlag47.Enabled = types.BoolPointerValue(settingsFlagItem23.Enabled)
					settingsFlag47.Name = types.StringPointerValue(settingsFlagItem23.Name)
					if settingsFlagCount23+1 > len(attributes1.SelectAttribute.SettingsFlag) {
						attributes1.SelectAttribute.SettingsFlag = append(attributes1.SelectAttribute.SettingsFlag, settingsFlag47)
					} else {
						attributes1.SelectAttribute.SettingsFlag[settingsFlagCount23].Enabled = settingsFlag47.Enabled
						attributes1.SelectAttribute.SettingsFlag[settingsFlagCount23].Name = settingsFlag47.Name
					}
				}
				attributes1.SelectAttribute.ShowInTable = types.BoolPointerValue(attributesItem.SelectAttribute.ShowInTable)
				attributes1.SelectAttribute.Sortable = types.BoolPointerValue(attributesItem.SelectAttribute.Sortable)
				if attributesItem.SelectAttribute.Type != nil {
					attributes1.SelectAttribute.Type = types.StringValue(string(*attributesItem.SelectAttribute.Type))
				} else {
					attributes1.SelectAttribute.Type = types.StringNull()
				}
				attributes1.SelectAttribute.ValueFormatter = types.StringPointerValue(attributesItem.SelectAttribute.ValueFormatter)
			}
			if attributesItem.SequenceAttribute != nil {
				attributes1.SequenceAttribute = &tfTypes.SequenceAttribute{}
				attributes1.SequenceAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.SequenceAttribute.Purpose {
					attributes1.SequenceAttribute.Purpose = append(attributes1.SequenceAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.SequenceAttribute.Constraints == nil {
					attributes1.SequenceAttribute.Constraints = nil
				} else {
					attributes1.SequenceAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.SequenceAttribute.DefaultValue == nil {
					attributes1.SequenceAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult23, _ := json.Marshal(attributesItem.SequenceAttribute.DefaultValue)
					attributes1.SequenceAttribute.DefaultValue = types.StringValue(string(defaultValueResult23))
				}
				attributes1.SequenceAttribute.Deprecated = types.BoolPointerValue(attributesItem.SequenceAttribute.Deprecated)
				attributes1.SequenceAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.SequenceAttribute.EntityBuilderDisableEdit)
				attributes1.SequenceAttribute.FeatureFlag = types.StringPointerValue(attributesItem.SequenceAttribute.FeatureFlag)
				attributes1.SequenceAttribute.Group = types.StringPointerValue(attributesItem.SequenceAttribute.Group)
				attributes1.SequenceAttribute.Hidden = types.BoolPointerValue(attributesItem.SequenceAttribute.Hidden)
				attributes1.SequenceAttribute.HideLabel = types.BoolPointerValue(attributesItem.SequenceAttribute.HideLabel)
				attributes1.SequenceAttribute.Icon = types.StringPointerValue(attributesItem.SequenceAttribute.Icon)
				attributes1.SequenceAttribute.ID = types.StringPointerValue(attributesItem.SequenceAttribute.ID)
				if attributesItem.SequenceAttribute.InfoHelpers == nil {
					attributes1.SequenceAttribute.InfoHelpers = nil
				} else {
					attributes1.SequenceAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.SequenceAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.SequenceAttribute.InfoHelpers.HintCustomComponent)
					attributes1.SequenceAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.SequenceAttribute.InfoHelpers.HintText)
					attributes1.SequenceAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.SequenceAttribute.InfoHelpers.HintTextKey)
					attributes1.SequenceAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.SequenceAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.SequenceAttribute.Label = types.StringValue(attributesItem.SequenceAttribute.Label)
				attributes1.SequenceAttribute.Layout = types.StringPointerValue(attributesItem.SequenceAttribute.Layout)
				attributes1.SequenceAttribute.Name = types.StringValue(attributesItem.SequenceAttribute.Name)
				attributes1.SequenceAttribute.Order = types.Int64PointerValue(attributesItem.SequenceAttribute.Order)
				attributes1.SequenceAttribute.Placeholder = types.StringPointerValue(attributesItem.SequenceAttribute.Placeholder)
				attributes1.SequenceAttribute.Prefix = types.StringPointerValue(attributesItem.SequenceAttribute.Prefix)
				attributes1.SequenceAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.SequenceAttribute.PreviewValueFormatter)
				attributes1.SequenceAttribute.Protected = types.BoolPointerValue(attributesItem.SequenceAttribute.Protected)
				attributes1.SequenceAttribute.Readonly = types.BoolPointerValue(attributesItem.SequenceAttribute.Readonly)
				attributes1.SequenceAttribute.RenderCondition = types.StringPointerValue(attributesItem.SequenceAttribute.RenderCondition)
				attributes1.SequenceAttribute.Required = types.BoolPointerValue(attributesItem.SequenceAttribute.Required)
				attributes1.SequenceAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount24, settingsFlagItem24 := range attributesItem.SequenceAttribute.SettingsFlag {
					var settingsFlag49 tfTypes.SettingFlag
					settingsFlag49.Enabled = types.BoolPointerValue(settingsFlagItem24.Enabled)
					settingsFlag49.Name = types.StringPointerValue(settingsFlagItem24.Name)
					if settingsFlagCount24+1 > len(attributes1.SequenceAttribute.SettingsFlag) {
						attributes1.SequenceAttribute.SettingsFlag = append(attributes1.SequenceAttribute.SettingsFlag, settingsFlag49)
					} else {
						attributes1.SequenceAttribute.SettingsFlag[settingsFlagCount24].Enabled = settingsFlag49.Enabled
						attributes1.SequenceAttribute.SettingsFlag[settingsFlagCount24].Name = settingsFlag49.Name
					}
				}
				attributes1.SequenceAttribute.ShowInTable = types.BoolPointerValue(attributesItem.SequenceAttribute.ShowInTable)
				attributes1.SequenceAttribute.Sortable = types.BoolPointerValue(attributesItem.SequenceAttribute.Sortable)
				attributes1.SequenceAttribute.StartNumber = types.Int64PointerValue(attributesItem.SequenceAttribute.StartNumber)
				if attributesItem.SequenceAttribute.Type != nil {
					attributes1.SequenceAttribute.Type = types.StringValue(string(*attributesItem.SequenceAttribute.Type))
				} else {
					attributes1.SequenceAttribute.Type = types.StringNull()
				}
				attributes1.SequenceAttribute.ValueFormatter = types.StringPointerValue(attributesItem.SequenceAttribute.ValueFormatter)
			}
			if attributesItem.StatusAttribute != nil {
				attributes1.StatusAttribute = &tfTypes.StatusAttribute{}
				attributes1.StatusAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.StatusAttribute.Purpose {
					attributes1.StatusAttribute.Purpose = append(attributes1.StatusAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.StatusAttribute.Constraints == nil {
					attributes1.StatusAttribute.Constraints = nil
				} else {
					attributes1.StatusAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.StatusAttribute.DefaultValue == nil {
					attributes1.StatusAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult24, _ := json.Marshal(attributesItem.StatusAttribute.DefaultValue)
					attributes1.StatusAttribute.DefaultValue = types.StringValue(string(defaultValueResult24))
				}
				attributes1.StatusAttribute.Deprecated = types.BoolPointerValue(attributesItem.StatusAttribute.Deprecated)
				attributes1.StatusAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.StatusAttribute.EntityBuilderDisableEdit)
				attributes1.StatusAttribute.FeatureFlag = types.StringPointerValue(attributesItem.StatusAttribute.FeatureFlag)
				attributes1.StatusAttribute.Group = types.StringPointerValue(attributesItem.StatusAttribute.Group)
				attributes1.StatusAttribute.Hidden = types.BoolPointerValue(attributesItem.StatusAttribute.Hidden)
				attributes1.StatusAttribute.HideLabel = types.BoolPointerValue(attributesItem.StatusAttribute.HideLabel)
				attributes1.StatusAttribute.Icon = types.StringPointerValue(attributesItem.StatusAttribute.Icon)
				attributes1.StatusAttribute.ID = types.StringPointerValue(attributesItem.StatusAttribute.ID)
				if attributesItem.StatusAttribute.InfoHelpers == nil {
					attributes1.StatusAttribute.InfoHelpers = nil
				} else {
					attributes1.StatusAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.StatusAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.StatusAttribute.InfoHelpers.HintCustomComponent)
					attributes1.StatusAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.StatusAttribute.InfoHelpers.HintText)
					attributes1.StatusAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.StatusAttribute.InfoHelpers.HintTextKey)
					attributes1.StatusAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.StatusAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.StatusAttribute.Label = types.StringValue(attributesItem.StatusAttribute.Label)
				attributes1.StatusAttribute.Layout = types.StringPointerValue(attributesItem.StatusAttribute.Layout)
				attributes1.StatusAttribute.Name = types.StringValue(attributesItem.StatusAttribute.Name)
				attributes1.StatusAttribute.Options = []tfTypes.OptionsObj{}
				for optionsVarCount1, optionsVarItem1 := range attributesItem.StatusAttribute.Options {
					var optionsVar2 tfTypes.OptionsObj
					if optionsVarItem1.Str != nil {
						optionsVar2.Str = types.StringPointerValue(optionsVarItem1.Str)
					}
					if optionsVarItem1.Options2 != nil {
						optionsVar2.Two = &tfTypes.Two{}
						optionsVar2.Two.Title = types.StringPointerValue(optionsVarItem1.Options2.Title)
						optionsVar2.Two.Value = types.StringValue(optionsVarItem1.Options2.Value)
					}
					if optionsVarCount1+1 > len(attributes1.StatusAttribute.Options) {
						attributes1.StatusAttribute.Options = append(attributes1.StatusAttribute.Options, optionsVar2)
					} else {
						attributes1.StatusAttribute.Options[optionsVarCount1].Str = optionsVar2.Str
						attributes1.StatusAttribute.Options[optionsVarCount1].Two = optionsVar2.Two
					}
				}
				attributes1.StatusAttribute.Order = types.Int64PointerValue(attributesItem.StatusAttribute.Order)
				attributes1.StatusAttribute.Placeholder = types.StringPointerValue(attributesItem.StatusAttribute.Placeholder)
				attributes1.StatusAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.StatusAttribute.PreviewValueFormatter)
				attributes1.StatusAttribute.Protected = types.BoolPointerValue(attributesItem.StatusAttribute.Protected)
				attributes1.StatusAttribute.Readonly = types.BoolPointerValue(attributesItem.StatusAttribute.Readonly)
				attributes1.StatusAttribute.RenderCondition = types.StringPointerValue(attributesItem.StatusAttribute.RenderCondition)
				attributes1.StatusAttribute.Required = types.BoolPointerValue(attributesItem.StatusAttribute.Required)
				attributes1.StatusAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount25, settingsFlagItem25 := range attributesItem.StatusAttribute.SettingsFlag {
					var settingsFlag51 tfTypes.SettingFlag
					settingsFlag51.Enabled = types.BoolPointerValue(settingsFlagItem25.Enabled)
					settingsFlag51.Name = types.StringPointerValue(settingsFlagItem25.Name)
					if settingsFlagCount25+1 > len(attributes1.StatusAttribute.SettingsFlag) {
						attributes1.StatusAttribute.SettingsFlag = append(attributes1.StatusAttribute.SettingsFlag, settingsFlag51)
					} else {
						attributes1.StatusAttribute.SettingsFlag[settingsFlagCount25].Enabled = settingsFlag51.Enabled
						attributes1.StatusAttribute.SettingsFlag[settingsFlagCount25].Name = settingsFlag51.Name
					}
				}
				attributes1.StatusAttribute.ShowInTable = types.BoolPointerValue(attributesItem.StatusAttribute.ShowInTable)
				attributes1.StatusAttribute.Sortable = types.BoolPointerValue(attributesItem.StatusAttribute.Sortable)
				if attributesItem.StatusAttribute.Type != nil {
					attributes1.StatusAttribute.Type = types.StringValue(string(*attributesItem.StatusAttribute.Type))
				} else {
					attributes1.StatusAttribute.Type = types.StringNull()
				}
				attributes1.StatusAttribute.ValueFormatter = types.StringPointerValue(attributesItem.StatusAttribute.ValueFormatter)
			}
			if attributesItem.TagsAttribute != nil {
				attributes1.TagsAttribute = &tfTypes.TagsAttribute{}
				attributes1.TagsAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.TagsAttribute.Purpose {
					attributes1.TagsAttribute.Purpose = append(attributes1.TagsAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.TagsAttribute.Constraints == nil {
					attributes1.TagsAttribute.Constraints = nil
				} else {
					attributes1.TagsAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.TagsAttribute.DefaultValue == nil {
					attributes1.TagsAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult25, _ := json.Marshal(attributesItem.TagsAttribute.DefaultValue)
					attributes1.TagsAttribute.DefaultValue = types.StringValue(string(defaultValueResult25))
				}
				attributes1.TagsAttribute.Deprecated = types.BoolPointerValue(attributesItem.TagsAttribute.Deprecated)
				attributes1.TagsAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.TagsAttribute.EntityBuilderDisableEdit)
				attributes1.TagsAttribute.FeatureFlag = types.StringPointerValue(attributesItem.TagsAttribute.FeatureFlag)
				attributes1.TagsAttribute.Group = types.StringPointerValue(attributesItem.TagsAttribute.Group)
				attributes1.TagsAttribute.Hidden = types.BoolPointerValue(attributesItem.TagsAttribute.Hidden)
				attributes1.TagsAttribute.HideLabel = types.BoolPointerValue(attributesItem.TagsAttribute.HideLabel)
				attributes1.TagsAttribute.Icon = types.StringPointerValue(attributesItem.TagsAttribute.Icon)
				attributes1.TagsAttribute.ID = types.StringPointerValue(attributesItem.TagsAttribute.ID)
				if attributesItem.TagsAttribute.InfoHelpers == nil {
					attributes1.TagsAttribute.InfoHelpers = nil
				} else {
					attributes1.TagsAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.TagsAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.TagsAttribute.InfoHelpers.HintCustomComponent)
					attributes1.TagsAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.TagsAttribute.InfoHelpers.HintText)
					attributes1.TagsAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.TagsAttribute.InfoHelpers.HintTextKey)
					attributes1.TagsAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.TagsAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.TagsAttribute.Label = types.StringValue(attributesItem.TagsAttribute.Label)
				attributes1.TagsAttribute.Layout = types.StringPointerValue(attributesItem.TagsAttribute.Layout)
				attributes1.TagsAttribute.Name = types.StringValue(attributesItem.TagsAttribute.Name)
				attributes1.TagsAttribute.Options = []types.String{}
				for _, v := range attributesItem.TagsAttribute.Options {
					attributes1.TagsAttribute.Options = append(attributes1.TagsAttribute.Options, types.StringValue(v))
				}
				attributes1.TagsAttribute.Order = types.Int64PointerValue(attributesItem.TagsAttribute.Order)
				attributes1.TagsAttribute.Placeholder = types.StringPointerValue(attributesItem.TagsAttribute.Placeholder)
				attributes1.TagsAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.TagsAttribute.PreviewValueFormatter)
				attributes1.TagsAttribute.Protected = types.BoolPointerValue(attributesItem.TagsAttribute.Protected)
				attributes1.TagsAttribute.Readonly = types.BoolPointerValue(attributesItem.TagsAttribute.Readonly)
				attributes1.TagsAttribute.RenderCondition = types.StringPointerValue(attributesItem.TagsAttribute.RenderCondition)
				attributes1.TagsAttribute.Required = types.BoolPointerValue(attributesItem.TagsAttribute.Required)
				attributes1.TagsAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount26, settingsFlagItem26 := range attributesItem.TagsAttribute.SettingsFlag {
					var settingsFlag53 tfTypes.SettingFlag
					settingsFlag53.Enabled = types.BoolPointerValue(settingsFlagItem26.Enabled)
					settingsFlag53.Name = types.StringPointerValue(settingsFlagItem26.Name)
					if settingsFlagCount26+1 > len(attributes1.TagsAttribute.SettingsFlag) {
						attributes1.TagsAttribute.SettingsFlag = append(attributes1.TagsAttribute.SettingsFlag, settingsFlag53)
					} else {
						attributes1.TagsAttribute.SettingsFlag[settingsFlagCount26].Enabled = settingsFlag53.Enabled
						attributes1.TagsAttribute.SettingsFlag[settingsFlagCount26].Name = settingsFlag53.Name
					}
				}
				attributes1.TagsAttribute.ShowInTable = types.BoolPointerValue(attributesItem.TagsAttribute.ShowInTable)
				attributes1.TagsAttribute.Sortable = types.BoolPointerValue(attributesItem.TagsAttribute.Sortable)
				attributes1.TagsAttribute.Suggestions = []types.String{}
				for _, v := range attributesItem.TagsAttribute.Suggestions {
					attributes1.TagsAttribute.Suggestions = append(attributes1.TagsAttribute.Suggestions, types.StringValue(v))
				}
				if attributesItem.TagsAttribute.Type != nil {
					attributes1.TagsAttribute.Type = types.StringValue(string(*attributesItem.TagsAttribute.Type))
				} else {
					attributes1.TagsAttribute.Type = types.StringNull()
				}
				attributes1.TagsAttribute.ValueFormatter = types.StringPointerValue(attributesItem.TagsAttribute.ValueFormatter)
			}
			if attributesItem.TextAttribute != nil {
				attributes1.TextAttribute = &tfTypes.TextAttribute{}
				attributes1.TextAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.TextAttribute.Purpose {
					attributes1.TextAttribute.Purpose = append(attributes1.TextAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.TextAttribute.Constraints == nil {
					attributes1.TextAttribute.Constraints = nil
				} else {
					attributes1.TextAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.TextAttribute.DefaultValue == nil {
					attributes1.TextAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult26, _ := json.Marshal(attributesItem.TextAttribute.DefaultValue)
					attributes1.TextAttribute.DefaultValue = types.StringValue(string(defaultValueResult26))
				}
				attributes1.TextAttribute.Deprecated = types.BoolPointerValue(attributesItem.TextAttribute.Deprecated)
				attributes1.TextAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.TextAttribute.EntityBuilderDisableEdit)
				attributes1.TextAttribute.FeatureFlag = types.StringPointerValue(attributesItem.TextAttribute.FeatureFlag)
				attributes1.TextAttribute.Group = types.StringPointerValue(attributesItem.TextAttribute.Group)
				attributes1.TextAttribute.Hidden = types.BoolPointerValue(attributesItem.TextAttribute.Hidden)
				attributes1.TextAttribute.HideLabel = types.BoolPointerValue(attributesItem.TextAttribute.HideLabel)
				attributes1.TextAttribute.Icon = types.StringPointerValue(attributesItem.TextAttribute.Icon)
				attributes1.TextAttribute.ID = types.StringPointerValue(attributesItem.TextAttribute.ID)
				if attributesItem.TextAttribute.InfoHelpers == nil {
					attributes1.TextAttribute.InfoHelpers = nil
				} else {
					attributes1.TextAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.TextAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.TextAttribute.InfoHelpers.HintCustomComponent)
					attributes1.TextAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.TextAttribute.InfoHelpers.HintText)
					attributes1.TextAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.TextAttribute.InfoHelpers.HintTextKey)
					attributes1.TextAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.TextAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.TextAttribute.Label = types.StringValue(attributesItem.TextAttribute.Label)
				attributes1.TextAttribute.Layout = types.StringPointerValue(attributesItem.TextAttribute.Layout)
				attributes1.TextAttribute.Multiline = types.BoolPointerValue(attributesItem.TextAttribute.Multiline)
				attributes1.TextAttribute.Name = types.StringValue(attributesItem.TextAttribute.Name)
				attributes1.TextAttribute.Order = types.Int64PointerValue(attributesItem.TextAttribute.Order)
				attributes1.TextAttribute.Placeholder = types.StringPointerValue(attributesItem.TextAttribute.Placeholder)
				attributes1.TextAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.TextAttribute.PreviewValueFormatter)
				attributes1.TextAttribute.Protected = types.BoolPointerValue(attributesItem.TextAttribute.Protected)
				attributes1.TextAttribute.Readonly = types.BoolPointerValue(attributesItem.TextAttribute.Readonly)
				attributes1.TextAttribute.RenderCondition = types.StringPointerValue(attributesItem.TextAttribute.RenderCondition)
				attributes1.TextAttribute.Required = types.BoolPointerValue(attributesItem.TextAttribute.Required)
				attributes1.TextAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount27, settingsFlagItem27 := range attributesItem.TextAttribute.SettingsFlag {
					var settingsFlag55 tfTypes.SettingFlag
					settingsFlag55.Enabled = types.BoolPointerValue(settingsFlagItem27.Enabled)
					settingsFlag55.Name = types.StringPointerValue(settingsFlagItem27.Name)
					if settingsFlagCount27+1 > len(attributes1.TextAttribute.SettingsFlag) {
						attributes1.TextAttribute.SettingsFlag = append(attributes1.TextAttribute.SettingsFlag, settingsFlag55)
					} else {
						attributes1.TextAttribute.SettingsFlag[settingsFlagCount27].Enabled = settingsFlag55.Enabled
						attributes1.TextAttribute.SettingsFlag[settingsFlagCount27].Name = settingsFlag55.Name
					}
				}
				attributes1.TextAttribute.ShowInTable = types.BoolPointerValue(attributesItem.TextAttribute.ShowInTable)
				attributes1.TextAttribute.Sortable = types.BoolPointerValue(attributesItem.TextAttribute.Sortable)
				if attributesItem.TextAttribute.Type != nil {
					attributes1.TextAttribute.Type = types.StringValue(string(*attributesItem.TextAttribute.Type))
				} else {
					attributes1.TextAttribute.Type = types.StringNull()
				}
				attributes1.TextAttribute.ValueFormatter = types.StringPointerValue(attributesItem.TextAttribute.ValueFormatter)
			}
			if attributesItem.UserRelationAttribute != nil {
				attributes1.UserRelationAttribute = &tfTypes.UserRelationAttribute{}
				attributes1.UserRelationAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.UserRelationAttribute.Purpose {
					attributes1.UserRelationAttribute.Purpose = append(attributes1.UserRelationAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.UserRelationAttribute.Constraints == nil {
					attributes1.UserRelationAttribute.Constraints = nil
				} else {
					attributes1.UserRelationAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.UserRelationAttribute.DefaultValue == nil {
					attributes1.UserRelationAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult27, _ := json.Marshal(attributesItem.UserRelationAttribute.DefaultValue)
					attributes1.UserRelationAttribute.DefaultValue = types.StringValue(string(defaultValueResult27))
				}
				attributes1.UserRelationAttribute.Deprecated = types.BoolPointerValue(attributesItem.UserRelationAttribute.Deprecated)
				attributes1.UserRelationAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.UserRelationAttribute.EntityBuilderDisableEdit)
				attributes1.UserRelationAttribute.FeatureFlag = types.StringPointerValue(attributesItem.UserRelationAttribute.FeatureFlag)
				attributes1.UserRelationAttribute.Group = types.StringPointerValue(attributesItem.UserRelationAttribute.Group)
				attributes1.UserRelationAttribute.Hidden = types.BoolPointerValue(attributesItem.UserRelationAttribute.Hidden)
				attributes1.UserRelationAttribute.HideLabel = types.BoolPointerValue(attributesItem.UserRelationAttribute.HideLabel)
				attributes1.UserRelationAttribute.Icon = types.StringPointerValue(attributesItem.UserRelationAttribute.Icon)
				attributes1.UserRelationAttribute.ID = types.StringPointerValue(attributesItem.UserRelationAttribute.ID)
				if attributesItem.UserRelationAttribute.InfoHelpers == nil {
					attributes1.UserRelationAttribute.InfoHelpers = nil
				} else {
					attributes1.UserRelationAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.UserRelationAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.UserRelationAttribute.InfoHelpers.HintCustomComponent)
					attributes1.UserRelationAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.UserRelationAttribute.InfoHelpers.HintText)
					attributes1.UserRelationAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.UserRelationAttribute.InfoHelpers.HintTextKey)
					attributes1.UserRelationAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.UserRelationAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.UserRelationAttribute.Label = types.StringValue(attributesItem.UserRelationAttribute.Label)
				attributes1.UserRelationAttribute.Layout = types.StringPointerValue(attributesItem.UserRelationAttribute.Layout)
				attributes1.UserRelationAttribute.Multiple = types.BoolPointerValue(attributesItem.UserRelationAttribute.Multiple)
				attributes1.UserRelationAttribute.Name = types.StringValue(attributesItem.UserRelationAttribute.Name)
				attributes1.UserRelationAttribute.Order = types.Int64PointerValue(attributesItem.UserRelationAttribute.Order)
				attributes1.UserRelationAttribute.Placeholder = types.StringPointerValue(attributesItem.UserRelationAttribute.Placeholder)
				attributes1.UserRelationAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.UserRelationAttribute.PreviewValueFormatter)
				attributes1.UserRelationAttribute.Protected = types.BoolPointerValue(attributesItem.UserRelationAttribute.Protected)
				attributes1.UserRelationAttribute.Readonly = types.BoolPointerValue(attributesItem.UserRelationAttribute.Readonly)
				attributes1.UserRelationAttribute.RenderCondition = types.StringPointerValue(attributesItem.UserRelationAttribute.RenderCondition)
				attributes1.UserRelationAttribute.Required = types.BoolPointerValue(attributesItem.UserRelationAttribute.Required)
				attributes1.UserRelationAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount28, settingsFlagItem28 := range attributesItem.UserRelationAttribute.SettingsFlag {
					var settingsFlag57 tfTypes.SettingFlag
					settingsFlag57.Enabled = types.BoolPointerValue(settingsFlagItem28.Enabled)
					settingsFlag57.Name = types.StringPointerValue(settingsFlagItem28.Name)
					if settingsFlagCount28+1 > len(attributes1.UserRelationAttribute.SettingsFlag) {
						attributes1.UserRelationAttribute.SettingsFlag = append(attributes1.UserRelationAttribute.SettingsFlag, settingsFlag57)
					} else {
						attributes1.UserRelationAttribute.SettingsFlag[settingsFlagCount28].Enabled = settingsFlag57.Enabled
						attributes1.UserRelationAttribute.SettingsFlag[settingsFlagCount28].Name = settingsFlag57.Name
					}
				}
				attributes1.UserRelationAttribute.ShowInTable = types.BoolPointerValue(attributesItem.UserRelationAttribute.ShowInTable)
				attributes1.UserRelationAttribute.Sortable = types.BoolPointerValue(attributesItem.UserRelationAttribute.Sortable)
				if attributesItem.UserRelationAttribute.Type != nil {
					attributes1.UserRelationAttribute.Type = types.StringValue(string(*attributesItem.UserRelationAttribute.Type))
				} else {
					attributes1.UserRelationAttribute.Type = types.StringNull()
				}
				attributes1.UserRelationAttribute.ValueFormatter = types.StringPointerValue(attributesItem.UserRelationAttribute.ValueFormatter)
			}
			if attributesCount+1 > len(r.Attributes) {
				r.Attributes = append(r.Attributes, attributes1)
			} else {
				r.Attributes[attributesCount].AddressRelationAttribute = attributes1.AddressRelationAttribute
				r.Attributes[attributesCount].AutomationAttribute = attributes1.AutomationAttribute
				r.Attributes[attributesCount].BooleanAttribute = attributes1.BooleanAttribute
				r.Attributes[attributesCount].ComputedAttribute = attributes1.ComputedAttribute
				r.Attributes[attributesCount].ConsentAttribute = attributes1.ConsentAttribute
				r.Attributes[attributesCount].CountryAttribute = attributes1.CountryAttribute
				r.Attributes[attributesCount].CurrencyAttribute = attributes1.CurrencyAttribute
				r.Attributes[attributesCount].DateAttribute = attributes1.DateAttribute
				r.Attributes[attributesCount].FileAttribute = attributes1.FileAttribute
				r.Attributes[attributesCount].InternalAttribute = attributes1.InternalAttribute
				r.Attributes[attributesCount].InternalUserAttribute = attributes1.InternalUserAttribute
				r.Attributes[attributesCount].InvitationEmailAttribute = attributes1.InvitationEmailAttribute
				r.Attributes[attributesCount].LinkAttribute = attributes1.LinkAttribute
				r.Attributes[attributesCount].MultiSelectAttribute = attributes1.MultiSelectAttribute
				r.Attributes[attributesCount].NumberAttribute = attributes1.NumberAttribute
				r.Attributes[attributesCount].OrderedListAttribute = attributes1.OrderedListAttribute
				r.Attributes[attributesCount].PartnerOrganisationAttribute = attributes1.PartnerOrganisationAttribute
				r.Attributes[attributesCount].PartnerStatusAttribute = attributes1.PartnerStatusAttribute
				r.Attributes[attributesCount].PaymentMethodRelationAttribute = attributes1.PaymentMethodRelationAttribute
				r.Attributes[attributesCount].PurposeAttribute = attributes1.PurposeAttribute
				r.Attributes[attributesCount].RelationAttribute = attributes1.RelationAttribute
				r.Attributes[attributesCount].RepeatableAttribute = attributes1.RepeatableAttribute
				r.Attributes[attributesCount].SelectAttribute = attributes1.SelectAttribute
				r.Attributes[attributesCount].SequenceAttribute = attributes1.SequenceAttribute
				r.Attributes[attributesCount].StatusAttribute = attributes1.StatusAttribute
				r.Attributes[attributesCount].TagsAttribute = attributes1.TagsAttribute
				r.Attributes[attributesCount].TextAttribute = attributes1.TextAttribute
				r.Attributes[attributesCount].UserRelationAttribute = attributes1.UserRelationAttribute
			}
		}
		r.Blueprint = types.StringPointerValue(resp.Blueprint)
		r.Capabilities = []tfTypes.EntityCapability{}
		if len(r.Capabilities) > len(resp.Capabilities) {
			r.Capabilities = r.Capabilities[:len(resp.Capabilities)]
		}
		for capabilitiesCount, capabilitiesItem := range resp.Capabilities {
			var capabilities1 tfTypes.EntityCapability
			capabilities1.Purpose = []types.String{}
			for _, v := range capabilitiesItem.Purpose {
				capabilities1.Purpose = append(capabilities1.Purpose, types.StringValue(v))
			}
			capabilities1.Attributes = []tfTypes.Attribute{}
			for attributesCount1, attributesItem1 := range capabilitiesItem.Attributes {
				var attributes3 tfTypes.Attribute
				if attributesItem1.AddressRelationAttribute != nil {
					attributes3.AddressRelationAttribute = &tfTypes.AddressRelationAttribute{}
					attributes3.AddressRelationAttribute.Purpose = []types.String{}
					for _, v := range attributesItem1.AddressRelationAttribute.Purpose {
						attributes3.AddressRelationAttribute.Purpose = append(attributes3.AddressRelationAttribute.Purpose, types.StringValue(v))
					}
					if attributesItem1.AddressRelationAttribute.Constraints == nil {
						attributes3.AddressRelationAttribute.Constraints = nil
					} else {
						attributes3.AddressRelationAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
					}
					if attributesItem1.AddressRelationAttribute.DefaultValue == nil {
						attributes3.AddressRelationAttribute.DefaultValue = types.StringNull()
					} else {
						defaultValueResult28, _ := json.Marshal(attributesItem1.AddressRelationAttribute.DefaultValue)
						attributes3.AddressRelationAttribute.DefaultValue = types.StringValue(string(defaultValueResult28))
					}
					attributes3.AddressRelationAttribute.Deprecated = types.BoolPointerValue(attributesItem1.AddressRelationAttribute.Deprecated)
					attributes3.AddressRelationAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem1.AddressRelationAttribute.EntityBuilderDisableEdit)
					attributes3.AddressRelationAttribute.FeatureFlag = types.StringPointerValue(attributesItem1.AddressRelationAttribute.FeatureFlag)
					attributes3.AddressRelationAttribute.Group = types.StringPointerValue(attributesItem1.AddressRelationAttribute.Group)
					attributes3.AddressRelationAttribute.HasPrimary = types.BoolPointerValue(attributesItem1.AddressRelationAttribute.HasPrimary)
					attributes3.AddressRelationAttribute.Hidden = types.BoolPointerValue(attributesItem1.AddressRelationAttribute.Hidden)
					attributes3.AddressRelationAttribute.HideLabel = types.BoolPointerValue(attributesItem1.AddressRelationAttribute.HideLabel)
					attributes3.AddressRelationAttribute.Icon = types.StringPointerValue(attributesItem1.AddressRelationAttribute.Icon)
					attributes3.AddressRelationAttribute.ID = types.StringPointerValue(attributesItem1.AddressRelationAttribute.ID)
					if attributesItem1.AddressRelationAttribute.InfoHelpers == nil {
						attributes3.AddressRelationAttribute.InfoHelpers = nil
					} else {
						attributes3.AddressRelationAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
						attributes3.AddressRelationAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem1.AddressRelationAttribute.InfoHelpers.HintCustomComponent)
						attributes3.AddressRelationAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem1.AddressRelationAttribute.InfoHelpers.HintText)
						attributes3.AddressRelationAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem1.AddressRelationAttribute.InfoHelpers.HintTextKey)
						attributes3.AddressRelationAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem1.AddressRelationAttribute.InfoHelpers.HintTooltipPlacement)
					}
					attributes3.AddressRelationAttribute.Label = types.StringValue(attributesItem1.AddressRelationAttribute.Label)
					attributes3.AddressRelationAttribute.Layout = types.StringPointerValue(attributesItem1.AddressRelationAttribute.Layout)
					attributes3.AddressRelationAttribute.Name = types.StringValue(attributesItem1.AddressRelationAttribute.Name)
					attributes3.AddressRelationAttribute.Order = types.Int64PointerValue(attributesItem1.AddressRelationAttribute.Order)
					attributes3.AddressRelationAttribute.Placeholder = types.StringPointerValue(attributesItem1.AddressRelationAttribute.Placeholder)
					attributes3.AddressRelationAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem1.AddressRelationAttribute.PreviewValueFormatter)
					attributes3.AddressRelationAttribute.Protected = types.BoolPointerValue(attributesItem1.AddressRelationAttribute.Protected)
					attributes3.AddressRelationAttribute.Readonly = types.BoolPointerValue(attributesItem1.AddressRelationAttribute.Readonly)
					attributes3.AddressRelationAttribute.RenderCondition = types.StringPointerValue(attributesItem1.AddressRelationAttribute.RenderCondition)
					attributes3.AddressRelationAttribute.Required = types.BoolPointerValue(attributesItem1.AddressRelationAttribute.Required)
					attributes3.AddressRelationAttribute.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount29, settingsFlagItem29 := range attributesItem1.AddressRelationAttribute.SettingsFlag {
						var settingsFlag59 tfTypes.SettingFlag
						settingsFlag59.Enabled = types.BoolPointerValue(settingsFlagItem29.Enabled)
						settingsFlag59.Name = types.StringPointerValue(settingsFlagItem29.Name)
						if settingsFlagCount29+1 > len(attributes3.AddressRelationAttribute.SettingsFlag) {
							attributes3.AddressRelationAttribute.SettingsFlag = append(attributes3.AddressRelationAttribute.SettingsFlag, settingsFlag59)
						} else {
							attributes3.AddressRelationAttribute.SettingsFlag[settingsFlagCount29].Enabled = settingsFlag59.Enabled
							attributes3.AddressRelationAttribute.SettingsFlag[settingsFlagCount29].Name = settingsFlag59.Name
						}
					}
					attributes3.AddressRelationAttribute.ShowInTable = types.BoolPointerValue(attributesItem1.AddressRelationAttribute.ShowInTable)
					attributes3.AddressRelationAttribute.Sortable = types.BoolPointerValue(attributesItem1.AddressRelationAttribute.Sortable)
					if attributesItem1.AddressRelationAttribute.Type != nil {
						attributes3.AddressRelationAttribute.Type = types.StringValue(string(*attributesItem1.AddressRelationAttribute.Type))
					} else {
						attributes3.AddressRelationAttribute.Type = types.StringNull()
					}
					attributes3.AddressRelationAttribute.ValueFormatter = types.StringPointerValue(attributesItem1.AddressRelationAttribute.ValueFormatter)
				}
				if attributesItem1.AutomationAttribute != nil {
					attributes3.AutomationAttribute = &tfTypes.AutomationAttribute{}
					attributes3.AutomationAttribute.Purpose = []types.String{}
					for _, v := range attributesItem1.AutomationAttribute.Purpose {
						attributes3.AutomationAttribute.Purpose = append(attributes3.AutomationAttribute.Purpose, types.StringValue(v))
					}
					if attributesItem1.AutomationAttribute.Constraints == nil {
						attributes3.AutomationAttribute.Constraints = nil
					} else {
						attributes3.AutomationAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
					}
					if attributesItem1.AutomationAttribute.DefaultValue == nil {
						attributes3.AutomationAttribute.DefaultValue = types.StringNull()
					} else {
						defaultValueResult29, _ := json.Marshal(attributesItem1.AutomationAttribute.DefaultValue)
						attributes3.AutomationAttribute.DefaultValue = types.StringValue(string(defaultValueResult29))
					}
					attributes3.AutomationAttribute.Deprecated = types.BoolPointerValue(attributesItem1.AutomationAttribute.Deprecated)
					attributes3.AutomationAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem1.AutomationAttribute.EntityBuilderDisableEdit)
					attributes3.AutomationAttribute.FeatureFlag = types.StringPointerValue(attributesItem1.AutomationAttribute.FeatureFlag)
					attributes3.AutomationAttribute.Group = types.StringPointerValue(attributesItem1.AutomationAttribute.Group)
					attributes3.AutomationAttribute.Hidden = types.BoolPointerValue(attributesItem1.AutomationAttribute.Hidden)
					attributes3.AutomationAttribute.HideLabel = types.BoolPointerValue(attributesItem1.AutomationAttribute.HideLabel)
					attributes3.AutomationAttribute.Icon = types.StringPointerValue(attributesItem1.AutomationAttribute.Icon)
					attributes3.AutomationAttribute.ID = types.StringPointerValue(attributesItem1.AutomationAttribute.ID)
					if attributesItem1.AutomationAttribute.InfoHelpers == nil {
						attributes3.AutomationAttribute.InfoHelpers = nil
					} else {
						attributes3.AutomationAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
						attributes3.AutomationAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem1.AutomationAttribute.InfoHelpers.HintCustomComponent)
						attributes3.AutomationAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem1.AutomationAttribute.InfoHelpers.HintText)
						attributes3.AutomationAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem1.AutomationAttribute.InfoHelpers.HintTextKey)
						attributes3.AutomationAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem1.AutomationAttribute.InfoHelpers.HintTooltipPlacement)
					}
					attributes3.AutomationAttribute.Label = types.StringValue(attributesItem1.AutomationAttribute.Label)
					attributes3.AutomationAttribute.Layout = types.StringPointerValue(attributesItem1.AutomationAttribute.Layout)
					attributes3.AutomationAttribute.Name = types.StringValue(attributesItem1.AutomationAttribute.Name)
					attributes3.AutomationAttribute.Order = types.Int64PointerValue(attributesItem1.AutomationAttribute.Order)
					attributes3.AutomationAttribute.Placeholder = types.StringPointerValue(attributesItem1.AutomationAttribute.Placeholder)
					attributes3.AutomationAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem1.AutomationAttribute.PreviewValueFormatter)
					attributes3.AutomationAttribute.Protected = types.BoolPointerValue(attributesItem1.AutomationAttribute.Protected)
					attributes3.AutomationAttribute.Readonly = types.BoolPointerValue(attributesItem1.AutomationAttribute.Readonly)
					attributes3.AutomationAttribute.RenderCondition = types.StringPointerValue(attributesItem1.AutomationAttribute.RenderCondition)
					attributes3.AutomationAttribute.Required = types.BoolPointerValue(attributesItem1.AutomationAttribute.Required)
					attributes3.AutomationAttribute.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount30, settingsFlagItem30 := range attributesItem1.AutomationAttribute.SettingsFlag {
						var settingsFlag61 tfTypes.SettingFlag
						settingsFlag61.Enabled = types.BoolPointerValue(settingsFlagItem30.Enabled)
						settingsFlag61.Name = types.StringPointerValue(settingsFlagItem30.Name)
						if settingsFlagCount30+1 > len(attributes3.AutomationAttribute.SettingsFlag) {
							attributes3.AutomationAttribute.SettingsFlag = append(attributes3.AutomationAttribute.SettingsFlag, settingsFlag61)
						} else {
							attributes3.AutomationAttribute.SettingsFlag[settingsFlagCount30].Enabled = settingsFlag61.Enabled
							attributes3.AutomationAttribute.SettingsFlag[settingsFlagCount30].Name = settingsFlag61.Name
						}
					}
					attributes3.AutomationAttribute.ShowInTable = types.BoolPointerValue(attributesItem1.AutomationAttribute.ShowInTable)
					attributes3.AutomationAttribute.Sortable = types.BoolPointerValue(attributesItem1.AutomationAttribute.Sortable)
					if attributesItem1.AutomationAttribute.Type != nil {
						attributes3.AutomationAttribute.Type = types.StringValue(string(*attributesItem1.AutomationAttribute.Type))
					} else {
						attributes3.AutomationAttribute.Type = types.StringNull()
					}
					attributes3.AutomationAttribute.ValueFormatter = types.StringPointerValue(attributesItem1.AutomationAttribute.ValueFormatter)
				}
				if attributesItem1.BooleanAttribute != nil {
					attributes3.BooleanAttribute = &tfTypes.BooleanAttribute{}
					attributes3.BooleanAttribute.Purpose = []types.String{}
					for _, v := range attributesItem1.BooleanAttribute.Purpose {
						attributes3.BooleanAttribute.Purpose = append(attributes3.BooleanAttribute.Purpose, types.StringValue(v))
					}
					if attributesItem1.BooleanAttribute.Constraints == nil {
						attributes3.BooleanAttribute.Constraints = nil
					} else {
						attributes3.BooleanAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
					}
					if attributesItem1.BooleanAttribute.DefaultValue == nil {
						attributes3.BooleanAttribute.DefaultValue = types.StringNull()
					} else {
						defaultValueResult30, _ := json.Marshal(attributesItem1.BooleanAttribute.DefaultValue)
						attributes3.BooleanAttribute.DefaultValue = types.StringValue(string(defaultValueResult30))
					}
					attributes3.BooleanAttribute.Deprecated = types.BoolPointerValue(attributesItem1.BooleanAttribute.Deprecated)
					attributes3.BooleanAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem1.BooleanAttribute.EntityBuilderDisableEdit)
					attributes3.BooleanAttribute.FeatureFlag = types.StringPointerValue(attributesItem1.BooleanAttribute.FeatureFlag)
					attributes3.BooleanAttribute.Group = types.StringPointerValue(attributesItem1.BooleanAttribute.Group)
					attributes3.BooleanAttribute.Hidden = types.BoolPointerValue(attributesItem1.BooleanAttribute.Hidden)
					attributes3.BooleanAttribute.HideLabel = types.BoolPointerValue(attributesItem1.BooleanAttribute.HideLabel)
					attributes3.BooleanAttribute.Icon = types.StringPointerValue(attributesItem1.BooleanAttribute.Icon)
					attributes3.BooleanAttribute.ID = types.StringPointerValue(attributesItem1.BooleanAttribute.ID)
					if attributesItem1.BooleanAttribute.InfoHelpers == nil {
						attributes3.BooleanAttribute.InfoHelpers = nil
					} else {
						attributes3.BooleanAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
						attributes3.BooleanAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem1.BooleanAttribute.InfoHelpers.HintCustomComponent)
						attributes3.BooleanAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem1.BooleanAttribute.InfoHelpers.HintText)
						attributes3.BooleanAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem1.BooleanAttribute.InfoHelpers.HintTextKey)
						attributes3.BooleanAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem1.BooleanAttribute.InfoHelpers.HintTooltipPlacement)
					}
					attributes3.BooleanAttribute.Label = types.StringValue(attributesItem1.BooleanAttribute.Label)
					attributes3.BooleanAttribute.Layout = types.StringPointerValue(attributesItem1.BooleanAttribute.Layout)
					attributes3.BooleanAttribute.Name = types.StringValue(attributesItem1.BooleanAttribute.Name)
					attributes3.BooleanAttribute.Order = types.Int64PointerValue(attributesItem1.BooleanAttribute.Order)
					attributes3.BooleanAttribute.Placeholder = types.StringPointerValue(attributesItem1.BooleanAttribute.Placeholder)
					attributes3.BooleanAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem1.BooleanAttribute.PreviewValueFormatter)
					attributes3.BooleanAttribute.Protected = types.BoolPointerValue(attributesItem1.BooleanAttribute.Protected)
					attributes3.BooleanAttribute.Readonly = types.BoolPointerValue(attributesItem1.BooleanAttribute.Readonly)
					attributes3.BooleanAttribute.RenderCondition = types.StringPointerValue(attributesItem1.BooleanAttribute.RenderCondition)
					attributes3.BooleanAttribute.Required = types.BoolPointerValue(attributesItem1.BooleanAttribute.Required)
					attributes3.BooleanAttribute.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount31, settingsFlagItem31 := range attributesItem1.BooleanAttribute.SettingsFlag {
						var settingsFlag63 tfTypes.SettingFlag
						settingsFlag63.Enabled = types.BoolPointerValue(settingsFlagItem31.Enabled)
						settingsFlag63.Name = types.StringPointerValue(settingsFlagItem31.Name)
						if settingsFlagCount31+1 > len(attributes3.BooleanAttribute.SettingsFlag) {
							attributes3.BooleanAttribute.SettingsFlag = append(attributes3.BooleanAttribute.SettingsFlag, settingsFlag63)
						} else {
							attributes3.BooleanAttribute.SettingsFlag[settingsFlagCount31].Enabled = settingsFlag63.Enabled
							attributes3.BooleanAttribute.SettingsFlag[settingsFlagCount31].Name = settingsFlag63.Name
						}
					}
					attributes3.BooleanAttribute.ShowInTable = types.BoolPointerValue(attributesItem1.BooleanAttribute.ShowInTable)
					attributes3.BooleanAttribute.Sortable = types.BoolPointerValue(attributesItem1.BooleanAttribute.Sortable)
					if attributesItem1.BooleanAttribute.Type != nil {
						attributes3.BooleanAttribute.Type = types.StringValue(string(*attributesItem1.BooleanAttribute.Type))
					} else {
						attributes3.BooleanAttribute.Type = types.StringNull()
					}
					attributes3.BooleanAttribute.ValueFormatter = types.StringPointerValue(attributesItem1.BooleanAttribute.ValueFormatter)
				}
				if attributesItem1.ComputedAttribute != nil {
					attributes3.ComputedAttribute = &tfTypes.ComputedAttribute{}
					attributes3.ComputedAttribute.Purpose = []types.String{}
					for _, v := range attributesItem1.ComputedAttribute.Purpose {
						attributes3.ComputedAttribute.Purpose = append(attributes3.ComputedAttribute.Purpose, types.StringValue(v))
					}
					if attributesItem1.ComputedAttribute.Constraints == nil {
						attributes3.ComputedAttribute.Constraints = nil
					} else {
						attributes3.ComputedAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
					}
					if attributesItem1.ComputedAttribute.DefaultValue == nil {
						attributes3.ComputedAttribute.DefaultValue = types.StringNull()
					} else {
						defaultValueResult31, _ := json.Marshal(attributesItem1.ComputedAttribute.DefaultValue)
						attributes3.ComputedAttribute.DefaultValue = types.StringValue(string(defaultValueResult31))
					}
					attributes3.ComputedAttribute.Deprecated = types.BoolPointerValue(attributesItem1.ComputedAttribute.Deprecated)
					attributes3.ComputedAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem1.ComputedAttribute.EntityBuilderDisableEdit)
					attributes3.ComputedAttribute.FeatureFlag = types.StringPointerValue(attributesItem1.ComputedAttribute.FeatureFlag)
					attributes3.ComputedAttribute.Group = types.StringPointerValue(attributesItem1.ComputedAttribute.Group)
					attributes3.ComputedAttribute.Hidden = types.BoolPointerValue(attributesItem1.ComputedAttribute.Hidden)
					attributes3.ComputedAttribute.HideLabel = types.BoolPointerValue(attributesItem1.ComputedAttribute.HideLabel)
					attributes3.ComputedAttribute.Icon = types.StringPointerValue(attributesItem1.ComputedAttribute.Icon)
					attributes3.ComputedAttribute.ID = types.StringPointerValue(attributesItem1.ComputedAttribute.ID)
					if attributesItem1.ComputedAttribute.InfoHelpers == nil {
						attributes3.ComputedAttribute.InfoHelpers = nil
					} else {
						attributes3.ComputedAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
						attributes3.ComputedAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem1.ComputedAttribute.InfoHelpers.HintCustomComponent)
						attributes3.ComputedAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem1.ComputedAttribute.InfoHelpers.HintText)
						attributes3.ComputedAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem1.ComputedAttribute.InfoHelpers.HintTextKey)
						attributes3.ComputedAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem1.ComputedAttribute.InfoHelpers.HintTooltipPlacement)
					}
					attributes3.ComputedAttribute.Label = types.StringValue(attributesItem1.ComputedAttribute.Label)
					attributes3.ComputedAttribute.Layout = types.StringPointerValue(attributesItem1.ComputedAttribute.Layout)
					attributes3.ComputedAttribute.Name = types.StringValue(attributesItem1.ComputedAttribute.Name)
					attributes3.ComputedAttribute.Order = types.Int64PointerValue(attributesItem1.ComputedAttribute.Order)
					attributes3.ComputedAttribute.Placeholder = types.StringPointerValue(attributesItem1.ComputedAttribute.Placeholder)
					attributes3.ComputedAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem1.ComputedAttribute.PreviewValueFormatter)
					attributes3.ComputedAttribute.Protected = types.BoolPointerValue(attributesItem1.ComputedAttribute.Protected)
					attributes3.ComputedAttribute.Readonly = types.BoolPointerValue(attributesItem1.ComputedAttribute.Readonly)
					attributes3.ComputedAttribute.RenderCondition = types.StringPointerValue(attributesItem1.ComputedAttribute.RenderCondition)
					attributes3.ComputedAttribute.Required = types.BoolPointerValue(attributesItem1.ComputedAttribute.Required)
					attributes3.ComputedAttribute.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount32, settingsFlagItem32 := range attributesItem1.ComputedAttribute.SettingsFlag {
						var settingsFlag65 tfTypes.SettingFlag
						settingsFlag65.Enabled = types.BoolPointerValue(settingsFlagItem32.Enabled)
						settingsFlag65.Name = types.StringPointerValue(settingsFlagItem32.Name)
						if settingsFlagCount32+1 > len(attributes3.ComputedAttribute.SettingsFlag) {
							attributes3.ComputedAttribute.SettingsFlag = append(attributes3.ComputedAttribute.SettingsFlag, settingsFlag65)
						} else {
							attributes3.ComputedAttribute.SettingsFlag[settingsFlagCount32].Enabled = settingsFlag65.Enabled
							attributes3.ComputedAttribute.SettingsFlag[settingsFlagCount32].Name = settingsFlag65.Name
						}
					}
					attributes3.ComputedAttribute.ShowInTable = types.BoolPointerValue(attributesItem1.ComputedAttribute.ShowInTable)
					attributes3.ComputedAttribute.Sortable = types.BoolPointerValue(attributesItem1.ComputedAttribute.Sortable)
					if attributesItem1.ComputedAttribute.Type != nil {
						attributes3.ComputedAttribute.Type = types.StringValue(string(*attributesItem1.ComputedAttribute.Type))
					} else {
						attributes3.ComputedAttribute.Type = types.StringNull()
					}
					attributes3.ComputedAttribute.ValueFormatter = types.StringPointerValue(attributesItem1.ComputedAttribute.ValueFormatter)
				}
				if attributesItem1.ConsentAttribute != nil {
					attributes3.ConsentAttribute = &tfTypes.ConsentAttribute{}
					attributes3.ConsentAttribute.Purpose = []types.String{}
					for _, v := range attributesItem1.ConsentAttribute.Purpose {
						attributes3.ConsentAttribute.Purpose = append(attributes3.ConsentAttribute.Purpose, types.StringValue(v))
					}
					if attributesItem1.ConsentAttribute.Constraints == nil {
						attributes3.ConsentAttribute.Constraints = nil
					} else {
						attributes3.ConsentAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
					}
					if attributesItem1.ConsentAttribute.DefaultValue == nil {
						attributes3.ConsentAttribute.DefaultValue = types.StringNull()
					} else {
						defaultValueResult32, _ := json.Marshal(attributesItem1.ConsentAttribute.DefaultValue)
						attributes3.ConsentAttribute.DefaultValue = types.StringValue(string(defaultValueResult32))
					}
					attributes3.ConsentAttribute.Deprecated = types.BoolPointerValue(attributesItem1.ConsentAttribute.Deprecated)
					attributes3.ConsentAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem1.ConsentAttribute.EntityBuilderDisableEdit)
					attributes3.ConsentAttribute.FeatureFlag = types.StringPointerValue(attributesItem1.ConsentAttribute.FeatureFlag)
					attributes3.ConsentAttribute.Group = types.StringPointerValue(attributesItem1.ConsentAttribute.Group)
					attributes3.ConsentAttribute.Hidden = types.BoolPointerValue(attributesItem1.ConsentAttribute.Hidden)
					attributes3.ConsentAttribute.HideLabel = types.BoolPointerValue(attributesItem1.ConsentAttribute.HideLabel)
					attributes3.ConsentAttribute.Icon = types.StringPointerValue(attributesItem1.ConsentAttribute.Icon)
					attributes3.ConsentAttribute.ID = types.StringPointerValue(attributesItem1.ConsentAttribute.ID)
					attributes3.ConsentAttribute.Identifiers = []types.String{}
					for _, v := range attributesItem1.ConsentAttribute.Identifiers {
						attributes3.ConsentAttribute.Identifiers = append(attributes3.ConsentAttribute.Identifiers, types.StringValue(v))
					}
					if attributesItem1.ConsentAttribute.InfoHelpers == nil {
						attributes3.ConsentAttribute.InfoHelpers = nil
					} else {
						attributes3.ConsentAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
						attributes3.ConsentAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem1.ConsentAttribute.InfoHelpers.HintCustomComponent)
						attributes3.ConsentAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem1.ConsentAttribute.InfoHelpers.HintText)
						attributes3.ConsentAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem1.ConsentAttribute.InfoHelpers.HintTextKey)
						attributes3.ConsentAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem1.ConsentAttribute.InfoHelpers.HintTooltipPlacement)
					}
					attributes3.ConsentAttribute.Label = types.StringValue(attributesItem1.ConsentAttribute.Label)
					attributes3.ConsentAttribute.Layout = types.StringPointerValue(attributesItem1.ConsentAttribute.Layout)
					attributes3.ConsentAttribute.Name = types.StringValue(attributesItem1.ConsentAttribute.Name)
					attributes3.ConsentAttribute.Order = types.Int64PointerValue(attributesItem1.ConsentAttribute.Order)
					attributes3.ConsentAttribute.Placeholder = types.StringPointerValue(attributesItem1.ConsentAttribute.Placeholder)
					attributes3.ConsentAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem1.ConsentAttribute.PreviewValueFormatter)
					attributes3.ConsentAttribute.Protected = types.BoolPointerValue(attributesItem1.ConsentAttribute.Protected)
					attributes3.ConsentAttribute.Readonly = types.BoolPointerValue(attributesItem1.ConsentAttribute.Readonly)
					attributes3.ConsentAttribute.RenderCondition = types.StringPointerValue(attributesItem1.ConsentAttribute.RenderCondition)
					attributes3.ConsentAttribute.Required = types.BoolPointerValue(attributesItem1.ConsentAttribute.Required)
					attributes3.ConsentAttribute.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount33, settingsFlagItem33 := range attributesItem1.ConsentAttribute.SettingsFlag {
						var settingsFlag67 tfTypes.SettingFlag
						settingsFlag67.Enabled = types.BoolPointerValue(settingsFlagItem33.Enabled)
						settingsFlag67.Name = types.StringPointerValue(settingsFlagItem33.Name)
						if settingsFlagCount33+1 > len(attributes3.ConsentAttribute.SettingsFlag) {
							attributes3.ConsentAttribute.SettingsFlag = append(attributes3.ConsentAttribute.SettingsFlag, settingsFlag67)
						} else {
							attributes3.ConsentAttribute.SettingsFlag[settingsFlagCount33].Enabled = settingsFlag67.Enabled
							attributes3.ConsentAttribute.SettingsFlag[settingsFlagCount33].Name = settingsFlag67.Name
						}
					}
					attributes3.ConsentAttribute.ShowInTable = types.BoolPointerValue(attributesItem1.ConsentAttribute.ShowInTable)
					attributes3.ConsentAttribute.Sortable = types.BoolPointerValue(attributesItem1.ConsentAttribute.Sortable)
					attributes3.ConsentAttribute.Topic = types.StringValue(attributesItem1.ConsentAttribute.Topic)
					attributes3.ConsentAttribute.Type = types.StringValue(string(attributesItem1.ConsentAttribute.Type))
					attributes3.ConsentAttribute.ValueFormatter = types.StringPointerValue(attributesItem1.ConsentAttribute.ValueFormatter)
				}
				if attributesItem1.CountryAttribute != nil {
					attributes3.CountryAttribute = &tfTypes.CountryAttribute{}
					attributes3.CountryAttribute.Purpose = []types.String{}
					for _, v := range attributesItem1.CountryAttribute.Purpose {
						attributes3.CountryAttribute.Purpose = append(attributes3.CountryAttribute.Purpose, types.StringValue(v))
					}
					if attributesItem1.CountryAttribute.Constraints == nil {
						attributes3.CountryAttribute.Constraints = nil
					} else {
						attributes3.CountryAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
					}
					if attributesItem1.CountryAttribute.DefaultValue == nil {
						attributes3.CountryAttribute.DefaultValue = types.StringNull()
					} else {
						defaultValueResult33, _ := json.Marshal(attributesItem1.CountryAttribute.DefaultValue)
						attributes3.CountryAttribute.DefaultValue = types.StringValue(string(defaultValueResult33))
					}
					attributes3.CountryAttribute.Deprecated = types.BoolPointerValue(attributesItem1.CountryAttribute.Deprecated)
					attributes3.CountryAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem1.CountryAttribute.EntityBuilderDisableEdit)
					attributes3.CountryAttribute.FeatureFlag = types.StringPointerValue(attributesItem1.CountryAttribute.FeatureFlag)
					attributes3.CountryAttribute.Group = types.StringPointerValue(attributesItem1.CountryAttribute.Group)
					attributes3.CountryAttribute.Hidden = types.BoolPointerValue(attributesItem1.CountryAttribute.Hidden)
					attributes3.CountryAttribute.HideLabel = types.BoolPointerValue(attributesItem1.CountryAttribute.HideLabel)
					attributes3.CountryAttribute.Icon = types.StringPointerValue(attributesItem1.CountryAttribute.Icon)
					attributes3.CountryAttribute.ID = types.StringPointerValue(attributesItem1.CountryAttribute.ID)
					if attributesItem1.CountryAttribute.InfoHelpers == nil {
						attributes3.CountryAttribute.InfoHelpers = nil
					} else {
						attributes3.CountryAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
						attributes3.CountryAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem1.CountryAttribute.InfoHelpers.HintCustomComponent)
						attributes3.CountryAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem1.CountryAttribute.InfoHelpers.HintText)
						attributes3.CountryAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem1.CountryAttribute.InfoHelpers.HintTextKey)
						attributes3.CountryAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem1.CountryAttribute.InfoHelpers.HintTooltipPlacement)
					}
					attributes3.CountryAttribute.Label = types.StringValue(attributesItem1.CountryAttribute.Label)
					attributes3.CountryAttribute.Layout = types.StringPointerValue(attributesItem1.CountryAttribute.Layout)
					attributes3.CountryAttribute.Name = types.StringValue(attributesItem1.CountryAttribute.Name)
					attributes3.CountryAttribute.Order = types.Int64PointerValue(attributesItem1.CountryAttribute.Order)
					attributes3.CountryAttribute.Placeholder = types.StringPointerValue(attributesItem1.CountryAttribute.Placeholder)
					attributes3.CountryAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem1.CountryAttribute.PreviewValueFormatter)
					attributes3.CountryAttribute.Protected = types.BoolPointerValue(attributesItem1.CountryAttribute.Protected)
					attributes3.CountryAttribute.Readonly = types.BoolPointerValue(attributesItem1.CountryAttribute.Readonly)
					attributes3.CountryAttribute.RenderCondition = types.StringPointerValue(attributesItem1.CountryAttribute.RenderCondition)
					attributes3.CountryAttribute.Required = types.BoolPointerValue(attributesItem1.CountryAttribute.Required)
					attributes3.CountryAttribute.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount34, settingsFlagItem34 := range attributesItem1.CountryAttribute.SettingsFlag {
						var settingsFlag69 tfTypes.SettingFlag
						settingsFlag69.Enabled = types.BoolPointerValue(settingsFlagItem34.Enabled)
						settingsFlag69.Name = types.StringPointerValue(settingsFlagItem34.Name)
						if settingsFlagCount34+1 > len(attributes3.CountryAttribute.SettingsFlag) {
							attributes3.CountryAttribute.SettingsFlag = append(attributes3.CountryAttribute.SettingsFlag, settingsFlag69)
						} else {
							attributes3.CountryAttribute.SettingsFlag[settingsFlagCount34].Enabled = settingsFlag69.Enabled
							attributes3.CountryAttribute.SettingsFlag[settingsFlagCount34].Name = settingsFlag69.Name
						}
					}
					attributes3.CountryAttribute.ShowInTable = types.BoolPointerValue(attributesItem1.CountryAttribute.ShowInTable)
					attributes3.CountryAttribute.Sortable = types.BoolPointerValue(attributesItem1.CountryAttribute.Sortable)
					if attributesItem1.CountryAttribute.Type != nil {
						attributes3.CountryAttribute.Type = types.StringValue(string(*attributesItem1.CountryAttribute.Type))
					} else {
						attributes3.CountryAttribute.Type = types.StringNull()
					}
					attributes3.CountryAttribute.ValueFormatter = types.StringPointerValue(attributesItem1.CountryAttribute.ValueFormatter)
				}
				if attributesItem1.CurrencyAttribute != nil {
					attributes3.CurrencyAttribute = &tfTypes.CurrencyAttribute{}
					attributes3.CurrencyAttribute.Purpose = []types.String{}
					for _, v := range attributesItem1.CurrencyAttribute.Purpose {
						attributes3.CurrencyAttribute.Purpose = append(attributes3.CurrencyAttribute.Purpose, types.StringValue(v))
					}
					if attributesItem1.CurrencyAttribute.Constraints == nil {
						attributes3.CurrencyAttribute.Constraints = nil
					} else {
						attributes3.CurrencyAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
					}
					attributes3.CurrencyAttribute.Currency = []tfTypes.Currency{}
					for currencyCount1, currencyItem1 := range attributesItem1.CurrencyAttribute.Currency {
						var currency3 tfTypes.Currency
						if currencyItem1.One != nil {
							currency3.One = &tfTypes.One{}
							currency3.One.Code = types.StringValue(currencyItem1.One.Code)
							currency3.One.Description = types.StringValue(currencyItem1.One.Description)
							currency3.One.Flag = types.StringPointerValue(currencyItem1.One.Flag)
							currency3.One.Symbol = types.StringValue(currencyItem1.One.Symbol)
						}
						if currencyCount1+1 > len(attributes3.CurrencyAttribute.Currency) {
							attributes3.CurrencyAttribute.Currency = append(attributes3.CurrencyAttribute.Currency, currency3)
						} else {
							attributes3.CurrencyAttribute.Currency[currencyCount1].One = currency3.One
						}
					}
					attributes3.CurrencyAttribute.CurrencySelectorOnly = types.BoolPointerValue(attributesItem1.CurrencyAttribute.CurrencySelectorOnly)
					if attributesItem1.CurrencyAttribute.DefaultValue == nil {
						attributes3.CurrencyAttribute.DefaultValue = types.StringNull()
					} else {
						defaultValueResult34, _ := json.Marshal(attributesItem1.CurrencyAttribute.DefaultValue)
						attributes3.CurrencyAttribute.DefaultValue = types.StringValue(string(defaultValueResult34))
					}
					attributes3.CurrencyAttribute.Deprecated = types.BoolPointerValue(attributesItem1.CurrencyAttribute.Deprecated)
					attributes3.CurrencyAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem1.CurrencyAttribute.EntityBuilderDisableEdit)
					attributes3.CurrencyAttribute.FeatureFlag = types.StringPointerValue(attributesItem1.CurrencyAttribute.FeatureFlag)
					attributes3.CurrencyAttribute.Group = types.StringPointerValue(attributesItem1.CurrencyAttribute.Group)
					attributes3.CurrencyAttribute.Hidden = types.BoolPointerValue(attributesItem1.CurrencyAttribute.Hidden)
					attributes3.CurrencyAttribute.HideLabel = types.BoolPointerValue(attributesItem1.CurrencyAttribute.HideLabel)
					attributes3.CurrencyAttribute.Icon = types.StringPointerValue(attributesItem1.CurrencyAttribute.Icon)
					attributes3.CurrencyAttribute.ID = types.StringPointerValue(attributesItem1.CurrencyAttribute.ID)
					if attributesItem1.CurrencyAttribute.InfoHelpers == nil {
						attributes3.CurrencyAttribute.InfoHelpers = nil
					} else {
						attributes3.CurrencyAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
						attributes3.CurrencyAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem1.CurrencyAttribute.InfoHelpers.HintCustomComponent)
						attributes3.CurrencyAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem1.CurrencyAttribute.InfoHelpers.HintText)
						attributes3.CurrencyAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem1.CurrencyAttribute.InfoHelpers.HintTextKey)
						attributes3.CurrencyAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem1.CurrencyAttribute.InfoHelpers.HintTooltipPlacement)
					}
					attributes3.CurrencyAttribute.Label = types.StringValue(attributesItem1.CurrencyAttribute.Label)
					attributes3.CurrencyAttribute.Layout = types.StringPointerValue(attributesItem1.CurrencyAttribute.Layout)
					attributes3.CurrencyAttribute.Name = types.StringValue(attributesItem1.CurrencyAttribute.Name)
					attributes3.CurrencyAttribute.Order = types.Int64PointerValue(attributesItem1.CurrencyAttribute.Order)
					attributes3.CurrencyAttribute.Placeholder = types.StringPointerValue(attributesItem1.CurrencyAttribute.Placeholder)
					attributes3.CurrencyAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem1.CurrencyAttribute.PreviewValueFormatter)
					attributes3.CurrencyAttribute.Protected = types.BoolPointerValue(attributesItem1.CurrencyAttribute.Protected)
					attributes3.CurrencyAttribute.Readonly = types.BoolPointerValue(attributesItem1.CurrencyAttribute.Readonly)
					attributes3.CurrencyAttribute.RenderCondition = types.StringPointerValue(attributesItem1.CurrencyAttribute.RenderCondition)
					attributes3.CurrencyAttribute.Required = types.BoolPointerValue(attributesItem1.CurrencyAttribute.Required)
					attributes3.CurrencyAttribute.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount35, settingsFlagItem35 := range attributesItem1.CurrencyAttribute.SettingsFlag {
						var settingsFlag71 tfTypes.SettingFlag
						settingsFlag71.Enabled = types.BoolPointerValue(settingsFlagItem35.Enabled)
						settingsFlag71.Name = types.StringPointerValue(settingsFlagItem35.Name)
						if settingsFlagCount35+1 > len(attributes3.CurrencyAttribute.SettingsFlag) {
							attributes3.CurrencyAttribute.SettingsFlag = append(attributes3.CurrencyAttribute.SettingsFlag, settingsFlag71)
						} else {
							attributes3.CurrencyAttribute.SettingsFlag[settingsFlagCount35].Enabled = settingsFlag71.Enabled
							attributes3.CurrencyAttribute.SettingsFlag[settingsFlagCount35].Name = settingsFlag71.Name
						}
					}
					attributes3.CurrencyAttribute.ShowInTable = types.BoolPointerValue(attributesItem1.CurrencyAttribute.ShowInTable)
					attributes3.CurrencyAttribute.Sortable = types.BoolPointerValue(attributesItem1.CurrencyAttribute.Sortable)
					attributes3.CurrencyAttribute.Type = types.StringValue(string(attributesItem1.CurrencyAttribute.Type))
					attributes3.CurrencyAttribute.ValueFormatter = types.StringPointerValue(attributesItem1.CurrencyAttribute.ValueFormatter)
				}
				if attributesItem1.DateAttribute != nil {
					attributes3.DateAttribute = &tfTypes.DateAttribute{}
					attributes3.DateAttribute.Purpose = []types.String{}
					for _, v := range attributesItem1.DateAttribute.Purpose {
						attributes3.DateAttribute.Purpose = append(attributes3.DateAttribute.Purpose, types.StringValue(v))
					}
					if attributesItem1.DateAttribute.Constraints == nil {
						attributes3.DateAttribute.Constraints = nil
					} else {
						attributes3.DateAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
					}
					if attributesItem1.DateAttribute.DefaultValue == nil {
						attributes3.DateAttribute.DefaultValue = types.StringNull()
					} else {
						defaultValueResult35, _ := json.Marshal(attributesItem1.DateAttribute.DefaultValue)
						attributes3.DateAttribute.DefaultValue = types.StringValue(string(defaultValueResult35))
					}
					attributes3.DateAttribute.Deprecated = types.BoolPointerValue(attributesItem1.DateAttribute.Deprecated)
					attributes3.DateAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem1.DateAttribute.EntityBuilderDisableEdit)
					attributes3.DateAttribute.FeatureFlag = types.StringPointerValue(attributesItem1.DateAttribute.FeatureFlag)
					attributes3.DateAttribute.Group = types.StringPointerValue(attributesItem1.DateAttribute.Group)
					attributes3.DateAttribute.Hidden = types.BoolPointerValue(attributesItem1.DateAttribute.Hidden)
					attributes3.DateAttribute.HideLabel = types.BoolPointerValue(attributesItem1.DateAttribute.HideLabel)
					attributes3.DateAttribute.Icon = types.StringPointerValue(attributesItem1.DateAttribute.Icon)
					attributes3.DateAttribute.ID = types.StringPointerValue(attributesItem1.DateAttribute.ID)
					if attributesItem1.DateAttribute.InfoHelpers == nil {
						attributes3.DateAttribute.InfoHelpers = nil
					} else {
						attributes3.DateAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
						attributes3.DateAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem1.DateAttribute.InfoHelpers.HintCustomComponent)
						attributes3.DateAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem1.DateAttribute.InfoHelpers.HintText)
						attributes3.DateAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem1.DateAttribute.InfoHelpers.HintTextKey)
						attributes3.DateAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem1.DateAttribute.InfoHelpers.HintTooltipPlacement)
					}
					attributes3.DateAttribute.Label = types.StringValue(attributesItem1.DateAttribute.Label)
					attributes3.DateAttribute.Layout = types.StringPointerValue(attributesItem1.DateAttribute.Layout)
					attributes3.DateAttribute.Name = types.StringValue(attributesItem1.DateAttribute.Name)
					attributes3.DateAttribute.Order = types.Int64PointerValue(attributesItem1.DateAttribute.Order)
					attributes3.DateAttribute.Placeholder = types.StringPointerValue(attributesItem1.DateAttribute.Placeholder)
					attributes3.DateAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem1.DateAttribute.PreviewValueFormatter)
					attributes3.DateAttribute.Protected = types.BoolPointerValue(attributesItem1.DateAttribute.Protected)
					attributes3.DateAttribute.Readonly = types.BoolPointerValue(attributesItem1.DateAttribute.Readonly)
					attributes3.DateAttribute.RenderCondition = types.StringPointerValue(attributesItem1.DateAttribute.RenderCondition)
					attributes3.DateAttribute.Required = types.BoolPointerValue(attributesItem1.DateAttribute.Required)
					attributes3.DateAttribute.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount36, settingsFlagItem36 := range attributesItem1.DateAttribute.SettingsFlag {
						var settingsFlag73 tfTypes.SettingFlag
						settingsFlag73.Enabled = types.BoolPointerValue(settingsFlagItem36.Enabled)
						settingsFlag73.Name = types.StringPointerValue(settingsFlagItem36.Name)
						if settingsFlagCount36+1 > len(attributes3.DateAttribute.SettingsFlag) {
							attributes3.DateAttribute.SettingsFlag = append(attributes3.DateAttribute.SettingsFlag, settingsFlag73)
						} else {
							attributes3.DateAttribute.SettingsFlag[settingsFlagCount36].Enabled = settingsFlag73.Enabled
							attributes3.DateAttribute.SettingsFlag[settingsFlagCount36].Name = settingsFlag73.Name
						}
					}
					attributes3.DateAttribute.ShowInTable = types.BoolPointerValue(attributesItem1.DateAttribute.ShowInTable)
					attributes3.DateAttribute.Sortable = types.BoolPointerValue(attributesItem1.DateAttribute.Sortable)
					if attributesItem1.DateAttribute.Type != nil {
						attributes3.DateAttribute.Type = types.StringValue(string(*attributesItem1.DateAttribute.Type))
					} else {
						attributes3.DateAttribute.Type = types.StringNull()
					}
					attributes3.DateAttribute.ValueFormatter = types.StringPointerValue(attributesItem1.DateAttribute.ValueFormatter)
				}
				if attributesItem1.FileAttribute != nil {
					attributes3.FileAttribute = &tfTypes.FileAttribute{}
					attributes3.FileAttribute.Purpose = []types.String{}
					for _, v := range attributesItem1.FileAttribute.Purpose {
						attributes3.FileAttribute.Purpose = append(attributes3.FileAttribute.Purpose, types.StringValue(v))
					}
					attributes3.FileAttribute.AllowedExtensions = []types.String{}
					for _, v := range attributesItem1.FileAttribute.AllowedExtensions {
						attributes3.FileAttribute.AllowedExtensions = append(attributes3.FileAttribute.AllowedExtensions, types.StringValue(v))
					}
					if attributesItem1.FileAttribute.Constraints == nil {
						attributes3.FileAttribute.Constraints = nil
					} else {
						attributes3.FileAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
					}
					if attributesItem1.FileAttribute.DefaultAccessControl != nil {
						attributes3.FileAttribute.DefaultAccessControl = types.StringValue(string(*attributesItem1.FileAttribute.DefaultAccessControl))
					} else {
						attributes3.FileAttribute.DefaultAccessControl = types.StringNull()
					}
					if attributesItem1.FileAttribute.DefaultValue == nil {
						attributes3.FileAttribute.DefaultValue = types.StringNull()
					} else {
						defaultValueResult36, _ := json.Marshal(attributesItem1.FileAttribute.DefaultValue)
						attributes3.FileAttribute.DefaultValue = types.StringValue(string(defaultValueResult36))
					}
					attributes3.FileAttribute.Deprecated = types.BoolPointerValue(attributesItem1.FileAttribute.Deprecated)
					attributes3.FileAttribute.DisplayImagesLandscaped = types.BoolPointerValue(attributesItem1.FileAttribute.DisplayImagesLandscaped)
					attributes3.FileAttribute.EnableDescription = types.BoolPointerValue(attributesItem1.FileAttribute.EnableDescription)
					attributes3.FileAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem1.FileAttribute.EntityBuilderDisableEdit)
					attributes3.FileAttribute.FeatureFlag = types.StringPointerValue(attributesItem1.FileAttribute.FeatureFlag)
					attributes3.FileAttribute.Group = types.StringPointerValue(attributesItem1.FileAttribute.Group)
					attributes3.FileAttribute.Hidden = types.BoolPointerValue(attributesItem1.FileAttribute.Hidden)
					attributes3.FileAttribute.HideLabel = types.BoolPointerValue(attributesItem1.FileAttribute.HideLabel)
					attributes3.FileAttribute.Icon = types.StringPointerValue(attributesItem1.FileAttribute.Icon)
					attributes3.FileAttribute.ID = types.StringPointerValue(attributesItem1.FileAttribute.ID)
					if attributesItem1.FileAttribute.InfoHelpers == nil {
						attributes3.FileAttribute.InfoHelpers = nil
					} else {
						attributes3.FileAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
						attributes3.FileAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem1.FileAttribute.InfoHelpers.HintCustomComponent)
						attributes3.FileAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem1.FileAttribute.InfoHelpers.HintText)
						attributes3.FileAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem1.FileAttribute.InfoHelpers.HintTextKey)
						attributes3.FileAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem1.FileAttribute.InfoHelpers.HintTooltipPlacement)
					}
					attributes3.FileAttribute.Label = types.StringValue(attributesItem1.FileAttribute.Label)
					attributes3.FileAttribute.Layout = types.StringPointerValue(attributesItem1.FileAttribute.Layout)
					attributes3.FileAttribute.Multiple = types.BoolPointerValue(attributesItem1.FileAttribute.Multiple)
					attributes3.FileAttribute.Name = types.StringValue(attributesItem1.FileAttribute.Name)
					attributes3.FileAttribute.Order = types.Int64PointerValue(attributesItem1.FileAttribute.Order)
					attributes3.FileAttribute.Placeholder = types.StringPointerValue(attributesItem1.FileAttribute.Placeholder)
					attributes3.FileAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem1.FileAttribute.PreviewValueFormatter)
					attributes3.FileAttribute.Protected = types.BoolPointerValue(attributesItem1.FileAttribute.Protected)
					attributes3.FileAttribute.Readonly = types.BoolPointerValue(attributesItem1.FileAttribute.Readonly)
					attributes3.FileAttribute.RenderCondition = types.StringPointerValue(attributesItem1.FileAttribute.RenderCondition)
					attributes3.FileAttribute.Required = types.BoolPointerValue(attributesItem1.FileAttribute.Required)
					attributes3.FileAttribute.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount37, settingsFlagItem37 := range attributesItem1.FileAttribute.SettingsFlag {
						var settingsFlag75 tfTypes.SettingFlag
						settingsFlag75.Enabled = types.BoolPointerValue(settingsFlagItem37.Enabled)
						settingsFlag75.Name = types.StringPointerValue(settingsFlagItem37.Name)
						if settingsFlagCount37+1 > len(attributes3.FileAttribute.SettingsFlag) {
							attributes3.FileAttribute.SettingsFlag = append(attributes3.FileAttribute.SettingsFlag, settingsFlag75)
						} else {
							attributes3.FileAttribute.SettingsFlag[settingsFlagCount37].Enabled = settingsFlag75.Enabled
							attributes3.FileAttribute.SettingsFlag[settingsFlagCount37].Name = settingsFlag75.Name
						}
					}
					attributes3.FileAttribute.ShowInTable = types.BoolPointerValue(attributesItem1.FileAttribute.ShowInTable)
					attributes3.FileAttribute.Sortable = types.BoolPointerValue(attributesItem1.FileAttribute.Sortable)
					attributes3.FileAttribute.Type = types.StringValue(string(attributesItem1.FileAttribute.Type))
					attributes3.FileAttribute.ValueFormatter = types.StringPointerValue(attributesItem1.FileAttribute.ValueFormatter)
				}
				if attributesItem1.InternalAttribute != nil {
					attributes3.InternalAttribute = &tfTypes.InternalAttribute{}
					attributes3.InternalAttribute.Purpose = []types.String{}
					for _, v := range attributesItem1.InternalAttribute.Purpose {
						attributes3.InternalAttribute.Purpose = append(attributes3.InternalAttribute.Purpose, types.StringValue(v))
					}
					if attributesItem1.InternalAttribute.Constraints == nil {
						attributes3.InternalAttribute.Constraints = nil
					} else {
						attributes3.InternalAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
					}
					if attributesItem1.InternalAttribute.DefaultValue == nil {
						attributes3.InternalAttribute.DefaultValue = types.StringNull()
					} else {
						defaultValueResult37, _ := json.Marshal(attributesItem1.InternalAttribute.DefaultValue)
						attributes3.InternalAttribute.DefaultValue = types.StringValue(string(defaultValueResult37))
					}
					attributes3.InternalAttribute.Deprecated = types.BoolPointerValue(attributesItem1.InternalAttribute.Deprecated)
					attributes3.InternalAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem1.InternalAttribute.EntityBuilderDisableEdit)
					attributes3.InternalAttribute.FeatureFlag = types.StringPointerValue(attributesItem1.InternalAttribute.FeatureFlag)
					attributes3.InternalAttribute.Group = types.StringPointerValue(attributesItem1.InternalAttribute.Group)
					attributes3.InternalAttribute.Hidden = types.BoolPointerValue(attributesItem1.InternalAttribute.Hidden)
					attributes3.InternalAttribute.HideLabel = types.BoolPointerValue(attributesItem1.InternalAttribute.HideLabel)
					attributes3.InternalAttribute.Icon = types.StringPointerValue(attributesItem1.InternalAttribute.Icon)
					attributes3.InternalAttribute.ID = types.StringPointerValue(attributesItem1.InternalAttribute.ID)
					if attributesItem1.InternalAttribute.InfoHelpers == nil {
						attributes3.InternalAttribute.InfoHelpers = nil
					} else {
						attributes3.InternalAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
						attributes3.InternalAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem1.InternalAttribute.InfoHelpers.HintCustomComponent)
						attributes3.InternalAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem1.InternalAttribute.InfoHelpers.HintText)
						attributes3.InternalAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem1.InternalAttribute.InfoHelpers.HintTextKey)
						attributes3.InternalAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem1.InternalAttribute.InfoHelpers.HintTooltipPlacement)
					}
					attributes3.InternalAttribute.Label = types.StringValue(attributesItem1.InternalAttribute.Label)
					attributes3.InternalAttribute.Layout = types.StringPointerValue(attributesItem1.InternalAttribute.Layout)
					attributes3.InternalAttribute.Name = types.StringValue(attributesItem1.InternalAttribute.Name)
					attributes3.InternalAttribute.Order = types.Int64PointerValue(attributesItem1.InternalAttribute.Order)
					attributes3.InternalAttribute.Placeholder = types.StringPointerValue(attributesItem1.InternalAttribute.Placeholder)
					attributes3.InternalAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem1.InternalAttribute.PreviewValueFormatter)
					attributes3.InternalAttribute.Protected = types.BoolPointerValue(attributesItem1.InternalAttribute.Protected)
					attributes3.InternalAttribute.Readonly = types.BoolPointerValue(attributesItem1.InternalAttribute.Readonly)
					attributes3.InternalAttribute.RenderCondition = types.StringPointerValue(attributesItem1.InternalAttribute.RenderCondition)
					attributes3.InternalAttribute.Required = types.BoolPointerValue(attributesItem1.InternalAttribute.Required)
					attributes3.InternalAttribute.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount38, settingsFlagItem38 := range attributesItem1.InternalAttribute.SettingsFlag {
						var settingsFlag77 tfTypes.SettingFlag
						settingsFlag77.Enabled = types.BoolPointerValue(settingsFlagItem38.Enabled)
						settingsFlag77.Name = types.StringPointerValue(settingsFlagItem38.Name)
						if settingsFlagCount38+1 > len(attributes3.InternalAttribute.SettingsFlag) {
							attributes3.InternalAttribute.SettingsFlag = append(attributes3.InternalAttribute.SettingsFlag, settingsFlag77)
						} else {
							attributes3.InternalAttribute.SettingsFlag[settingsFlagCount38].Enabled = settingsFlag77.Enabled
							attributes3.InternalAttribute.SettingsFlag[settingsFlagCount38].Name = settingsFlag77.Name
						}
					}
					attributes3.InternalAttribute.ShowInTable = types.BoolPointerValue(attributesItem1.InternalAttribute.ShowInTable)
					attributes3.InternalAttribute.Sortable = types.BoolPointerValue(attributesItem1.InternalAttribute.Sortable)
					if attributesItem1.InternalAttribute.Type != nil {
						attributes3.InternalAttribute.Type = types.StringValue(string(*attributesItem1.InternalAttribute.Type))
					} else {
						attributes3.InternalAttribute.Type = types.StringNull()
					}
					attributes3.InternalAttribute.ValueFormatter = types.StringPointerValue(attributesItem1.InternalAttribute.ValueFormatter)
				}
				if attributesItem1.InternalUserAttribute != nil {
					attributes3.InternalUserAttribute = &tfTypes.InternalUserAttribute{}
					attributes3.InternalUserAttribute.Purpose = []types.String{}
					for _, v := range attributesItem1.InternalUserAttribute.Purpose {
						attributes3.InternalUserAttribute.Purpose = append(attributes3.InternalUserAttribute.Purpose, types.StringValue(v))
					}
					if attributesItem1.InternalUserAttribute.Constraints == nil {
						attributes3.InternalUserAttribute.Constraints = nil
					} else {
						attributes3.InternalUserAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
					}
					if attributesItem1.InternalUserAttribute.DefaultValue == nil {
						attributes3.InternalUserAttribute.DefaultValue = types.StringNull()
					} else {
						defaultValueResult38, _ := json.Marshal(attributesItem1.InternalUserAttribute.DefaultValue)
						attributes3.InternalUserAttribute.DefaultValue = types.StringValue(string(defaultValueResult38))
					}
					attributes3.InternalUserAttribute.Deprecated = types.BoolPointerValue(attributesItem1.InternalUserAttribute.Deprecated)
					attributes3.InternalUserAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem1.InternalUserAttribute.EntityBuilderDisableEdit)
					attributes3.InternalUserAttribute.FeatureFlag = types.StringPointerValue(attributesItem1.InternalUserAttribute.FeatureFlag)
					attributes3.InternalUserAttribute.Group = types.StringPointerValue(attributesItem1.InternalUserAttribute.Group)
					attributes3.InternalUserAttribute.Hidden = types.BoolPointerValue(attributesItem1.InternalUserAttribute.Hidden)
					attributes3.InternalUserAttribute.HideLabel = types.BoolPointerValue(attributesItem1.InternalUserAttribute.HideLabel)
					attributes3.InternalUserAttribute.Icon = types.StringPointerValue(attributesItem1.InternalUserAttribute.Icon)
					attributes3.InternalUserAttribute.ID = types.StringPointerValue(attributesItem1.InternalUserAttribute.ID)
					if attributesItem1.InternalUserAttribute.InfoHelpers == nil {
						attributes3.InternalUserAttribute.InfoHelpers = nil
					} else {
						attributes3.InternalUserAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
						attributes3.InternalUserAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem1.InternalUserAttribute.InfoHelpers.HintCustomComponent)
						attributes3.InternalUserAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem1.InternalUserAttribute.InfoHelpers.HintText)
						attributes3.InternalUserAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem1.InternalUserAttribute.InfoHelpers.HintTextKey)
						attributes3.InternalUserAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem1.InternalUserAttribute.InfoHelpers.HintTooltipPlacement)
					}
					attributes3.InternalUserAttribute.Label = types.StringValue(attributesItem1.InternalUserAttribute.Label)
					attributes3.InternalUserAttribute.Layout = types.StringPointerValue(attributesItem1.InternalUserAttribute.Layout)
					attributes3.InternalUserAttribute.Name = types.StringValue(attributesItem1.InternalUserAttribute.Name)
					attributes3.InternalUserAttribute.Order = types.Int64PointerValue(attributesItem1.InternalUserAttribute.Order)
					attributes3.InternalUserAttribute.Placeholder = types.StringPointerValue(attributesItem1.InternalUserAttribute.Placeholder)
					attributes3.InternalUserAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem1.InternalUserAttribute.PreviewValueFormatter)
					attributes3.InternalUserAttribute.Protected = types.BoolPointerValue(attributesItem1.InternalUserAttribute.Protected)
					attributes3.InternalUserAttribute.Readonly = types.BoolPointerValue(attributesItem1.InternalUserAttribute.Readonly)
					attributes3.InternalUserAttribute.RenderCondition = types.StringPointerValue(attributesItem1.InternalUserAttribute.RenderCondition)
					attributes3.InternalUserAttribute.Required = types.BoolPointerValue(attributesItem1.InternalUserAttribute.Required)
					attributes3.InternalUserAttribute.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount39, settingsFlagItem39 := range attributesItem1.InternalUserAttribute.SettingsFlag {
						var settingsFlag79 tfTypes.SettingFlag
						settingsFlag79.Enabled = types.BoolPointerValue(settingsFlagItem39.Enabled)
						settingsFlag79.Name = types.StringPointerValue(settingsFlagItem39.Name)
						if settingsFlagCount39+1 > len(attributes3.InternalUserAttribute.SettingsFlag) {
							attributes3.InternalUserAttribute.SettingsFlag = append(attributes3.InternalUserAttribute.SettingsFlag, settingsFlag79)
						} else {
							attributes3.InternalUserAttribute.SettingsFlag[settingsFlagCount39].Enabled = settingsFlag79.Enabled
							attributes3.InternalUserAttribute.SettingsFlag[settingsFlagCount39].Name = settingsFlag79.Name
						}
					}
					attributes3.InternalUserAttribute.ShowInTable = types.BoolPointerValue(attributesItem1.InternalUserAttribute.ShowInTable)
					attributes3.InternalUserAttribute.Sortable = types.BoolPointerValue(attributesItem1.InternalUserAttribute.Sortable)
					if attributesItem1.InternalUserAttribute.Type != nil {
						attributes3.InternalUserAttribute.Type = types.StringValue(string(*attributesItem1.InternalUserAttribute.Type))
					} else {
						attributes3.InternalUserAttribute.Type = types.StringNull()
					}
					attributes3.InternalUserAttribute.ValueFormatter = types.StringPointerValue(attributesItem1.InternalUserAttribute.ValueFormatter)
				}
				if attributesItem1.InvitationEmailAttribute != nil {
					attributes3.InvitationEmailAttribute = &tfTypes.InvitationEmailAttribute{}
					attributes3.InvitationEmailAttribute.Purpose = []types.String{}
					for _, v := range attributesItem1.InvitationEmailAttribute.Purpose {
						attributes3.InvitationEmailAttribute.Purpose = append(attributes3.InvitationEmailAttribute.Purpose, types.StringValue(v))
					}
					if attributesItem1.InvitationEmailAttribute.Constraints == nil {
						attributes3.InvitationEmailAttribute.Constraints = nil
					} else {
						attributes3.InvitationEmailAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
					}
					if attributesItem1.InvitationEmailAttribute.DefaultValue == nil {
						attributes3.InvitationEmailAttribute.DefaultValue = types.StringNull()
					} else {
						defaultValueResult39, _ := json.Marshal(attributesItem1.InvitationEmailAttribute.DefaultValue)
						attributes3.InvitationEmailAttribute.DefaultValue = types.StringValue(string(defaultValueResult39))
					}
					attributes3.InvitationEmailAttribute.Deprecated = types.BoolPointerValue(attributesItem1.InvitationEmailAttribute.Deprecated)
					attributes3.InvitationEmailAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem1.InvitationEmailAttribute.EntityBuilderDisableEdit)
					attributes3.InvitationEmailAttribute.FeatureFlag = types.StringPointerValue(attributesItem1.InvitationEmailAttribute.FeatureFlag)
					attributes3.InvitationEmailAttribute.Group = types.StringPointerValue(attributesItem1.InvitationEmailAttribute.Group)
					attributes3.InvitationEmailAttribute.Hidden = types.BoolPointerValue(attributesItem1.InvitationEmailAttribute.Hidden)
					attributes3.InvitationEmailAttribute.HideLabel = types.BoolPointerValue(attributesItem1.InvitationEmailAttribute.HideLabel)
					attributes3.InvitationEmailAttribute.Icon = types.StringPointerValue(attributesItem1.InvitationEmailAttribute.Icon)
					attributes3.InvitationEmailAttribute.ID = types.StringPointerValue(attributesItem1.InvitationEmailAttribute.ID)
					if attributesItem1.InvitationEmailAttribute.InfoHelpers == nil {
						attributes3.InvitationEmailAttribute.InfoHelpers = nil
					} else {
						attributes3.InvitationEmailAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
						attributes3.InvitationEmailAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem1.InvitationEmailAttribute.InfoHelpers.HintCustomComponent)
						attributes3.InvitationEmailAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem1.InvitationEmailAttribute.InfoHelpers.HintText)
						attributes3.InvitationEmailAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem1.InvitationEmailAttribute.InfoHelpers.HintTextKey)
						attributes3.InvitationEmailAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem1.InvitationEmailAttribute.InfoHelpers.HintTooltipPlacement)
					}
					attributes3.InvitationEmailAttribute.Label = types.StringValue(attributesItem1.InvitationEmailAttribute.Label)
					attributes3.InvitationEmailAttribute.Layout = types.StringPointerValue(attributesItem1.InvitationEmailAttribute.Layout)
					attributes3.InvitationEmailAttribute.Name = types.StringValue(attributesItem1.InvitationEmailAttribute.Name)
					attributes3.InvitationEmailAttribute.Order = types.Int64PointerValue(attributesItem1.InvitationEmailAttribute.Order)
					attributes3.InvitationEmailAttribute.Placeholder = types.StringPointerValue(attributesItem1.InvitationEmailAttribute.Placeholder)
					attributes3.InvitationEmailAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem1.InvitationEmailAttribute.PreviewValueFormatter)
					attributes3.InvitationEmailAttribute.Protected = types.BoolPointerValue(attributesItem1.InvitationEmailAttribute.Protected)
					attributes3.InvitationEmailAttribute.Readonly = types.BoolPointerValue(attributesItem1.InvitationEmailAttribute.Readonly)
					attributes3.InvitationEmailAttribute.RenderCondition = types.StringPointerValue(attributesItem1.InvitationEmailAttribute.RenderCondition)
					attributes3.InvitationEmailAttribute.Required = types.BoolPointerValue(attributesItem1.InvitationEmailAttribute.Required)
					attributes3.InvitationEmailAttribute.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount40, settingsFlagItem40 := range attributesItem1.InvitationEmailAttribute.SettingsFlag {
						var settingsFlag81 tfTypes.SettingFlag
						settingsFlag81.Enabled = types.BoolPointerValue(settingsFlagItem40.Enabled)
						settingsFlag81.Name = types.StringPointerValue(settingsFlagItem40.Name)
						if settingsFlagCount40+1 > len(attributes3.InvitationEmailAttribute.SettingsFlag) {
							attributes3.InvitationEmailAttribute.SettingsFlag = append(attributes3.InvitationEmailAttribute.SettingsFlag, settingsFlag81)
						} else {
							attributes3.InvitationEmailAttribute.SettingsFlag[settingsFlagCount40].Enabled = settingsFlag81.Enabled
							attributes3.InvitationEmailAttribute.SettingsFlag[settingsFlagCount40].Name = settingsFlag81.Name
						}
					}
					attributes3.InvitationEmailAttribute.ShowInTable = types.BoolPointerValue(attributesItem1.InvitationEmailAttribute.ShowInTable)
					attributes3.InvitationEmailAttribute.Sortable = types.BoolPointerValue(attributesItem1.InvitationEmailAttribute.Sortable)
					if attributesItem1.InvitationEmailAttribute.Type != nil {
						attributes3.InvitationEmailAttribute.Type = types.StringValue(string(*attributesItem1.InvitationEmailAttribute.Type))
					} else {
						attributes3.InvitationEmailAttribute.Type = types.StringNull()
					}
					attributes3.InvitationEmailAttribute.ValueFormatter = types.StringPointerValue(attributesItem1.InvitationEmailAttribute.ValueFormatter)
				}
				if attributesItem1.LinkAttribute != nil {
					attributes3.LinkAttribute = &tfTypes.LinkAttribute{}
					attributes3.LinkAttribute.Purpose = []types.String{}
					for _, v := range attributesItem1.LinkAttribute.Purpose {
						attributes3.LinkAttribute.Purpose = append(attributes3.LinkAttribute.Purpose, types.StringValue(v))
					}
					if attributesItem1.LinkAttribute.Constraints == nil {
						attributes3.LinkAttribute.Constraints = nil
					} else {
						attributes3.LinkAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
					}
					if attributesItem1.LinkAttribute.DefaultValue == nil {
						attributes3.LinkAttribute.DefaultValue = types.StringNull()
					} else {
						defaultValueResult40, _ := json.Marshal(attributesItem1.LinkAttribute.DefaultValue)
						attributes3.LinkAttribute.DefaultValue = types.StringValue(string(defaultValueResult40))
					}
					attributes3.LinkAttribute.Deprecated = types.BoolPointerValue(attributesItem1.LinkAttribute.Deprecated)
					attributes3.LinkAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem1.LinkAttribute.EntityBuilderDisableEdit)
					attributes3.LinkAttribute.FeatureFlag = types.StringPointerValue(attributesItem1.LinkAttribute.FeatureFlag)
					attributes3.LinkAttribute.Group = types.StringPointerValue(attributesItem1.LinkAttribute.Group)
					attributes3.LinkAttribute.Hidden = types.BoolPointerValue(attributesItem1.LinkAttribute.Hidden)
					attributes3.LinkAttribute.HideLabel = types.BoolPointerValue(attributesItem1.LinkAttribute.HideLabel)
					attributes3.LinkAttribute.Icon = types.StringPointerValue(attributesItem1.LinkAttribute.Icon)
					attributes3.LinkAttribute.ID = types.StringPointerValue(attributesItem1.LinkAttribute.ID)
					if attributesItem1.LinkAttribute.InfoHelpers == nil {
						attributes3.LinkAttribute.InfoHelpers = nil
					} else {
						attributes3.LinkAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
						attributes3.LinkAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem1.LinkAttribute.InfoHelpers.HintCustomComponent)
						attributes3.LinkAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem1.LinkAttribute.InfoHelpers.HintText)
						attributes3.LinkAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem1.LinkAttribute.InfoHelpers.HintTextKey)
						attributes3.LinkAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem1.LinkAttribute.InfoHelpers.HintTooltipPlacement)
					}
					attributes3.LinkAttribute.Label = types.StringValue(attributesItem1.LinkAttribute.Label)
					attributes3.LinkAttribute.Layout = types.StringPointerValue(attributesItem1.LinkAttribute.Layout)
					attributes3.LinkAttribute.Name = types.StringValue(attributesItem1.LinkAttribute.Name)
					attributes3.LinkAttribute.Order = types.Int64PointerValue(attributesItem1.LinkAttribute.Order)
					attributes3.LinkAttribute.Placeholder = types.StringPointerValue(attributesItem1.LinkAttribute.Placeholder)
					attributes3.LinkAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem1.LinkAttribute.PreviewValueFormatter)
					attributes3.LinkAttribute.Protected = types.BoolPointerValue(attributesItem1.LinkAttribute.Protected)
					attributes3.LinkAttribute.Readonly = types.BoolPointerValue(attributesItem1.LinkAttribute.Readonly)
					attributes3.LinkAttribute.RenderCondition = types.StringPointerValue(attributesItem1.LinkAttribute.RenderCondition)
					attributes3.LinkAttribute.Required = types.BoolPointerValue(attributesItem1.LinkAttribute.Required)
					attributes3.LinkAttribute.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount41, settingsFlagItem41 := range attributesItem1.LinkAttribute.SettingsFlag {
						var settingsFlag83 tfTypes.SettingFlag
						settingsFlag83.Enabled = types.BoolPointerValue(settingsFlagItem41.Enabled)
						settingsFlag83.Name = types.StringPointerValue(settingsFlagItem41.Name)
						if settingsFlagCount41+1 > len(attributes3.LinkAttribute.SettingsFlag) {
							attributes3.LinkAttribute.SettingsFlag = append(attributes3.LinkAttribute.SettingsFlag, settingsFlag83)
						} else {
							attributes3.LinkAttribute.SettingsFlag[settingsFlagCount41].Enabled = settingsFlag83.Enabled
							attributes3.LinkAttribute.SettingsFlag[settingsFlagCount41].Name = settingsFlag83.Name
						}
					}
					attributes3.LinkAttribute.ShowInTable = types.BoolPointerValue(attributesItem1.LinkAttribute.ShowInTable)
					attributes3.LinkAttribute.Sortable = types.BoolPointerValue(attributesItem1.LinkAttribute.Sortable)
					if attributesItem1.LinkAttribute.Type != nil {
						attributes3.LinkAttribute.Type = types.StringValue(string(*attributesItem1.LinkAttribute.Type))
					} else {
						attributes3.LinkAttribute.Type = types.StringNull()
					}
					attributes3.LinkAttribute.ValueFormatter = types.StringPointerValue(attributesItem1.LinkAttribute.ValueFormatter)
				}
				if attributesItem1.MultiSelectAttribute != nil {
					attributes3.MultiSelectAttribute = &tfTypes.MultiSelectAttribute{}
					attributes3.MultiSelectAttribute.Purpose = []types.String{}
					for _, v := range attributesItem1.MultiSelectAttribute.Purpose {
						attributes3.MultiSelectAttribute.Purpose = append(attributes3.MultiSelectAttribute.Purpose, types.StringValue(v))
					}
					attributes3.MultiSelectAttribute.AllowAny = types.BoolPointerValue(attributesItem1.MultiSelectAttribute.AllowAny)
					attributes3.MultiSelectAttribute.AllowExtraOptions = types.BoolPointerValue(attributesItem1.MultiSelectAttribute.AllowExtraOptions)
					if attributesItem1.MultiSelectAttribute.Constraints == nil {
						attributes3.MultiSelectAttribute.Constraints = nil
					} else {
						attributes3.MultiSelectAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
					}
					if attributesItem1.MultiSelectAttribute.DefaultValue == nil {
						attributes3.MultiSelectAttribute.DefaultValue = types.StringNull()
					} else {
						defaultValueResult41, _ := json.Marshal(attributesItem1.MultiSelectAttribute.DefaultValue)
						attributes3.MultiSelectAttribute.DefaultValue = types.StringValue(string(defaultValueResult41))
					}
					attributes3.MultiSelectAttribute.Deprecated = types.BoolPointerValue(attributesItem1.MultiSelectAttribute.Deprecated)
					attributes3.MultiSelectAttribute.DisableCaseSensitive = types.BoolPointerValue(attributesItem1.MultiSelectAttribute.DisableCaseSensitive)
					attributes3.MultiSelectAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem1.MultiSelectAttribute.EntityBuilderDisableEdit)
					attributes3.MultiSelectAttribute.FeatureFlag = types.StringPointerValue(attributesItem1.MultiSelectAttribute.FeatureFlag)
					attributes3.MultiSelectAttribute.Group = types.StringPointerValue(attributesItem1.MultiSelectAttribute.Group)
					attributes3.MultiSelectAttribute.Hidden = types.BoolPointerValue(attributesItem1.MultiSelectAttribute.Hidden)
					attributes3.MultiSelectAttribute.HideLabel = types.BoolPointerValue(attributesItem1.MultiSelectAttribute.HideLabel)
					attributes3.MultiSelectAttribute.Icon = types.StringPointerValue(attributesItem1.MultiSelectAttribute.Icon)
					attributes3.MultiSelectAttribute.ID = types.StringPointerValue(attributesItem1.MultiSelectAttribute.ID)
					if attributesItem1.MultiSelectAttribute.InfoHelpers == nil {
						attributes3.MultiSelectAttribute.InfoHelpers = nil
					} else {
						attributes3.MultiSelectAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
						attributes3.MultiSelectAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem1.MultiSelectAttribute.InfoHelpers.HintCustomComponent)
						attributes3.MultiSelectAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem1.MultiSelectAttribute.InfoHelpers.HintText)
						attributes3.MultiSelectAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem1.MultiSelectAttribute.InfoHelpers.HintTextKey)
						attributes3.MultiSelectAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem1.MultiSelectAttribute.InfoHelpers.HintTooltipPlacement)
					}
					attributes3.MultiSelectAttribute.Label = types.StringValue(attributesItem1.MultiSelectAttribute.Label)
					attributes3.MultiSelectAttribute.Layout = types.StringPointerValue(attributesItem1.MultiSelectAttribute.Layout)
					attributes3.MultiSelectAttribute.Name = types.StringValue(attributesItem1.MultiSelectAttribute.Name)
					attributes3.MultiSelectAttribute.Options = []tfTypes.OptionsObj{}
					for optionsVarCount2, optionsVarItem2 := range attributesItem1.MultiSelectAttribute.Options {
						var optionsVar3 tfTypes.OptionsObj
						if optionsVarItem2.Str != nil {
							optionsVar3.Str = types.StringPointerValue(optionsVarItem2.Str)
						}
						if optionsVarItem2.Two != nil {
							optionsVar3.Two = &tfTypes.Two{}
							optionsVar3.Two.Title = types.StringPointerValue(optionsVarItem2.Two.Title)
							optionsVar3.Two.Value = types.StringValue(optionsVarItem2.Two.Value)
						}
						if optionsVarCount2+1 > len(attributes3.MultiSelectAttribute.Options) {
							attributes3.MultiSelectAttribute.Options = append(attributes3.MultiSelectAttribute.Options, optionsVar3)
						} else {
							attributes3.MultiSelectAttribute.Options[optionsVarCount2].Str = optionsVar3.Str
							attributes3.MultiSelectAttribute.Options[optionsVarCount2].Two = optionsVar3.Two
						}
					}
					attributes3.MultiSelectAttribute.Order = types.Int64PointerValue(attributesItem1.MultiSelectAttribute.Order)
					attributes3.MultiSelectAttribute.Placeholder = types.StringPointerValue(attributesItem1.MultiSelectAttribute.Placeholder)
					attributes3.MultiSelectAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem1.MultiSelectAttribute.PreviewValueFormatter)
					attributes3.MultiSelectAttribute.Protected = types.BoolPointerValue(attributesItem1.MultiSelectAttribute.Protected)
					attributes3.MultiSelectAttribute.Readonly = types.BoolPointerValue(attributesItem1.MultiSelectAttribute.Readonly)
					attributes3.MultiSelectAttribute.RenderCondition = types.StringPointerValue(attributesItem1.MultiSelectAttribute.RenderCondition)
					attributes3.MultiSelectAttribute.Required = types.BoolPointerValue(attributesItem1.MultiSelectAttribute.Required)
					attributes3.MultiSelectAttribute.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount42, settingsFlagItem42 := range attributesItem1.MultiSelectAttribute.SettingsFlag {
						var settingsFlag85 tfTypes.SettingFlag
						settingsFlag85.Enabled = types.BoolPointerValue(settingsFlagItem42.Enabled)
						settingsFlag85.Name = types.StringPointerValue(settingsFlagItem42.Name)
						if settingsFlagCount42+1 > len(attributes3.MultiSelectAttribute.SettingsFlag) {
							attributes3.MultiSelectAttribute.SettingsFlag = append(attributes3.MultiSelectAttribute.SettingsFlag, settingsFlag85)
						} else {
							attributes3.MultiSelectAttribute.SettingsFlag[settingsFlagCount42].Enabled = settingsFlag85.Enabled
							attributes3.MultiSelectAttribute.SettingsFlag[settingsFlagCount42].Name = settingsFlag85.Name
						}
					}
					attributes3.MultiSelectAttribute.ShowInTable = types.BoolPointerValue(attributesItem1.MultiSelectAttribute.ShowInTable)
					attributes3.MultiSelectAttribute.Sortable = types.BoolPointerValue(attributesItem1.MultiSelectAttribute.Sortable)
					if attributesItem1.MultiSelectAttribute.Type != nil {
						attributes3.MultiSelectAttribute.Type = types.StringValue(string(*attributesItem1.MultiSelectAttribute.Type))
					} else {
						attributes3.MultiSelectAttribute.Type = types.StringNull()
					}
					attributes3.MultiSelectAttribute.ValueFormatter = types.StringPointerValue(attributesItem1.MultiSelectAttribute.ValueFormatter)
				}
				if attributesItem1.NumberAttribute != nil {
					attributes3.NumberAttribute = &tfTypes.NumberAttribute{}
					attributes3.NumberAttribute.Purpose = []types.String{}
					for _, v := range attributesItem1.NumberAttribute.Purpose {
						attributes3.NumberAttribute.Purpose = append(attributes3.NumberAttribute.Purpose, types.StringValue(v))
					}
					if attributesItem1.NumberAttribute.Constraints == nil {
						attributes3.NumberAttribute.Constraints = nil
					} else {
						attributes3.NumberAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
					}
					if attributesItem1.NumberAttribute.DefaultValue == nil {
						attributes3.NumberAttribute.DefaultValue = types.StringNull()
					} else {
						defaultValueResult42, _ := json.Marshal(attributesItem1.NumberAttribute.DefaultValue)
						attributes3.NumberAttribute.DefaultValue = types.StringValue(string(defaultValueResult42))
					}
					attributes3.NumberAttribute.Deprecated = types.BoolPointerValue(attributesItem1.NumberAttribute.Deprecated)
					attributes3.NumberAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem1.NumberAttribute.EntityBuilderDisableEdit)
					attributes3.NumberAttribute.FeatureFlag = types.StringPointerValue(attributesItem1.NumberAttribute.FeatureFlag)
					attributes3.NumberAttribute.Format = types.StringPointerValue(attributesItem1.NumberAttribute.Format)
					attributes3.NumberAttribute.Group = types.StringPointerValue(attributesItem1.NumberAttribute.Group)
					attributes3.NumberAttribute.Hidden = types.BoolPointerValue(attributesItem1.NumberAttribute.Hidden)
					attributes3.NumberAttribute.HideLabel = types.BoolPointerValue(attributesItem1.NumberAttribute.HideLabel)
					attributes3.NumberAttribute.Icon = types.StringPointerValue(attributesItem1.NumberAttribute.Icon)
					attributes3.NumberAttribute.ID = types.StringPointerValue(attributesItem1.NumberAttribute.ID)
					if attributesItem1.NumberAttribute.InfoHelpers == nil {
						attributes3.NumberAttribute.InfoHelpers = nil
					} else {
						attributes3.NumberAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
						attributes3.NumberAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem1.NumberAttribute.InfoHelpers.HintCustomComponent)
						attributes3.NumberAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem1.NumberAttribute.InfoHelpers.HintText)
						attributes3.NumberAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem1.NumberAttribute.InfoHelpers.HintTextKey)
						attributes3.NumberAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem1.NumberAttribute.InfoHelpers.HintTooltipPlacement)
					}
					attributes3.NumberAttribute.Label = types.StringValue(attributesItem1.NumberAttribute.Label)
					attributes3.NumberAttribute.Layout = types.StringPointerValue(attributesItem1.NumberAttribute.Layout)
					attributes3.NumberAttribute.Name = types.StringValue(attributesItem1.NumberAttribute.Name)
					attributes3.NumberAttribute.Order = types.Int64PointerValue(attributesItem1.NumberAttribute.Order)
					attributes3.NumberAttribute.Placeholder = types.StringPointerValue(attributesItem1.NumberAttribute.Placeholder)
					attributes3.NumberAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem1.NumberAttribute.PreviewValueFormatter)
					attributes3.NumberAttribute.Protected = types.BoolPointerValue(attributesItem1.NumberAttribute.Protected)
					attributes3.NumberAttribute.Readonly = types.BoolPointerValue(attributesItem1.NumberAttribute.Readonly)
					attributes3.NumberAttribute.RenderCondition = types.StringPointerValue(attributesItem1.NumberAttribute.RenderCondition)
					attributes3.NumberAttribute.Required = types.BoolPointerValue(attributesItem1.NumberAttribute.Required)
					attributes3.NumberAttribute.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount43, settingsFlagItem43 := range attributesItem1.NumberAttribute.SettingsFlag {
						var settingsFlag87 tfTypes.SettingFlag
						settingsFlag87.Enabled = types.BoolPointerValue(settingsFlagItem43.Enabled)
						settingsFlag87.Name = types.StringPointerValue(settingsFlagItem43.Name)
						if settingsFlagCount43+1 > len(attributes3.NumberAttribute.SettingsFlag) {
							attributes3.NumberAttribute.SettingsFlag = append(attributes3.NumberAttribute.SettingsFlag, settingsFlag87)
						} else {
							attributes3.NumberAttribute.SettingsFlag[settingsFlagCount43].Enabled = settingsFlag87.Enabled
							attributes3.NumberAttribute.SettingsFlag[settingsFlagCount43].Name = settingsFlag87.Name
						}
					}
					attributes3.NumberAttribute.ShowInTable = types.BoolPointerValue(attributesItem1.NumberAttribute.ShowInTable)
					attributes3.NumberAttribute.ShowSeparator = types.BoolPointerValue(attributesItem1.NumberAttribute.ShowSeparator)
					attributes3.NumberAttribute.Sortable = types.BoolPointerValue(attributesItem1.NumberAttribute.Sortable)
					if attributesItem1.NumberAttribute.Type != nil {
						attributes3.NumberAttribute.Type = types.StringValue(string(*attributesItem1.NumberAttribute.Type))
					} else {
						attributes3.NumberAttribute.Type = types.StringNull()
					}
					attributes3.NumberAttribute.ValueFormatter = types.StringPointerValue(attributesItem1.NumberAttribute.ValueFormatter)
				}
				if attributesItem1.OrderedListAttribute != nil {
					attributes3.OrderedListAttribute = &tfTypes.OrderedListAttribute{}
					attributes3.OrderedListAttribute.Purpose = []types.String{}
					for _, v := range attributesItem1.OrderedListAttribute.Purpose {
						attributes3.OrderedListAttribute.Purpose = append(attributes3.OrderedListAttribute.Purpose, types.StringValue(v))
					}
					if attributesItem1.OrderedListAttribute.Constraints == nil {
						attributes3.OrderedListAttribute.Constraints = nil
					} else {
						attributes3.OrderedListAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
					}
					if attributesItem1.OrderedListAttribute.DefaultValue == nil {
						attributes3.OrderedListAttribute.DefaultValue = types.StringNull()
					} else {
						defaultValueResult43, _ := json.Marshal(attributesItem1.OrderedListAttribute.DefaultValue)
						attributes3.OrderedListAttribute.DefaultValue = types.StringValue(string(defaultValueResult43))
					}
					attributes3.OrderedListAttribute.Deprecated = types.BoolPointerValue(attributesItem1.OrderedListAttribute.Deprecated)
					attributes3.OrderedListAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem1.OrderedListAttribute.EntityBuilderDisableEdit)
					attributes3.OrderedListAttribute.FeatureFlag = types.StringPointerValue(attributesItem1.OrderedListAttribute.FeatureFlag)
					attributes3.OrderedListAttribute.Group = types.StringPointerValue(attributesItem1.OrderedListAttribute.Group)
					attributes3.OrderedListAttribute.Hidden = types.BoolPointerValue(attributesItem1.OrderedListAttribute.Hidden)
					attributes3.OrderedListAttribute.HideLabel = types.BoolPointerValue(attributesItem1.OrderedListAttribute.HideLabel)
					attributes3.OrderedListAttribute.Icon = types.StringPointerValue(attributesItem1.OrderedListAttribute.Icon)
					attributes3.OrderedListAttribute.ID = types.StringPointerValue(attributesItem1.OrderedListAttribute.ID)
					if attributesItem1.OrderedListAttribute.InfoHelpers == nil {
						attributes3.OrderedListAttribute.InfoHelpers = nil
					} else {
						attributes3.OrderedListAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
						attributes3.OrderedListAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem1.OrderedListAttribute.InfoHelpers.HintCustomComponent)
						attributes3.OrderedListAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem1.OrderedListAttribute.InfoHelpers.HintText)
						attributes3.OrderedListAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem1.OrderedListAttribute.InfoHelpers.HintTextKey)
						attributes3.OrderedListAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem1.OrderedListAttribute.InfoHelpers.HintTooltipPlacement)
					}
					attributes3.OrderedListAttribute.Label = types.StringValue(attributesItem1.OrderedListAttribute.Label)
					attributes3.OrderedListAttribute.Layout = types.StringPointerValue(attributesItem1.OrderedListAttribute.Layout)
					attributes3.OrderedListAttribute.Name = types.StringValue(attributesItem1.OrderedListAttribute.Name)
					attributes3.OrderedListAttribute.Order = types.Int64PointerValue(attributesItem1.OrderedListAttribute.Order)
					attributes3.OrderedListAttribute.Placeholder = types.StringPointerValue(attributesItem1.OrderedListAttribute.Placeholder)
					attributes3.OrderedListAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem1.OrderedListAttribute.PreviewValueFormatter)
					attributes3.OrderedListAttribute.Protected = types.BoolPointerValue(attributesItem1.OrderedListAttribute.Protected)
					attributes3.OrderedListAttribute.Readonly = types.BoolPointerValue(attributesItem1.OrderedListAttribute.Readonly)
					attributes3.OrderedListAttribute.RenderCondition = types.StringPointerValue(attributesItem1.OrderedListAttribute.RenderCondition)
					attributes3.OrderedListAttribute.Required = types.BoolPointerValue(attributesItem1.OrderedListAttribute.Required)
					attributes3.OrderedListAttribute.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount44, settingsFlagItem44 := range attributesItem1.OrderedListAttribute.SettingsFlag {
						var settingsFlag89 tfTypes.SettingFlag
						settingsFlag89.Enabled = types.BoolPointerValue(settingsFlagItem44.Enabled)
						settingsFlag89.Name = types.StringPointerValue(settingsFlagItem44.Name)
						if settingsFlagCount44+1 > len(attributes3.OrderedListAttribute.SettingsFlag) {
							attributes3.OrderedListAttribute.SettingsFlag = append(attributes3.OrderedListAttribute.SettingsFlag, settingsFlag89)
						} else {
							attributes3.OrderedListAttribute.SettingsFlag[settingsFlagCount44].Enabled = settingsFlag89.Enabled
							attributes3.OrderedListAttribute.SettingsFlag[settingsFlagCount44].Name = settingsFlag89.Name
						}
					}
					attributes3.OrderedListAttribute.ShowInTable = types.BoolPointerValue(attributesItem1.OrderedListAttribute.ShowInTable)
					attributes3.OrderedListAttribute.Sortable = types.BoolPointerValue(attributesItem1.OrderedListAttribute.Sortable)
					if attributesItem1.OrderedListAttribute.Type != nil {
						attributes3.OrderedListAttribute.Type = types.StringValue(string(*attributesItem1.OrderedListAttribute.Type))
					} else {
						attributes3.OrderedListAttribute.Type = types.StringNull()
					}
					attributes3.OrderedListAttribute.ValueFormatter = types.StringPointerValue(attributesItem1.OrderedListAttribute.ValueFormatter)
				}
				if attributesItem1.PartnerOrganisationAttribute != nil {
					attributes3.PartnerOrganisationAttribute = &tfTypes.PartnerOrganisationAttribute{}
					attributes3.PartnerOrganisationAttribute.Purpose = []types.String{}
					for _, v := range attributesItem1.PartnerOrganisationAttribute.Purpose {
						attributes3.PartnerOrganisationAttribute.Purpose = append(attributes3.PartnerOrganisationAttribute.Purpose, types.StringValue(v))
					}
					if attributesItem1.PartnerOrganisationAttribute.Constraints == nil {
						attributes3.PartnerOrganisationAttribute.Constraints = nil
					} else {
						attributes3.PartnerOrganisationAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
					}
					if attributesItem1.PartnerOrganisationAttribute.DefaultValue == nil {
						attributes3.PartnerOrganisationAttribute.DefaultValue = types.StringNull()
					} else {
						defaultValueResult44, _ := json.Marshal(attributesItem1.PartnerOrganisationAttribute.DefaultValue)
						attributes3.PartnerOrganisationAttribute.DefaultValue = types.StringValue(string(defaultValueResult44))
					}
					attributes3.PartnerOrganisationAttribute.Deprecated = types.BoolPointerValue(attributesItem1.PartnerOrganisationAttribute.Deprecated)
					attributes3.PartnerOrganisationAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem1.PartnerOrganisationAttribute.EntityBuilderDisableEdit)
					attributes3.PartnerOrganisationAttribute.FeatureFlag = types.StringPointerValue(attributesItem1.PartnerOrganisationAttribute.FeatureFlag)
					attributes3.PartnerOrganisationAttribute.Group = types.StringPointerValue(attributesItem1.PartnerOrganisationAttribute.Group)
					attributes3.PartnerOrganisationAttribute.Hidden = types.BoolPointerValue(attributesItem1.PartnerOrganisationAttribute.Hidden)
					attributes3.PartnerOrganisationAttribute.HideLabel = types.BoolPointerValue(attributesItem1.PartnerOrganisationAttribute.HideLabel)
					attributes3.PartnerOrganisationAttribute.Icon = types.StringPointerValue(attributesItem1.PartnerOrganisationAttribute.Icon)
					attributes3.PartnerOrganisationAttribute.ID = types.StringPointerValue(attributesItem1.PartnerOrganisationAttribute.ID)
					if attributesItem1.PartnerOrganisationAttribute.InfoHelpers == nil {
						attributes3.PartnerOrganisationAttribute.InfoHelpers = nil
					} else {
						attributes3.PartnerOrganisationAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
						attributes3.PartnerOrganisationAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem1.PartnerOrganisationAttribute.InfoHelpers.HintCustomComponent)
						attributes3.PartnerOrganisationAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem1.PartnerOrganisationAttribute.InfoHelpers.HintText)
						attributes3.PartnerOrganisationAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem1.PartnerOrganisationAttribute.InfoHelpers.HintTextKey)
						attributes3.PartnerOrganisationAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem1.PartnerOrganisationAttribute.InfoHelpers.HintTooltipPlacement)
					}
					attributes3.PartnerOrganisationAttribute.Label = types.StringValue(attributesItem1.PartnerOrganisationAttribute.Label)
					attributes3.PartnerOrganisationAttribute.Layout = types.StringPointerValue(attributesItem1.PartnerOrganisationAttribute.Layout)
					attributes3.PartnerOrganisationAttribute.Name = types.StringValue(attributesItem1.PartnerOrganisationAttribute.Name)
					attributes3.PartnerOrganisationAttribute.Order = types.Int64PointerValue(attributesItem1.PartnerOrganisationAttribute.Order)
					attributes3.PartnerOrganisationAttribute.Placeholder = types.StringPointerValue(attributesItem1.PartnerOrganisationAttribute.Placeholder)
					attributes3.PartnerOrganisationAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem1.PartnerOrganisationAttribute.PreviewValueFormatter)
					attributes3.PartnerOrganisationAttribute.Protected = types.BoolPointerValue(attributesItem1.PartnerOrganisationAttribute.Protected)
					attributes3.PartnerOrganisationAttribute.Readonly = types.BoolPointerValue(attributesItem1.PartnerOrganisationAttribute.Readonly)
					attributes3.PartnerOrganisationAttribute.RenderCondition = types.StringPointerValue(attributesItem1.PartnerOrganisationAttribute.RenderCondition)
					attributes3.PartnerOrganisationAttribute.Required = types.BoolPointerValue(attributesItem1.PartnerOrganisationAttribute.Required)
					attributes3.PartnerOrganisationAttribute.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount45, settingsFlagItem45 := range attributesItem1.PartnerOrganisationAttribute.SettingsFlag {
						var settingsFlag91 tfTypes.SettingFlag
						settingsFlag91.Enabled = types.BoolPointerValue(settingsFlagItem45.Enabled)
						settingsFlag91.Name = types.StringPointerValue(settingsFlagItem45.Name)
						if settingsFlagCount45+1 > len(attributes3.PartnerOrganisationAttribute.SettingsFlag) {
							attributes3.PartnerOrganisationAttribute.SettingsFlag = append(attributes3.PartnerOrganisationAttribute.SettingsFlag, settingsFlag91)
						} else {
							attributes3.PartnerOrganisationAttribute.SettingsFlag[settingsFlagCount45].Enabled = settingsFlag91.Enabled
							attributes3.PartnerOrganisationAttribute.SettingsFlag[settingsFlagCount45].Name = settingsFlag91.Name
						}
					}
					attributes3.PartnerOrganisationAttribute.ShowInTable = types.BoolPointerValue(attributesItem1.PartnerOrganisationAttribute.ShowInTable)
					attributes3.PartnerOrganisationAttribute.Sortable = types.BoolPointerValue(attributesItem1.PartnerOrganisationAttribute.Sortable)
					if attributesItem1.PartnerOrganisationAttribute.Type != nil {
						attributes3.PartnerOrganisationAttribute.Type = types.StringValue(string(*attributesItem1.PartnerOrganisationAttribute.Type))
					} else {
						attributes3.PartnerOrganisationAttribute.Type = types.StringNull()
					}
					attributes3.PartnerOrganisationAttribute.ValueFormatter = types.StringPointerValue(attributesItem1.PartnerOrganisationAttribute.ValueFormatter)
				}
				if attributesItem1.PartnerStatusAttribute != nil {
					attributes3.PartnerStatusAttribute = &tfTypes.PartnerStatusAttribute{}
					attributes3.PartnerStatusAttribute.Purpose = []types.String{}
					for _, v := range attributesItem1.PartnerStatusAttribute.Purpose {
						attributes3.PartnerStatusAttribute.Purpose = append(attributes3.PartnerStatusAttribute.Purpose, types.StringValue(v))
					}
					if attributesItem1.PartnerStatusAttribute.Constraints == nil {
						attributes3.PartnerStatusAttribute.Constraints = nil
					} else {
						attributes3.PartnerStatusAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
					}
					if attributesItem1.PartnerStatusAttribute.DefaultValue == nil {
						attributes3.PartnerStatusAttribute.DefaultValue = types.StringNull()
					} else {
						defaultValueResult45, _ := json.Marshal(attributesItem1.PartnerStatusAttribute.DefaultValue)
						attributes3.PartnerStatusAttribute.DefaultValue = types.StringValue(string(defaultValueResult45))
					}
					attributes3.PartnerStatusAttribute.Deprecated = types.BoolPointerValue(attributesItem1.PartnerStatusAttribute.Deprecated)
					attributes3.PartnerStatusAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem1.PartnerStatusAttribute.EntityBuilderDisableEdit)
					attributes3.PartnerStatusAttribute.FeatureFlag = types.StringPointerValue(attributesItem1.PartnerStatusAttribute.FeatureFlag)
					attributes3.PartnerStatusAttribute.Group = types.StringPointerValue(attributesItem1.PartnerStatusAttribute.Group)
					attributes3.PartnerStatusAttribute.Hidden = types.BoolPointerValue(attributesItem1.PartnerStatusAttribute.Hidden)
					attributes3.PartnerStatusAttribute.HideLabel = types.BoolPointerValue(attributesItem1.PartnerStatusAttribute.HideLabel)
					attributes3.PartnerStatusAttribute.Icon = types.StringPointerValue(attributesItem1.PartnerStatusAttribute.Icon)
					attributes3.PartnerStatusAttribute.ID = types.StringPointerValue(attributesItem1.PartnerStatusAttribute.ID)
					if attributesItem1.PartnerStatusAttribute.InfoHelpers == nil {
						attributes3.PartnerStatusAttribute.InfoHelpers = nil
					} else {
						attributes3.PartnerStatusAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
						attributes3.PartnerStatusAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem1.PartnerStatusAttribute.InfoHelpers.HintCustomComponent)
						attributes3.PartnerStatusAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem1.PartnerStatusAttribute.InfoHelpers.HintText)
						attributes3.PartnerStatusAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem1.PartnerStatusAttribute.InfoHelpers.HintTextKey)
						attributes3.PartnerStatusAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem1.PartnerStatusAttribute.InfoHelpers.HintTooltipPlacement)
					}
					attributes3.PartnerStatusAttribute.Label = types.StringValue(attributesItem1.PartnerStatusAttribute.Label)
					attributes3.PartnerStatusAttribute.Layout = types.StringPointerValue(attributesItem1.PartnerStatusAttribute.Layout)
					attributes3.PartnerStatusAttribute.Name = types.StringValue(attributesItem1.PartnerStatusAttribute.Name)
					attributes3.PartnerStatusAttribute.Order = types.Int64PointerValue(attributesItem1.PartnerStatusAttribute.Order)
					attributes3.PartnerStatusAttribute.Placeholder = types.StringPointerValue(attributesItem1.PartnerStatusAttribute.Placeholder)
					attributes3.PartnerStatusAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem1.PartnerStatusAttribute.PreviewValueFormatter)
					attributes3.PartnerStatusAttribute.Protected = types.BoolPointerValue(attributesItem1.PartnerStatusAttribute.Protected)
					attributes3.PartnerStatusAttribute.Readonly = types.BoolPointerValue(attributesItem1.PartnerStatusAttribute.Readonly)
					attributes3.PartnerStatusAttribute.RenderCondition = types.StringPointerValue(attributesItem1.PartnerStatusAttribute.RenderCondition)
					attributes3.PartnerStatusAttribute.Required = types.BoolPointerValue(attributesItem1.PartnerStatusAttribute.Required)
					attributes3.PartnerStatusAttribute.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount46, settingsFlagItem46 := range attributesItem1.PartnerStatusAttribute.SettingsFlag {
						var settingsFlag93 tfTypes.SettingFlag
						settingsFlag93.Enabled = types.BoolPointerValue(settingsFlagItem46.Enabled)
						settingsFlag93.Name = types.StringPointerValue(settingsFlagItem46.Name)
						if settingsFlagCount46+1 > len(attributes3.PartnerStatusAttribute.SettingsFlag) {
							attributes3.PartnerStatusAttribute.SettingsFlag = append(attributes3.PartnerStatusAttribute.SettingsFlag, settingsFlag93)
						} else {
							attributes3.PartnerStatusAttribute.SettingsFlag[settingsFlagCount46].Enabled = settingsFlag93.Enabled
							attributes3.PartnerStatusAttribute.SettingsFlag[settingsFlagCount46].Name = settingsFlag93.Name
						}
					}
					attributes3.PartnerStatusAttribute.ShowInTable = types.BoolPointerValue(attributesItem1.PartnerStatusAttribute.ShowInTable)
					attributes3.PartnerStatusAttribute.Sortable = types.BoolPointerValue(attributesItem1.PartnerStatusAttribute.Sortable)
					if attributesItem1.PartnerStatusAttribute.Type != nil {
						attributes3.PartnerStatusAttribute.Type = types.StringValue(string(*attributesItem1.PartnerStatusAttribute.Type))
					} else {
						attributes3.PartnerStatusAttribute.Type = types.StringNull()
					}
					attributes3.PartnerStatusAttribute.ValueFormatter = types.StringPointerValue(attributesItem1.PartnerStatusAttribute.ValueFormatter)
				}
				if attributesItem1.PaymentMethodRelationAttribute != nil {
					attributes3.PaymentMethodRelationAttribute = &tfTypes.PaymentMethodRelationAttribute{}
					attributes3.PaymentMethodRelationAttribute.Purpose = []types.String{}
					for _, v := range attributesItem1.PaymentMethodRelationAttribute.Purpose {
						attributes3.PaymentMethodRelationAttribute.Purpose = append(attributes3.PaymentMethodRelationAttribute.Purpose, types.StringValue(v))
					}
					if attributesItem1.PaymentMethodRelationAttribute.Constraints == nil {
						attributes3.PaymentMethodRelationAttribute.Constraints = nil
					} else {
						attributes3.PaymentMethodRelationAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
					}
					if attributesItem1.PaymentMethodRelationAttribute.DefaultValue == nil {
						attributes3.PaymentMethodRelationAttribute.DefaultValue = types.StringNull()
					} else {
						defaultValueResult46, _ := json.Marshal(attributesItem1.PaymentMethodRelationAttribute.DefaultValue)
						attributes3.PaymentMethodRelationAttribute.DefaultValue = types.StringValue(string(defaultValueResult46))
					}
					attributes3.PaymentMethodRelationAttribute.Deprecated = types.BoolPointerValue(attributesItem1.PaymentMethodRelationAttribute.Deprecated)
					attributes3.PaymentMethodRelationAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem1.PaymentMethodRelationAttribute.EntityBuilderDisableEdit)
					attributes3.PaymentMethodRelationAttribute.FeatureFlag = types.StringPointerValue(attributesItem1.PaymentMethodRelationAttribute.FeatureFlag)
					attributes3.PaymentMethodRelationAttribute.Group = types.StringPointerValue(attributesItem1.PaymentMethodRelationAttribute.Group)
					attributes3.PaymentMethodRelationAttribute.HasPrimary = types.BoolPointerValue(attributesItem1.PaymentMethodRelationAttribute.HasPrimary)
					attributes3.PaymentMethodRelationAttribute.Hidden = types.BoolPointerValue(attributesItem1.PaymentMethodRelationAttribute.Hidden)
					attributes3.PaymentMethodRelationAttribute.HideLabel = types.BoolPointerValue(attributesItem1.PaymentMethodRelationAttribute.HideLabel)
					attributes3.PaymentMethodRelationAttribute.Icon = types.StringPointerValue(attributesItem1.PaymentMethodRelationAttribute.Icon)
					attributes3.PaymentMethodRelationAttribute.ID = types.StringPointerValue(attributesItem1.PaymentMethodRelationAttribute.ID)
					if attributesItem1.PaymentMethodRelationAttribute.InfoHelpers == nil {
						attributes3.PaymentMethodRelationAttribute.InfoHelpers = nil
					} else {
						attributes3.PaymentMethodRelationAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
						attributes3.PaymentMethodRelationAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem1.PaymentMethodRelationAttribute.InfoHelpers.HintCustomComponent)
						attributes3.PaymentMethodRelationAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem1.PaymentMethodRelationAttribute.InfoHelpers.HintText)
						attributes3.PaymentMethodRelationAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem1.PaymentMethodRelationAttribute.InfoHelpers.HintTextKey)
						attributes3.PaymentMethodRelationAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem1.PaymentMethodRelationAttribute.InfoHelpers.HintTooltipPlacement)
					}
					attributes3.PaymentMethodRelationAttribute.Label = types.StringValue(attributesItem1.PaymentMethodRelationAttribute.Label)
					attributes3.PaymentMethodRelationAttribute.Layout = types.StringPointerValue(attributesItem1.PaymentMethodRelationAttribute.Layout)
					attributes3.PaymentMethodRelationAttribute.Name = types.StringValue(attributesItem1.PaymentMethodRelationAttribute.Name)
					attributes3.PaymentMethodRelationAttribute.Order = types.Int64PointerValue(attributesItem1.PaymentMethodRelationAttribute.Order)
					attributes3.PaymentMethodRelationAttribute.Placeholder = types.StringPointerValue(attributesItem1.PaymentMethodRelationAttribute.Placeholder)
					attributes3.PaymentMethodRelationAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem1.PaymentMethodRelationAttribute.PreviewValueFormatter)
					attributes3.PaymentMethodRelationAttribute.Protected = types.BoolPointerValue(attributesItem1.PaymentMethodRelationAttribute.Protected)
					attributes3.PaymentMethodRelationAttribute.Readonly = types.BoolPointerValue(attributesItem1.PaymentMethodRelationAttribute.Readonly)
					attributes3.PaymentMethodRelationAttribute.RenderCondition = types.StringPointerValue(attributesItem1.PaymentMethodRelationAttribute.RenderCondition)
					attributes3.PaymentMethodRelationAttribute.Required = types.BoolPointerValue(attributesItem1.PaymentMethodRelationAttribute.Required)
					attributes3.PaymentMethodRelationAttribute.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount47, settingsFlagItem47 := range attributesItem1.PaymentMethodRelationAttribute.SettingsFlag {
						var settingsFlag95 tfTypes.SettingFlag
						settingsFlag95.Enabled = types.BoolPointerValue(settingsFlagItem47.Enabled)
						settingsFlag95.Name = types.StringPointerValue(settingsFlagItem47.Name)
						if settingsFlagCount47+1 > len(attributes3.PaymentMethodRelationAttribute.SettingsFlag) {
							attributes3.PaymentMethodRelationAttribute.SettingsFlag = append(attributes3.PaymentMethodRelationAttribute.SettingsFlag, settingsFlag95)
						} else {
							attributes3.PaymentMethodRelationAttribute.SettingsFlag[settingsFlagCount47].Enabled = settingsFlag95.Enabled
							attributes3.PaymentMethodRelationAttribute.SettingsFlag[settingsFlagCount47].Name = settingsFlag95.Name
						}
					}
					attributes3.PaymentMethodRelationAttribute.ShowInTable = types.BoolPointerValue(attributesItem1.PaymentMethodRelationAttribute.ShowInTable)
					attributes3.PaymentMethodRelationAttribute.Sortable = types.BoolPointerValue(attributesItem1.PaymentMethodRelationAttribute.Sortable)
					if attributesItem1.PaymentMethodRelationAttribute.Type != nil {
						attributes3.PaymentMethodRelationAttribute.Type = types.StringValue(string(*attributesItem1.PaymentMethodRelationAttribute.Type))
					} else {
						attributes3.PaymentMethodRelationAttribute.Type = types.StringNull()
					}
					attributes3.PaymentMethodRelationAttribute.ValueFormatter = types.StringPointerValue(attributesItem1.PaymentMethodRelationAttribute.ValueFormatter)
				}
				if attributesItem1.PurposeAttribute != nil {
					attributes3.PurposeAttribute = &tfTypes.PurposeAttribute{}
					attributes3.PurposeAttribute.Purpose = []types.String{}
					for _, v := range attributesItem1.PurposeAttribute.Purpose {
						attributes3.PurposeAttribute.Purpose = append(attributes3.PurposeAttribute.Purpose, types.StringValue(v))
					}
					if attributesItem1.PurposeAttribute.Constraints == nil {
						attributes3.PurposeAttribute.Constraints = nil
					} else {
						attributes3.PurposeAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
					}
					if attributesItem1.PurposeAttribute.CreatedAt != nil {
						attributes3.PurposeAttribute.CreatedAt = types.StringValue(attributesItem1.PurposeAttribute.CreatedAt.Format(time.RFC3339Nano))
					} else {
						attributes3.PurposeAttribute.CreatedAt = types.StringNull()
					}
					if attributesItem1.PurposeAttribute.DefaultValue == nil {
						attributes3.PurposeAttribute.DefaultValue = types.StringNull()
					} else {
						defaultValueResult47, _ := json.Marshal(attributesItem1.PurposeAttribute.DefaultValue)
						attributes3.PurposeAttribute.DefaultValue = types.StringValue(string(defaultValueResult47))
					}
					attributes3.PurposeAttribute.Deprecated = types.BoolPointerValue(attributesItem1.PurposeAttribute.Deprecated)
					attributes3.PurposeAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem1.PurposeAttribute.EntityBuilderDisableEdit)
					attributes3.PurposeAttribute.FeatureFlag = types.StringPointerValue(attributesItem1.PurposeAttribute.FeatureFlag)
					attributes3.PurposeAttribute.Group = types.StringPointerValue(attributesItem1.PurposeAttribute.Group)
					attributes3.PurposeAttribute.Hidden = types.BoolPointerValue(attributesItem1.PurposeAttribute.Hidden)
					attributes3.PurposeAttribute.HideLabel = types.BoolPointerValue(attributesItem1.PurposeAttribute.HideLabel)
					attributes3.PurposeAttribute.Icon = types.StringPointerValue(attributesItem1.PurposeAttribute.Icon)
					attributes3.PurposeAttribute.ID = types.StringPointerValue(attributesItem1.PurposeAttribute.ID)
					if attributesItem1.PurposeAttribute.InfoHelpers == nil {
						attributes3.PurposeAttribute.InfoHelpers = nil
					} else {
						attributes3.PurposeAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
						attributes3.PurposeAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem1.PurposeAttribute.InfoHelpers.HintCustomComponent)
						attributes3.PurposeAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem1.PurposeAttribute.InfoHelpers.HintText)
						attributes3.PurposeAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem1.PurposeAttribute.InfoHelpers.HintTextKey)
						attributes3.PurposeAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem1.PurposeAttribute.InfoHelpers.HintTooltipPlacement)
					}
					attributes3.PurposeAttribute.Label = types.StringValue(attributesItem1.PurposeAttribute.Label)
					attributes3.PurposeAttribute.Layout = types.StringPointerValue(attributesItem1.PurposeAttribute.Layout)
					attributes3.PurposeAttribute.Name = types.StringValue(attributesItem1.PurposeAttribute.Name)
					attributes3.PurposeAttribute.Order = types.Int64PointerValue(attributesItem1.PurposeAttribute.Order)
					attributes3.PurposeAttribute.Parents = []types.String{}
					for _, v := range attributesItem1.PurposeAttribute.Parents {
						attributes3.PurposeAttribute.Parents = append(attributes3.PurposeAttribute.Parents, types.StringValue(v))
					}
					attributes3.PurposeAttribute.Placeholder = types.StringPointerValue(attributesItem1.PurposeAttribute.Placeholder)
					attributes3.PurposeAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem1.PurposeAttribute.PreviewValueFormatter)
					attributes3.PurposeAttribute.Protected = types.BoolPointerValue(attributesItem1.PurposeAttribute.Protected)
					attributes3.PurposeAttribute.Readonly = types.BoolPointerValue(attributesItem1.PurposeAttribute.Readonly)
					attributes3.PurposeAttribute.RenderCondition = types.StringPointerValue(attributesItem1.PurposeAttribute.RenderCondition)
					attributes3.PurposeAttribute.Required = types.BoolPointerValue(attributesItem1.PurposeAttribute.Required)
					attributes3.PurposeAttribute.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount48, settingsFlagItem48 := range attributesItem1.PurposeAttribute.SettingsFlag {
						var settingsFlag97 tfTypes.SettingFlag
						settingsFlag97.Enabled = types.BoolPointerValue(settingsFlagItem48.Enabled)
						settingsFlag97.Name = types.StringPointerValue(settingsFlagItem48.Name)
						if settingsFlagCount48+1 > len(attributes3.PurposeAttribute.SettingsFlag) {
							attributes3.PurposeAttribute.SettingsFlag = append(attributes3.PurposeAttribute.SettingsFlag, settingsFlag97)
						} else {
							attributes3.PurposeAttribute.SettingsFlag[settingsFlagCount48].Enabled = settingsFlag97.Enabled
							attributes3.PurposeAttribute.SettingsFlag[settingsFlagCount48].Name = settingsFlag97.Name
						}
					}
					attributes3.PurposeAttribute.ShowInTable = types.BoolPointerValue(attributesItem1.PurposeAttribute.ShowInTable)
					attributes3.PurposeAttribute.Slug = types.StringPointerValue(attributesItem1.PurposeAttribute.Slug)
					attributes3.PurposeAttribute.Sortable = types.BoolPointerValue(attributesItem1.PurposeAttribute.Sortable)
					if attributesItem1.PurposeAttribute.Type != nil {
						attributes3.PurposeAttribute.Type = types.StringValue(string(*attributesItem1.PurposeAttribute.Type))
					} else {
						attributes3.PurposeAttribute.Type = types.StringNull()
					}
					if attributesItem1.PurposeAttribute.UpdatedAt != nil {
						attributes3.PurposeAttribute.UpdatedAt = types.StringValue(attributesItem1.PurposeAttribute.UpdatedAt.Format(time.RFC3339Nano))
					} else {
						attributes3.PurposeAttribute.UpdatedAt = types.StringNull()
					}
					attributes3.PurposeAttribute.ValueFormatter = types.StringPointerValue(attributesItem1.PurposeAttribute.ValueFormatter)
				}
				if attributesItem1.RelationAttribute != nil {
					attributes3.RelationAttribute = &tfTypes.RelationAttribute{}
					attributes3.RelationAttribute.Purpose = []types.String{}
					for _, v := range attributesItem1.RelationAttribute.Purpose {
						attributes3.RelationAttribute.Purpose = append(attributes3.RelationAttribute.Purpose, types.StringValue(v))
					}
					attributes3.RelationAttribute.Actions = []tfTypes.Actions{}
					for actionsCount1, actionsItem1 := range attributesItem1.RelationAttribute.Actions {
						var actions3 tfTypes.Actions
						if actionsItem1.ActionType != nil {
							actions3.ActionType = types.StringValue(string(*actionsItem1.ActionType))
						} else {
							actions3.ActionType = types.StringNull()
						}
						actions3.Default = types.BoolPointerValue(actionsItem1.Default)
						actions3.FeatureFlag = types.StringPointerValue(actionsItem1.FeatureFlag)
						actions3.Label = types.StringPointerValue(actionsItem1.Label)
						if actionsItem1.NewEntityItem == nil {
							actions3.NewEntityItem = nil
						} else {
							actions3.NewEntityItem = &tfTypes.RelationAttributeNewEntityItem{}
							if actionsItem1.NewEntityItem.ACL == nil {
								actions3.NewEntityItem.ACL = nil
							} else {
								actions3.NewEntityItem.ACL = &tfTypes.EntityACL{}
								if actionsItem1.NewEntityItem.ACL.AdditionalProperties == nil {
									actions3.NewEntityItem.ACL.AdditionalProperties = types.StringNull()
								} else {
									additionalPropertiesResult2, _ := json.Marshal(actionsItem1.NewEntityItem.ACL.AdditionalProperties)
									actions3.NewEntityItem.ACL.AdditionalProperties = types.StringValue(string(additionalPropertiesResult2))
								}
								actions3.NewEntityItem.ACL.Delete = []types.String{}
								for _, v := range actionsItem1.NewEntityItem.ACL.Delete {
									actions3.NewEntityItem.ACL.Delete = append(actions3.NewEntityItem.ACL.Delete, types.StringValue(v))
								}
								actions3.NewEntityItem.ACL.Edit = []types.String{}
								for _, v := range actionsItem1.NewEntityItem.ACL.Edit {
									actions3.NewEntityItem.ACL.Edit = append(actions3.NewEntityItem.ACL.Edit, types.StringValue(v))
								}
								actions3.NewEntityItem.ACL.View = []types.String{}
								for _, v := range actionsItem1.NewEntityItem.ACL.View {
									actions3.NewEntityItem.ACL.View = append(actions3.NewEntityItem.ACL.View, types.StringValue(v))
								}
							}
							if actionsItem1.NewEntityItem.CreatedAt != nil {
								actions3.NewEntityItem.CreatedAt = types.StringValue(actionsItem1.NewEntityItem.CreatedAt.Format(time.RFC3339Nano))
							} else {
								actions3.NewEntityItem.CreatedAt = types.StringNull()
							}
							actions3.NewEntityItem.ID = types.StringValue(actionsItem1.NewEntityItem.ID)
							actions3.NewEntityItem.Org = types.StringValue(actionsItem1.NewEntityItem.Org)
							actions3.NewEntityItem.Owners = []tfTypes.EntityOwner{}
							for ownersCount1, ownersItem1 := range actionsItem1.NewEntityItem.Owners {
								var owners3 tfTypes.EntityOwner
								owners3.OrgID = types.StringValue(ownersItem1.OrgID)
								owners3.UserID = types.StringPointerValue(ownersItem1.UserID)
								if ownersCount1+1 > len(actions3.NewEntityItem.Owners) {
									actions3.NewEntityItem.Owners = append(actions3.NewEntityItem.Owners, owners3)
								} else {
									actions3.NewEntityItem.Owners[ownersCount1].OrgID = owners3.OrgID
									actions3.NewEntityItem.Owners[ownersCount1].UserID = owners3.UserID
								}
							}
							actions3.NewEntityItem.Schema = types.StringValue(actionsItem1.NewEntityItem.Schema)
							actions3.NewEntityItem.Tags = []types.String{}
							for _, v := range actionsItem1.NewEntityItem.Tags {
								actions3.NewEntityItem.Tags = append(actions3.NewEntityItem.Tags, types.StringValue(v))
							}
							actions3.NewEntityItem.Title = types.StringPointerValue(actionsItem1.NewEntityItem.Title)
							if actionsItem1.NewEntityItem.UpdatedAt != nil {
								actions3.NewEntityItem.UpdatedAt = types.StringValue(actionsItem1.NewEntityItem.UpdatedAt.Format(time.RFC3339Nano))
							} else {
								actions3.NewEntityItem.UpdatedAt = types.StringNull()
							}
							if actionsItem1.NewEntityItem.AdditionalProperties == nil {
								actions3.NewEntityItem.AdditionalProperties = types.StringNull()
							} else {
								additionalPropertiesResult3, _ := json.Marshal(actionsItem1.NewEntityItem.AdditionalProperties)
								actions3.NewEntityItem.AdditionalProperties = types.StringValue(string(additionalPropertiesResult3))
							}
						}
						actions3.SettingsFlag = []tfTypes.SettingFlag{}
						for settingsFlagCount49, settingsFlagItem49 := range actionsItem1.SettingsFlag {
							var settingsFlag99 tfTypes.SettingFlag
							settingsFlag99.Enabled = types.BoolPointerValue(settingsFlagItem49.Enabled)
							settingsFlag99.Name = types.StringPointerValue(settingsFlagItem49.Name)
							if settingsFlagCount49+1 > len(actions3.SettingsFlag) {
								actions3.SettingsFlag = append(actions3.SettingsFlag, settingsFlag99)
							} else {
								actions3.SettingsFlag[settingsFlagCount49].Enabled = settingsFlag99.Enabled
								actions3.SettingsFlag[settingsFlagCount49].Name = settingsFlag99.Name
							}
						}
						if actionsCount1+1 > len(attributes3.RelationAttribute.Actions) {
							attributes3.RelationAttribute.Actions = append(attributes3.RelationAttribute.Actions, actions3)
						} else {
							attributes3.RelationAttribute.Actions[actionsCount1].ActionType = actions3.ActionType
							attributes3.RelationAttribute.Actions[actionsCount1].Default = actions3.Default
							attributes3.RelationAttribute.Actions[actionsCount1].FeatureFlag = actions3.FeatureFlag
							attributes3.RelationAttribute.Actions[actionsCount1].Label = actions3.Label
							attributes3.RelationAttribute.Actions[actionsCount1].NewEntityItem = actions3.NewEntityItem
							attributes3.RelationAttribute.Actions[actionsCount1].SettingsFlag = actions3.SettingsFlag
						}
					}
					attributes3.RelationAttribute.AddButtonLabel = types.StringPointerValue(attributesItem1.RelationAttribute.AddButtonLabel)
					attributes3.RelationAttribute.AllowedSchemas = []types.String{}
					for _, v := range attributesItem1.RelationAttribute.AllowedSchemas {
						attributes3.RelationAttribute.AllowedSchemas = append(attributes3.RelationAttribute.AllowedSchemas, types.StringValue(v))
					}
					if attributesItem1.RelationAttribute.Constraints == nil {
						attributes3.RelationAttribute.Constraints = nil
					} else {
						attributes3.RelationAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
					}
					if attributesItem1.RelationAttribute.DefaultValue == nil {
						attributes3.RelationAttribute.DefaultValue = types.StringNull()
					} else {
						defaultValueResult48, _ := json.Marshal(attributesItem1.RelationAttribute.DefaultValue)
						attributes3.RelationAttribute.DefaultValue = types.StringValue(string(defaultValueResult48))
					}
					attributes3.RelationAttribute.Deprecated = types.BoolPointerValue(attributesItem1.RelationAttribute.Deprecated)
					attributes3.RelationAttribute.DetailsViewModeEnabled = types.BoolPointerValue(attributesItem1.RelationAttribute.DetailsViewModeEnabled)
					if attributesItem1.RelationAttribute.DrawerSize != nil {
						attributes3.RelationAttribute.DrawerSize = types.StringValue(string(*attributesItem1.RelationAttribute.DrawerSize))
					} else {
						attributes3.RelationAttribute.DrawerSize = types.StringNull()
					}
					if attributesItem1.RelationAttribute.EditMode != nil {
						attributes3.RelationAttribute.EditMode = types.StringValue(string(*attributesItem1.RelationAttribute.EditMode))
					} else {
						attributes3.RelationAttribute.EditMode = types.StringNull()
					}
					attributes3.RelationAttribute.EnableRelationPicker = types.BoolPointerValue(attributesItem1.RelationAttribute.EnableRelationPicker)
					attributes3.RelationAttribute.EnableRelationTags = types.BoolPointerValue(attributesItem1.RelationAttribute.EnableRelationTags)
					attributes3.RelationAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem1.RelationAttribute.EntityBuilderDisableEdit)
					attributes3.RelationAttribute.FeatureFlag = types.StringPointerValue(attributesItem1.RelationAttribute.FeatureFlag)
					attributes3.RelationAttribute.Group = types.StringPointerValue(attributesItem1.RelationAttribute.Group)
					attributes3.RelationAttribute.HasPrimary = types.BoolPointerValue(attributesItem1.RelationAttribute.HasPrimary)
					attributes3.RelationAttribute.Hidden = types.BoolPointerValue(attributesItem1.RelationAttribute.Hidden)
					attributes3.RelationAttribute.HideLabel = types.BoolPointerValue(attributesItem1.RelationAttribute.HideLabel)
					attributes3.RelationAttribute.Icon = types.StringPointerValue(attributesItem1.RelationAttribute.Icon)
					attributes3.RelationAttribute.ID = types.StringPointerValue(attributesItem1.RelationAttribute.ID)
					if attributesItem1.RelationAttribute.InfoHelpers == nil {
						attributes3.RelationAttribute.InfoHelpers = nil
					} else {
						attributes3.RelationAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
						attributes3.RelationAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem1.RelationAttribute.InfoHelpers.HintCustomComponent)
						attributes3.RelationAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem1.RelationAttribute.InfoHelpers.HintText)
						attributes3.RelationAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem1.RelationAttribute.InfoHelpers.HintTextKey)
						attributes3.RelationAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem1.RelationAttribute.InfoHelpers.HintTooltipPlacement)
					}
					attributes3.RelationAttribute.Label = types.StringValue(attributesItem1.RelationAttribute.Label)
					attributes3.RelationAttribute.Layout = types.StringPointerValue(attributesItem1.RelationAttribute.Layout)
					attributes3.RelationAttribute.Name = types.StringValue(attributesItem1.RelationAttribute.Name)
					attributes3.RelationAttribute.Order = types.Int64PointerValue(attributesItem1.RelationAttribute.Order)
					attributes3.RelationAttribute.Placeholder = types.StringPointerValue(attributesItem1.RelationAttribute.Placeholder)
					attributes3.RelationAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem1.RelationAttribute.PreviewValueFormatter)
					attributes3.RelationAttribute.Protected = types.BoolPointerValue(attributesItem1.RelationAttribute.Protected)
					attributes3.RelationAttribute.Readonly = types.BoolPointerValue(attributesItem1.RelationAttribute.Readonly)
					if attributesItem1.RelationAttribute.RelationAffinityMode != nil {
						attributes3.RelationAttribute.RelationAffinityMode = types.StringValue(string(*attributesItem1.RelationAttribute.RelationAffinityMode))
					} else {
						attributes3.RelationAttribute.RelationAffinityMode = types.StringNull()
					}
					if attributesItem1.RelationAttribute.RelationType != nil {
						attributes3.RelationAttribute.RelationType = types.StringValue(string(*attributesItem1.RelationAttribute.RelationType))
					} else {
						attributes3.RelationAttribute.RelationType = types.StringNull()
					}
					attributes3.RelationAttribute.RenderCondition = types.StringPointerValue(attributesItem1.RelationAttribute.RenderCondition)
					attributes3.RelationAttribute.Required = types.BoolPointerValue(attributesItem1.RelationAttribute.Required)
					if len(attributesItem1.RelationAttribute.ReverseAttributes) > 0 {
						attributes3.RelationAttribute.ReverseAttributes = make(map[string]types.String)
						for key1, value4 := range attributesItem1.RelationAttribute.ReverseAttributes {
							attributes3.RelationAttribute.ReverseAttributes[key1] = types.StringValue(value4)
						}
					}
					attributes3.RelationAttribute.SearchPlaceholder = types.StringPointerValue(attributesItem1.RelationAttribute.SearchPlaceholder)
					attributes3.RelationAttribute.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount50, settingsFlagItem50 := range attributesItem1.RelationAttribute.SettingsFlag {
						var settingsFlag101 tfTypes.SettingFlag
						settingsFlag101.Enabled = types.BoolPointerValue(settingsFlagItem50.Enabled)
						settingsFlag101.Name = types.StringPointerValue(settingsFlagItem50.Name)
						if settingsFlagCount50+1 > len(attributes3.RelationAttribute.SettingsFlag) {
							attributes3.RelationAttribute.SettingsFlag = append(attributes3.RelationAttribute.SettingsFlag, settingsFlag101)
						} else {
							attributes3.RelationAttribute.SettingsFlag[settingsFlagCount50].Enabled = settingsFlag101.Enabled
							attributes3.RelationAttribute.SettingsFlag[settingsFlagCount50].Name = settingsFlag101.Name
						}
					}
					attributes3.RelationAttribute.ShowInTable = types.BoolPointerValue(attributesItem1.RelationAttribute.ShowInTable)
					attributes3.RelationAttribute.Sortable = types.BoolPointerValue(attributesItem1.RelationAttribute.Sortable)
					attributes3.RelationAttribute.SummaryFields = []tfTypes.SummaryFields{}
					for summaryFieldsCount1, summaryFieldsItem1 := range attributesItem1.RelationAttribute.SummaryFields {
						var summaryFields3 tfTypes.SummaryFields
						if summaryFieldsItem1.Str != nil {
							summaryFields3.Str = types.StringPointerValue(summaryFieldsItem1.Str)
						}
						if summaryFieldsItem1.SummaryField != nil {
							summaryFields3.SummaryField = &tfTypes.SummaryField{}
							summaryFields3.SummaryField.DisplayAs = types.StringPointerValue(summaryFieldsItem1.SummaryField.DisplayAs)
							summaryFields3.SummaryField.Field = types.StringPointerValue(summaryFieldsItem1.SummaryField.Field)
						}
						if summaryFieldsCount1+1 > len(attributes3.RelationAttribute.SummaryFields) {
							attributes3.RelationAttribute.SummaryFields = append(attributes3.RelationAttribute.SummaryFields, summaryFields3)
						} else {
							attributes3.RelationAttribute.SummaryFields[summaryFieldsCount1].Str = summaryFields3.Str
							attributes3.RelationAttribute.SummaryFields[summaryFieldsCount1].SummaryField = summaryFields3.SummaryField
						}
					}
					if attributesItem1.RelationAttribute.Type != nil {
						attributes3.RelationAttribute.Type = types.StringValue(string(*attributesItem1.RelationAttribute.Type))
					} else {
						attributes3.RelationAttribute.Type = types.StringNull()
					}
					attributes3.RelationAttribute.ValueFormatter = types.StringPointerValue(attributesItem1.RelationAttribute.ValueFormatter)
				}
				if attributesItem1.RepeatableAttribute != nil {
					attributes3.RepeatableAttribute = &tfTypes.RepeatableAttribute{}
					attributes3.RepeatableAttribute.Purpose = []types.String{}
					for _, v := range attributesItem1.RepeatableAttribute.Purpose {
						attributes3.RepeatableAttribute.Purpose = append(attributes3.RepeatableAttribute.Purpose, types.StringValue(v))
					}
					if attributesItem1.RepeatableAttribute.Constraints == nil {
						attributes3.RepeatableAttribute.Constraints = nil
					} else {
						attributes3.RepeatableAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
					}
					if attributesItem1.RepeatableAttribute.DefaultValue == nil {
						attributes3.RepeatableAttribute.DefaultValue = types.StringNull()
					} else {
						defaultValueResult49, _ := json.Marshal(attributesItem1.RepeatableAttribute.DefaultValue)
						attributes3.RepeatableAttribute.DefaultValue = types.StringValue(string(defaultValueResult49))
					}
					attributes3.RepeatableAttribute.Deprecated = types.BoolPointerValue(attributesItem1.RepeatableAttribute.Deprecated)
					attributes3.RepeatableAttribute.EnableRelationPicker = types.BoolPointerValue(attributesItem1.RepeatableAttribute.EnableRelationPicker)
					attributes3.RepeatableAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem1.RepeatableAttribute.EntityBuilderDisableEdit)
					attributes3.RepeatableAttribute.FeatureFlag = types.StringPointerValue(attributesItem1.RepeatableAttribute.FeatureFlag)
					attributes3.RepeatableAttribute.Group = types.StringPointerValue(attributesItem1.RepeatableAttribute.Group)
					attributes3.RepeatableAttribute.HasPrimary = types.BoolPointerValue(attributesItem1.RepeatableAttribute.HasPrimary)
					attributes3.RepeatableAttribute.Hidden = types.BoolPointerValue(attributesItem1.RepeatableAttribute.Hidden)
					attributes3.RepeatableAttribute.HideLabel = types.BoolPointerValue(attributesItem1.RepeatableAttribute.HideLabel)
					attributes3.RepeatableAttribute.Icon = types.StringPointerValue(attributesItem1.RepeatableAttribute.Icon)
					attributes3.RepeatableAttribute.ID = types.StringPointerValue(attributesItem1.RepeatableAttribute.ID)
					if attributesItem1.RepeatableAttribute.InfoHelpers == nil {
						attributes3.RepeatableAttribute.InfoHelpers = nil
					} else {
						attributes3.RepeatableAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
						attributes3.RepeatableAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem1.RepeatableAttribute.InfoHelpers.HintCustomComponent)
						attributes3.RepeatableAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem1.RepeatableAttribute.InfoHelpers.HintText)
						attributes3.RepeatableAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem1.RepeatableAttribute.InfoHelpers.HintTextKey)
						attributes3.RepeatableAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem1.RepeatableAttribute.InfoHelpers.HintTooltipPlacement)
					}
					attributes3.RepeatableAttribute.Label = types.StringValue(attributesItem1.RepeatableAttribute.Label)
					attributes3.RepeatableAttribute.Layout = types.StringPointerValue(attributesItem1.RepeatableAttribute.Layout)
					attributes3.RepeatableAttribute.Name = types.StringValue(attributesItem1.RepeatableAttribute.Name)
					attributes3.RepeatableAttribute.Order = types.Int64PointerValue(attributesItem1.RepeatableAttribute.Order)
					attributes3.RepeatableAttribute.Placeholder = types.StringPointerValue(attributesItem1.RepeatableAttribute.Placeholder)
					attributes3.RepeatableAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem1.RepeatableAttribute.PreviewValueFormatter)
					attributes3.RepeatableAttribute.Protected = types.BoolPointerValue(attributesItem1.RepeatableAttribute.Protected)
					attributes3.RepeatableAttribute.Readonly = types.BoolPointerValue(attributesItem1.RepeatableAttribute.Readonly)
					if attributesItem1.RepeatableAttribute.RelationAffinityMode != nil {
						attributes3.RepeatableAttribute.RelationAffinityMode = types.StringValue(string(*attributesItem1.RepeatableAttribute.RelationAffinityMode))
					} else {
						attributes3.RepeatableAttribute.RelationAffinityMode = types.StringNull()
					}
					attributes3.RepeatableAttribute.RenderCondition = types.StringPointerValue(attributesItem1.RepeatableAttribute.RenderCondition)
					attributes3.RepeatableAttribute.Repeatable = types.BoolPointerValue(attributesItem1.RepeatableAttribute.Repeatable)
					attributes3.RepeatableAttribute.Required = types.BoolPointerValue(attributesItem1.RepeatableAttribute.Required)
					attributes3.RepeatableAttribute.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount51, settingsFlagItem51 := range attributesItem1.RepeatableAttribute.SettingsFlag {
						var settingsFlag103 tfTypes.SettingFlag
						settingsFlag103.Enabled = types.BoolPointerValue(settingsFlagItem51.Enabled)
						settingsFlag103.Name = types.StringPointerValue(settingsFlagItem51.Name)
						if settingsFlagCount51+1 > len(attributes3.RepeatableAttribute.SettingsFlag) {
							attributes3.RepeatableAttribute.SettingsFlag = append(attributes3.RepeatableAttribute.SettingsFlag, settingsFlag103)
						} else {
							attributes3.RepeatableAttribute.SettingsFlag[settingsFlagCount51].Enabled = settingsFlag103.Enabled
							attributes3.RepeatableAttribute.SettingsFlag[settingsFlagCount51].Name = settingsFlag103.Name
						}
					}
					attributes3.RepeatableAttribute.ShowInTable = types.BoolPointerValue(attributesItem1.RepeatableAttribute.ShowInTable)
					attributes3.RepeatableAttribute.Sortable = types.BoolPointerValue(attributesItem1.RepeatableAttribute.Sortable)
					if attributesItem1.RepeatableAttribute.Type != nil {
						attributes3.RepeatableAttribute.Type = types.StringValue(string(*attributesItem1.RepeatableAttribute.Type))
					} else {
						attributes3.RepeatableAttribute.Type = types.StringNull()
					}
					attributes3.RepeatableAttribute.ValueFormatter = types.StringPointerValue(attributesItem1.RepeatableAttribute.ValueFormatter)
				}
				if attributesItem1.SelectAttribute != nil {
					attributes3.SelectAttribute = &tfTypes.SelectAttribute{}
					attributes3.SelectAttribute.Purpose = []types.String{}
					for _, v := range attributesItem1.SelectAttribute.Purpose {
						attributes3.SelectAttribute.Purpose = append(attributes3.SelectAttribute.Purpose, types.StringValue(v))
					}
					attributes3.SelectAttribute.AllowAny = types.BoolPointerValue(attributesItem1.SelectAttribute.AllowAny)
					if attributesItem1.SelectAttribute.Constraints == nil {
						attributes3.SelectAttribute.Constraints = nil
					} else {
						attributes3.SelectAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
					}
					if attributesItem1.SelectAttribute.DefaultValue == nil {
						attributes3.SelectAttribute.DefaultValue = types.StringNull()
					} else {
						defaultValueResult50, _ := json.Marshal(attributesItem1.SelectAttribute.DefaultValue)
						attributes3.SelectAttribute.DefaultValue = types.StringValue(string(defaultValueResult50))
					}
					attributes3.SelectAttribute.Deprecated = types.BoolPointerValue(attributesItem1.SelectAttribute.Deprecated)
					attributes3.SelectAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem1.SelectAttribute.EntityBuilderDisableEdit)
					attributes3.SelectAttribute.FeatureFlag = types.StringPointerValue(attributesItem1.SelectAttribute.FeatureFlag)
					attributes3.SelectAttribute.Group = types.StringPointerValue(attributesItem1.SelectAttribute.Group)
					attributes3.SelectAttribute.Hidden = types.BoolPointerValue(attributesItem1.SelectAttribute.Hidden)
					attributes3.SelectAttribute.HideLabel = types.BoolPointerValue(attributesItem1.SelectAttribute.HideLabel)
					attributes3.SelectAttribute.Icon = types.StringPointerValue(attributesItem1.SelectAttribute.Icon)
					attributes3.SelectAttribute.ID = types.StringPointerValue(attributesItem1.SelectAttribute.ID)
					if attributesItem1.SelectAttribute.InfoHelpers == nil {
						attributes3.SelectAttribute.InfoHelpers = nil
					} else {
						attributes3.SelectAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
						attributes3.SelectAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem1.SelectAttribute.InfoHelpers.HintCustomComponent)
						attributes3.SelectAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem1.SelectAttribute.InfoHelpers.HintText)
						attributes3.SelectAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem1.SelectAttribute.InfoHelpers.HintTextKey)
						attributes3.SelectAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem1.SelectAttribute.InfoHelpers.HintTooltipPlacement)
					}
					attributes3.SelectAttribute.Label = types.StringValue(attributesItem1.SelectAttribute.Label)
					attributes3.SelectAttribute.Layout = types.StringPointerValue(attributesItem1.SelectAttribute.Layout)
					attributes3.SelectAttribute.Name = types.StringValue(attributesItem1.SelectAttribute.Name)
					if attributesItem1.SelectAttribute.Options == nil {
						attributes3.SelectAttribute.Options = types.StringNull()
					} else {
						optionsVarResult1, _ := json.Marshal(attributesItem1.SelectAttribute.Options)
						attributes3.SelectAttribute.Options = types.StringValue(string(optionsVarResult1))
					}
					attributes3.SelectAttribute.Order = types.Int64PointerValue(attributesItem1.SelectAttribute.Order)
					attributes3.SelectAttribute.Placeholder = types.StringPointerValue(attributesItem1.SelectAttribute.Placeholder)
					attributes3.SelectAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem1.SelectAttribute.PreviewValueFormatter)
					attributes3.SelectAttribute.Protected = types.BoolPointerValue(attributesItem1.SelectAttribute.Protected)
					attributes3.SelectAttribute.Readonly = types.BoolPointerValue(attributesItem1.SelectAttribute.Readonly)
					attributes3.SelectAttribute.RenderCondition = types.StringPointerValue(attributesItem1.SelectAttribute.RenderCondition)
					attributes3.SelectAttribute.Required = types.BoolPointerValue(attributesItem1.SelectAttribute.Required)
					attributes3.SelectAttribute.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount52, settingsFlagItem52 := range attributesItem1.SelectAttribute.SettingsFlag {
						var settingsFlag105 tfTypes.SettingFlag
						settingsFlag105.Enabled = types.BoolPointerValue(settingsFlagItem52.Enabled)
						settingsFlag105.Name = types.StringPointerValue(settingsFlagItem52.Name)
						if settingsFlagCount52+1 > len(attributes3.SelectAttribute.SettingsFlag) {
							attributes3.SelectAttribute.SettingsFlag = append(attributes3.SelectAttribute.SettingsFlag, settingsFlag105)
						} else {
							attributes3.SelectAttribute.SettingsFlag[settingsFlagCount52].Enabled = settingsFlag105.Enabled
							attributes3.SelectAttribute.SettingsFlag[settingsFlagCount52].Name = settingsFlag105.Name
						}
					}
					attributes3.SelectAttribute.ShowInTable = types.BoolPointerValue(attributesItem1.SelectAttribute.ShowInTable)
					attributes3.SelectAttribute.Sortable = types.BoolPointerValue(attributesItem1.SelectAttribute.Sortable)
					if attributesItem1.SelectAttribute.Type != nil {
						attributes3.SelectAttribute.Type = types.StringValue(string(*attributesItem1.SelectAttribute.Type))
					} else {
						attributes3.SelectAttribute.Type = types.StringNull()
					}
					attributes3.SelectAttribute.ValueFormatter = types.StringPointerValue(attributesItem1.SelectAttribute.ValueFormatter)
				}
				if attributesItem1.SequenceAttribute != nil {
					attributes3.SequenceAttribute = &tfTypes.SequenceAttribute{}
					attributes3.SequenceAttribute.Purpose = []types.String{}
					for _, v := range attributesItem1.SequenceAttribute.Purpose {
						attributes3.SequenceAttribute.Purpose = append(attributes3.SequenceAttribute.Purpose, types.StringValue(v))
					}
					if attributesItem1.SequenceAttribute.Constraints == nil {
						attributes3.SequenceAttribute.Constraints = nil
					} else {
						attributes3.SequenceAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
					}
					if attributesItem1.SequenceAttribute.DefaultValue == nil {
						attributes3.SequenceAttribute.DefaultValue = types.StringNull()
					} else {
						defaultValueResult51, _ := json.Marshal(attributesItem1.SequenceAttribute.DefaultValue)
						attributes3.SequenceAttribute.DefaultValue = types.StringValue(string(defaultValueResult51))
					}
					attributes3.SequenceAttribute.Deprecated = types.BoolPointerValue(attributesItem1.SequenceAttribute.Deprecated)
					attributes3.SequenceAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem1.SequenceAttribute.EntityBuilderDisableEdit)
					attributes3.SequenceAttribute.FeatureFlag = types.StringPointerValue(attributesItem1.SequenceAttribute.FeatureFlag)
					attributes3.SequenceAttribute.Group = types.StringPointerValue(attributesItem1.SequenceAttribute.Group)
					attributes3.SequenceAttribute.Hidden = types.BoolPointerValue(attributesItem1.SequenceAttribute.Hidden)
					attributes3.SequenceAttribute.HideLabel = types.BoolPointerValue(attributesItem1.SequenceAttribute.HideLabel)
					attributes3.SequenceAttribute.Icon = types.StringPointerValue(attributesItem1.SequenceAttribute.Icon)
					attributes3.SequenceAttribute.ID = types.StringPointerValue(attributesItem1.SequenceAttribute.ID)
					if attributesItem1.SequenceAttribute.InfoHelpers == nil {
						attributes3.SequenceAttribute.InfoHelpers = nil
					} else {
						attributes3.SequenceAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
						attributes3.SequenceAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem1.SequenceAttribute.InfoHelpers.HintCustomComponent)
						attributes3.SequenceAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem1.SequenceAttribute.InfoHelpers.HintText)
						attributes3.SequenceAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem1.SequenceAttribute.InfoHelpers.HintTextKey)
						attributes3.SequenceAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem1.SequenceAttribute.InfoHelpers.HintTooltipPlacement)
					}
					attributes3.SequenceAttribute.Label = types.StringValue(attributesItem1.SequenceAttribute.Label)
					attributes3.SequenceAttribute.Layout = types.StringPointerValue(attributesItem1.SequenceAttribute.Layout)
					attributes3.SequenceAttribute.Name = types.StringValue(attributesItem1.SequenceAttribute.Name)
					attributes3.SequenceAttribute.Order = types.Int64PointerValue(attributesItem1.SequenceAttribute.Order)
					attributes3.SequenceAttribute.Placeholder = types.StringPointerValue(attributesItem1.SequenceAttribute.Placeholder)
					attributes3.SequenceAttribute.Prefix = types.StringPointerValue(attributesItem1.SequenceAttribute.Prefix)
					attributes3.SequenceAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem1.SequenceAttribute.PreviewValueFormatter)
					attributes3.SequenceAttribute.Protected = types.BoolPointerValue(attributesItem1.SequenceAttribute.Protected)
					attributes3.SequenceAttribute.Readonly = types.BoolPointerValue(attributesItem1.SequenceAttribute.Readonly)
					attributes3.SequenceAttribute.RenderCondition = types.StringPointerValue(attributesItem1.SequenceAttribute.RenderCondition)
					attributes3.SequenceAttribute.Required = types.BoolPointerValue(attributesItem1.SequenceAttribute.Required)
					attributes3.SequenceAttribute.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount53, settingsFlagItem53 := range attributesItem1.SequenceAttribute.SettingsFlag {
						var settingsFlag107 tfTypes.SettingFlag
						settingsFlag107.Enabled = types.BoolPointerValue(settingsFlagItem53.Enabled)
						settingsFlag107.Name = types.StringPointerValue(settingsFlagItem53.Name)
						if settingsFlagCount53+1 > len(attributes3.SequenceAttribute.SettingsFlag) {
							attributes3.SequenceAttribute.SettingsFlag = append(attributes3.SequenceAttribute.SettingsFlag, settingsFlag107)
						} else {
							attributes3.SequenceAttribute.SettingsFlag[settingsFlagCount53].Enabled = settingsFlag107.Enabled
							attributes3.SequenceAttribute.SettingsFlag[settingsFlagCount53].Name = settingsFlag107.Name
						}
					}
					attributes3.SequenceAttribute.ShowInTable = types.BoolPointerValue(attributesItem1.SequenceAttribute.ShowInTable)
					attributes3.SequenceAttribute.Sortable = types.BoolPointerValue(attributesItem1.SequenceAttribute.Sortable)
					attributes3.SequenceAttribute.StartNumber = types.Int64PointerValue(attributesItem1.SequenceAttribute.StartNumber)
					if attributesItem1.SequenceAttribute.Type != nil {
						attributes3.SequenceAttribute.Type = types.StringValue(string(*attributesItem1.SequenceAttribute.Type))
					} else {
						attributes3.SequenceAttribute.Type = types.StringNull()
					}
					attributes3.SequenceAttribute.ValueFormatter = types.StringPointerValue(attributesItem1.SequenceAttribute.ValueFormatter)
				}
				if attributesItem1.StatusAttribute != nil {
					attributes3.StatusAttribute = &tfTypes.StatusAttribute{}
					attributes3.StatusAttribute.Purpose = []types.String{}
					for _, v := range attributesItem1.StatusAttribute.Purpose {
						attributes3.StatusAttribute.Purpose = append(attributes3.StatusAttribute.Purpose, types.StringValue(v))
					}
					if attributesItem1.StatusAttribute.Constraints == nil {
						attributes3.StatusAttribute.Constraints = nil
					} else {
						attributes3.StatusAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
					}
					if attributesItem1.StatusAttribute.DefaultValue == nil {
						attributes3.StatusAttribute.DefaultValue = types.StringNull()
					} else {
						defaultValueResult52, _ := json.Marshal(attributesItem1.StatusAttribute.DefaultValue)
						attributes3.StatusAttribute.DefaultValue = types.StringValue(string(defaultValueResult52))
					}
					attributes3.StatusAttribute.Deprecated = types.BoolPointerValue(attributesItem1.StatusAttribute.Deprecated)
					attributes3.StatusAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem1.StatusAttribute.EntityBuilderDisableEdit)
					attributes3.StatusAttribute.FeatureFlag = types.StringPointerValue(attributesItem1.StatusAttribute.FeatureFlag)
					attributes3.StatusAttribute.Group = types.StringPointerValue(attributesItem1.StatusAttribute.Group)
					attributes3.StatusAttribute.Hidden = types.BoolPointerValue(attributesItem1.StatusAttribute.Hidden)
					attributes3.StatusAttribute.HideLabel = types.BoolPointerValue(attributesItem1.StatusAttribute.HideLabel)
					attributes3.StatusAttribute.Icon = types.StringPointerValue(attributesItem1.StatusAttribute.Icon)
					attributes3.StatusAttribute.ID = types.StringPointerValue(attributesItem1.StatusAttribute.ID)
					if attributesItem1.StatusAttribute.InfoHelpers == nil {
						attributes3.StatusAttribute.InfoHelpers = nil
					} else {
						attributes3.StatusAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
						attributes3.StatusAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem1.StatusAttribute.InfoHelpers.HintCustomComponent)
						attributes3.StatusAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem1.StatusAttribute.InfoHelpers.HintText)
						attributes3.StatusAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem1.StatusAttribute.InfoHelpers.HintTextKey)
						attributes3.StatusAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem1.StatusAttribute.InfoHelpers.HintTooltipPlacement)
					}
					attributes3.StatusAttribute.Label = types.StringValue(attributesItem1.StatusAttribute.Label)
					attributes3.StatusAttribute.Layout = types.StringPointerValue(attributesItem1.StatusAttribute.Layout)
					attributes3.StatusAttribute.Name = types.StringValue(attributesItem1.StatusAttribute.Name)
					attributes3.StatusAttribute.Options = []tfTypes.OptionsObj{}
					for optionsVarCount3, optionsVarItem3 := range attributesItem1.StatusAttribute.Options {
						var optionsVar4 tfTypes.OptionsObj
						if optionsVarItem3.Str != nil {
							optionsVar4.Str = types.StringPointerValue(optionsVarItem3.Str)
						}
						if optionsVarItem3.Options2 != nil {
							optionsVar4.Two = &tfTypes.Two{}
							optionsVar4.Two.Title = types.StringPointerValue(optionsVarItem3.Options2.Title)
							optionsVar4.Two.Value = types.StringValue(optionsVarItem3.Options2.Value)
						}
						if optionsVarCount3+1 > len(attributes3.StatusAttribute.Options) {
							attributes3.StatusAttribute.Options = append(attributes3.StatusAttribute.Options, optionsVar4)
						} else {
							attributes3.StatusAttribute.Options[optionsVarCount3].Str = optionsVar4.Str
							attributes3.StatusAttribute.Options[optionsVarCount3].Two = optionsVar4.Two
						}
					}
					attributes3.StatusAttribute.Order = types.Int64PointerValue(attributesItem1.StatusAttribute.Order)
					attributes3.StatusAttribute.Placeholder = types.StringPointerValue(attributesItem1.StatusAttribute.Placeholder)
					attributes3.StatusAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem1.StatusAttribute.PreviewValueFormatter)
					attributes3.StatusAttribute.Protected = types.BoolPointerValue(attributesItem1.StatusAttribute.Protected)
					attributes3.StatusAttribute.Readonly = types.BoolPointerValue(attributesItem1.StatusAttribute.Readonly)
					attributes3.StatusAttribute.RenderCondition = types.StringPointerValue(attributesItem1.StatusAttribute.RenderCondition)
					attributes3.StatusAttribute.Required = types.BoolPointerValue(attributesItem1.StatusAttribute.Required)
					attributes3.StatusAttribute.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount54, settingsFlagItem54 := range attributesItem1.StatusAttribute.SettingsFlag {
						var settingsFlag109 tfTypes.SettingFlag
						settingsFlag109.Enabled = types.BoolPointerValue(settingsFlagItem54.Enabled)
						settingsFlag109.Name = types.StringPointerValue(settingsFlagItem54.Name)
						if settingsFlagCount54+1 > len(attributes3.StatusAttribute.SettingsFlag) {
							attributes3.StatusAttribute.SettingsFlag = append(attributes3.StatusAttribute.SettingsFlag, settingsFlag109)
						} else {
							attributes3.StatusAttribute.SettingsFlag[settingsFlagCount54].Enabled = settingsFlag109.Enabled
							attributes3.StatusAttribute.SettingsFlag[settingsFlagCount54].Name = settingsFlag109.Name
						}
					}
					attributes3.StatusAttribute.ShowInTable = types.BoolPointerValue(attributesItem1.StatusAttribute.ShowInTable)
					attributes3.StatusAttribute.Sortable = types.BoolPointerValue(attributesItem1.StatusAttribute.Sortable)
					if attributesItem1.StatusAttribute.Type != nil {
						attributes3.StatusAttribute.Type = types.StringValue(string(*attributesItem1.StatusAttribute.Type))
					} else {
						attributes3.StatusAttribute.Type = types.StringNull()
					}
					attributes3.StatusAttribute.ValueFormatter = types.StringPointerValue(attributesItem1.StatusAttribute.ValueFormatter)
				}
				if attributesItem1.TagsAttribute != nil {
					attributes3.TagsAttribute = &tfTypes.TagsAttribute{}
					attributes3.TagsAttribute.Purpose = []types.String{}
					for _, v := range attributesItem1.TagsAttribute.Purpose {
						attributes3.TagsAttribute.Purpose = append(attributes3.TagsAttribute.Purpose, types.StringValue(v))
					}
					if attributesItem1.TagsAttribute.Constraints == nil {
						attributes3.TagsAttribute.Constraints = nil
					} else {
						attributes3.TagsAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
					}
					if attributesItem1.TagsAttribute.DefaultValue == nil {
						attributes3.TagsAttribute.DefaultValue = types.StringNull()
					} else {
						defaultValueResult53, _ := json.Marshal(attributesItem1.TagsAttribute.DefaultValue)
						attributes3.TagsAttribute.DefaultValue = types.StringValue(string(defaultValueResult53))
					}
					attributes3.TagsAttribute.Deprecated = types.BoolPointerValue(attributesItem1.TagsAttribute.Deprecated)
					attributes3.TagsAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem1.TagsAttribute.EntityBuilderDisableEdit)
					attributes3.TagsAttribute.FeatureFlag = types.StringPointerValue(attributesItem1.TagsAttribute.FeatureFlag)
					attributes3.TagsAttribute.Group = types.StringPointerValue(attributesItem1.TagsAttribute.Group)
					attributes3.TagsAttribute.Hidden = types.BoolPointerValue(attributesItem1.TagsAttribute.Hidden)
					attributes3.TagsAttribute.HideLabel = types.BoolPointerValue(attributesItem1.TagsAttribute.HideLabel)
					attributes3.TagsAttribute.Icon = types.StringPointerValue(attributesItem1.TagsAttribute.Icon)
					attributes3.TagsAttribute.ID = types.StringPointerValue(attributesItem1.TagsAttribute.ID)
					if attributesItem1.TagsAttribute.InfoHelpers == nil {
						attributes3.TagsAttribute.InfoHelpers = nil
					} else {
						attributes3.TagsAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
						attributes3.TagsAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem1.TagsAttribute.InfoHelpers.HintCustomComponent)
						attributes3.TagsAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem1.TagsAttribute.InfoHelpers.HintText)
						attributes3.TagsAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem1.TagsAttribute.InfoHelpers.HintTextKey)
						attributes3.TagsAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem1.TagsAttribute.InfoHelpers.HintTooltipPlacement)
					}
					attributes3.TagsAttribute.Label = types.StringValue(attributesItem1.TagsAttribute.Label)
					attributes3.TagsAttribute.Layout = types.StringPointerValue(attributesItem1.TagsAttribute.Layout)
					attributes3.TagsAttribute.Name = types.StringValue(attributesItem1.TagsAttribute.Name)
					attributes3.TagsAttribute.Options = []types.String{}
					for _, v := range attributesItem1.TagsAttribute.Options {
						attributes3.TagsAttribute.Options = append(attributes3.TagsAttribute.Options, types.StringValue(v))
					}
					attributes3.TagsAttribute.Order = types.Int64PointerValue(attributesItem1.TagsAttribute.Order)
					attributes3.TagsAttribute.Placeholder = types.StringPointerValue(attributesItem1.TagsAttribute.Placeholder)
					attributes3.TagsAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem1.TagsAttribute.PreviewValueFormatter)
					attributes3.TagsAttribute.Protected = types.BoolPointerValue(attributesItem1.TagsAttribute.Protected)
					attributes3.TagsAttribute.Readonly = types.BoolPointerValue(attributesItem1.TagsAttribute.Readonly)
					attributes3.TagsAttribute.RenderCondition = types.StringPointerValue(attributesItem1.TagsAttribute.RenderCondition)
					attributes3.TagsAttribute.Required = types.BoolPointerValue(attributesItem1.TagsAttribute.Required)
					attributes3.TagsAttribute.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount55, settingsFlagItem55 := range attributesItem1.TagsAttribute.SettingsFlag {
						var settingsFlag111 tfTypes.SettingFlag
						settingsFlag111.Enabled = types.BoolPointerValue(settingsFlagItem55.Enabled)
						settingsFlag111.Name = types.StringPointerValue(settingsFlagItem55.Name)
						if settingsFlagCount55+1 > len(attributes3.TagsAttribute.SettingsFlag) {
							attributes3.TagsAttribute.SettingsFlag = append(attributes3.TagsAttribute.SettingsFlag, settingsFlag111)
						} else {
							attributes3.TagsAttribute.SettingsFlag[settingsFlagCount55].Enabled = settingsFlag111.Enabled
							attributes3.TagsAttribute.SettingsFlag[settingsFlagCount55].Name = settingsFlag111.Name
						}
					}
					attributes3.TagsAttribute.ShowInTable = types.BoolPointerValue(attributesItem1.TagsAttribute.ShowInTable)
					attributes3.TagsAttribute.Sortable = types.BoolPointerValue(attributesItem1.TagsAttribute.Sortable)
					attributes3.TagsAttribute.Suggestions = []types.String{}
					for _, v := range attributesItem1.TagsAttribute.Suggestions {
						attributes3.TagsAttribute.Suggestions = append(attributes3.TagsAttribute.Suggestions, types.StringValue(v))
					}
					if attributesItem1.TagsAttribute.Type != nil {
						attributes3.TagsAttribute.Type = types.StringValue(string(*attributesItem1.TagsAttribute.Type))
					} else {
						attributes3.TagsAttribute.Type = types.StringNull()
					}
					attributes3.TagsAttribute.ValueFormatter = types.StringPointerValue(attributesItem1.TagsAttribute.ValueFormatter)
				}
				if attributesItem1.TextAttribute != nil {
					attributes3.TextAttribute = &tfTypes.TextAttribute{}
					attributes3.TextAttribute.Purpose = []types.String{}
					for _, v := range attributesItem1.TextAttribute.Purpose {
						attributes3.TextAttribute.Purpose = append(attributes3.TextAttribute.Purpose, types.StringValue(v))
					}
					if attributesItem1.TextAttribute.Constraints == nil {
						attributes3.TextAttribute.Constraints = nil
					} else {
						attributes3.TextAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
					}
					if attributesItem1.TextAttribute.DefaultValue == nil {
						attributes3.TextAttribute.DefaultValue = types.StringNull()
					} else {
						defaultValueResult54, _ := json.Marshal(attributesItem1.TextAttribute.DefaultValue)
						attributes3.TextAttribute.DefaultValue = types.StringValue(string(defaultValueResult54))
					}
					attributes3.TextAttribute.Deprecated = types.BoolPointerValue(attributesItem1.TextAttribute.Deprecated)
					attributes3.TextAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem1.TextAttribute.EntityBuilderDisableEdit)
					attributes3.TextAttribute.FeatureFlag = types.StringPointerValue(attributesItem1.TextAttribute.FeatureFlag)
					attributes3.TextAttribute.Group = types.StringPointerValue(attributesItem1.TextAttribute.Group)
					attributes3.TextAttribute.Hidden = types.BoolPointerValue(attributesItem1.TextAttribute.Hidden)
					attributes3.TextAttribute.HideLabel = types.BoolPointerValue(attributesItem1.TextAttribute.HideLabel)
					attributes3.TextAttribute.Icon = types.StringPointerValue(attributesItem1.TextAttribute.Icon)
					attributes3.TextAttribute.ID = types.StringPointerValue(attributesItem1.TextAttribute.ID)
					if attributesItem1.TextAttribute.InfoHelpers == nil {
						attributes3.TextAttribute.InfoHelpers = nil
					} else {
						attributes3.TextAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
						attributes3.TextAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem1.TextAttribute.InfoHelpers.HintCustomComponent)
						attributes3.TextAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem1.TextAttribute.InfoHelpers.HintText)
						attributes3.TextAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem1.TextAttribute.InfoHelpers.HintTextKey)
						attributes3.TextAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem1.TextAttribute.InfoHelpers.HintTooltipPlacement)
					}
					attributes3.TextAttribute.Label = types.StringValue(attributesItem1.TextAttribute.Label)
					attributes3.TextAttribute.Layout = types.StringPointerValue(attributesItem1.TextAttribute.Layout)
					attributes3.TextAttribute.Multiline = types.BoolPointerValue(attributesItem1.TextAttribute.Multiline)
					attributes3.TextAttribute.Name = types.StringValue(attributesItem1.TextAttribute.Name)
					attributes3.TextAttribute.Order = types.Int64PointerValue(attributesItem1.TextAttribute.Order)
					attributes3.TextAttribute.Placeholder = types.StringPointerValue(attributesItem1.TextAttribute.Placeholder)
					attributes3.TextAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem1.TextAttribute.PreviewValueFormatter)
					attributes3.TextAttribute.Protected = types.BoolPointerValue(attributesItem1.TextAttribute.Protected)
					attributes3.TextAttribute.Readonly = types.BoolPointerValue(attributesItem1.TextAttribute.Readonly)
					attributes3.TextAttribute.RenderCondition = types.StringPointerValue(attributesItem1.TextAttribute.RenderCondition)
					attributes3.TextAttribute.Required = types.BoolPointerValue(attributesItem1.TextAttribute.Required)
					attributes3.TextAttribute.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount56, settingsFlagItem56 := range attributesItem1.TextAttribute.SettingsFlag {
						var settingsFlag113 tfTypes.SettingFlag
						settingsFlag113.Enabled = types.BoolPointerValue(settingsFlagItem56.Enabled)
						settingsFlag113.Name = types.StringPointerValue(settingsFlagItem56.Name)
						if settingsFlagCount56+1 > len(attributes3.TextAttribute.SettingsFlag) {
							attributes3.TextAttribute.SettingsFlag = append(attributes3.TextAttribute.SettingsFlag, settingsFlag113)
						} else {
							attributes3.TextAttribute.SettingsFlag[settingsFlagCount56].Enabled = settingsFlag113.Enabled
							attributes3.TextAttribute.SettingsFlag[settingsFlagCount56].Name = settingsFlag113.Name
						}
					}
					attributes3.TextAttribute.ShowInTable = types.BoolPointerValue(attributesItem1.TextAttribute.ShowInTable)
					attributes3.TextAttribute.Sortable = types.BoolPointerValue(attributesItem1.TextAttribute.Sortable)
					if attributesItem1.TextAttribute.Type != nil {
						attributes3.TextAttribute.Type = types.StringValue(string(*attributesItem1.TextAttribute.Type))
					} else {
						attributes3.TextAttribute.Type = types.StringNull()
					}
					attributes3.TextAttribute.ValueFormatter = types.StringPointerValue(attributesItem1.TextAttribute.ValueFormatter)
				}
				if attributesItem1.UserRelationAttribute != nil {
					attributes3.UserRelationAttribute = &tfTypes.UserRelationAttribute{}
					attributes3.UserRelationAttribute.Purpose = []types.String{}
					for _, v := range attributesItem1.UserRelationAttribute.Purpose {
						attributes3.UserRelationAttribute.Purpose = append(attributes3.UserRelationAttribute.Purpose, types.StringValue(v))
					}
					if attributesItem1.UserRelationAttribute.Constraints == nil {
						attributes3.UserRelationAttribute.Constraints = nil
					} else {
						attributes3.UserRelationAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
					}
					if attributesItem1.UserRelationAttribute.DefaultValue == nil {
						attributes3.UserRelationAttribute.DefaultValue = types.StringNull()
					} else {
						defaultValueResult55, _ := json.Marshal(attributesItem1.UserRelationAttribute.DefaultValue)
						attributes3.UserRelationAttribute.DefaultValue = types.StringValue(string(defaultValueResult55))
					}
					attributes3.UserRelationAttribute.Deprecated = types.BoolPointerValue(attributesItem1.UserRelationAttribute.Deprecated)
					attributes3.UserRelationAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem1.UserRelationAttribute.EntityBuilderDisableEdit)
					attributes3.UserRelationAttribute.FeatureFlag = types.StringPointerValue(attributesItem1.UserRelationAttribute.FeatureFlag)
					attributes3.UserRelationAttribute.Group = types.StringPointerValue(attributesItem1.UserRelationAttribute.Group)
					attributes3.UserRelationAttribute.Hidden = types.BoolPointerValue(attributesItem1.UserRelationAttribute.Hidden)
					attributes3.UserRelationAttribute.HideLabel = types.BoolPointerValue(attributesItem1.UserRelationAttribute.HideLabel)
					attributes3.UserRelationAttribute.Icon = types.StringPointerValue(attributesItem1.UserRelationAttribute.Icon)
					attributes3.UserRelationAttribute.ID = types.StringPointerValue(attributesItem1.UserRelationAttribute.ID)
					if attributesItem1.UserRelationAttribute.InfoHelpers == nil {
						attributes3.UserRelationAttribute.InfoHelpers = nil
					} else {
						attributes3.UserRelationAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
						attributes3.UserRelationAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem1.UserRelationAttribute.InfoHelpers.HintCustomComponent)
						attributes3.UserRelationAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem1.UserRelationAttribute.InfoHelpers.HintText)
						attributes3.UserRelationAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem1.UserRelationAttribute.InfoHelpers.HintTextKey)
						attributes3.UserRelationAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem1.UserRelationAttribute.InfoHelpers.HintTooltipPlacement)
					}
					attributes3.UserRelationAttribute.Label = types.StringValue(attributesItem1.UserRelationAttribute.Label)
					attributes3.UserRelationAttribute.Layout = types.StringPointerValue(attributesItem1.UserRelationAttribute.Layout)
					attributes3.UserRelationAttribute.Multiple = types.BoolPointerValue(attributesItem1.UserRelationAttribute.Multiple)
					attributes3.UserRelationAttribute.Name = types.StringValue(attributesItem1.UserRelationAttribute.Name)
					attributes3.UserRelationAttribute.Order = types.Int64PointerValue(attributesItem1.UserRelationAttribute.Order)
					attributes3.UserRelationAttribute.Placeholder = types.StringPointerValue(attributesItem1.UserRelationAttribute.Placeholder)
					attributes3.UserRelationAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem1.UserRelationAttribute.PreviewValueFormatter)
					attributes3.UserRelationAttribute.Protected = types.BoolPointerValue(attributesItem1.UserRelationAttribute.Protected)
					attributes3.UserRelationAttribute.Readonly = types.BoolPointerValue(attributesItem1.UserRelationAttribute.Readonly)
					attributes3.UserRelationAttribute.RenderCondition = types.StringPointerValue(attributesItem1.UserRelationAttribute.RenderCondition)
					attributes3.UserRelationAttribute.Required = types.BoolPointerValue(attributesItem1.UserRelationAttribute.Required)
					attributes3.UserRelationAttribute.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount57, settingsFlagItem57 := range attributesItem1.UserRelationAttribute.SettingsFlag {
						var settingsFlag115 tfTypes.SettingFlag
						settingsFlag115.Enabled = types.BoolPointerValue(settingsFlagItem57.Enabled)
						settingsFlag115.Name = types.StringPointerValue(settingsFlagItem57.Name)
						if settingsFlagCount57+1 > len(attributes3.UserRelationAttribute.SettingsFlag) {
							attributes3.UserRelationAttribute.SettingsFlag = append(attributes3.UserRelationAttribute.SettingsFlag, settingsFlag115)
						} else {
							attributes3.UserRelationAttribute.SettingsFlag[settingsFlagCount57].Enabled = settingsFlag115.Enabled
							attributes3.UserRelationAttribute.SettingsFlag[settingsFlagCount57].Name = settingsFlag115.Name
						}
					}
					attributes3.UserRelationAttribute.ShowInTable = types.BoolPointerValue(attributesItem1.UserRelationAttribute.ShowInTable)
					attributes3.UserRelationAttribute.Sortable = types.BoolPointerValue(attributesItem1.UserRelationAttribute.Sortable)
					if attributesItem1.UserRelationAttribute.Type != nil {
						attributes3.UserRelationAttribute.Type = types.StringValue(string(*attributesItem1.UserRelationAttribute.Type))
					} else {
						attributes3.UserRelationAttribute.Type = types.StringNull()
					}
					attributes3.UserRelationAttribute.ValueFormatter = types.StringPointerValue(attributesItem1.UserRelationAttribute.ValueFormatter)
				}
				if attributesCount1+1 > len(capabilities1.Attributes) {
					capabilities1.Attributes = append(capabilities1.Attributes, attributes3)
				} else {
					capabilities1.Attributes[attributesCount1].AddressRelationAttribute = attributes3.AddressRelationAttribute
					capabilities1.Attributes[attributesCount1].AutomationAttribute = attributes3.AutomationAttribute
					capabilities1.Attributes[attributesCount1].BooleanAttribute = attributes3.BooleanAttribute
					capabilities1.Attributes[attributesCount1].ComputedAttribute = attributes3.ComputedAttribute
					capabilities1.Attributes[attributesCount1].ConsentAttribute = attributes3.ConsentAttribute
					capabilities1.Attributes[attributesCount1].CountryAttribute = attributes3.CountryAttribute
					capabilities1.Attributes[attributesCount1].CurrencyAttribute = attributes3.CurrencyAttribute
					capabilities1.Attributes[attributesCount1].DateAttribute = attributes3.DateAttribute
					capabilities1.Attributes[attributesCount1].FileAttribute = attributes3.FileAttribute
					capabilities1.Attributes[attributesCount1].InternalAttribute = attributes3.InternalAttribute
					capabilities1.Attributes[attributesCount1].InternalUserAttribute = attributes3.InternalUserAttribute
					capabilities1.Attributes[attributesCount1].InvitationEmailAttribute = attributes3.InvitationEmailAttribute
					capabilities1.Attributes[attributesCount1].LinkAttribute = attributes3.LinkAttribute
					capabilities1.Attributes[attributesCount1].MultiSelectAttribute = attributes3.MultiSelectAttribute
					capabilities1.Attributes[attributesCount1].NumberAttribute = attributes3.NumberAttribute
					capabilities1.Attributes[attributesCount1].OrderedListAttribute = attributes3.OrderedListAttribute
					capabilities1.Attributes[attributesCount1].PartnerOrganisationAttribute = attributes3.PartnerOrganisationAttribute
					capabilities1.Attributes[attributesCount1].PartnerStatusAttribute = attributes3.PartnerStatusAttribute
					capabilities1.Attributes[attributesCount1].PaymentMethodRelationAttribute = attributes3.PaymentMethodRelationAttribute
					capabilities1.Attributes[attributesCount1].PurposeAttribute = attributes3.PurposeAttribute
					capabilities1.Attributes[attributesCount1].RelationAttribute = attributes3.RelationAttribute
					capabilities1.Attributes[attributesCount1].RepeatableAttribute = attributes3.RepeatableAttribute
					capabilities1.Attributes[attributesCount1].SelectAttribute = attributes3.SelectAttribute
					capabilities1.Attributes[attributesCount1].SequenceAttribute = attributes3.SequenceAttribute
					capabilities1.Attributes[attributesCount1].StatusAttribute = attributes3.StatusAttribute
					capabilities1.Attributes[attributesCount1].TagsAttribute = attributes3.TagsAttribute
					capabilities1.Attributes[attributesCount1].TextAttribute = attributes3.TextAttribute
					capabilities1.Attributes[attributesCount1].UserRelationAttribute = attributes3.UserRelationAttribute
				}
			}
			capabilities1.FeatureFlag = types.StringPointerValue(capabilitiesItem.FeatureFlag)
			capabilities1.ID = types.StringPointerValue(capabilitiesItem.ID)
			capabilities1.Name = types.StringValue(capabilitiesItem.Name)
			capabilities1.SettingsFlag = []tfTypes.SettingFlag{}
			for settingsFlagCount58, settingsFlagItem58 := range capabilitiesItem.SettingsFlag {
				var settingsFlag117 tfTypes.SettingFlag
				settingsFlag117.Enabled = types.BoolPointerValue(settingsFlagItem58.Enabled)
				settingsFlag117.Name = types.StringPointerValue(settingsFlagItem58.Name)
				if settingsFlagCount58+1 > len(capabilities1.SettingsFlag) {
					capabilities1.SettingsFlag = append(capabilities1.SettingsFlag, settingsFlag117)
				} else {
					capabilities1.SettingsFlag[settingsFlagCount58].Enabled = settingsFlag117.Enabled
					capabilities1.SettingsFlag[settingsFlagCount58].Name = settingsFlag117.Name
				}
			}
			capabilities1.Title = types.StringPointerValue(capabilitiesItem.Title)
			capabilities1.UIHooks = []tfTypes.UIHooks{}
			for uiHooksCount, uiHooksItem := range capabilitiesItem.UIHooks {
				var uiHooks1 tfTypes.UIHooks
				if uiHooksItem.AdditionalProperties == nil {
					uiHooks1.AdditionalProperties = types.StringNull()
				} else {
					additionalPropertiesResult4, _ := json.Marshal(uiHooksItem.AdditionalProperties)
					uiHooks1.AdditionalProperties = types.StringValue(string(additionalPropertiesResult4))
				}
				uiHooks1.Component = types.StringPointerValue(uiHooksItem.Component)
				uiHooks1.Disabled = types.BoolPointerValue(uiHooksItem.Disabled)
				uiHooks1.GroupExpanded = types.BoolPointerValue(uiHooksItem.GroupExpanded)
				uiHooks1.Header = types.BoolPointerValue(uiHooksItem.Header)
				uiHooks1.Hook = types.StringValue(uiHooksItem.Hook)
				uiHooks1.Icon = types.StringPointerValue(uiHooksItem.Icon)
				uiHooks1.Import = types.StringPointerValue(uiHooksItem.Import)
				uiHooks1.Order = types.Int64PointerValue(uiHooksItem.Order)
				uiHooks1.RenderCondition = types.StringPointerValue(uiHooksItem.RenderCondition)
				if uiHooksItem.RequiredPermission == nil {
					uiHooks1.RequiredPermission = nil
				} else {
					uiHooks1.RequiredPermission = &tfTypes.RequiredPermission{}
					uiHooks1.RequiredPermission.Action = types.StringValue(uiHooksItem.RequiredPermission.Action)
					uiHooks1.RequiredPermission.Resource = types.StringPointerValue(uiHooksItem.RequiredPermission.Resource)
				}
				uiHooks1.Route = types.StringPointerValue(uiHooksItem.Route)
				uiHooks1.Title = types.StringPointerValue(uiHooksItem.Title)
				if uiHooksCount+1 > len(capabilities1.UIHooks) {
					capabilities1.UIHooks = append(capabilities1.UIHooks, uiHooks1)
				} else {
					capabilities1.UIHooks[uiHooksCount].AdditionalProperties = uiHooks1.AdditionalProperties
					capabilities1.UIHooks[uiHooksCount].Component = uiHooks1.Component
					capabilities1.UIHooks[uiHooksCount].Disabled = uiHooks1.Disabled
					capabilities1.UIHooks[uiHooksCount].GroupExpanded = uiHooks1.GroupExpanded
					capabilities1.UIHooks[uiHooksCount].Header = uiHooks1.Header
					capabilities1.UIHooks[uiHooksCount].Hook = uiHooks1.Hook
					capabilities1.UIHooks[uiHooksCount].Icon = uiHooks1.Icon
					capabilities1.UIHooks[uiHooksCount].Import = uiHooks1.Import
					capabilities1.UIHooks[uiHooksCount].Order = uiHooks1.Order
					capabilities1.UIHooks[uiHooksCount].RenderCondition = uiHooks1.RenderCondition
					capabilities1.UIHooks[uiHooksCount].RequiredPermission = uiHooks1.RequiredPermission
					capabilities1.UIHooks[uiHooksCount].Route = uiHooks1.Route
					capabilities1.UIHooks[uiHooksCount].Title = uiHooks1.Title
				}
			}
			if capabilitiesCount+1 > len(r.Capabilities) {
				r.Capabilities = append(r.Capabilities, capabilities1)
			} else {
				r.Capabilities[capabilitiesCount].Purpose = capabilities1.Purpose
				r.Capabilities[capabilitiesCount].Attributes = capabilities1.Attributes
				r.Capabilities[capabilitiesCount].FeatureFlag = capabilities1.FeatureFlag
				r.Capabilities[capabilitiesCount].ID = capabilities1.ID
				r.Capabilities[capabilitiesCount].Name = capabilities1.Name
				r.Capabilities[capabilitiesCount].SettingsFlag = capabilities1.SettingsFlag
				r.Capabilities[capabilitiesCount].Title = capabilities1.Title
				r.Capabilities[capabilitiesCount].UIHooks = capabilities1.UIHooks
			}
		}
		r.Comment = types.StringPointerValue(resp.Comment)
		r.CreatedAt = types.StringPointerValue(resp.CreatedAt)
		if len(resp.DialogConfig) > 0 {
			r.DialogConfig = make(map[string]types.String)
			for key2, value6 := range resp.DialogConfig {
				result, _ := json.Marshal(value6)
				r.DialogConfig[key2] = types.StringValue(string(result))
			}
		}
		r.Draft = types.BoolPointerValue(resp.Draft)
		r.EnableSetting = []types.String{}
		for _, v := range resp.EnableSetting {
			r.EnableSetting = append(r.EnableSetting, types.StringValue(v))
		}
		if len(resp.ExplicitSearchMappings) > 0 {
			r.ExplicitSearchMappings = make(map[string]tfTypes.SearchMappings)
			for searchMappingsKey, searchMappingsValue := range resp.ExplicitSearchMappings {
				var searchMappingsResult tfTypes.SearchMappings
				if len(searchMappingsValue.Fields) > 0 {
					searchMappingsResult.Fields = make(map[string]types.String)
					for key3, value7 := range searchMappingsValue.Fields {
						result1, _ := json.Marshal(value7)
						searchMappingsResult.Fields[key3] = types.StringValue(string(result1))
					}
				}
				searchMappingsResult.Index = types.BoolPointerValue(searchMappingsValue.Index)
				if searchMappingsValue.Type != nil {
					searchMappingsResult.Type = types.StringValue(string(*searchMappingsValue.Type))
				} else {
					searchMappingsResult.Type = types.StringNull()
				}
				r.ExplicitSearchMappings[searchMappingsKey] = searchMappingsResult
			}
		}
		r.FeatureFlag = types.StringPointerValue(resp.FeatureFlag)
		r.GroupSettings = []tfTypes.EntitySchemaGroup{}
		if len(r.GroupSettings) > len(resp.GroupSettings) {
			r.GroupSettings = r.GroupSettings[:len(resp.GroupSettings)]
		}
		for groupSettingsCount, groupSettingsItem := range resp.GroupSettings {
			var groupSettings1 tfTypes.EntitySchemaGroup
			groupSettings1.Purpose = []types.String{}
			for _, v := range groupSettingsItem.Purpose {
				groupSettings1.Purpose = append(groupSettings1.Purpose, types.StringValue(v))
			}
			groupSettings1.Expanded = types.BoolPointerValue(groupSettingsItem.Expanded)
			groupSettings1.FeatureFlag = types.StringPointerValue(groupSettingsItem.FeatureFlag)
			groupSettings1.ID = types.StringValue(groupSettingsItem.ID)
			if groupSettingsItem.InfoTooltipTitle == nil {
				groupSettings1.InfoTooltipTitle = nil
			} else {
				groupSettings1.InfoTooltipTitle = &tfTypes.InfoTooltipTitle{}
				groupSettings1.InfoTooltipTitle.Default = types.StringPointerValue(groupSettingsItem.InfoTooltipTitle.Default)
				groupSettings1.InfoTooltipTitle.Key = types.StringPointerValue(groupSettingsItem.InfoTooltipTitle.Key)
			}
			groupSettings1.Label = types.StringValue(groupSettingsItem.Label)
			groupSettings1.Order = types.Int64PointerValue(groupSettingsItem.Order)
			groupSettings1.RenderCondition = types.StringPointerValue(groupSettingsItem.RenderCondition)
			groupSettings1.SettingsFlag = []tfTypes.SettingFlag{}
			for settingsFlagCount59, settingsFlagItem59 := range groupSettingsItem.SettingsFlag {
				var settingsFlag119 tfTypes.SettingFlag
				settingsFlag119.Enabled = types.BoolPointerValue(settingsFlagItem59.Enabled)
				settingsFlag119.Name = types.StringPointerValue(settingsFlagItem59.Name)
				if settingsFlagCount59+1 > len(groupSettings1.SettingsFlag) {
					groupSettings1.SettingsFlag = append(groupSettings1.SettingsFlag, settingsFlag119)
				} else {
					groupSettings1.SettingsFlag[settingsFlagCount59].Enabled = settingsFlag119.Enabled
					groupSettings1.SettingsFlag[settingsFlagCount59].Name = settingsFlag119.Name
				}
			}
			if groupSettingsCount+1 > len(r.GroupSettings) {
				r.GroupSettings = append(r.GroupSettings, groupSettings1)
			} else {
				r.GroupSettings[groupSettingsCount].Purpose = groupSettings1.Purpose
				r.GroupSettings[groupSettingsCount].Expanded = groupSettings1.Expanded
				r.GroupSettings[groupSettingsCount].FeatureFlag = groupSettings1.FeatureFlag
				r.GroupSettings[groupSettingsCount].ID = groupSettings1.ID
				r.GroupSettings[groupSettingsCount].InfoTooltipTitle = groupSettings1.InfoTooltipTitle
				r.GroupSettings[groupSettingsCount].Label = groupSettings1.Label
				r.GroupSettings[groupSettingsCount].Order = groupSettings1.Order
				r.GroupSettings[groupSettingsCount].RenderCondition = groupSettings1.RenderCondition
				r.GroupSettings[groupSettingsCount].SettingsFlag = groupSettings1.SettingsFlag
			}
		}
		r.Icon = types.StringPointerValue(resp.Icon)
		r.ID = types.StringPointerValue(resp.ID)
		if resp.LayoutSettings == nil {
			r.LayoutSettings = nil
		} else {
			r.LayoutSettings = &tfTypes.LayoutSettings{}
			if resp.LayoutSettings.AdditionalProperties == nil {
				r.LayoutSettings.AdditionalProperties = types.StringNull()
			} else {
				additionalPropertiesResult5, _ := json.Marshal(resp.LayoutSettings.AdditionalProperties)
				r.LayoutSettings.AdditionalProperties = types.StringValue(string(additionalPropertiesResult5))
			}
			r.LayoutSettings.GridGap = types.StringPointerValue(resp.LayoutSettings.GridGap)
			r.LayoutSettings.GridTemplateColumns = types.StringPointerValue(resp.LayoutSettings.GridTemplateColumns)
		}
		r.Name = types.StringValue(resp.Name)
		r.Plural = types.StringValue(resp.Plural)
		r.Published = types.BoolPointerValue(resp.Published)
		r.Slug = types.StringValue(resp.Slug)
		if resp.Source == nil {
			r.Source = nil
		} else {
			r.Source = &tfTypes.Source{}
			r.Source.ID = types.StringPointerValue(resp.Source.ID)
			r.Source.Type = types.StringPointerValue(resp.Source.Type)
		}
		r.TitleTemplate = types.StringPointerValue(resp.TitleTemplate)
		if resp.UIConfig == nil {
			r.UIConfig = nil
		} else {
			r.UIConfig = &tfTypes.UIConfig{}
			if resp.UIConfig.CreateView == nil {
				r.UIConfig.CreateView = nil
			} else {
				r.UIConfig.CreateView = &tfTypes.CreateView{}
				if resp.UIConfig.CreateView.EntityDefaultCreate != nil {
					r.UIConfig.CreateView.Default = &tfTypes.EntityDefaultCreate{}
					if len(resp.UIConfig.CreateView.EntityDefaultCreate.SearchParams) > 0 {
						r.UIConfig.CreateView.Default.SearchParams = make(map[string]types.String)
						for key5, value8 := range resp.UIConfig.CreateView.EntityDefaultCreate.SearchParams {
							r.UIConfig.CreateView.Default.SearchParams[key5] = types.StringValue(value8)
						}
					}
					if resp.UIConfig.CreateView.EntityDefaultCreate.ViewType != nil {
						r.UIConfig.CreateView.Default.ViewType = types.StringValue(string(*resp.UIConfig.CreateView.EntityDefaultCreate.ViewType))
					} else {
						r.UIConfig.CreateView.Default.ViewType = types.StringNull()
					}
				}
				if resp.UIConfig.CreateView.EntityViewDisabled != nil {
					r.UIConfig.CreateView.Disabled = &tfTypes.EntityViewDisabled{}
					if resp.UIConfig.CreateView.EntityViewDisabled.ViewType != nil {
						r.UIConfig.CreateView.Disabled.ViewType = types.StringValue(string(*resp.UIConfig.CreateView.EntityViewDisabled.ViewType))
					} else {
						r.UIConfig.CreateView.Disabled.ViewType = types.StringNull()
					}
				}
				if resp.UIConfig.CreateView.RedirectEntityView != nil {
					r.UIConfig.CreateView.Redirect = &tfTypes.RedirectEntityView{}
					r.UIConfig.CreateView.Redirect.Route = types.StringPointerValue(resp.UIConfig.CreateView.RedirectEntityView.Route)
					if resp.UIConfig.CreateView.RedirectEntityView.ViewType != nil {
						r.UIConfig.CreateView.Redirect.ViewType = types.StringValue(string(*resp.UIConfig.CreateView.RedirectEntityView.ViewType))
					} else {
						r.UIConfig.CreateView.Redirect.ViewType = types.StringNull()
					}
				}
			}
			if resp.UIConfig.EditView == nil {
				r.UIConfig.EditView = nil
			} else {
				r.UIConfig.EditView = &tfTypes.EditView{}
				if resp.UIConfig.EditView.EntityDefaultEdit != nil {
					r.UIConfig.EditView.Default = &tfTypes.EntityDefaultEdit{}
					if len(resp.UIConfig.EditView.EntityDefaultEdit.SearchParams) > 0 {
						r.UIConfig.EditView.Default.SearchParams = make(map[string]types.String)
						for key6, value9 := range resp.UIConfig.EditView.EntityDefaultEdit.SearchParams {
							r.UIConfig.EditView.Default.SearchParams[key6] = types.StringValue(value9)
						}
					}
					r.UIConfig.EditView.Default.SummaryAttributes = []types.String{}
					for _, v := range resp.UIConfig.EditView.EntityDefaultEdit.SummaryAttributes {
						r.UIConfig.EditView.Default.SummaryAttributes = append(r.UIConfig.EditView.Default.SummaryAttributes, types.StringValue(v))
					}
					if resp.UIConfig.EditView.EntityDefaultEdit.ViewType != nil {
						r.UIConfig.EditView.Default.ViewType = types.StringValue(string(*resp.UIConfig.EditView.EntityDefaultEdit.ViewType))
					} else {
						r.UIConfig.EditView.Default.ViewType = types.StringNull()
					}
				}
				if resp.UIConfig.EditView.EntityViewDisabled != nil {
					r.UIConfig.EditView.Disabled = &tfTypes.EntityViewDisabled{}
					if resp.UIConfig.EditView.EntityViewDisabled.ViewType != nil {
						r.UIConfig.EditView.Disabled.ViewType = types.StringValue(string(*resp.UIConfig.EditView.EntityViewDisabled.ViewType))
					} else {
						r.UIConfig.EditView.Disabled.ViewType = types.StringNull()
					}
				}
				if resp.UIConfig.EditView.RedirectEntityView != nil {
					r.UIConfig.EditView.Redirect = &tfTypes.RedirectEntityView{}
					r.UIConfig.EditView.Redirect.Route = types.StringPointerValue(resp.UIConfig.EditView.RedirectEntityView.Route)
					if resp.UIConfig.EditView.RedirectEntityView.ViewType != nil {
						r.UIConfig.EditView.Redirect.ViewType = types.StringValue(string(*resp.UIConfig.EditView.RedirectEntityView.ViewType))
					} else {
						r.UIConfig.EditView.Redirect.ViewType = types.StringNull()
					}
				}
			}
			if resp.UIConfig.ListItem == nil {
				r.UIConfig.ListItem = nil
			} else {
				r.UIConfig.ListItem = &tfTypes.ListItem{}
				r.UIConfig.ListItem.QuickActions = []tfTypes.EntityAction{}
				if len(r.UIConfig.ListItem.QuickActions) > len(resp.UIConfig.ListItem.QuickActions) {
					r.UIConfig.ListItem.QuickActions = r.UIConfig.ListItem.QuickActions[:len(resp.UIConfig.ListItem.QuickActions)]
				}
				for quickActionsCount, quickActionsItem := range resp.UIConfig.ListItem.QuickActions {
					var quickActions1 tfTypes.EntityAction
					quickActions1.Action = types.StringValue(quickActionsItem.Action)
					quickActions1.Icon = types.StringPointerValue(quickActionsItem.Icon)
					quickActions1.Label = types.StringValue(quickActionsItem.Label)
					quickActions1.Permission = types.StringPointerValue(quickActionsItem.Permission)
					if quickActionsCount+1 > len(r.UIConfig.ListItem.QuickActions) {
						r.UIConfig.ListItem.QuickActions = append(r.UIConfig.ListItem.QuickActions, quickActions1)
					} else {
						r.UIConfig.ListItem.QuickActions[quickActionsCount].Action = quickActions1.Action
						r.UIConfig.ListItem.QuickActions[quickActionsCount].Icon = quickActions1.Icon
						r.UIConfig.ListItem.QuickActions[quickActionsCount].Label = quickActions1.Label
						r.UIConfig.ListItem.QuickActions[quickActionsCount].Permission = quickActions1.Permission
					}
				}
				r.UIConfig.ListItem.SummaryAttributes = []tfTypes.SummaryAttributes{}
				if len(r.UIConfig.ListItem.SummaryAttributes) > len(resp.UIConfig.ListItem.SummaryAttributes) {
					r.UIConfig.ListItem.SummaryAttributes = r.UIConfig.ListItem.SummaryAttributes[:len(resp.UIConfig.ListItem.SummaryAttributes)]
				}
				for summaryAttributesCount, summaryAttributesItem := range resp.UIConfig.ListItem.SummaryAttributes {
					var summaryAttributes2 tfTypes.SummaryAttributes
					if summaryAttributesItem.Str != nil {
						summaryAttributes2.Str = types.StringPointerValue(summaryAttributesItem.Str)
					}
					if summaryAttributesItem.SummaryAttribute != nil {
						summaryAttributes2.SummaryAttribute = &tfTypes.SummaryAttribute{}
						summaryAttributes2.SummaryAttribute.FeatureFlag = types.StringPointerValue(summaryAttributesItem.SummaryAttribute.FeatureFlag)
						summaryAttributes2.SummaryAttribute.Label = types.StringValue(summaryAttributesItem.SummaryAttribute.Label)
						summaryAttributes2.SummaryAttribute.RenderCondition = types.StringPointerValue(summaryAttributesItem.SummaryAttribute.RenderCondition)
						summaryAttributes2.SummaryAttribute.SettingsFlag = []tfTypes.SettingFlag{}
						for settingsFlagCount60, settingsFlagItem60 := range summaryAttributesItem.SummaryAttribute.SettingsFlag {
							var settingsFlag121 tfTypes.SettingFlag
							settingsFlag121.Enabled = types.BoolPointerValue(settingsFlagItem60.Enabled)
							settingsFlag121.Name = types.StringPointerValue(settingsFlagItem60.Name)
							if settingsFlagCount60+1 > len(summaryAttributes2.SummaryAttribute.SettingsFlag) {
								summaryAttributes2.SummaryAttribute.SettingsFlag = append(summaryAttributes2.SummaryAttribute.SettingsFlag, settingsFlag121)
							} else {
								summaryAttributes2.SummaryAttribute.SettingsFlag[settingsFlagCount60].Enabled = settingsFlag121.Enabled
								summaryAttributes2.SummaryAttribute.SettingsFlag[settingsFlagCount60].Name = settingsFlag121.Name
							}
						}
						summaryAttributes2.SummaryAttribute.ShowAsTag = types.BoolPointerValue(summaryAttributesItem.SummaryAttribute.ShowAsTag)
						summaryAttributes2.SummaryAttribute.TagColor = types.StringPointerValue(summaryAttributesItem.SummaryAttribute.TagColor)
						summaryAttributes2.SummaryAttribute.Value = types.StringValue(summaryAttributesItem.SummaryAttribute.Value)
					}
					if summaryAttributesCount+1 > len(r.UIConfig.ListItem.SummaryAttributes) {
						r.UIConfig.ListItem.SummaryAttributes = append(r.UIConfig.ListItem.SummaryAttributes, summaryAttributes2)
					} else {
						r.UIConfig.ListItem.SummaryAttributes[summaryAttributesCount].Str = summaryAttributes2.Str
						r.UIConfig.ListItem.SummaryAttributes[summaryAttributesCount].SummaryAttribute = summaryAttributes2.SummaryAttribute
					}
				}
			}
			if resp.UIConfig.Sharing == nil {
				r.UIConfig.Sharing = nil
			} else {
				r.UIConfig.Sharing = &tfTypes.Sharing{}
				r.UIConfig.Sharing.ShowSharingButton = types.BoolPointerValue(resp.UIConfig.Sharing.ShowSharingButton)
			}
			if resp.UIConfig.SingleView == nil {
				r.UIConfig.SingleView = nil
			} else {
				r.UIConfig.SingleView = &tfTypes.EditView{}
				if resp.UIConfig.SingleView.EntityDefaultEdit != nil {
					r.UIConfig.SingleView.Default = &tfTypes.EntityDefaultEdit{}
					if len(resp.UIConfig.SingleView.EntityDefaultEdit.SearchParams) > 0 {
						r.UIConfig.SingleView.Default.SearchParams = make(map[string]types.String)
						for key7, value11 := range resp.UIConfig.SingleView.EntityDefaultEdit.SearchParams {
							r.UIConfig.SingleView.Default.SearchParams[key7] = types.StringValue(value11)
						}
					}
					r.UIConfig.SingleView.Default.SummaryAttributes = []types.String{}
					for _, v := range resp.UIConfig.SingleView.EntityDefaultEdit.SummaryAttributes {
						r.UIConfig.SingleView.Default.SummaryAttributes = append(r.UIConfig.SingleView.Default.SummaryAttributes, types.StringValue(v))
					}
					if resp.UIConfig.SingleView.EntityDefaultEdit.ViewType != nil {
						r.UIConfig.SingleView.Default.ViewType = types.StringValue(string(*resp.UIConfig.SingleView.EntityDefaultEdit.ViewType))
					} else {
						r.UIConfig.SingleView.Default.ViewType = types.StringNull()
					}
				}
				if resp.UIConfig.SingleView.EntityViewDisabled != nil {
					r.UIConfig.SingleView.Disabled = &tfTypes.EntityViewDisabled{}
					if resp.UIConfig.SingleView.EntityViewDisabled.ViewType != nil {
						r.UIConfig.SingleView.Disabled.ViewType = types.StringValue(string(*resp.UIConfig.SingleView.EntityViewDisabled.ViewType))
					} else {
						r.UIConfig.SingleView.Disabled.ViewType = types.StringNull()
					}
				}
				if resp.UIConfig.SingleView.RedirectEntityView != nil {
					r.UIConfig.SingleView.Redirect = &tfTypes.RedirectEntityView{}
					r.UIConfig.SingleView.Redirect.Route = types.StringPointerValue(resp.UIConfig.SingleView.RedirectEntityView.Route)
					if resp.UIConfig.SingleView.RedirectEntityView.ViewType != nil {
						r.UIConfig.SingleView.Redirect.ViewType = types.StringValue(string(*resp.UIConfig.SingleView.RedirectEntityView.ViewType))
					} else {
						r.UIConfig.SingleView.Redirect.ViewType = types.StringNull()
					}
				}
			}
			if resp.UIConfig.TableView == nil {
				r.UIConfig.TableView = nil
			} else {
				r.UIConfig.TableView = &tfTypes.TableView{}
				if resp.UIConfig.TableView.EntityDefaultTable != nil {
					r.UIConfig.TableView.Default = &tfTypes.EntityDefaultTable{}
					r.UIConfig.TableView.Default.BulkActions = []tfTypes.BulkActions{}
					if len(r.UIConfig.TableView.Default.BulkActions) > len(resp.UIConfig.TableView.EntityDefaultTable.BulkActions) {
						r.UIConfig.TableView.Default.BulkActions = r.UIConfig.TableView.Default.BulkActions[:len(resp.UIConfig.TableView.EntityDefaultTable.BulkActions)]
					}
					for bulkActionsCount, bulkActionsItem := range resp.UIConfig.TableView.EntityDefaultTable.BulkActions {
						var bulkActions1 tfTypes.BulkActions
						if bulkActionsItem.Str != nil {
							bulkActions1.Str = types.StringPointerValue(bulkActionsItem.Str)
						}
						if bulkActionsItem.EntityAction != nil {
							bulkActions1.EntityAction = &tfTypes.EntityAction{}
							bulkActions1.EntityAction.Action = types.StringValue(bulkActionsItem.EntityAction.Action)
							bulkActions1.EntityAction.Icon = types.StringPointerValue(bulkActionsItem.EntityAction.Icon)
							bulkActions1.EntityAction.Label = types.StringValue(bulkActionsItem.EntityAction.Label)
							bulkActions1.EntityAction.Permission = types.StringPointerValue(bulkActionsItem.EntityAction.Permission)
						}
						if bulkActionsCount+1 > len(r.UIConfig.TableView.Default.BulkActions) {
							r.UIConfig.TableView.Default.BulkActions = append(r.UIConfig.TableView.Default.BulkActions, bulkActions1)
						} else {
							r.UIConfig.TableView.Default.BulkActions[bulkActionsCount].Str = bulkActions1.Str
							r.UIConfig.TableView.Default.BulkActions[bulkActionsCount].EntityAction = bulkActions1.EntityAction
						}
					}
					r.UIConfig.TableView.Default.EnableThumbnails = types.BoolPointerValue(resp.UIConfig.TableView.EntityDefaultTable.EnableThumbnails)
					r.UIConfig.TableView.Default.NavbarActions = []tfTypes.NavbarActions{}
					if len(r.UIConfig.TableView.Default.NavbarActions) > len(resp.UIConfig.TableView.EntityDefaultTable.NavbarActions) {
						r.UIConfig.TableView.Default.NavbarActions = r.UIConfig.TableView.Default.NavbarActions[:len(resp.UIConfig.TableView.EntityDefaultTable.NavbarActions)]
					}
					for navbarActionsCount, navbarActionsItem := range resp.UIConfig.TableView.EntityDefaultTable.NavbarActions {
						var navbarActions1 tfTypes.NavbarActions
						navbarActions1.Options = []tfTypes.EntityDefaultTableOptions{}
						for optionsVarCount4, optionsVarItem4 := range navbarActionsItem.Options {
							var optionsVar5 tfTypes.EntityDefaultTableOptions
							optionsVar5.Label = types.StringValue(optionsVarItem4.Label)
							if optionsVarItem4.Params == nil {
								optionsVar5.Params = nil
							} else {
								optionsVar5.Params = &tfTypes.AddressRelationAttributeConstraints{}
							}
							if optionsVarCount4+1 > len(navbarActions1.Options) {
								navbarActions1.Options = append(navbarActions1.Options, optionsVar5)
							} else {
								navbarActions1.Options[optionsVarCount4].Label = optionsVar5.Label
								navbarActions1.Options[optionsVarCount4].Params = optionsVar5.Params
							}
						}
						navbarActions1.Type = types.StringValue(navbarActionsItem.Type)
						if navbarActionsCount+1 > len(r.UIConfig.TableView.Default.NavbarActions) {
							r.UIConfig.TableView.Default.NavbarActions = append(r.UIConfig.TableView.Default.NavbarActions, navbarActions1)
						} else {
							r.UIConfig.TableView.Default.NavbarActions[navbarActionsCount].Options = navbarActions1.Options
							r.UIConfig.TableView.Default.NavbarActions[navbarActionsCount].Type = navbarActions1.Type
						}
					}
					r.UIConfig.TableView.Default.RowActions = []tfTypes.BulkActions{}
					if len(r.UIConfig.TableView.Default.RowActions) > len(resp.UIConfig.TableView.EntityDefaultTable.RowActions) {
						r.UIConfig.TableView.Default.RowActions = r.UIConfig.TableView.Default.RowActions[:len(resp.UIConfig.TableView.EntityDefaultTable.RowActions)]
					}
					for rowActionsCount, rowActionsItem := range resp.UIConfig.TableView.EntityDefaultTable.RowActions {
						var rowActions1 tfTypes.BulkActions
						if rowActionsItem.Str != nil {
							rowActions1.Str = types.StringPointerValue(rowActionsItem.Str)
						}
						if rowActionsItem.EntityAction != nil {
							rowActions1.EntityAction = &tfTypes.EntityAction{}
							rowActions1.EntityAction.Action = types.StringValue(rowActionsItem.EntityAction.Action)
							rowActions1.EntityAction.Icon = types.StringPointerValue(rowActionsItem.EntityAction.Icon)
							rowActions1.EntityAction.Label = types.StringValue(rowActionsItem.EntityAction.Label)
							rowActions1.EntityAction.Permission = types.StringPointerValue(rowActionsItem.EntityAction.Permission)
						}
						if rowActionsCount+1 > len(r.UIConfig.TableView.Default.RowActions) {
							r.UIConfig.TableView.Default.RowActions = append(r.UIConfig.TableView.Default.RowActions, rowActions1)
						} else {
							r.UIConfig.TableView.Default.RowActions[rowActionsCount].Str = rowActions1.Str
							r.UIConfig.TableView.Default.RowActions[rowActionsCount].EntityAction = rowActions1.EntityAction
						}
					}
					if resp.UIConfig.TableView.EntityDefaultTable.ViewType != nil {
						r.UIConfig.TableView.Default.ViewType = types.StringValue(string(*resp.UIConfig.TableView.EntityDefaultTable.ViewType))
					} else {
						r.UIConfig.TableView.Default.ViewType = types.StringNull()
					}
				}
				if resp.UIConfig.TableView.EntityViewDisabled != nil {
					r.UIConfig.TableView.Disabled = &tfTypes.EntityViewDisabled{}
					if resp.UIConfig.TableView.EntityViewDisabled.ViewType != nil {
						r.UIConfig.TableView.Disabled.ViewType = types.StringValue(string(*resp.UIConfig.TableView.EntityViewDisabled.ViewType))
					} else {
						r.UIConfig.TableView.Disabled.ViewType = types.StringNull()
					}
				}
				if resp.UIConfig.TableView.RedirectEntityView != nil {
					r.UIConfig.TableView.Redirect = &tfTypes.RedirectEntityView{}
					r.UIConfig.TableView.Redirect.Route = types.StringPointerValue(resp.UIConfig.TableView.RedirectEntityView.Route)
					if resp.UIConfig.TableView.RedirectEntityView.ViewType != nil {
						r.UIConfig.TableView.Redirect.ViewType = types.StringValue(string(*resp.UIConfig.TableView.RedirectEntityView.ViewType))
					} else {
						r.UIConfig.TableView.Redirect.ViewType = types.StringNull()
					}
				}
			}
		}
		r.UpdatedAt = types.StringPointerValue(resp.UpdatedAt)
		r.Version = types.Int64PointerValue(resp.Version)
	}
}
