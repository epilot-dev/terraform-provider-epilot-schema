// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"encoding/json"
	"github.com/speakeasy/terraform-provider-epilot-schema/internal/sdk/models/shared"
	"time"
)

func (r *SchemaAttributeResourceModel) ToSharedAttributeWithCompositeIDInput() *shared.AttributeWithCompositeIDInput {
	var out shared.AttributeWithCompositeIDInput
	var attributeWithCompositeIDTextAttributeInput *shared.AttributeWithCompositeIDTextAttributeInput
	if r.TextAttribute != nil {
		name := r.TextAttribute.Name.ValueString()
		label := r.TextAttribute.Label.ValueString()
		placeholder := new(string)
		if !r.TextAttribute.Placeholder.IsUnknown() && !r.TextAttribute.Placeholder.IsNull() {
			*placeholder = r.TextAttribute.Placeholder.ValueString()
		} else {
			placeholder = nil
		}
		hidden := new(bool)
		if !r.TextAttribute.Hidden.IsUnknown() && !r.TextAttribute.Hidden.IsNull() {
			*hidden = r.TextAttribute.Hidden.ValueBool()
		} else {
			hidden = nil
		}
		showInTable := new(bool)
		if !r.TextAttribute.ShowInTable.IsUnknown() && !r.TextAttribute.ShowInTable.IsNull() {
			*showInTable = r.TextAttribute.ShowInTable.ValueBool()
		} else {
			showInTable = nil
		}
		sortable := new(bool)
		if !r.TextAttribute.Sortable.IsUnknown() && !r.TextAttribute.Sortable.IsNull() {
			*sortable = r.TextAttribute.Sortable.ValueBool()
		} else {
			sortable = nil
		}
		required := new(bool)
		if !r.TextAttribute.Required.IsUnknown() && !r.TextAttribute.Required.IsNull() {
			*required = r.TextAttribute.Required.ValueBool()
		} else {
			required = nil
		}
		readonly := new(bool)
		if !r.TextAttribute.Readonly.IsUnknown() && !r.TextAttribute.Readonly.IsNull() {
			*readonly = r.TextAttribute.Readonly.ValueBool()
		} else {
			readonly = nil
		}
		deprecated := new(bool)
		if !r.TextAttribute.Deprecated.IsUnknown() && !r.TextAttribute.Deprecated.IsNull() {
			*deprecated = r.TextAttribute.Deprecated.ValueBool()
		} else {
			deprecated = nil
		}
		var defaultValue interface{}
		if !r.TextAttribute.DefaultValue.IsUnknown() && !r.TextAttribute.DefaultValue.IsNull() {
			_ = json.Unmarshal([]byte(r.TextAttribute.DefaultValue.ValueString()), &defaultValue)
		}
		group := new(string)
		if !r.TextAttribute.Group.IsUnknown() && !r.TextAttribute.Group.IsNull() {
			*group = r.TextAttribute.Group.ValueString()
		} else {
			group = nil
		}
		order := new(int64)
		if !r.TextAttribute.Order.IsUnknown() && !r.TextAttribute.Order.IsNull() {
			*order = r.TextAttribute.Order.ValueInt64()
		} else {
			order = nil
		}
		layout := new(string)
		if !r.TextAttribute.Layout.IsUnknown() && !r.TextAttribute.Layout.IsNull() {
			*layout = r.TextAttribute.Layout.ValueString()
		} else {
			layout = nil
		}
		hideLabel := new(bool)
		if !r.TextAttribute.HideLabel.IsUnknown() && !r.TextAttribute.HideLabel.IsNull() {
			*hideLabel = r.TextAttribute.HideLabel.ValueBool()
		} else {
			hideLabel = nil
		}
		icon := new(string)
		if !r.TextAttribute.Icon.IsUnknown() && !r.TextAttribute.Icon.IsNull() {
			*icon = r.TextAttribute.Icon.ValueString()
		} else {
			icon = nil
		}
		renderCondition := new(string)
		if !r.TextAttribute.RenderCondition.IsUnknown() && !r.TextAttribute.RenderCondition.IsNull() {
			*renderCondition = r.TextAttribute.RenderCondition.ValueString()
		} else {
			renderCondition = nil
		}
		var purpose []string = []string{}
		for _, purposeItem := range r.TextAttribute.Purpose {
			purpose = append(purpose, purposeItem.ValueString())
		}
		var constraints *shared.TextAttributeConstraints
		if r.TextAttribute.Constraints != nil {
			constraints = &shared.TextAttributeConstraints{}
		}
		featureFlag := new(string)
		if !r.TextAttribute.FeatureFlag.IsUnknown() && !r.TextAttribute.FeatureFlag.IsNull() {
			*featureFlag = r.TextAttribute.FeatureFlag.ValueString()
		} else {
			featureFlag = nil
		}
		var settingsFlag []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem := range r.TextAttribute.SettingsFlag {
			name1 := new(string)
			if !settingsFlagItem.Name.IsUnknown() && !settingsFlagItem.Name.IsNull() {
				*name1 = settingsFlagItem.Name.ValueString()
			} else {
				name1 = nil
			}
			enabled := new(bool)
			if !settingsFlagItem.Enabled.IsUnknown() && !settingsFlagItem.Enabled.IsNull() {
				*enabled = settingsFlagItem.Enabled.ValueBool()
			} else {
				enabled = nil
			}
			settingsFlag = append(settingsFlag, shared.SettingFlag{
				Name:    name1,
				Enabled: enabled,
			})
		}
		valueFormatter := new(string)
		if !r.TextAttribute.ValueFormatter.IsUnknown() && !r.TextAttribute.ValueFormatter.IsNull() {
			*valueFormatter = r.TextAttribute.ValueFormatter.ValueString()
		} else {
			valueFormatter = nil
		}
		previewValueFormatter := new(string)
		if !r.TextAttribute.PreviewValueFormatter.IsUnknown() && !r.TextAttribute.PreviewValueFormatter.IsNull() {
			*previewValueFormatter = r.TextAttribute.PreviewValueFormatter.ValueString()
		} else {
			previewValueFormatter = nil
		}
		entityBuilderDisableEdit := new(bool)
		if !r.TextAttribute.EntityBuilderDisableEdit.IsUnknown() && !r.TextAttribute.EntityBuilderDisableEdit.IsNull() {
			*entityBuilderDisableEdit = r.TextAttribute.EntityBuilderDisableEdit.ValueBool()
		} else {
			entityBuilderDisableEdit = nil
		}
		protected := new(bool)
		if !r.TextAttribute.Protected.IsUnknown() && !r.TextAttribute.Protected.IsNull() {
			*protected = r.TextAttribute.Protected.ValueBool()
		} else {
			protected = nil
		}
		var infoHelpers *shared.TextAttributeInfoHelpers
		if r.TextAttribute.InfoHelpers != nil {
			hintText := new(string)
			if !r.TextAttribute.InfoHelpers.HintText.IsUnknown() && !r.TextAttribute.InfoHelpers.HintText.IsNull() {
				*hintText = r.TextAttribute.InfoHelpers.HintText.ValueString()
			} else {
				hintText = nil
			}
			hintTextKey := new(string)
			if !r.TextAttribute.InfoHelpers.HintTextKey.IsUnknown() && !r.TextAttribute.InfoHelpers.HintTextKey.IsNull() {
				*hintTextKey = r.TextAttribute.InfoHelpers.HintTextKey.ValueString()
			} else {
				hintTextKey = nil
			}
			hintCustomComponent := new(string)
			if !r.TextAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !r.TextAttribute.InfoHelpers.HintCustomComponent.IsNull() {
				*hintCustomComponent = r.TextAttribute.InfoHelpers.HintCustomComponent.ValueString()
			} else {
				hintCustomComponent = nil
			}
			hintTooltipPlacement := new(string)
			if !r.TextAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !r.TextAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
				*hintTooltipPlacement = r.TextAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
			} else {
				hintTooltipPlacement = nil
			}
			infoHelpers = &shared.TextAttributeInfoHelpers{
				HintText:             hintText,
				HintTextKey:          hintTextKey,
				HintCustomComponent:  hintCustomComponent,
				HintTooltipPlacement: hintTooltipPlacement,
			}
		}
		typeVar := new(shared.TextAttributeType)
		if !r.TextAttribute.Type.IsUnknown() && !r.TextAttribute.Type.IsNull() {
			*typeVar = shared.TextAttributeType(r.TextAttribute.Type.ValueString())
		} else {
			typeVar = nil
		}
		multiline := new(bool)
		if !r.TextAttribute.Multiline.IsUnknown() && !r.TextAttribute.Multiline.IsNull() {
			*multiline = r.TextAttribute.Multiline.ValueBool()
		} else {
			multiline = nil
		}
		attributeWithCompositeIDTextAttributeInput = &shared.AttributeWithCompositeIDTextAttributeInput{
			Name:                     name,
			Label:                    label,
			Placeholder:              placeholder,
			Hidden:                   hidden,
			ShowInTable:              showInTable,
			Sortable:                 sortable,
			Required:                 required,
			Readonly:                 readonly,
			Deprecated:               deprecated,
			DefaultValue:             defaultValue,
			Group:                    group,
			Order:                    order,
			Layout:                   layout,
			HideLabel:                hideLabel,
			Icon:                     icon,
			RenderCondition:          renderCondition,
			Purpose:                  purpose,
			Constraints:              constraints,
			FeatureFlag:              featureFlag,
			SettingsFlag:             settingsFlag,
			ValueFormatter:           valueFormatter,
			PreviewValueFormatter:    previewValueFormatter,
			EntityBuilderDisableEdit: entityBuilderDisableEdit,
			Protected:                protected,
			InfoHelpers:              infoHelpers,
			Type:                     typeVar,
			Multiline:                multiline,
		}
	}
	if attributeWithCompositeIDTextAttributeInput != nil {
		out = shared.AttributeWithCompositeIDInput{
			AttributeWithCompositeIDTextAttributeInput: attributeWithCompositeIDTextAttributeInput,
		}
	}
	var attributeWithCompositeIDLinkAttributeInput *shared.AttributeWithCompositeIDLinkAttributeInput
	if r.LinkAttribute != nil {
		name2 := r.LinkAttribute.Name.ValueString()
		label1 := r.LinkAttribute.Label.ValueString()
		placeholder1 := new(string)
		if !r.LinkAttribute.Placeholder.IsUnknown() && !r.LinkAttribute.Placeholder.IsNull() {
			*placeholder1 = r.LinkAttribute.Placeholder.ValueString()
		} else {
			placeholder1 = nil
		}
		hidden1 := new(bool)
		if !r.LinkAttribute.Hidden.IsUnknown() && !r.LinkAttribute.Hidden.IsNull() {
			*hidden1 = r.LinkAttribute.Hidden.ValueBool()
		} else {
			hidden1 = nil
		}
		showInTable1 := new(bool)
		if !r.LinkAttribute.ShowInTable.IsUnknown() && !r.LinkAttribute.ShowInTable.IsNull() {
			*showInTable1 = r.LinkAttribute.ShowInTable.ValueBool()
		} else {
			showInTable1 = nil
		}
		sortable1 := new(bool)
		if !r.LinkAttribute.Sortable.IsUnknown() && !r.LinkAttribute.Sortable.IsNull() {
			*sortable1 = r.LinkAttribute.Sortable.ValueBool()
		} else {
			sortable1 = nil
		}
		required1 := new(bool)
		if !r.LinkAttribute.Required.IsUnknown() && !r.LinkAttribute.Required.IsNull() {
			*required1 = r.LinkAttribute.Required.ValueBool()
		} else {
			required1 = nil
		}
		readonly1 := new(bool)
		if !r.LinkAttribute.Readonly.IsUnknown() && !r.LinkAttribute.Readonly.IsNull() {
			*readonly1 = r.LinkAttribute.Readonly.ValueBool()
		} else {
			readonly1 = nil
		}
		deprecated1 := new(bool)
		if !r.LinkAttribute.Deprecated.IsUnknown() && !r.LinkAttribute.Deprecated.IsNull() {
			*deprecated1 = r.LinkAttribute.Deprecated.ValueBool()
		} else {
			deprecated1 = nil
		}
		var defaultValue1 interface{}
		if !r.LinkAttribute.DefaultValue.IsUnknown() && !r.LinkAttribute.DefaultValue.IsNull() {
			_ = json.Unmarshal([]byte(r.LinkAttribute.DefaultValue.ValueString()), &defaultValue1)
		}
		group1 := new(string)
		if !r.LinkAttribute.Group.IsUnknown() && !r.LinkAttribute.Group.IsNull() {
			*group1 = r.LinkAttribute.Group.ValueString()
		} else {
			group1 = nil
		}
		order1 := new(int64)
		if !r.LinkAttribute.Order.IsUnknown() && !r.LinkAttribute.Order.IsNull() {
			*order1 = r.LinkAttribute.Order.ValueInt64()
		} else {
			order1 = nil
		}
		layout1 := new(string)
		if !r.LinkAttribute.Layout.IsUnknown() && !r.LinkAttribute.Layout.IsNull() {
			*layout1 = r.LinkAttribute.Layout.ValueString()
		} else {
			layout1 = nil
		}
		hideLabel1 := new(bool)
		if !r.LinkAttribute.HideLabel.IsUnknown() && !r.LinkAttribute.HideLabel.IsNull() {
			*hideLabel1 = r.LinkAttribute.HideLabel.ValueBool()
		} else {
			hideLabel1 = nil
		}
		icon1 := new(string)
		if !r.LinkAttribute.Icon.IsUnknown() && !r.LinkAttribute.Icon.IsNull() {
			*icon1 = r.LinkAttribute.Icon.ValueString()
		} else {
			icon1 = nil
		}
		renderCondition1 := new(string)
		if !r.LinkAttribute.RenderCondition.IsUnknown() && !r.LinkAttribute.RenderCondition.IsNull() {
			*renderCondition1 = r.LinkAttribute.RenderCondition.ValueString()
		} else {
			renderCondition1 = nil
		}
		var purpose1 []string = []string{}
		for _, purposeItem1 := range r.LinkAttribute.Purpose {
			purpose1 = append(purpose1, purposeItem1.ValueString())
		}
		var constraints1 *shared.LinkAttributeAttributeWithCompositeIDConstraints
		if r.LinkAttribute.Constraints != nil {
			constraints1 = &shared.LinkAttributeAttributeWithCompositeIDConstraints{}
		}
		featureFlag1 := new(string)
		if !r.LinkAttribute.FeatureFlag.IsUnknown() && !r.LinkAttribute.FeatureFlag.IsNull() {
			*featureFlag1 = r.LinkAttribute.FeatureFlag.ValueString()
		} else {
			featureFlag1 = nil
		}
		var settingsFlag1 []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem1 := range r.LinkAttribute.SettingsFlag {
			name3 := new(string)
			if !settingsFlagItem1.Name.IsUnknown() && !settingsFlagItem1.Name.IsNull() {
				*name3 = settingsFlagItem1.Name.ValueString()
			} else {
				name3 = nil
			}
			enabled1 := new(bool)
			if !settingsFlagItem1.Enabled.IsUnknown() && !settingsFlagItem1.Enabled.IsNull() {
				*enabled1 = settingsFlagItem1.Enabled.ValueBool()
			} else {
				enabled1 = nil
			}
			settingsFlag1 = append(settingsFlag1, shared.SettingFlag{
				Name:    name3,
				Enabled: enabled1,
			})
		}
		valueFormatter1 := new(string)
		if !r.LinkAttribute.ValueFormatter.IsUnknown() && !r.LinkAttribute.ValueFormatter.IsNull() {
			*valueFormatter1 = r.LinkAttribute.ValueFormatter.ValueString()
		} else {
			valueFormatter1 = nil
		}
		previewValueFormatter1 := new(string)
		if !r.LinkAttribute.PreviewValueFormatter.IsUnknown() && !r.LinkAttribute.PreviewValueFormatter.IsNull() {
			*previewValueFormatter1 = r.LinkAttribute.PreviewValueFormatter.ValueString()
		} else {
			previewValueFormatter1 = nil
		}
		entityBuilderDisableEdit1 := new(bool)
		if !r.LinkAttribute.EntityBuilderDisableEdit.IsUnknown() && !r.LinkAttribute.EntityBuilderDisableEdit.IsNull() {
			*entityBuilderDisableEdit1 = r.LinkAttribute.EntityBuilderDisableEdit.ValueBool()
		} else {
			entityBuilderDisableEdit1 = nil
		}
		protected1 := new(bool)
		if !r.LinkAttribute.Protected.IsUnknown() && !r.LinkAttribute.Protected.IsNull() {
			*protected1 = r.LinkAttribute.Protected.ValueBool()
		} else {
			protected1 = nil
		}
		var infoHelpers1 *shared.LinkAttributeAttributeWithCompositeIDInfoHelpers
		if r.LinkAttribute.InfoHelpers != nil {
			hintText1 := new(string)
			if !r.LinkAttribute.InfoHelpers.HintText.IsUnknown() && !r.LinkAttribute.InfoHelpers.HintText.IsNull() {
				*hintText1 = r.LinkAttribute.InfoHelpers.HintText.ValueString()
			} else {
				hintText1 = nil
			}
			hintTextKey1 := new(string)
			if !r.LinkAttribute.InfoHelpers.HintTextKey.IsUnknown() && !r.LinkAttribute.InfoHelpers.HintTextKey.IsNull() {
				*hintTextKey1 = r.LinkAttribute.InfoHelpers.HintTextKey.ValueString()
			} else {
				hintTextKey1 = nil
			}
			hintCustomComponent1 := new(string)
			if !r.LinkAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !r.LinkAttribute.InfoHelpers.HintCustomComponent.IsNull() {
				*hintCustomComponent1 = r.LinkAttribute.InfoHelpers.HintCustomComponent.ValueString()
			} else {
				hintCustomComponent1 = nil
			}
			hintTooltipPlacement1 := new(string)
			if !r.LinkAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !r.LinkAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
				*hintTooltipPlacement1 = r.LinkAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
			} else {
				hintTooltipPlacement1 = nil
			}
			infoHelpers1 = &shared.LinkAttributeAttributeWithCompositeIDInfoHelpers{
				HintText:             hintText1,
				HintTextKey:          hintTextKey1,
				HintCustomComponent:  hintCustomComponent1,
				HintTooltipPlacement: hintTooltipPlacement1,
			}
		}
		typeVar1 := new(shared.LinkAttributeAttributeWithCompositeIDType)
		if !r.LinkAttribute.Type.IsUnknown() && !r.LinkAttribute.Type.IsNull() {
			*typeVar1 = shared.LinkAttributeAttributeWithCompositeIDType(r.LinkAttribute.Type.ValueString())
		} else {
			typeVar1 = nil
		}
		attributeWithCompositeIDLinkAttributeInput = &shared.AttributeWithCompositeIDLinkAttributeInput{
			Name:                     name2,
			Label:                    label1,
			Placeholder:              placeholder1,
			Hidden:                   hidden1,
			ShowInTable:              showInTable1,
			Sortable:                 sortable1,
			Required:                 required1,
			Readonly:                 readonly1,
			Deprecated:               deprecated1,
			DefaultValue:             defaultValue1,
			Group:                    group1,
			Order:                    order1,
			Layout:                   layout1,
			HideLabel:                hideLabel1,
			Icon:                     icon1,
			RenderCondition:          renderCondition1,
			Purpose:                  purpose1,
			Constraints:              constraints1,
			FeatureFlag:              featureFlag1,
			SettingsFlag:             settingsFlag1,
			ValueFormatter:           valueFormatter1,
			PreviewValueFormatter:    previewValueFormatter1,
			EntityBuilderDisableEdit: entityBuilderDisableEdit1,
			Protected:                protected1,
			InfoHelpers:              infoHelpers1,
			Type:                     typeVar1,
		}
	}
	if attributeWithCompositeIDLinkAttributeInput != nil {
		out = shared.AttributeWithCompositeIDInput{
			AttributeWithCompositeIDLinkAttributeInput: attributeWithCompositeIDLinkAttributeInput,
		}
	}
	var attributeWithCompositeIDDateAttributeInput *shared.AttributeWithCompositeIDDateAttributeInput
	if r.DateAttribute != nil {
		name4 := r.DateAttribute.Name.ValueString()
		label2 := r.DateAttribute.Label.ValueString()
		placeholder2 := new(string)
		if !r.DateAttribute.Placeholder.IsUnknown() && !r.DateAttribute.Placeholder.IsNull() {
			*placeholder2 = r.DateAttribute.Placeholder.ValueString()
		} else {
			placeholder2 = nil
		}
		hidden2 := new(bool)
		if !r.DateAttribute.Hidden.IsUnknown() && !r.DateAttribute.Hidden.IsNull() {
			*hidden2 = r.DateAttribute.Hidden.ValueBool()
		} else {
			hidden2 = nil
		}
		showInTable2 := new(bool)
		if !r.DateAttribute.ShowInTable.IsUnknown() && !r.DateAttribute.ShowInTable.IsNull() {
			*showInTable2 = r.DateAttribute.ShowInTable.ValueBool()
		} else {
			showInTable2 = nil
		}
		sortable2 := new(bool)
		if !r.DateAttribute.Sortable.IsUnknown() && !r.DateAttribute.Sortable.IsNull() {
			*sortable2 = r.DateAttribute.Sortable.ValueBool()
		} else {
			sortable2 = nil
		}
		required2 := new(bool)
		if !r.DateAttribute.Required.IsUnknown() && !r.DateAttribute.Required.IsNull() {
			*required2 = r.DateAttribute.Required.ValueBool()
		} else {
			required2 = nil
		}
		readonly2 := new(bool)
		if !r.DateAttribute.Readonly.IsUnknown() && !r.DateAttribute.Readonly.IsNull() {
			*readonly2 = r.DateAttribute.Readonly.ValueBool()
		} else {
			readonly2 = nil
		}
		deprecated2 := new(bool)
		if !r.DateAttribute.Deprecated.IsUnknown() && !r.DateAttribute.Deprecated.IsNull() {
			*deprecated2 = r.DateAttribute.Deprecated.ValueBool()
		} else {
			deprecated2 = nil
		}
		var defaultValue2 interface{}
		if !r.DateAttribute.DefaultValue.IsUnknown() && !r.DateAttribute.DefaultValue.IsNull() {
			_ = json.Unmarshal([]byte(r.DateAttribute.DefaultValue.ValueString()), &defaultValue2)
		}
		group2 := new(string)
		if !r.DateAttribute.Group.IsUnknown() && !r.DateAttribute.Group.IsNull() {
			*group2 = r.DateAttribute.Group.ValueString()
		} else {
			group2 = nil
		}
		order2 := new(int64)
		if !r.DateAttribute.Order.IsUnknown() && !r.DateAttribute.Order.IsNull() {
			*order2 = r.DateAttribute.Order.ValueInt64()
		} else {
			order2 = nil
		}
		layout2 := new(string)
		if !r.DateAttribute.Layout.IsUnknown() && !r.DateAttribute.Layout.IsNull() {
			*layout2 = r.DateAttribute.Layout.ValueString()
		} else {
			layout2 = nil
		}
		hideLabel2 := new(bool)
		if !r.DateAttribute.HideLabel.IsUnknown() && !r.DateAttribute.HideLabel.IsNull() {
			*hideLabel2 = r.DateAttribute.HideLabel.ValueBool()
		} else {
			hideLabel2 = nil
		}
		icon2 := new(string)
		if !r.DateAttribute.Icon.IsUnknown() && !r.DateAttribute.Icon.IsNull() {
			*icon2 = r.DateAttribute.Icon.ValueString()
		} else {
			icon2 = nil
		}
		renderCondition2 := new(string)
		if !r.DateAttribute.RenderCondition.IsUnknown() && !r.DateAttribute.RenderCondition.IsNull() {
			*renderCondition2 = r.DateAttribute.RenderCondition.ValueString()
		} else {
			renderCondition2 = nil
		}
		var purpose2 []string = []string{}
		for _, purposeItem2 := range r.DateAttribute.Purpose {
			purpose2 = append(purpose2, purposeItem2.ValueString())
		}
		var constraints2 *shared.DateAttributeAttributeWithCompositeIDConstraints
		if r.DateAttribute.Constraints != nil {
			constraints2 = &shared.DateAttributeAttributeWithCompositeIDConstraints{}
		}
		featureFlag2 := new(string)
		if !r.DateAttribute.FeatureFlag.IsUnknown() && !r.DateAttribute.FeatureFlag.IsNull() {
			*featureFlag2 = r.DateAttribute.FeatureFlag.ValueString()
		} else {
			featureFlag2 = nil
		}
		var settingsFlag2 []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem2 := range r.DateAttribute.SettingsFlag {
			name5 := new(string)
			if !settingsFlagItem2.Name.IsUnknown() && !settingsFlagItem2.Name.IsNull() {
				*name5 = settingsFlagItem2.Name.ValueString()
			} else {
				name5 = nil
			}
			enabled2 := new(bool)
			if !settingsFlagItem2.Enabled.IsUnknown() && !settingsFlagItem2.Enabled.IsNull() {
				*enabled2 = settingsFlagItem2.Enabled.ValueBool()
			} else {
				enabled2 = nil
			}
			settingsFlag2 = append(settingsFlag2, shared.SettingFlag{
				Name:    name5,
				Enabled: enabled2,
			})
		}
		valueFormatter2 := new(string)
		if !r.DateAttribute.ValueFormatter.IsUnknown() && !r.DateAttribute.ValueFormatter.IsNull() {
			*valueFormatter2 = r.DateAttribute.ValueFormatter.ValueString()
		} else {
			valueFormatter2 = nil
		}
		previewValueFormatter2 := new(string)
		if !r.DateAttribute.PreviewValueFormatter.IsUnknown() && !r.DateAttribute.PreviewValueFormatter.IsNull() {
			*previewValueFormatter2 = r.DateAttribute.PreviewValueFormatter.ValueString()
		} else {
			previewValueFormatter2 = nil
		}
		entityBuilderDisableEdit2 := new(bool)
		if !r.DateAttribute.EntityBuilderDisableEdit.IsUnknown() && !r.DateAttribute.EntityBuilderDisableEdit.IsNull() {
			*entityBuilderDisableEdit2 = r.DateAttribute.EntityBuilderDisableEdit.ValueBool()
		} else {
			entityBuilderDisableEdit2 = nil
		}
		protected2 := new(bool)
		if !r.DateAttribute.Protected.IsUnknown() && !r.DateAttribute.Protected.IsNull() {
			*protected2 = r.DateAttribute.Protected.ValueBool()
		} else {
			protected2 = nil
		}
		var infoHelpers2 *shared.DateAttributeAttributeWithCompositeIDInfoHelpers
		if r.DateAttribute.InfoHelpers != nil {
			hintText2 := new(string)
			if !r.DateAttribute.InfoHelpers.HintText.IsUnknown() && !r.DateAttribute.InfoHelpers.HintText.IsNull() {
				*hintText2 = r.DateAttribute.InfoHelpers.HintText.ValueString()
			} else {
				hintText2 = nil
			}
			hintTextKey2 := new(string)
			if !r.DateAttribute.InfoHelpers.HintTextKey.IsUnknown() && !r.DateAttribute.InfoHelpers.HintTextKey.IsNull() {
				*hintTextKey2 = r.DateAttribute.InfoHelpers.HintTextKey.ValueString()
			} else {
				hintTextKey2 = nil
			}
			hintCustomComponent2 := new(string)
			if !r.DateAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !r.DateAttribute.InfoHelpers.HintCustomComponent.IsNull() {
				*hintCustomComponent2 = r.DateAttribute.InfoHelpers.HintCustomComponent.ValueString()
			} else {
				hintCustomComponent2 = nil
			}
			hintTooltipPlacement2 := new(string)
			if !r.DateAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !r.DateAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
				*hintTooltipPlacement2 = r.DateAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
			} else {
				hintTooltipPlacement2 = nil
			}
			infoHelpers2 = &shared.DateAttributeAttributeWithCompositeIDInfoHelpers{
				HintText:             hintText2,
				HintTextKey:          hintTextKey2,
				HintCustomComponent:  hintCustomComponent2,
				HintTooltipPlacement: hintTooltipPlacement2,
			}
		}
		typeVar2 := new(shared.DateAttributeAttributeWithCompositeIDType)
		if !r.DateAttribute.Type.IsUnknown() && !r.DateAttribute.Type.IsNull() {
			*typeVar2 = shared.DateAttributeAttributeWithCompositeIDType(r.DateAttribute.Type.ValueString())
		} else {
			typeVar2 = nil
		}
		attributeWithCompositeIDDateAttributeInput = &shared.AttributeWithCompositeIDDateAttributeInput{
			Name:                     name4,
			Label:                    label2,
			Placeholder:              placeholder2,
			Hidden:                   hidden2,
			ShowInTable:              showInTable2,
			Sortable:                 sortable2,
			Required:                 required2,
			Readonly:                 readonly2,
			Deprecated:               deprecated2,
			DefaultValue:             defaultValue2,
			Group:                    group2,
			Order:                    order2,
			Layout:                   layout2,
			HideLabel:                hideLabel2,
			Icon:                     icon2,
			RenderCondition:          renderCondition2,
			Purpose:                  purpose2,
			Constraints:              constraints2,
			FeatureFlag:              featureFlag2,
			SettingsFlag:             settingsFlag2,
			ValueFormatter:           valueFormatter2,
			PreviewValueFormatter:    previewValueFormatter2,
			EntityBuilderDisableEdit: entityBuilderDisableEdit2,
			Protected:                protected2,
			InfoHelpers:              infoHelpers2,
			Type:                     typeVar2,
		}
	}
	if attributeWithCompositeIDDateAttributeInput != nil {
		out = shared.AttributeWithCompositeIDInput{
			AttributeWithCompositeIDDateAttributeInput: attributeWithCompositeIDDateAttributeInput,
		}
	}
	var attributeWithCompositeIDCountryAttributeInput *shared.AttributeWithCompositeIDCountryAttributeInput
	if r.CountryAttribute != nil {
		name6 := r.CountryAttribute.Name.ValueString()
		label3 := r.CountryAttribute.Label.ValueString()
		placeholder3 := new(string)
		if !r.CountryAttribute.Placeholder.IsUnknown() && !r.CountryAttribute.Placeholder.IsNull() {
			*placeholder3 = r.CountryAttribute.Placeholder.ValueString()
		} else {
			placeholder3 = nil
		}
		hidden3 := new(bool)
		if !r.CountryAttribute.Hidden.IsUnknown() && !r.CountryAttribute.Hidden.IsNull() {
			*hidden3 = r.CountryAttribute.Hidden.ValueBool()
		} else {
			hidden3 = nil
		}
		showInTable3 := new(bool)
		if !r.CountryAttribute.ShowInTable.IsUnknown() && !r.CountryAttribute.ShowInTable.IsNull() {
			*showInTable3 = r.CountryAttribute.ShowInTable.ValueBool()
		} else {
			showInTable3 = nil
		}
		sortable3 := new(bool)
		if !r.CountryAttribute.Sortable.IsUnknown() && !r.CountryAttribute.Sortable.IsNull() {
			*sortable3 = r.CountryAttribute.Sortable.ValueBool()
		} else {
			sortable3 = nil
		}
		required3 := new(bool)
		if !r.CountryAttribute.Required.IsUnknown() && !r.CountryAttribute.Required.IsNull() {
			*required3 = r.CountryAttribute.Required.ValueBool()
		} else {
			required3 = nil
		}
		readonly3 := new(bool)
		if !r.CountryAttribute.Readonly.IsUnknown() && !r.CountryAttribute.Readonly.IsNull() {
			*readonly3 = r.CountryAttribute.Readonly.ValueBool()
		} else {
			readonly3 = nil
		}
		deprecated3 := new(bool)
		if !r.CountryAttribute.Deprecated.IsUnknown() && !r.CountryAttribute.Deprecated.IsNull() {
			*deprecated3 = r.CountryAttribute.Deprecated.ValueBool()
		} else {
			deprecated3 = nil
		}
		var defaultValue3 interface{}
		if !r.CountryAttribute.DefaultValue.IsUnknown() && !r.CountryAttribute.DefaultValue.IsNull() {
			_ = json.Unmarshal([]byte(r.CountryAttribute.DefaultValue.ValueString()), &defaultValue3)
		}
		group3 := new(string)
		if !r.CountryAttribute.Group.IsUnknown() && !r.CountryAttribute.Group.IsNull() {
			*group3 = r.CountryAttribute.Group.ValueString()
		} else {
			group3 = nil
		}
		order3 := new(int64)
		if !r.CountryAttribute.Order.IsUnknown() && !r.CountryAttribute.Order.IsNull() {
			*order3 = r.CountryAttribute.Order.ValueInt64()
		} else {
			order3 = nil
		}
		layout3 := new(string)
		if !r.CountryAttribute.Layout.IsUnknown() && !r.CountryAttribute.Layout.IsNull() {
			*layout3 = r.CountryAttribute.Layout.ValueString()
		} else {
			layout3 = nil
		}
		hideLabel3 := new(bool)
		if !r.CountryAttribute.HideLabel.IsUnknown() && !r.CountryAttribute.HideLabel.IsNull() {
			*hideLabel3 = r.CountryAttribute.HideLabel.ValueBool()
		} else {
			hideLabel3 = nil
		}
		icon3 := new(string)
		if !r.CountryAttribute.Icon.IsUnknown() && !r.CountryAttribute.Icon.IsNull() {
			*icon3 = r.CountryAttribute.Icon.ValueString()
		} else {
			icon3 = nil
		}
		renderCondition3 := new(string)
		if !r.CountryAttribute.RenderCondition.IsUnknown() && !r.CountryAttribute.RenderCondition.IsNull() {
			*renderCondition3 = r.CountryAttribute.RenderCondition.ValueString()
		} else {
			renderCondition3 = nil
		}
		var purpose3 []string = []string{}
		for _, purposeItem3 := range r.CountryAttribute.Purpose {
			purpose3 = append(purpose3, purposeItem3.ValueString())
		}
		var constraints3 *shared.CountryAttributeAttributeWithCompositeIDConstraints
		if r.CountryAttribute.Constraints != nil {
			constraints3 = &shared.CountryAttributeAttributeWithCompositeIDConstraints{}
		}
		featureFlag3 := new(string)
		if !r.CountryAttribute.FeatureFlag.IsUnknown() && !r.CountryAttribute.FeatureFlag.IsNull() {
			*featureFlag3 = r.CountryAttribute.FeatureFlag.ValueString()
		} else {
			featureFlag3 = nil
		}
		var settingsFlag3 []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem3 := range r.CountryAttribute.SettingsFlag {
			name7 := new(string)
			if !settingsFlagItem3.Name.IsUnknown() && !settingsFlagItem3.Name.IsNull() {
				*name7 = settingsFlagItem3.Name.ValueString()
			} else {
				name7 = nil
			}
			enabled3 := new(bool)
			if !settingsFlagItem3.Enabled.IsUnknown() && !settingsFlagItem3.Enabled.IsNull() {
				*enabled3 = settingsFlagItem3.Enabled.ValueBool()
			} else {
				enabled3 = nil
			}
			settingsFlag3 = append(settingsFlag3, shared.SettingFlag{
				Name:    name7,
				Enabled: enabled3,
			})
		}
		valueFormatter3 := new(string)
		if !r.CountryAttribute.ValueFormatter.IsUnknown() && !r.CountryAttribute.ValueFormatter.IsNull() {
			*valueFormatter3 = r.CountryAttribute.ValueFormatter.ValueString()
		} else {
			valueFormatter3 = nil
		}
		previewValueFormatter3 := new(string)
		if !r.CountryAttribute.PreviewValueFormatter.IsUnknown() && !r.CountryAttribute.PreviewValueFormatter.IsNull() {
			*previewValueFormatter3 = r.CountryAttribute.PreviewValueFormatter.ValueString()
		} else {
			previewValueFormatter3 = nil
		}
		entityBuilderDisableEdit3 := new(bool)
		if !r.CountryAttribute.EntityBuilderDisableEdit.IsUnknown() && !r.CountryAttribute.EntityBuilderDisableEdit.IsNull() {
			*entityBuilderDisableEdit3 = r.CountryAttribute.EntityBuilderDisableEdit.ValueBool()
		} else {
			entityBuilderDisableEdit3 = nil
		}
		protected3 := new(bool)
		if !r.CountryAttribute.Protected.IsUnknown() && !r.CountryAttribute.Protected.IsNull() {
			*protected3 = r.CountryAttribute.Protected.ValueBool()
		} else {
			protected3 = nil
		}
		var infoHelpers3 *shared.CountryAttributeAttributeWithCompositeIDInfoHelpers
		if r.CountryAttribute.InfoHelpers != nil {
			hintText3 := new(string)
			if !r.CountryAttribute.InfoHelpers.HintText.IsUnknown() && !r.CountryAttribute.InfoHelpers.HintText.IsNull() {
				*hintText3 = r.CountryAttribute.InfoHelpers.HintText.ValueString()
			} else {
				hintText3 = nil
			}
			hintTextKey3 := new(string)
			if !r.CountryAttribute.InfoHelpers.HintTextKey.IsUnknown() && !r.CountryAttribute.InfoHelpers.HintTextKey.IsNull() {
				*hintTextKey3 = r.CountryAttribute.InfoHelpers.HintTextKey.ValueString()
			} else {
				hintTextKey3 = nil
			}
			hintCustomComponent3 := new(string)
			if !r.CountryAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !r.CountryAttribute.InfoHelpers.HintCustomComponent.IsNull() {
				*hintCustomComponent3 = r.CountryAttribute.InfoHelpers.HintCustomComponent.ValueString()
			} else {
				hintCustomComponent3 = nil
			}
			hintTooltipPlacement3 := new(string)
			if !r.CountryAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !r.CountryAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
				*hintTooltipPlacement3 = r.CountryAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
			} else {
				hintTooltipPlacement3 = nil
			}
			infoHelpers3 = &shared.CountryAttributeAttributeWithCompositeIDInfoHelpers{
				HintText:             hintText3,
				HintTextKey:          hintTextKey3,
				HintCustomComponent:  hintCustomComponent3,
				HintTooltipPlacement: hintTooltipPlacement3,
			}
		}
		typeVar3 := new(shared.CountryAttributeAttributeWithCompositeIDType)
		if !r.CountryAttribute.Type.IsUnknown() && !r.CountryAttribute.Type.IsNull() {
			*typeVar3 = shared.CountryAttributeAttributeWithCompositeIDType(r.CountryAttribute.Type.ValueString())
		} else {
			typeVar3 = nil
		}
		attributeWithCompositeIDCountryAttributeInput = &shared.AttributeWithCompositeIDCountryAttributeInput{
			Name:                     name6,
			Label:                    label3,
			Placeholder:              placeholder3,
			Hidden:                   hidden3,
			ShowInTable:              showInTable3,
			Sortable:                 sortable3,
			Required:                 required3,
			Readonly:                 readonly3,
			Deprecated:               deprecated3,
			DefaultValue:             defaultValue3,
			Group:                    group3,
			Order:                    order3,
			Layout:                   layout3,
			HideLabel:                hideLabel3,
			Icon:                     icon3,
			RenderCondition:          renderCondition3,
			Purpose:                  purpose3,
			Constraints:              constraints3,
			FeatureFlag:              featureFlag3,
			SettingsFlag:             settingsFlag3,
			ValueFormatter:           valueFormatter3,
			PreviewValueFormatter:    previewValueFormatter3,
			EntityBuilderDisableEdit: entityBuilderDisableEdit3,
			Protected:                protected3,
			InfoHelpers:              infoHelpers3,
			Type:                     typeVar3,
		}
	}
	if attributeWithCompositeIDCountryAttributeInput != nil {
		out = shared.AttributeWithCompositeIDInput{
			AttributeWithCompositeIDCountryAttributeInput: attributeWithCompositeIDCountryAttributeInput,
		}
	}
	var attributeWithCompositeIDBooleanAttributeInput *shared.AttributeWithCompositeIDBooleanAttributeInput
	if r.BooleanAttribute != nil {
		name8 := r.BooleanAttribute.Name.ValueString()
		label4 := r.BooleanAttribute.Label.ValueString()
		placeholder4 := new(string)
		if !r.BooleanAttribute.Placeholder.IsUnknown() && !r.BooleanAttribute.Placeholder.IsNull() {
			*placeholder4 = r.BooleanAttribute.Placeholder.ValueString()
		} else {
			placeholder4 = nil
		}
		hidden4 := new(bool)
		if !r.BooleanAttribute.Hidden.IsUnknown() && !r.BooleanAttribute.Hidden.IsNull() {
			*hidden4 = r.BooleanAttribute.Hidden.ValueBool()
		} else {
			hidden4 = nil
		}
		showInTable4 := new(bool)
		if !r.BooleanAttribute.ShowInTable.IsUnknown() && !r.BooleanAttribute.ShowInTable.IsNull() {
			*showInTable4 = r.BooleanAttribute.ShowInTable.ValueBool()
		} else {
			showInTable4 = nil
		}
		sortable4 := new(bool)
		if !r.BooleanAttribute.Sortable.IsUnknown() && !r.BooleanAttribute.Sortable.IsNull() {
			*sortable4 = r.BooleanAttribute.Sortable.ValueBool()
		} else {
			sortable4 = nil
		}
		required4 := new(bool)
		if !r.BooleanAttribute.Required.IsUnknown() && !r.BooleanAttribute.Required.IsNull() {
			*required4 = r.BooleanAttribute.Required.ValueBool()
		} else {
			required4 = nil
		}
		readonly4 := new(bool)
		if !r.BooleanAttribute.Readonly.IsUnknown() && !r.BooleanAttribute.Readonly.IsNull() {
			*readonly4 = r.BooleanAttribute.Readonly.ValueBool()
		} else {
			readonly4 = nil
		}
		deprecated4 := new(bool)
		if !r.BooleanAttribute.Deprecated.IsUnknown() && !r.BooleanAttribute.Deprecated.IsNull() {
			*deprecated4 = r.BooleanAttribute.Deprecated.ValueBool()
		} else {
			deprecated4 = nil
		}
		var defaultValue4 interface{}
		if !r.BooleanAttribute.DefaultValue.IsUnknown() && !r.BooleanAttribute.DefaultValue.IsNull() {
			_ = json.Unmarshal([]byte(r.BooleanAttribute.DefaultValue.ValueString()), &defaultValue4)
		}
		group4 := new(string)
		if !r.BooleanAttribute.Group.IsUnknown() && !r.BooleanAttribute.Group.IsNull() {
			*group4 = r.BooleanAttribute.Group.ValueString()
		} else {
			group4 = nil
		}
		order4 := new(int64)
		if !r.BooleanAttribute.Order.IsUnknown() && !r.BooleanAttribute.Order.IsNull() {
			*order4 = r.BooleanAttribute.Order.ValueInt64()
		} else {
			order4 = nil
		}
		layout4 := new(string)
		if !r.BooleanAttribute.Layout.IsUnknown() && !r.BooleanAttribute.Layout.IsNull() {
			*layout4 = r.BooleanAttribute.Layout.ValueString()
		} else {
			layout4 = nil
		}
		hideLabel4 := new(bool)
		if !r.BooleanAttribute.HideLabel.IsUnknown() && !r.BooleanAttribute.HideLabel.IsNull() {
			*hideLabel4 = r.BooleanAttribute.HideLabel.ValueBool()
		} else {
			hideLabel4 = nil
		}
		icon4 := new(string)
		if !r.BooleanAttribute.Icon.IsUnknown() && !r.BooleanAttribute.Icon.IsNull() {
			*icon4 = r.BooleanAttribute.Icon.ValueString()
		} else {
			icon4 = nil
		}
		renderCondition4 := new(string)
		if !r.BooleanAttribute.RenderCondition.IsUnknown() && !r.BooleanAttribute.RenderCondition.IsNull() {
			*renderCondition4 = r.BooleanAttribute.RenderCondition.ValueString()
		} else {
			renderCondition4 = nil
		}
		var purpose4 []string = []string{}
		for _, purposeItem4 := range r.BooleanAttribute.Purpose {
			purpose4 = append(purpose4, purposeItem4.ValueString())
		}
		var constraints4 *shared.BooleanAttributeAttributeWithCompositeIDConstraints
		if r.BooleanAttribute.Constraints != nil {
			constraints4 = &shared.BooleanAttributeAttributeWithCompositeIDConstraints{}
		}
		featureFlag4 := new(string)
		if !r.BooleanAttribute.FeatureFlag.IsUnknown() && !r.BooleanAttribute.FeatureFlag.IsNull() {
			*featureFlag4 = r.BooleanAttribute.FeatureFlag.ValueString()
		} else {
			featureFlag4 = nil
		}
		var settingsFlag4 []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem4 := range r.BooleanAttribute.SettingsFlag {
			name9 := new(string)
			if !settingsFlagItem4.Name.IsUnknown() && !settingsFlagItem4.Name.IsNull() {
				*name9 = settingsFlagItem4.Name.ValueString()
			} else {
				name9 = nil
			}
			enabled4 := new(bool)
			if !settingsFlagItem4.Enabled.IsUnknown() && !settingsFlagItem4.Enabled.IsNull() {
				*enabled4 = settingsFlagItem4.Enabled.ValueBool()
			} else {
				enabled4 = nil
			}
			settingsFlag4 = append(settingsFlag4, shared.SettingFlag{
				Name:    name9,
				Enabled: enabled4,
			})
		}
		valueFormatter4 := new(string)
		if !r.BooleanAttribute.ValueFormatter.IsUnknown() && !r.BooleanAttribute.ValueFormatter.IsNull() {
			*valueFormatter4 = r.BooleanAttribute.ValueFormatter.ValueString()
		} else {
			valueFormatter4 = nil
		}
		previewValueFormatter4 := new(string)
		if !r.BooleanAttribute.PreviewValueFormatter.IsUnknown() && !r.BooleanAttribute.PreviewValueFormatter.IsNull() {
			*previewValueFormatter4 = r.BooleanAttribute.PreviewValueFormatter.ValueString()
		} else {
			previewValueFormatter4 = nil
		}
		entityBuilderDisableEdit4 := new(bool)
		if !r.BooleanAttribute.EntityBuilderDisableEdit.IsUnknown() && !r.BooleanAttribute.EntityBuilderDisableEdit.IsNull() {
			*entityBuilderDisableEdit4 = r.BooleanAttribute.EntityBuilderDisableEdit.ValueBool()
		} else {
			entityBuilderDisableEdit4 = nil
		}
		protected4 := new(bool)
		if !r.BooleanAttribute.Protected.IsUnknown() && !r.BooleanAttribute.Protected.IsNull() {
			*protected4 = r.BooleanAttribute.Protected.ValueBool()
		} else {
			protected4 = nil
		}
		var infoHelpers4 *shared.BooleanAttributeAttributeWithCompositeIDInfoHelpers
		if r.BooleanAttribute.InfoHelpers != nil {
			hintText4 := new(string)
			if !r.BooleanAttribute.InfoHelpers.HintText.IsUnknown() && !r.BooleanAttribute.InfoHelpers.HintText.IsNull() {
				*hintText4 = r.BooleanAttribute.InfoHelpers.HintText.ValueString()
			} else {
				hintText4 = nil
			}
			hintTextKey4 := new(string)
			if !r.BooleanAttribute.InfoHelpers.HintTextKey.IsUnknown() && !r.BooleanAttribute.InfoHelpers.HintTextKey.IsNull() {
				*hintTextKey4 = r.BooleanAttribute.InfoHelpers.HintTextKey.ValueString()
			} else {
				hintTextKey4 = nil
			}
			hintCustomComponent4 := new(string)
			if !r.BooleanAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !r.BooleanAttribute.InfoHelpers.HintCustomComponent.IsNull() {
				*hintCustomComponent4 = r.BooleanAttribute.InfoHelpers.HintCustomComponent.ValueString()
			} else {
				hintCustomComponent4 = nil
			}
			hintTooltipPlacement4 := new(string)
			if !r.BooleanAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !r.BooleanAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
				*hintTooltipPlacement4 = r.BooleanAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
			} else {
				hintTooltipPlacement4 = nil
			}
			infoHelpers4 = &shared.BooleanAttributeAttributeWithCompositeIDInfoHelpers{
				HintText:             hintText4,
				HintTextKey:          hintTextKey4,
				HintCustomComponent:  hintCustomComponent4,
				HintTooltipPlacement: hintTooltipPlacement4,
			}
		}
		typeVar4 := new(shared.BooleanAttributeAttributeWithCompositeIDType)
		if !r.BooleanAttribute.Type.IsUnknown() && !r.BooleanAttribute.Type.IsNull() {
			*typeVar4 = shared.BooleanAttributeAttributeWithCompositeIDType(r.BooleanAttribute.Type.ValueString())
		} else {
			typeVar4 = nil
		}
		attributeWithCompositeIDBooleanAttributeInput = &shared.AttributeWithCompositeIDBooleanAttributeInput{
			Name:                     name8,
			Label:                    label4,
			Placeholder:              placeholder4,
			Hidden:                   hidden4,
			ShowInTable:              showInTable4,
			Sortable:                 sortable4,
			Required:                 required4,
			Readonly:                 readonly4,
			Deprecated:               deprecated4,
			DefaultValue:             defaultValue4,
			Group:                    group4,
			Order:                    order4,
			Layout:                   layout4,
			HideLabel:                hideLabel4,
			Icon:                     icon4,
			RenderCondition:          renderCondition4,
			Purpose:                  purpose4,
			Constraints:              constraints4,
			FeatureFlag:              featureFlag4,
			SettingsFlag:             settingsFlag4,
			ValueFormatter:           valueFormatter4,
			PreviewValueFormatter:    previewValueFormatter4,
			EntityBuilderDisableEdit: entityBuilderDisableEdit4,
			Protected:                protected4,
			InfoHelpers:              infoHelpers4,
			Type:                     typeVar4,
		}
	}
	if attributeWithCompositeIDBooleanAttributeInput != nil {
		out = shared.AttributeWithCompositeIDInput{
			AttributeWithCompositeIDBooleanAttributeInput: attributeWithCompositeIDBooleanAttributeInput,
		}
	}
	var attributeWithCompositeIDSelectAttributeInput *shared.AttributeWithCompositeIDSelectAttributeInput
	if r.SelectAttribute != nil {
		name10 := r.SelectAttribute.Name.ValueString()
		label5 := r.SelectAttribute.Label.ValueString()
		placeholder5 := new(string)
		if !r.SelectAttribute.Placeholder.IsUnknown() && !r.SelectAttribute.Placeholder.IsNull() {
			*placeholder5 = r.SelectAttribute.Placeholder.ValueString()
		} else {
			placeholder5 = nil
		}
		hidden5 := new(bool)
		if !r.SelectAttribute.Hidden.IsUnknown() && !r.SelectAttribute.Hidden.IsNull() {
			*hidden5 = r.SelectAttribute.Hidden.ValueBool()
		} else {
			hidden5 = nil
		}
		showInTable5 := new(bool)
		if !r.SelectAttribute.ShowInTable.IsUnknown() && !r.SelectAttribute.ShowInTable.IsNull() {
			*showInTable5 = r.SelectAttribute.ShowInTable.ValueBool()
		} else {
			showInTable5 = nil
		}
		sortable5 := new(bool)
		if !r.SelectAttribute.Sortable.IsUnknown() && !r.SelectAttribute.Sortable.IsNull() {
			*sortable5 = r.SelectAttribute.Sortable.ValueBool()
		} else {
			sortable5 = nil
		}
		required5 := new(bool)
		if !r.SelectAttribute.Required.IsUnknown() && !r.SelectAttribute.Required.IsNull() {
			*required5 = r.SelectAttribute.Required.ValueBool()
		} else {
			required5 = nil
		}
		readonly5 := new(bool)
		if !r.SelectAttribute.Readonly.IsUnknown() && !r.SelectAttribute.Readonly.IsNull() {
			*readonly5 = r.SelectAttribute.Readonly.ValueBool()
		} else {
			readonly5 = nil
		}
		deprecated5 := new(bool)
		if !r.SelectAttribute.Deprecated.IsUnknown() && !r.SelectAttribute.Deprecated.IsNull() {
			*deprecated5 = r.SelectAttribute.Deprecated.ValueBool()
		} else {
			deprecated5 = nil
		}
		var defaultValue5 interface{}
		if !r.SelectAttribute.DefaultValue.IsUnknown() && !r.SelectAttribute.DefaultValue.IsNull() {
			_ = json.Unmarshal([]byte(r.SelectAttribute.DefaultValue.ValueString()), &defaultValue5)
		}
		group5 := new(string)
		if !r.SelectAttribute.Group.IsUnknown() && !r.SelectAttribute.Group.IsNull() {
			*group5 = r.SelectAttribute.Group.ValueString()
		} else {
			group5 = nil
		}
		order5 := new(int64)
		if !r.SelectAttribute.Order.IsUnknown() && !r.SelectAttribute.Order.IsNull() {
			*order5 = r.SelectAttribute.Order.ValueInt64()
		} else {
			order5 = nil
		}
		layout5 := new(string)
		if !r.SelectAttribute.Layout.IsUnknown() && !r.SelectAttribute.Layout.IsNull() {
			*layout5 = r.SelectAttribute.Layout.ValueString()
		} else {
			layout5 = nil
		}
		hideLabel5 := new(bool)
		if !r.SelectAttribute.HideLabel.IsUnknown() && !r.SelectAttribute.HideLabel.IsNull() {
			*hideLabel5 = r.SelectAttribute.HideLabel.ValueBool()
		} else {
			hideLabel5 = nil
		}
		icon5 := new(string)
		if !r.SelectAttribute.Icon.IsUnknown() && !r.SelectAttribute.Icon.IsNull() {
			*icon5 = r.SelectAttribute.Icon.ValueString()
		} else {
			icon5 = nil
		}
		renderCondition5 := new(string)
		if !r.SelectAttribute.RenderCondition.IsUnknown() && !r.SelectAttribute.RenderCondition.IsNull() {
			*renderCondition5 = r.SelectAttribute.RenderCondition.ValueString()
		} else {
			renderCondition5 = nil
		}
		var purpose5 []string = []string{}
		for _, purposeItem5 := range r.SelectAttribute.Purpose {
			purpose5 = append(purpose5, purposeItem5.ValueString())
		}
		var constraints5 *shared.SelectAttributeAttributeWithCompositeIDConstraints
		if r.SelectAttribute.Constraints != nil {
			constraints5 = &shared.SelectAttributeAttributeWithCompositeIDConstraints{}
		}
		featureFlag5 := new(string)
		if !r.SelectAttribute.FeatureFlag.IsUnknown() && !r.SelectAttribute.FeatureFlag.IsNull() {
			*featureFlag5 = r.SelectAttribute.FeatureFlag.ValueString()
		} else {
			featureFlag5 = nil
		}
		var settingsFlag5 []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem5 := range r.SelectAttribute.SettingsFlag {
			name11 := new(string)
			if !settingsFlagItem5.Name.IsUnknown() && !settingsFlagItem5.Name.IsNull() {
				*name11 = settingsFlagItem5.Name.ValueString()
			} else {
				name11 = nil
			}
			enabled5 := new(bool)
			if !settingsFlagItem5.Enabled.IsUnknown() && !settingsFlagItem5.Enabled.IsNull() {
				*enabled5 = settingsFlagItem5.Enabled.ValueBool()
			} else {
				enabled5 = nil
			}
			settingsFlag5 = append(settingsFlag5, shared.SettingFlag{
				Name:    name11,
				Enabled: enabled5,
			})
		}
		valueFormatter5 := new(string)
		if !r.SelectAttribute.ValueFormatter.IsUnknown() && !r.SelectAttribute.ValueFormatter.IsNull() {
			*valueFormatter5 = r.SelectAttribute.ValueFormatter.ValueString()
		} else {
			valueFormatter5 = nil
		}
		previewValueFormatter5 := new(string)
		if !r.SelectAttribute.PreviewValueFormatter.IsUnknown() && !r.SelectAttribute.PreviewValueFormatter.IsNull() {
			*previewValueFormatter5 = r.SelectAttribute.PreviewValueFormatter.ValueString()
		} else {
			previewValueFormatter5 = nil
		}
		entityBuilderDisableEdit5 := new(bool)
		if !r.SelectAttribute.EntityBuilderDisableEdit.IsUnknown() && !r.SelectAttribute.EntityBuilderDisableEdit.IsNull() {
			*entityBuilderDisableEdit5 = r.SelectAttribute.EntityBuilderDisableEdit.ValueBool()
		} else {
			entityBuilderDisableEdit5 = nil
		}
		protected5 := new(bool)
		if !r.SelectAttribute.Protected.IsUnknown() && !r.SelectAttribute.Protected.IsNull() {
			*protected5 = r.SelectAttribute.Protected.ValueBool()
		} else {
			protected5 = nil
		}
		var infoHelpers5 *shared.SelectAttributeAttributeWithCompositeIDInfoHelpers
		if r.SelectAttribute.InfoHelpers != nil {
			hintText5 := new(string)
			if !r.SelectAttribute.InfoHelpers.HintText.IsUnknown() && !r.SelectAttribute.InfoHelpers.HintText.IsNull() {
				*hintText5 = r.SelectAttribute.InfoHelpers.HintText.ValueString()
			} else {
				hintText5 = nil
			}
			hintTextKey5 := new(string)
			if !r.SelectAttribute.InfoHelpers.HintTextKey.IsUnknown() && !r.SelectAttribute.InfoHelpers.HintTextKey.IsNull() {
				*hintTextKey5 = r.SelectAttribute.InfoHelpers.HintTextKey.ValueString()
			} else {
				hintTextKey5 = nil
			}
			hintCustomComponent5 := new(string)
			if !r.SelectAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !r.SelectAttribute.InfoHelpers.HintCustomComponent.IsNull() {
				*hintCustomComponent5 = r.SelectAttribute.InfoHelpers.HintCustomComponent.ValueString()
			} else {
				hintCustomComponent5 = nil
			}
			hintTooltipPlacement5 := new(string)
			if !r.SelectAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !r.SelectAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
				*hintTooltipPlacement5 = r.SelectAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
			} else {
				hintTooltipPlacement5 = nil
			}
			infoHelpers5 = &shared.SelectAttributeAttributeWithCompositeIDInfoHelpers{
				HintText:             hintText5,
				HintTextKey:          hintTextKey5,
				HintCustomComponent:  hintCustomComponent5,
				HintTooltipPlacement: hintTooltipPlacement5,
			}
		}
		typeVar5 := new(shared.SelectAttributeAttributeWithCompositeIDType)
		if !r.SelectAttribute.Type.IsUnknown() && !r.SelectAttribute.Type.IsNull() {
			*typeVar5 = shared.SelectAttributeAttributeWithCompositeIDType(r.SelectAttribute.Type.ValueString())
		} else {
			typeVar5 = nil
		}
		var options []shared.SelectAttributeOptions = []shared.SelectAttributeOptions{}
		for _, optionsItem := range r.SelectAttribute.Options {
			if optionsItem.One != nil {
				value := optionsItem.One.Value.ValueString()
				title := new(string)
				if !optionsItem.One.Title.IsUnknown() && !optionsItem.One.Title.IsNull() {
					*title = optionsItem.One.Title.ValueString()
				} else {
					title = nil
				}
				options1 := shared.Options1{
					Value: value,
					Title: title,
				}
				options = append(options, shared.SelectAttributeOptions{
					Options1: &options1,
				})
			}
			if !optionsItem.Str.IsUnknown() && !optionsItem.Str.IsNull() {
				str := optionsItem.Str.ValueString()
				options = append(options, shared.SelectAttributeOptions{
					Str: &str,
				})
			}
		}
		allowAny := new(bool)
		if !r.SelectAttribute.AllowAny.IsUnknown() && !r.SelectAttribute.AllowAny.IsNull() {
			*allowAny = r.SelectAttribute.AllowAny.ValueBool()
		} else {
			allowAny = nil
		}
		attributeWithCompositeIDSelectAttributeInput = &shared.AttributeWithCompositeIDSelectAttributeInput{
			Name:                     name10,
			Label:                    label5,
			Placeholder:              placeholder5,
			Hidden:                   hidden5,
			ShowInTable:              showInTable5,
			Sortable:                 sortable5,
			Required:                 required5,
			Readonly:                 readonly5,
			Deprecated:               deprecated5,
			DefaultValue:             defaultValue5,
			Group:                    group5,
			Order:                    order5,
			Layout:                   layout5,
			HideLabel:                hideLabel5,
			Icon:                     icon5,
			RenderCondition:          renderCondition5,
			Purpose:                  purpose5,
			Constraints:              constraints5,
			FeatureFlag:              featureFlag5,
			SettingsFlag:             settingsFlag5,
			ValueFormatter:           valueFormatter5,
			PreviewValueFormatter:    previewValueFormatter5,
			EntityBuilderDisableEdit: entityBuilderDisableEdit5,
			Protected:                protected5,
			InfoHelpers:              infoHelpers5,
			Type:                     typeVar5,
			Options:                  options,
			AllowAny:                 allowAny,
		}
	}
	if attributeWithCompositeIDSelectAttributeInput != nil {
		out = shared.AttributeWithCompositeIDInput{
			AttributeWithCompositeIDSelectAttributeInput: attributeWithCompositeIDSelectAttributeInput,
		}
	}
	var attributeWithCompositeIDMultiSelectAttributeInput *shared.AttributeWithCompositeIDMultiSelectAttributeInput
	if r.MultiSelectAttribute != nil {
		name12 := r.MultiSelectAttribute.Name.ValueString()
		label6 := r.MultiSelectAttribute.Label.ValueString()
		placeholder6 := new(string)
		if !r.MultiSelectAttribute.Placeholder.IsUnknown() && !r.MultiSelectAttribute.Placeholder.IsNull() {
			*placeholder6 = r.MultiSelectAttribute.Placeholder.ValueString()
		} else {
			placeholder6 = nil
		}
		hidden6 := new(bool)
		if !r.MultiSelectAttribute.Hidden.IsUnknown() && !r.MultiSelectAttribute.Hidden.IsNull() {
			*hidden6 = r.MultiSelectAttribute.Hidden.ValueBool()
		} else {
			hidden6 = nil
		}
		showInTable6 := new(bool)
		if !r.MultiSelectAttribute.ShowInTable.IsUnknown() && !r.MultiSelectAttribute.ShowInTable.IsNull() {
			*showInTable6 = r.MultiSelectAttribute.ShowInTable.ValueBool()
		} else {
			showInTable6 = nil
		}
		sortable6 := new(bool)
		if !r.MultiSelectAttribute.Sortable.IsUnknown() && !r.MultiSelectAttribute.Sortable.IsNull() {
			*sortable6 = r.MultiSelectAttribute.Sortable.ValueBool()
		} else {
			sortable6 = nil
		}
		required6 := new(bool)
		if !r.MultiSelectAttribute.Required.IsUnknown() && !r.MultiSelectAttribute.Required.IsNull() {
			*required6 = r.MultiSelectAttribute.Required.ValueBool()
		} else {
			required6 = nil
		}
		readonly6 := new(bool)
		if !r.MultiSelectAttribute.Readonly.IsUnknown() && !r.MultiSelectAttribute.Readonly.IsNull() {
			*readonly6 = r.MultiSelectAttribute.Readonly.ValueBool()
		} else {
			readonly6 = nil
		}
		deprecated6 := new(bool)
		if !r.MultiSelectAttribute.Deprecated.IsUnknown() && !r.MultiSelectAttribute.Deprecated.IsNull() {
			*deprecated6 = r.MultiSelectAttribute.Deprecated.ValueBool()
		} else {
			deprecated6 = nil
		}
		var defaultValue6 interface{}
		if !r.MultiSelectAttribute.DefaultValue.IsUnknown() && !r.MultiSelectAttribute.DefaultValue.IsNull() {
			_ = json.Unmarshal([]byte(r.MultiSelectAttribute.DefaultValue.ValueString()), &defaultValue6)
		}
		group6 := new(string)
		if !r.MultiSelectAttribute.Group.IsUnknown() && !r.MultiSelectAttribute.Group.IsNull() {
			*group6 = r.MultiSelectAttribute.Group.ValueString()
		} else {
			group6 = nil
		}
		order6 := new(int64)
		if !r.MultiSelectAttribute.Order.IsUnknown() && !r.MultiSelectAttribute.Order.IsNull() {
			*order6 = r.MultiSelectAttribute.Order.ValueInt64()
		} else {
			order6 = nil
		}
		layout6 := new(string)
		if !r.MultiSelectAttribute.Layout.IsUnknown() && !r.MultiSelectAttribute.Layout.IsNull() {
			*layout6 = r.MultiSelectAttribute.Layout.ValueString()
		} else {
			layout6 = nil
		}
		hideLabel6 := new(bool)
		if !r.MultiSelectAttribute.HideLabel.IsUnknown() && !r.MultiSelectAttribute.HideLabel.IsNull() {
			*hideLabel6 = r.MultiSelectAttribute.HideLabel.ValueBool()
		} else {
			hideLabel6 = nil
		}
		icon6 := new(string)
		if !r.MultiSelectAttribute.Icon.IsUnknown() && !r.MultiSelectAttribute.Icon.IsNull() {
			*icon6 = r.MultiSelectAttribute.Icon.ValueString()
		} else {
			icon6 = nil
		}
		renderCondition6 := new(string)
		if !r.MultiSelectAttribute.RenderCondition.IsUnknown() && !r.MultiSelectAttribute.RenderCondition.IsNull() {
			*renderCondition6 = r.MultiSelectAttribute.RenderCondition.ValueString()
		} else {
			renderCondition6 = nil
		}
		var purpose6 []string = []string{}
		for _, purposeItem6 := range r.MultiSelectAttribute.Purpose {
			purpose6 = append(purpose6, purposeItem6.ValueString())
		}
		var constraints6 *shared.MultiSelectAttributeAttributeWithCompositeIDConstraints
		if r.MultiSelectAttribute.Constraints != nil {
			constraints6 = &shared.MultiSelectAttributeAttributeWithCompositeIDConstraints{}
		}
		featureFlag6 := new(string)
		if !r.MultiSelectAttribute.FeatureFlag.IsUnknown() && !r.MultiSelectAttribute.FeatureFlag.IsNull() {
			*featureFlag6 = r.MultiSelectAttribute.FeatureFlag.ValueString()
		} else {
			featureFlag6 = nil
		}
		var settingsFlag6 []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem6 := range r.MultiSelectAttribute.SettingsFlag {
			name13 := new(string)
			if !settingsFlagItem6.Name.IsUnknown() && !settingsFlagItem6.Name.IsNull() {
				*name13 = settingsFlagItem6.Name.ValueString()
			} else {
				name13 = nil
			}
			enabled6 := new(bool)
			if !settingsFlagItem6.Enabled.IsUnknown() && !settingsFlagItem6.Enabled.IsNull() {
				*enabled6 = settingsFlagItem6.Enabled.ValueBool()
			} else {
				enabled6 = nil
			}
			settingsFlag6 = append(settingsFlag6, shared.SettingFlag{
				Name:    name13,
				Enabled: enabled6,
			})
		}
		valueFormatter6 := new(string)
		if !r.MultiSelectAttribute.ValueFormatter.IsUnknown() && !r.MultiSelectAttribute.ValueFormatter.IsNull() {
			*valueFormatter6 = r.MultiSelectAttribute.ValueFormatter.ValueString()
		} else {
			valueFormatter6 = nil
		}
		previewValueFormatter6 := new(string)
		if !r.MultiSelectAttribute.PreviewValueFormatter.IsUnknown() && !r.MultiSelectAttribute.PreviewValueFormatter.IsNull() {
			*previewValueFormatter6 = r.MultiSelectAttribute.PreviewValueFormatter.ValueString()
		} else {
			previewValueFormatter6 = nil
		}
		entityBuilderDisableEdit6 := new(bool)
		if !r.MultiSelectAttribute.EntityBuilderDisableEdit.IsUnknown() && !r.MultiSelectAttribute.EntityBuilderDisableEdit.IsNull() {
			*entityBuilderDisableEdit6 = r.MultiSelectAttribute.EntityBuilderDisableEdit.ValueBool()
		} else {
			entityBuilderDisableEdit6 = nil
		}
		protected6 := new(bool)
		if !r.MultiSelectAttribute.Protected.IsUnknown() && !r.MultiSelectAttribute.Protected.IsNull() {
			*protected6 = r.MultiSelectAttribute.Protected.ValueBool()
		} else {
			protected6 = nil
		}
		var infoHelpers6 *shared.MultiSelectAttributeAttributeWithCompositeIDInfoHelpers
		if r.MultiSelectAttribute.InfoHelpers != nil {
			hintText6 := new(string)
			if !r.MultiSelectAttribute.InfoHelpers.HintText.IsUnknown() && !r.MultiSelectAttribute.InfoHelpers.HintText.IsNull() {
				*hintText6 = r.MultiSelectAttribute.InfoHelpers.HintText.ValueString()
			} else {
				hintText6 = nil
			}
			hintTextKey6 := new(string)
			if !r.MultiSelectAttribute.InfoHelpers.HintTextKey.IsUnknown() && !r.MultiSelectAttribute.InfoHelpers.HintTextKey.IsNull() {
				*hintTextKey6 = r.MultiSelectAttribute.InfoHelpers.HintTextKey.ValueString()
			} else {
				hintTextKey6 = nil
			}
			hintCustomComponent6 := new(string)
			if !r.MultiSelectAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !r.MultiSelectAttribute.InfoHelpers.HintCustomComponent.IsNull() {
				*hintCustomComponent6 = r.MultiSelectAttribute.InfoHelpers.HintCustomComponent.ValueString()
			} else {
				hintCustomComponent6 = nil
			}
			hintTooltipPlacement6 := new(string)
			if !r.MultiSelectAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !r.MultiSelectAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
				*hintTooltipPlacement6 = r.MultiSelectAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
			} else {
				hintTooltipPlacement6 = nil
			}
			infoHelpers6 = &shared.MultiSelectAttributeAttributeWithCompositeIDInfoHelpers{
				HintText:             hintText6,
				HintTextKey:          hintTextKey6,
				HintCustomComponent:  hintCustomComponent6,
				HintTooltipPlacement: hintTooltipPlacement6,
			}
		}
		typeVar6 := new(shared.MultiSelectAttributeAttributeWithCompositeIDType)
		if !r.MultiSelectAttribute.Type.IsUnknown() && !r.MultiSelectAttribute.Type.IsNull() {
			*typeVar6 = shared.MultiSelectAttributeAttributeWithCompositeIDType(r.MultiSelectAttribute.Type.ValueString())
		} else {
			typeVar6 = nil
		}
		disableCaseSensitive := new(bool)
		if !r.MultiSelectAttribute.DisableCaseSensitive.IsUnknown() && !r.MultiSelectAttribute.DisableCaseSensitive.IsNull() {
			*disableCaseSensitive = r.MultiSelectAttribute.DisableCaseSensitive.ValueBool()
		} else {
			disableCaseSensitive = nil
		}
		allowExtraOptions := new(bool)
		if !r.MultiSelectAttribute.AllowExtraOptions.IsUnknown() && !r.MultiSelectAttribute.AllowExtraOptions.IsNull() {
			*allowExtraOptions = r.MultiSelectAttribute.AllowExtraOptions.ValueBool()
		} else {
			allowExtraOptions = nil
		}
		var options2 []shared.MultiSelectAttributeAttributeWithCompositeIDOptions = []shared.MultiSelectAttributeAttributeWithCompositeIDOptions{}
		for _, optionsItem1 := range r.MultiSelectAttribute.Options {
			if !optionsItem1.Str.IsUnknown() && !optionsItem1.Str.IsNull() {
				str1 := optionsItem1.Str.ValueString()
				options2 = append(options2, shared.MultiSelectAttributeAttributeWithCompositeIDOptions{
					Str: &str1,
				})
			}
			if optionsItem1.Two != nil {
				value1 := optionsItem1.Two.Value.ValueString()
				title1 := new(string)
				if !optionsItem1.Two.Title.IsUnknown() && !optionsItem1.Two.Title.IsNull() {
					*title1 = optionsItem1.Two.Title.ValueString()
				} else {
					title1 = nil
				}
				multiSelectAttributeOptions2 := shared.MultiSelectAttributeOptions2{
					Value: value1,
					Title: title1,
				}
				options2 = append(options2, shared.MultiSelectAttributeAttributeWithCompositeIDOptions{
					MultiSelectAttributeOptions2: &multiSelectAttributeOptions2,
				})
			}
		}
		allowAny1 := new(bool)
		if !r.MultiSelectAttribute.AllowAny.IsUnknown() && !r.MultiSelectAttribute.AllowAny.IsNull() {
			*allowAny1 = r.MultiSelectAttribute.AllowAny.ValueBool()
		} else {
			allowAny1 = nil
		}
		attributeWithCompositeIDMultiSelectAttributeInput = &shared.AttributeWithCompositeIDMultiSelectAttributeInput{
			Name:                     name12,
			Label:                    label6,
			Placeholder:              placeholder6,
			Hidden:                   hidden6,
			ShowInTable:              showInTable6,
			Sortable:                 sortable6,
			Required:                 required6,
			Readonly:                 readonly6,
			Deprecated:               deprecated6,
			DefaultValue:             defaultValue6,
			Group:                    group6,
			Order:                    order6,
			Layout:                   layout6,
			HideLabel:                hideLabel6,
			Icon:                     icon6,
			RenderCondition:          renderCondition6,
			Purpose:                  purpose6,
			Constraints:              constraints6,
			FeatureFlag:              featureFlag6,
			SettingsFlag:             settingsFlag6,
			ValueFormatter:           valueFormatter6,
			PreviewValueFormatter:    previewValueFormatter6,
			EntityBuilderDisableEdit: entityBuilderDisableEdit6,
			Protected:                protected6,
			InfoHelpers:              infoHelpers6,
			Type:                     typeVar6,
			DisableCaseSensitive:     disableCaseSensitive,
			AllowExtraOptions:        allowExtraOptions,
			Options:                  options2,
			AllowAny:                 allowAny1,
		}
	}
	if attributeWithCompositeIDMultiSelectAttributeInput != nil {
		out = shared.AttributeWithCompositeIDInput{
			AttributeWithCompositeIDMultiSelectAttributeInput: attributeWithCompositeIDMultiSelectAttributeInput,
		}
	}
	var attributeWithCompositeIDStatusAttributeInput *shared.AttributeWithCompositeIDStatusAttributeInput
	if r.StatusAttribute != nil {
		name14 := r.StatusAttribute.Name.ValueString()
		label7 := r.StatusAttribute.Label.ValueString()
		placeholder7 := new(string)
		if !r.StatusAttribute.Placeholder.IsUnknown() && !r.StatusAttribute.Placeholder.IsNull() {
			*placeholder7 = r.StatusAttribute.Placeholder.ValueString()
		} else {
			placeholder7 = nil
		}
		hidden7 := new(bool)
		if !r.StatusAttribute.Hidden.IsUnknown() && !r.StatusAttribute.Hidden.IsNull() {
			*hidden7 = r.StatusAttribute.Hidden.ValueBool()
		} else {
			hidden7 = nil
		}
		showInTable7 := new(bool)
		if !r.StatusAttribute.ShowInTable.IsUnknown() && !r.StatusAttribute.ShowInTable.IsNull() {
			*showInTable7 = r.StatusAttribute.ShowInTable.ValueBool()
		} else {
			showInTable7 = nil
		}
		sortable7 := new(bool)
		if !r.StatusAttribute.Sortable.IsUnknown() && !r.StatusAttribute.Sortable.IsNull() {
			*sortable7 = r.StatusAttribute.Sortable.ValueBool()
		} else {
			sortable7 = nil
		}
		required7 := new(bool)
		if !r.StatusAttribute.Required.IsUnknown() && !r.StatusAttribute.Required.IsNull() {
			*required7 = r.StatusAttribute.Required.ValueBool()
		} else {
			required7 = nil
		}
		readonly7 := new(bool)
		if !r.StatusAttribute.Readonly.IsUnknown() && !r.StatusAttribute.Readonly.IsNull() {
			*readonly7 = r.StatusAttribute.Readonly.ValueBool()
		} else {
			readonly7 = nil
		}
		deprecated7 := new(bool)
		if !r.StatusAttribute.Deprecated.IsUnknown() && !r.StatusAttribute.Deprecated.IsNull() {
			*deprecated7 = r.StatusAttribute.Deprecated.ValueBool()
		} else {
			deprecated7 = nil
		}
		var defaultValue7 interface{}
		if !r.StatusAttribute.DefaultValue.IsUnknown() && !r.StatusAttribute.DefaultValue.IsNull() {
			_ = json.Unmarshal([]byte(r.StatusAttribute.DefaultValue.ValueString()), &defaultValue7)
		}
		group7 := new(string)
		if !r.StatusAttribute.Group.IsUnknown() && !r.StatusAttribute.Group.IsNull() {
			*group7 = r.StatusAttribute.Group.ValueString()
		} else {
			group7 = nil
		}
		order7 := new(int64)
		if !r.StatusAttribute.Order.IsUnknown() && !r.StatusAttribute.Order.IsNull() {
			*order7 = r.StatusAttribute.Order.ValueInt64()
		} else {
			order7 = nil
		}
		layout7 := new(string)
		if !r.StatusAttribute.Layout.IsUnknown() && !r.StatusAttribute.Layout.IsNull() {
			*layout7 = r.StatusAttribute.Layout.ValueString()
		} else {
			layout7 = nil
		}
		hideLabel7 := new(bool)
		if !r.StatusAttribute.HideLabel.IsUnknown() && !r.StatusAttribute.HideLabel.IsNull() {
			*hideLabel7 = r.StatusAttribute.HideLabel.ValueBool()
		} else {
			hideLabel7 = nil
		}
		icon7 := new(string)
		if !r.StatusAttribute.Icon.IsUnknown() && !r.StatusAttribute.Icon.IsNull() {
			*icon7 = r.StatusAttribute.Icon.ValueString()
		} else {
			icon7 = nil
		}
		renderCondition7 := new(string)
		if !r.StatusAttribute.RenderCondition.IsUnknown() && !r.StatusAttribute.RenderCondition.IsNull() {
			*renderCondition7 = r.StatusAttribute.RenderCondition.ValueString()
		} else {
			renderCondition7 = nil
		}
		var purpose7 []string = []string{}
		for _, purposeItem7 := range r.StatusAttribute.Purpose {
			purpose7 = append(purpose7, purposeItem7.ValueString())
		}
		var constraints7 *shared.StatusAttributeAttributeWithCompositeIDConstraints
		if r.StatusAttribute.Constraints != nil {
			constraints7 = &shared.StatusAttributeAttributeWithCompositeIDConstraints{}
		}
		featureFlag7 := new(string)
		if !r.StatusAttribute.FeatureFlag.IsUnknown() && !r.StatusAttribute.FeatureFlag.IsNull() {
			*featureFlag7 = r.StatusAttribute.FeatureFlag.ValueString()
		} else {
			featureFlag7 = nil
		}
		var settingsFlag7 []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem7 := range r.StatusAttribute.SettingsFlag {
			name15 := new(string)
			if !settingsFlagItem7.Name.IsUnknown() && !settingsFlagItem7.Name.IsNull() {
				*name15 = settingsFlagItem7.Name.ValueString()
			} else {
				name15 = nil
			}
			enabled7 := new(bool)
			if !settingsFlagItem7.Enabled.IsUnknown() && !settingsFlagItem7.Enabled.IsNull() {
				*enabled7 = settingsFlagItem7.Enabled.ValueBool()
			} else {
				enabled7 = nil
			}
			settingsFlag7 = append(settingsFlag7, shared.SettingFlag{
				Name:    name15,
				Enabled: enabled7,
			})
		}
		valueFormatter7 := new(string)
		if !r.StatusAttribute.ValueFormatter.IsUnknown() && !r.StatusAttribute.ValueFormatter.IsNull() {
			*valueFormatter7 = r.StatusAttribute.ValueFormatter.ValueString()
		} else {
			valueFormatter7 = nil
		}
		previewValueFormatter7 := new(string)
		if !r.StatusAttribute.PreviewValueFormatter.IsUnknown() && !r.StatusAttribute.PreviewValueFormatter.IsNull() {
			*previewValueFormatter7 = r.StatusAttribute.PreviewValueFormatter.ValueString()
		} else {
			previewValueFormatter7 = nil
		}
		entityBuilderDisableEdit7 := new(bool)
		if !r.StatusAttribute.EntityBuilderDisableEdit.IsUnknown() && !r.StatusAttribute.EntityBuilderDisableEdit.IsNull() {
			*entityBuilderDisableEdit7 = r.StatusAttribute.EntityBuilderDisableEdit.ValueBool()
		} else {
			entityBuilderDisableEdit7 = nil
		}
		protected7 := new(bool)
		if !r.StatusAttribute.Protected.IsUnknown() && !r.StatusAttribute.Protected.IsNull() {
			*protected7 = r.StatusAttribute.Protected.ValueBool()
		} else {
			protected7 = nil
		}
		var infoHelpers7 *shared.StatusAttributeAttributeWithCompositeIDInfoHelpers
		if r.StatusAttribute.InfoHelpers != nil {
			hintText7 := new(string)
			if !r.StatusAttribute.InfoHelpers.HintText.IsUnknown() && !r.StatusAttribute.InfoHelpers.HintText.IsNull() {
				*hintText7 = r.StatusAttribute.InfoHelpers.HintText.ValueString()
			} else {
				hintText7 = nil
			}
			hintTextKey7 := new(string)
			if !r.StatusAttribute.InfoHelpers.HintTextKey.IsUnknown() && !r.StatusAttribute.InfoHelpers.HintTextKey.IsNull() {
				*hintTextKey7 = r.StatusAttribute.InfoHelpers.HintTextKey.ValueString()
			} else {
				hintTextKey7 = nil
			}
			hintCustomComponent7 := new(string)
			if !r.StatusAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !r.StatusAttribute.InfoHelpers.HintCustomComponent.IsNull() {
				*hintCustomComponent7 = r.StatusAttribute.InfoHelpers.HintCustomComponent.ValueString()
			} else {
				hintCustomComponent7 = nil
			}
			hintTooltipPlacement7 := new(string)
			if !r.StatusAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !r.StatusAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
				*hintTooltipPlacement7 = r.StatusAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
			} else {
				hintTooltipPlacement7 = nil
			}
			infoHelpers7 = &shared.StatusAttributeAttributeWithCompositeIDInfoHelpers{
				HintText:             hintText7,
				HintTextKey:          hintTextKey7,
				HintCustomComponent:  hintCustomComponent7,
				HintTooltipPlacement: hintTooltipPlacement7,
			}
		}
		typeVar7 := new(shared.StatusAttributeAttributeWithCompositeIDType)
		if !r.StatusAttribute.Type.IsUnknown() && !r.StatusAttribute.Type.IsNull() {
			*typeVar7 = shared.StatusAttributeAttributeWithCompositeIDType(r.StatusAttribute.Type.ValueString())
		} else {
			typeVar7 = nil
		}
		var options3 []shared.StatusAttributeAttributeWithCompositeIDOptions = []shared.StatusAttributeAttributeWithCompositeIDOptions{}
		for _, optionsItem2 := range r.StatusAttribute.Options {
			if !optionsItem2.Str.IsUnknown() && !optionsItem2.Str.IsNull() {
				str2 := optionsItem2.Str.ValueString()
				options3 = append(options3, shared.StatusAttributeAttributeWithCompositeIDOptions{
					Str: &str2,
				})
			}
			if optionsItem2.Two != nil {
				value2 := optionsItem2.Two.Value.ValueString()
				title2 := new(string)
				if !optionsItem2.Two.Title.IsUnknown() && !optionsItem2.Two.Title.IsNull() {
					*title2 = optionsItem2.Two.Title.ValueString()
				} else {
					title2 = nil
				}
				statusAttributeOptions2 := shared.StatusAttributeOptions2{
					Value: value2,
					Title: title2,
				}
				options3 = append(options3, shared.StatusAttributeAttributeWithCompositeIDOptions{
					StatusAttributeOptions2: &statusAttributeOptions2,
				})
			}
		}
		attributeWithCompositeIDStatusAttributeInput = &shared.AttributeWithCompositeIDStatusAttributeInput{
			Name:                     name14,
			Label:                    label7,
			Placeholder:              placeholder7,
			Hidden:                   hidden7,
			ShowInTable:              showInTable7,
			Sortable:                 sortable7,
			Required:                 required7,
			Readonly:                 readonly7,
			Deprecated:               deprecated7,
			DefaultValue:             defaultValue7,
			Group:                    group7,
			Order:                    order7,
			Layout:                   layout7,
			HideLabel:                hideLabel7,
			Icon:                     icon7,
			RenderCondition:          renderCondition7,
			Purpose:                  purpose7,
			Constraints:              constraints7,
			FeatureFlag:              featureFlag7,
			SettingsFlag:             settingsFlag7,
			ValueFormatter:           valueFormatter7,
			PreviewValueFormatter:    previewValueFormatter7,
			EntityBuilderDisableEdit: entityBuilderDisableEdit7,
			Protected:                protected7,
			InfoHelpers:              infoHelpers7,
			Type:                     typeVar7,
			Options:                  options3,
		}
	}
	if attributeWithCompositeIDStatusAttributeInput != nil {
		out = shared.AttributeWithCompositeIDInput{
			AttributeWithCompositeIDStatusAttributeInput: attributeWithCompositeIDStatusAttributeInput,
		}
	}
	var attributeWithCompositeIDSequenceAttributeInput *shared.AttributeWithCompositeIDSequenceAttributeInput
	if r.SequenceAttribute != nil {
		name16 := r.SequenceAttribute.Name.ValueString()
		label8 := r.SequenceAttribute.Label.ValueString()
		placeholder8 := new(string)
		if !r.SequenceAttribute.Placeholder.IsUnknown() && !r.SequenceAttribute.Placeholder.IsNull() {
			*placeholder8 = r.SequenceAttribute.Placeholder.ValueString()
		} else {
			placeholder8 = nil
		}
		hidden8 := new(bool)
		if !r.SequenceAttribute.Hidden.IsUnknown() && !r.SequenceAttribute.Hidden.IsNull() {
			*hidden8 = r.SequenceAttribute.Hidden.ValueBool()
		} else {
			hidden8 = nil
		}
		showInTable8 := new(bool)
		if !r.SequenceAttribute.ShowInTable.IsUnknown() && !r.SequenceAttribute.ShowInTable.IsNull() {
			*showInTable8 = r.SequenceAttribute.ShowInTable.ValueBool()
		} else {
			showInTable8 = nil
		}
		sortable8 := new(bool)
		if !r.SequenceAttribute.Sortable.IsUnknown() && !r.SequenceAttribute.Sortable.IsNull() {
			*sortable8 = r.SequenceAttribute.Sortable.ValueBool()
		} else {
			sortable8 = nil
		}
		required8 := new(bool)
		if !r.SequenceAttribute.Required.IsUnknown() && !r.SequenceAttribute.Required.IsNull() {
			*required8 = r.SequenceAttribute.Required.ValueBool()
		} else {
			required8 = nil
		}
		readonly8 := new(bool)
		if !r.SequenceAttribute.Readonly.IsUnknown() && !r.SequenceAttribute.Readonly.IsNull() {
			*readonly8 = r.SequenceAttribute.Readonly.ValueBool()
		} else {
			readonly8 = nil
		}
		deprecated8 := new(bool)
		if !r.SequenceAttribute.Deprecated.IsUnknown() && !r.SequenceAttribute.Deprecated.IsNull() {
			*deprecated8 = r.SequenceAttribute.Deprecated.ValueBool()
		} else {
			deprecated8 = nil
		}
		var defaultValue8 interface{}
		if !r.SequenceAttribute.DefaultValue.IsUnknown() && !r.SequenceAttribute.DefaultValue.IsNull() {
			_ = json.Unmarshal([]byte(r.SequenceAttribute.DefaultValue.ValueString()), &defaultValue8)
		}
		group8 := new(string)
		if !r.SequenceAttribute.Group.IsUnknown() && !r.SequenceAttribute.Group.IsNull() {
			*group8 = r.SequenceAttribute.Group.ValueString()
		} else {
			group8 = nil
		}
		order8 := new(int64)
		if !r.SequenceAttribute.Order.IsUnknown() && !r.SequenceAttribute.Order.IsNull() {
			*order8 = r.SequenceAttribute.Order.ValueInt64()
		} else {
			order8 = nil
		}
		layout8 := new(string)
		if !r.SequenceAttribute.Layout.IsUnknown() && !r.SequenceAttribute.Layout.IsNull() {
			*layout8 = r.SequenceAttribute.Layout.ValueString()
		} else {
			layout8 = nil
		}
		hideLabel8 := new(bool)
		if !r.SequenceAttribute.HideLabel.IsUnknown() && !r.SequenceAttribute.HideLabel.IsNull() {
			*hideLabel8 = r.SequenceAttribute.HideLabel.ValueBool()
		} else {
			hideLabel8 = nil
		}
		icon8 := new(string)
		if !r.SequenceAttribute.Icon.IsUnknown() && !r.SequenceAttribute.Icon.IsNull() {
			*icon8 = r.SequenceAttribute.Icon.ValueString()
		} else {
			icon8 = nil
		}
		renderCondition8 := new(string)
		if !r.SequenceAttribute.RenderCondition.IsUnknown() && !r.SequenceAttribute.RenderCondition.IsNull() {
			*renderCondition8 = r.SequenceAttribute.RenderCondition.ValueString()
		} else {
			renderCondition8 = nil
		}
		var purpose8 []string = []string{}
		for _, purposeItem8 := range r.SequenceAttribute.Purpose {
			purpose8 = append(purpose8, purposeItem8.ValueString())
		}
		var constraints8 *shared.SequenceAttributeAttributeWithCompositeIDConstraints
		if r.SequenceAttribute.Constraints != nil {
			constraints8 = &shared.SequenceAttributeAttributeWithCompositeIDConstraints{}
		}
		featureFlag8 := new(string)
		if !r.SequenceAttribute.FeatureFlag.IsUnknown() && !r.SequenceAttribute.FeatureFlag.IsNull() {
			*featureFlag8 = r.SequenceAttribute.FeatureFlag.ValueString()
		} else {
			featureFlag8 = nil
		}
		var settingsFlag8 []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem8 := range r.SequenceAttribute.SettingsFlag {
			name17 := new(string)
			if !settingsFlagItem8.Name.IsUnknown() && !settingsFlagItem8.Name.IsNull() {
				*name17 = settingsFlagItem8.Name.ValueString()
			} else {
				name17 = nil
			}
			enabled8 := new(bool)
			if !settingsFlagItem8.Enabled.IsUnknown() && !settingsFlagItem8.Enabled.IsNull() {
				*enabled8 = settingsFlagItem8.Enabled.ValueBool()
			} else {
				enabled8 = nil
			}
			settingsFlag8 = append(settingsFlag8, shared.SettingFlag{
				Name:    name17,
				Enabled: enabled8,
			})
		}
		valueFormatter8 := new(string)
		if !r.SequenceAttribute.ValueFormatter.IsUnknown() && !r.SequenceAttribute.ValueFormatter.IsNull() {
			*valueFormatter8 = r.SequenceAttribute.ValueFormatter.ValueString()
		} else {
			valueFormatter8 = nil
		}
		previewValueFormatter8 := new(string)
		if !r.SequenceAttribute.PreviewValueFormatter.IsUnknown() && !r.SequenceAttribute.PreviewValueFormatter.IsNull() {
			*previewValueFormatter8 = r.SequenceAttribute.PreviewValueFormatter.ValueString()
		} else {
			previewValueFormatter8 = nil
		}
		entityBuilderDisableEdit8 := new(bool)
		if !r.SequenceAttribute.EntityBuilderDisableEdit.IsUnknown() && !r.SequenceAttribute.EntityBuilderDisableEdit.IsNull() {
			*entityBuilderDisableEdit8 = r.SequenceAttribute.EntityBuilderDisableEdit.ValueBool()
		} else {
			entityBuilderDisableEdit8 = nil
		}
		protected8 := new(bool)
		if !r.SequenceAttribute.Protected.IsUnknown() && !r.SequenceAttribute.Protected.IsNull() {
			*protected8 = r.SequenceAttribute.Protected.ValueBool()
		} else {
			protected8 = nil
		}
		var infoHelpers8 *shared.SequenceAttributeAttributeWithCompositeIDInfoHelpers
		if r.SequenceAttribute.InfoHelpers != nil {
			hintText8 := new(string)
			if !r.SequenceAttribute.InfoHelpers.HintText.IsUnknown() && !r.SequenceAttribute.InfoHelpers.HintText.IsNull() {
				*hintText8 = r.SequenceAttribute.InfoHelpers.HintText.ValueString()
			} else {
				hintText8 = nil
			}
			hintTextKey8 := new(string)
			if !r.SequenceAttribute.InfoHelpers.HintTextKey.IsUnknown() && !r.SequenceAttribute.InfoHelpers.HintTextKey.IsNull() {
				*hintTextKey8 = r.SequenceAttribute.InfoHelpers.HintTextKey.ValueString()
			} else {
				hintTextKey8 = nil
			}
			hintCustomComponent8 := new(string)
			if !r.SequenceAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !r.SequenceAttribute.InfoHelpers.HintCustomComponent.IsNull() {
				*hintCustomComponent8 = r.SequenceAttribute.InfoHelpers.HintCustomComponent.ValueString()
			} else {
				hintCustomComponent8 = nil
			}
			hintTooltipPlacement8 := new(string)
			if !r.SequenceAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !r.SequenceAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
				*hintTooltipPlacement8 = r.SequenceAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
			} else {
				hintTooltipPlacement8 = nil
			}
			infoHelpers8 = &shared.SequenceAttributeAttributeWithCompositeIDInfoHelpers{
				HintText:             hintText8,
				HintTextKey:          hintTextKey8,
				HintCustomComponent:  hintCustomComponent8,
				HintTooltipPlacement: hintTooltipPlacement8,
			}
		}
		typeVar8 := new(shared.SequenceAttributeAttributeWithCompositeIDType)
		if !r.SequenceAttribute.Type.IsUnknown() && !r.SequenceAttribute.Type.IsNull() {
			*typeVar8 = shared.SequenceAttributeAttributeWithCompositeIDType(r.SequenceAttribute.Type.ValueString())
		} else {
			typeVar8 = nil
		}
		prefix := new(string)
		if !r.SequenceAttribute.Prefix.IsUnknown() && !r.SequenceAttribute.Prefix.IsNull() {
			*prefix = r.SequenceAttribute.Prefix.ValueString()
		} else {
			prefix = nil
		}
		startNumber := new(int64)
		if !r.SequenceAttribute.StartNumber.IsUnknown() && !r.SequenceAttribute.StartNumber.IsNull() {
			*startNumber = r.SequenceAttribute.StartNumber.ValueInt64()
		} else {
			startNumber = nil
		}
		attributeWithCompositeIDSequenceAttributeInput = &shared.AttributeWithCompositeIDSequenceAttributeInput{
			Name:                     name16,
			Label:                    label8,
			Placeholder:              placeholder8,
			Hidden:                   hidden8,
			ShowInTable:              showInTable8,
			Sortable:                 sortable8,
			Required:                 required8,
			Readonly:                 readonly8,
			Deprecated:               deprecated8,
			DefaultValue:             defaultValue8,
			Group:                    group8,
			Order:                    order8,
			Layout:                   layout8,
			HideLabel:                hideLabel8,
			Icon:                     icon8,
			RenderCondition:          renderCondition8,
			Purpose:                  purpose8,
			Constraints:              constraints8,
			FeatureFlag:              featureFlag8,
			SettingsFlag:             settingsFlag8,
			ValueFormatter:           valueFormatter8,
			PreviewValueFormatter:    previewValueFormatter8,
			EntityBuilderDisableEdit: entityBuilderDisableEdit8,
			Protected:                protected8,
			InfoHelpers:              infoHelpers8,
			Type:                     typeVar8,
			Prefix:                   prefix,
			StartNumber:              startNumber,
		}
	}
	if attributeWithCompositeIDSequenceAttributeInput != nil {
		out = shared.AttributeWithCompositeIDInput{
			AttributeWithCompositeIDSequenceAttributeInput: attributeWithCompositeIDSequenceAttributeInput,
		}
	}
	var attributeWithCompositeIDRelationAttributeInput *shared.AttributeWithCompositeIDRelationAttributeInput
	if r.RelationAttribute != nil {
		name18 := r.RelationAttribute.Name.ValueString()
		label9 := r.RelationAttribute.Label.ValueString()
		placeholder9 := new(string)
		if !r.RelationAttribute.Placeholder.IsUnknown() && !r.RelationAttribute.Placeholder.IsNull() {
			*placeholder9 = r.RelationAttribute.Placeholder.ValueString()
		} else {
			placeholder9 = nil
		}
		hidden9 := new(bool)
		if !r.RelationAttribute.Hidden.IsUnknown() && !r.RelationAttribute.Hidden.IsNull() {
			*hidden9 = r.RelationAttribute.Hidden.ValueBool()
		} else {
			hidden9 = nil
		}
		showInTable9 := new(bool)
		if !r.RelationAttribute.ShowInTable.IsUnknown() && !r.RelationAttribute.ShowInTable.IsNull() {
			*showInTable9 = r.RelationAttribute.ShowInTable.ValueBool()
		} else {
			showInTable9 = nil
		}
		sortable9 := new(bool)
		if !r.RelationAttribute.Sortable.IsUnknown() && !r.RelationAttribute.Sortable.IsNull() {
			*sortable9 = r.RelationAttribute.Sortable.ValueBool()
		} else {
			sortable9 = nil
		}
		required9 := new(bool)
		if !r.RelationAttribute.Required.IsUnknown() && !r.RelationAttribute.Required.IsNull() {
			*required9 = r.RelationAttribute.Required.ValueBool()
		} else {
			required9 = nil
		}
		readonly9 := new(bool)
		if !r.RelationAttribute.Readonly.IsUnknown() && !r.RelationAttribute.Readonly.IsNull() {
			*readonly9 = r.RelationAttribute.Readonly.ValueBool()
		} else {
			readonly9 = nil
		}
		deprecated9 := new(bool)
		if !r.RelationAttribute.Deprecated.IsUnknown() && !r.RelationAttribute.Deprecated.IsNull() {
			*deprecated9 = r.RelationAttribute.Deprecated.ValueBool()
		} else {
			deprecated9 = nil
		}
		var defaultValue9 interface{}
		if !r.RelationAttribute.DefaultValue.IsUnknown() && !r.RelationAttribute.DefaultValue.IsNull() {
			_ = json.Unmarshal([]byte(r.RelationAttribute.DefaultValue.ValueString()), &defaultValue9)
		}
		group9 := new(string)
		if !r.RelationAttribute.Group.IsUnknown() && !r.RelationAttribute.Group.IsNull() {
			*group9 = r.RelationAttribute.Group.ValueString()
		} else {
			group9 = nil
		}
		order9 := new(int64)
		if !r.RelationAttribute.Order.IsUnknown() && !r.RelationAttribute.Order.IsNull() {
			*order9 = r.RelationAttribute.Order.ValueInt64()
		} else {
			order9 = nil
		}
		layout9 := new(string)
		if !r.RelationAttribute.Layout.IsUnknown() && !r.RelationAttribute.Layout.IsNull() {
			*layout9 = r.RelationAttribute.Layout.ValueString()
		} else {
			layout9 = nil
		}
		hideLabel9 := new(bool)
		if !r.RelationAttribute.HideLabel.IsUnknown() && !r.RelationAttribute.HideLabel.IsNull() {
			*hideLabel9 = r.RelationAttribute.HideLabel.ValueBool()
		} else {
			hideLabel9 = nil
		}
		icon9 := new(string)
		if !r.RelationAttribute.Icon.IsUnknown() && !r.RelationAttribute.Icon.IsNull() {
			*icon9 = r.RelationAttribute.Icon.ValueString()
		} else {
			icon9 = nil
		}
		renderCondition9 := new(string)
		if !r.RelationAttribute.RenderCondition.IsUnknown() && !r.RelationAttribute.RenderCondition.IsNull() {
			*renderCondition9 = r.RelationAttribute.RenderCondition.ValueString()
		} else {
			renderCondition9 = nil
		}
		var purpose9 []string = []string{}
		for _, purposeItem9 := range r.RelationAttribute.Purpose {
			purpose9 = append(purpose9, purposeItem9.ValueString())
		}
		var constraints9 *shared.RelationAttributeAttributeWithCompositeIDConstraints
		if r.RelationAttribute.Constraints != nil {
			constraints9 = &shared.RelationAttributeAttributeWithCompositeIDConstraints{}
		}
		featureFlag9 := new(string)
		if !r.RelationAttribute.FeatureFlag.IsUnknown() && !r.RelationAttribute.FeatureFlag.IsNull() {
			*featureFlag9 = r.RelationAttribute.FeatureFlag.ValueString()
		} else {
			featureFlag9 = nil
		}
		var settingsFlag9 []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem9 := range r.RelationAttribute.SettingsFlag {
			name19 := new(string)
			if !settingsFlagItem9.Name.IsUnknown() && !settingsFlagItem9.Name.IsNull() {
				*name19 = settingsFlagItem9.Name.ValueString()
			} else {
				name19 = nil
			}
			enabled9 := new(bool)
			if !settingsFlagItem9.Enabled.IsUnknown() && !settingsFlagItem9.Enabled.IsNull() {
				*enabled9 = settingsFlagItem9.Enabled.ValueBool()
			} else {
				enabled9 = nil
			}
			settingsFlag9 = append(settingsFlag9, shared.SettingFlag{
				Name:    name19,
				Enabled: enabled9,
			})
		}
		valueFormatter9 := new(string)
		if !r.RelationAttribute.ValueFormatter.IsUnknown() && !r.RelationAttribute.ValueFormatter.IsNull() {
			*valueFormatter9 = r.RelationAttribute.ValueFormatter.ValueString()
		} else {
			valueFormatter9 = nil
		}
		previewValueFormatter9 := new(string)
		if !r.RelationAttribute.PreviewValueFormatter.IsUnknown() && !r.RelationAttribute.PreviewValueFormatter.IsNull() {
			*previewValueFormatter9 = r.RelationAttribute.PreviewValueFormatter.ValueString()
		} else {
			previewValueFormatter9 = nil
		}
		entityBuilderDisableEdit9 := new(bool)
		if !r.RelationAttribute.EntityBuilderDisableEdit.IsUnknown() && !r.RelationAttribute.EntityBuilderDisableEdit.IsNull() {
			*entityBuilderDisableEdit9 = r.RelationAttribute.EntityBuilderDisableEdit.ValueBool()
		} else {
			entityBuilderDisableEdit9 = nil
		}
		protected9 := new(bool)
		if !r.RelationAttribute.Protected.IsUnknown() && !r.RelationAttribute.Protected.IsNull() {
			*protected9 = r.RelationAttribute.Protected.ValueBool()
		} else {
			protected9 = nil
		}
		var infoHelpers9 *shared.RelationAttributeAttributeWithCompositeIDInfoHelpers
		if r.RelationAttribute.InfoHelpers != nil {
			hintText9 := new(string)
			if !r.RelationAttribute.InfoHelpers.HintText.IsUnknown() && !r.RelationAttribute.InfoHelpers.HintText.IsNull() {
				*hintText9 = r.RelationAttribute.InfoHelpers.HintText.ValueString()
			} else {
				hintText9 = nil
			}
			hintTextKey9 := new(string)
			if !r.RelationAttribute.InfoHelpers.HintTextKey.IsUnknown() && !r.RelationAttribute.InfoHelpers.HintTextKey.IsNull() {
				*hintTextKey9 = r.RelationAttribute.InfoHelpers.HintTextKey.ValueString()
			} else {
				hintTextKey9 = nil
			}
			hintCustomComponent9 := new(string)
			if !r.RelationAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !r.RelationAttribute.InfoHelpers.HintCustomComponent.IsNull() {
				*hintCustomComponent9 = r.RelationAttribute.InfoHelpers.HintCustomComponent.ValueString()
			} else {
				hintCustomComponent9 = nil
			}
			hintTooltipPlacement9 := new(string)
			if !r.RelationAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !r.RelationAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
				*hintTooltipPlacement9 = r.RelationAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
			} else {
				hintTooltipPlacement9 = nil
			}
			infoHelpers9 = &shared.RelationAttributeAttributeWithCompositeIDInfoHelpers{
				HintText:             hintText9,
				HintTextKey:          hintTextKey9,
				HintCustomComponent:  hintCustomComponent9,
				HintTooltipPlacement: hintTooltipPlacement9,
			}
		}
		typeVar9 := new(shared.RelationAttributeAttributeWithCompositeIDType)
		if !r.RelationAttribute.Type.IsUnknown() && !r.RelationAttribute.Type.IsNull() {
			*typeVar9 = shared.RelationAttributeAttributeWithCompositeIDType(r.RelationAttribute.Type.ValueString())
		} else {
			typeVar9 = nil
		}
		relationType := new(shared.RelationAttributeRelationType)
		if !r.RelationAttribute.RelationType.IsUnknown() && !r.RelationAttribute.RelationType.IsNull() {
			*relationType = shared.RelationAttributeRelationType(r.RelationAttribute.RelationType.ValueString())
		} else {
			relationType = nil
		}
		reverseAttributes := make(map[string]string)
		for reverseAttributesKey, reverseAttributesValue := range r.RelationAttribute.ReverseAttributes {
			reverseAttributesInst := reverseAttributesValue.ValueString()
			reverseAttributes[reverseAttributesKey] = reverseAttributesInst
		}
		relationAffinityMode := new(shared.RelationAttributeRelationAffinityMode)
		if !r.RelationAttribute.RelationAffinityMode.IsUnknown() && !r.RelationAttribute.RelationAffinityMode.IsNull() {
			*relationAffinityMode = shared.RelationAttributeRelationAffinityMode(r.RelationAttribute.RelationAffinityMode.ValueString())
		} else {
			relationAffinityMode = nil
		}
		enableRelationPicker := new(bool)
		if !r.RelationAttribute.EnableRelationPicker.IsUnknown() && !r.RelationAttribute.EnableRelationPicker.IsNull() {
			*enableRelationPicker = r.RelationAttribute.EnableRelationPicker.ValueBool()
		} else {
			enableRelationPicker = nil
		}
		editMode := new(shared.RelationAttributeEditMode)
		if !r.RelationAttribute.EditMode.IsUnknown() && !r.RelationAttribute.EditMode.IsNull() {
			*editMode = shared.RelationAttributeEditMode(r.RelationAttribute.EditMode.ValueString())
		} else {
			editMode = nil
		}
		detailsViewModeEnabled := new(bool)
		if !r.RelationAttribute.DetailsViewModeEnabled.IsUnknown() && !r.RelationAttribute.DetailsViewModeEnabled.IsNull() {
			*detailsViewModeEnabled = r.RelationAttribute.DetailsViewModeEnabled.ValueBool()
		} else {
			detailsViewModeEnabled = nil
		}
		var actions []shared.RelationAttributeActions = []shared.RelationAttributeActions{}
		for _, actionsItem := range r.RelationAttribute.Actions {
			actionType := new(shared.RelationAttributeActionType)
			if !actionsItem.ActionType.IsUnknown() && !actionsItem.ActionType.IsNull() {
				*actionType = shared.RelationAttributeActionType(actionsItem.ActionType.ValueString())
			} else {
				actionType = nil
			}
			label10 := new(string)
			if !actionsItem.Label.IsUnknown() && !actionsItem.Label.IsNull() {
				*label10 = actionsItem.Label.ValueString()
			} else {
				label10 = nil
			}
			defaultVar := new(bool)
			if !actionsItem.Default.IsUnknown() && !actionsItem.Default.IsNull() {
				*defaultVar = actionsItem.Default.ValueBool()
			} else {
				defaultVar = nil
			}
			featureFlag10 := new(string)
			if !actionsItem.FeatureFlag.IsUnknown() && !actionsItem.FeatureFlag.IsNull() {
				*featureFlag10 = actionsItem.FeatureFlag.ValueString()
			} else {
				featureFlag10 = nil
			}
			var settingsFlag10 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem10 := range actionsItem.SettingsFlag {
				name20 := new(string)
				if !settingsFlagItem10.Name.IsUnknown() && !settingsFlagItem10.Name.IsNull() {
					*name20 = settingsFlagItem10.Name.ValueString()
				} else {
					name20 = nil
				}
				enabled10 := new(bool)
				if !settingsFlagItem10.Enabled.IsUnknown() && !settingsFlagItem10.Enabled.IsNull() {
					*enabled10 = settingsFlagItem10.Enabled.ValueBool()
				} else {
					enabled10 = nil
				}
				settingsFlag10 = append(settingsFlag10, shared.SettingFlag{
					Name:    name20,
					Enabled: enabled10,
				})
			}
			var newEntityItem *shared.RelationAttributeNewEntityItem
			if actionsItem.NewEntityItem != nil {
				id := actionsItem.NewEntityItem.ID.ValueString()
				org := actionsItem.NewEntityItem.Org.ValueString()
				var owners []shared.EntityOwner = []shared.EntityOwner{}
				for _, ownersItem := range actionsItem.NewEntityItem.Owners {
					orgID := ownersItem.OrgID.ValueString()
					userID := new(string)
					if !ownersItem.UserID.IsUnknown() && !ownersItem.UserID.IsNull() {
						*userID = ownersItem.UserID.ValueString()
					} else {
						userID = nil
					}
					owners = append(owners, shared.EntityOwner{
						OrgID:  orgID,
						UserID: userID,
					})
				}
				schema := actionsItem.NewEntityItem.Schema.ValueString()
				title3 := new(string)
				if !actionsItem.NewEntityItem.Title.IsUnknown() && !actionsItem.NewEntityItem.Title.IsNull() {
					*title3 = actionsItem.NewEntityItem.Title.ValueString()
				} else {
					title3 = nil
				}
				var tags []string = []string{}
				for _, tagsItem := range actionsItem.NewEntityItem.Tags {
					tags = append(tags, tagsItem.ValueString())
				}
				createdAt := new(time.Time)
				if !actionsItem.NewEntityItem.CreatedAt.IsUnknown() && !actionsItem.NewEntityItem.CreatedAt.IsNull() {
					*createdAt, _ = time.Parse(time.RFC3339Nano, actionsItem.NewEntityItem.CreatedAt.ValueString())
				} else {
					createdAt = nil
				}
				updatedAt := new(time.Time)
				if !actionsItem.NewEntityItem.UpdatedAt.IsUnknown() && !actionsItem.NewEntityItem.UpdatedAt.IsNull() {
					*updatedAt, _ = time.Parse(time.RFC3339Nano, actionsItem.NewEntityItem.UpdatedAt.ValueString())
				} else {
					updatedAt = nil
				}
				var acl *shared.EntityACL
				if actionsItem.NewEntityItem.ACL != nil {
					var view []string = []string{}
					for _, viewItem := range actionsItem.NewEntityItem.ACL.View {
						view = append(view, viewItem.ValueString())
					}
					var edit []string = []string{}
					for _, editItem := range actionsItem.NewEntityItem.ACL.Edit {
						edit = append(edit, editItem.ValueString())
					}
					var delete []string = []string{}
					for _, deleteItem := range actionsItem.NewEntityItem.ACL.Delete {
						delete = append(delete, deleteItem.ValueString())
					}
					var additionalProperties interface{}
					if !actionsItem.NewEntityItem.ACL.AdditionalProperties.IsUnknown() && !actionsItem.NewEntityItem.ACL.AdditionalProperties.IsNull() {
						_ = json.Unmarshal([]byte(actionsItem.NewEntityItem.ACL.AdditionalProperties.ValueString()), &additionalProperties)
					}
					acl = &shared.EntityACL{
						View:                 view,
						Edit:                 edit,
						Delete:               delete,
						AdditionalProperties: additionalProperties,
					}
				}
				var additionalProperties1 interface{}
				if !actionsItem.NewEntityItem.AdditionalProperties.IsUnknown() && !actionsItem.NewEntityItem.AdditionalProperties.IsNull() {
					_ = json.Unmarshal([]byte(actionsItem.NewEntityItem.AdditionalProperties.ValueString()), &additionalProperties1)
				}
				newEntityItem = &shared.RelationAttributeNewEntityItem{
					ID:                   id,
					Org:                  org,
					Owners:               owners,
					Schema:               schema,
					Title:                title3,
					Tags:                 tags,
					CreatedAt:            createdAt,
					UpdatedAt:            updatedAt,
					ACL:                  acl,
					AdditionalProperties: additionalProperties1,
				}
			}
			actions = append(actions, shared.RelationAttributeActions{
				ActionType:    actionType,
				Label:         label10,
				Default:       defaultVar,
				FeatureFlag:   featureFlag10,
				SettingsFlag:  settingsFlag10,
				NewEntityItem: newEntityItem,
			})
		}
		drawerSize := new(shared.RelationAttributeDrawerSize)
		if !r.RelationAttribute.DrawerSize.IsUnknown() && !r.RelationAttribute.DrawerSize.IsNull() {
			*drawerSize = shared.RelationAttributeDrawerSize(r.RelationAttribute.DrawerSize.ValueString())
		} else {
			drawerSize = nil
		}
		var summaryFields []shared.RelationAttributeSummaryFields = []shared.RelationAttributeSummaryFields{}
		for _, summaryFieldsItem := range r.RelationAttribute.SummaryFields {
			if !summaryFieldsItem.Str.IsUnknown() && !summaryFieldsItem.Str.IsNull() {
				str3 := summaryFieldsItem.Str.ValueString()
				summaryFields = append(summaryFields, shared.RelationAttributeSummaryFields{
					Str: &str3,
				})
			}
			if summaryFieldsItem.SummaryField != nil {
				field := new(string)
				if !summaryFieldsItem.SummaryField.Field.IsUnknown() && !summaryFieldsItem.SummaryField.Field.IsNull() {
					*field = summaryFieldsItem.SummaryField.Field.ValueString()
				} else {
					field = nil
				}
				displayAs := new(string)
				if !summaryFieldsItem.SummaryField.DisplayAs.IsUnknown() && !summaryFieldsItem.SummaryField.DisplayAs.IsNull() {
					*displayAs = summaryFieldsItem.SummaryField.DisplayAs.ValueString()
				} else {
					displayAs = nil
				}
				summaryField := shared.SummaryField{
					Field:     field,
					DisplayAs: displayAs,
				}
				summaryFields = append(summaryFields, shared.RelationAttributeSummaryFields{
					SummaryField: &summaryField,
				})
			}
		}
		hasPrimary := new(bool)
		if !r.RelationAttribute.HasPrimary.IsUnknown() && !r.RelationAttribute.HasPrimary.IsNull() {
			*hasPrimary = r.RelationAttribute.HasPrimary.ValueBool()
		} else {
			hasPrimary = nil
		}
		var allowedSchemas []string = []string{}
		for _, allowedSchemasItem := range r.RelationAttribute.AllowedSchemas {
			allowedSchemas = append(allowedSchemas, allowedSchemasItem.ValueString())
		}
		enableRelationTags := new(bool)
		if !r.RelationAttribute.EnableRelationTags.IsUnknown() && !r.RelationAttribute.EnableRelationTags.IsNull() {
			*enableRelationTags = r.RelationAttribute.EnableRelationTags.ValueBool()
		} else {
			enableRelationTags = nil
		}
		addButtonLabel := new(string)
		if !r.RelationAttribute.AddButtonLabel.IsUnknown() && !r.RelationAttribute.AddButtonLabel.IsNull() {
			*addButtonLabel = r.RelationAttribute.AddButtonLabel.ValueString()
		} else {
			addButtonLabel = nil
		}
		searchPlaceholder := new(string)
		if !r.RelationAttribute.SearchPlaceholder.IsUnknown() && !r.RelationAttribute.SearchPlaceholder.IsNull() {
			*searchPlaceholder = r.RelationAttribute.SearchPlaceholder.ValueString()
		} else {
			searchPlaceholder = nil
		}
		attributeWithCompositeIDRelationAttributeInput = &shared.AttributeWithCompositeIDRelationAttributeInput{
			Name:                     name18,
			Label:                    label9,
			Placeholder:              placeholder9,
			Hidden:                   hidden9,
			ShowInTable:              showInTable9,
			Sortable:                 sortable9,
			Required:                 required9,
			Readonly:                 readonly9,
			Deprecated:               deprecated9,
			DefaultValue:             defaultValue9,
			Group:                    group9,
			Order:                    order9,
			Layout:                   layout9,
			HideLabel:                hideLabel9,
			Icon:                     icon9,
			RenderCondition:          renderCondition9,
			Purpose:                  purpose9,
			Constraints:              constraints9,
			FeatureFlag:              featureFlag9,
			SettingsFlag:             settingsFlag9,
			ValueFormatter:           valueFormatter9,
			PreviewValueFormatter:    previewValueFormatter9,
			EntityBuilderDisableEdit: entityBuilderDisableEdit9,
			Protected:                protected9,
			InfoHelpers:              infoHelpers9,
			Type:                     typeVar9,
			RelationType:             relationType,
			ReverseAttributes:        reverseAttributes,
			RelationAffinityMode:     relationAffinityMode,
			EnableRelationPicker:     enableRelationPicker,
			EditMode:                 editMode,
			DetailsViewModeEnabled:   detailsViewModeEnabled,
			Actions:                  actions,
			DrawerSize:               drawerSize,
			SummaryFields:            summaryFields,
			HasPrimary:               hasPrimary,
			AllowedSchemas:           allowedSchemas,
			EnableRelationTags:       enableRelationTags,
			AddButtonLabel:           addButtonLabel,
			SearchPlaceholder:        searchPlaceholder,
		}
	}
	if attributeWithCompositeIDRelationAttributeInput != nil {
		out = shared.AttributeWithCompositeIDInput{
			AttributeWithCompositeIDRelationAttributeInput: attributeWithCompositeIDRelationAttributeInput,
		}
	}
	var attributeWithCompositeIDUserRelationAttributeInput *shared.AttributeWithCompositeIDUserRelationAttributeInput
	if r.UserRelationAttribute != nil {
		name21 := r.UserRelationAttribute.Name.ValueString()
		label11 := r.UserRelationAttribute.Label.ValueString()
		placeholder10 := new(string)
		if !r.UserRelationAttribute.Placeholder.IsUnknown() && !r.UserRelationAttribute.Placeholder.IsNull() {
			*placeholder10 = r.UserRelationAttribute.Placeholder.ValueString()
		} else {
			placeholder10 = nil
		}
		hidden10 := new(bool)
		if !r.UserRelationAttribute.Hidden.IsUnknown() && !r.UserRelationAttribute.Hidden.IsNull() {
			*hidden10 = r.UserRelationAttribute.Hidden.ValueBool()
		} else {
			hidden10 = nil
		}
		showInTable10 := new(bool)
		if !r.UserRelationAttribute.ShowInTable.IsUnknown() && !r.UserRelationAttribute.ShowInTable.IsNull() {
			*showInTable10 = r.UserRelationAttribute.ShowInTable.ValueBool()
		} else {
			showInTable10 = nil
		}
		sortable10 := new(bool)
		if !r.UserRelationAttribute.Sortable.IsUnknown() && !r.UserRelationAttribute.Sortable.IsNull() {
			*sortable10 = r.UserRelationAttribute.Sortable.ValueBool()
		} else {
			sortable10 = nil
		}
		required10 := new(bool)
		if !r.UserRelationAttribute.Required.IsUnknown() && !r.UserRelationAttribute.Required.IsNull() {
			*required10 = r.UserRelationAttribute.Required.ValueBool()
		} else {
			required10 = nil
		}
		readonly10 := new(bool)
		if !r.UserRelationAttribute.Readonly.IsUnknown() && !r.UserRelationAttribute.Readonly.IsNull() {
			*readonly10 = r.UserRelationAttribute.Readonly.ValueBool()
		} else {
			readonly10 = nil
		}
		deprecated10 := new(bool)
		if !r.UserRelationAttribute.Deprecated.IsUnknown() && !r.UserRelationAttribute.Deprecated.IsNull() {
			*deprecated10 = r.UserRelationAttribute.Deprecated.ValueBool()
		} else {
			deprecated10 = nil
		}
		var defaultValue10 interface{}
		if !r.UserRelationAttribute.DefaultValue.IsUnknown() && !r.UserRelationAttribute.DefaultValue.IsNull() {
			_ = json.Unmarshal([]byte(r.UserRelationAttribute.DefaultValue.ValueString()), &defaultValue10)
		}
		group10 := new(string)
		if !r.UserRelationAttribute.Group.IsUnknown() && !r.UserRelationAttribute.Group.IsNull() {
			*group10 = r.UserRelationAttribute.Group.ValueString()
		} else {
			group10 = nil
		}
		order10 := new(int64)
		if !r.UserRelationAttribute.Order.IsUnknown() && !r.UserRelationAttribute.Order.IsNull() {
			*order10 = r.UserRelationAttribute.Order.ValueInt64()
		} else {
			order10 = nil
		}
		layout10 := new(string)
		if !r.UserRelationAttribute.Layout.IsUnknown() && !r.UserRelationAttribute.Layout.IsNull() {
			*layout10 = r.UserRelationAttribute.Layout.ValueString()
		} else {
			layout10 = nil
		}
		hideLabel10 := new(bool)
		if !r.UserRelationAttribute.HideLabel.IsUnknown() && !r.UserRelationAttribute.HideLabel.IsNull() {
			*hideLabel10 = r.UserRelationAttribute.HideLabel.ValueBool()
		} else {
			hideLabel10 = nil
		}
		icon10 := new(string)
		if !r.UserRelationAttribute.Icon.IsUnknown() && !r.UserRelationAttribute.Icon.IsNull() {
			*icon10 = r.UserRelationAttribute.Icon.ValueString()
		} else {
			icon10 = nil
		}
		renderCondition10 := new(string)
		if !r.UserRelationAttribute.RenderCondition.IsUnknown() && !r.UserRelationAttribute.RenderCondition.IsNull() {
			*renderCondition10 = r.UserRelationAttribute.RenderCondition.ValueString()
		} else {
			renderCondition10 = nil
		}
		var purpose10 []string = []string{}
		for _, purposeItem10 := range r.UserRelationAttribute.Purpose {
			purpose10 = append(purpose10, purposeItem10.ValueString())
		}
		var constraints10 *shared.UserRelationAttributeAttributeWithCompositeIDConstraints
		if r.UserRelationAttribute.Constraints != nil {
			constraints10 = &shared.UserRelationAttributeAttributeWithCompositeIDConstraints{}
		}
		featureFlag11 := new(string)
		if !r.UserRelationAttribute.FeatureFlag.IsUnknown() && !r.UserRelationAttribute.FeatureFlag.IsNull() {
			*featureFlag11 = r.UserRelationAttribute.FeatureFlag.ValueString()
		} else {
			featureFlag11 = nil
		}
		var settingsFlag11 []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem11 := range r.UserRelationAttribute.SettingsFlag {
			name22 := new(string)
			if !settingsFlagItem11.Name.IsUnknown() && !settingsFlagItem11.Name.IsNull() {
				*name22 = settingsFlagItem11.Name.ValueString()
			} else {
				name22 = nil
			}
			enabled11 := new(bool)
			if !settingsFlagItem11.Enabled.IsUnknown() && !settingsFlagItem11.Enabled.IsNull() {
				*enabled11 = settingsFlagItem11.Enabled.ValueBool()
			} else {
				enabled11 = nil
			}
			settingsFlag11 = append(settingsFlag11, shared.SettingFlag{
				Name:    name22,
				Enabled: enabled11,
			})
		}
		valueFormatter10 := new(string)
		if !r.UserRelationAttribute.ValueFormatter.IsUnknown() && !r.UserRelationAttribute.ValueFormatter.IsNull() {
			*valueFormatter10 = r.UserRelationAttribute.ValueFormatter.ValueString()
		} else {
			valueFormatter10 = nil
		}
		previewValueFormatter10 := new(string)
		if !r.UserRelationAttribute.PreviewValueFormatter.IsUnknown() && !r.UserRelationAttribute.PreviewValueFormatter.IsNull() {
			*previewValueFormatter10 = r.UserRelationAttribute.PreviewValueFormatter.ValueString()
		} else {
			previewValueFormatter10 = nil
		}
		entityBuilderDisableEdit10 := new(bool)
		if !r.UserRelationAttribute.EntityBuilderDisableEdit.IsUnknown() && !r.UserRelationAttribute.EntityBuilderDisableEdit.IsNull() {
			*entityBuilderDisableEdit10 = r.UserRelationAttribute.EntityBuilderDisableEdit.ValueBool()
		} else {
			entityBuilderDisableEdit10 = nil
		}
		protected10 := new(bool)
		if !r.UserRelationAttribute.Protected.IsUnknown() && !r.UserRelationAttribute.Protected.IsNull() {
			*protected10 = r.UserRelationAttribute.Protected.ValueBool()
		} else {
			protected10 = nil
		}
		var infoHelpers10 *shared.UserRelationAttributeAttributeWithCompositeIDInfoHelpers
		if r.UserRelationAttribute.InfoHelpers != nil {
			hintText10 := new(string)
			if !r.UserRelationAttribute.InfoHelpers.HintText.IsUnknown() && !r.UserRelationAttribute.InfoHelpers.HintText.IsNull() {
				*hintText10 = r.UserRelationAttribute.InfoHelpers.HintText.ValueString()
			} else {
				hintText10 = nil
			}
			hintTextKey10 := new(string)
			if !r.UserRelationAttribute.InfoHelpers.HintTextKey.IsUnknown() && !r.UserRelationAttribute.InfoHelpers.HintTextKey.IsNull() {
				*hintTextKey10 = r.UserRelationAttribute.InfoHelpers.HintTextKey.ValueString()
			} else {
				hintTextKey10 = nil
			}
			hintCustomComponent10 := new(string)
			if !r.UserRelationAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !r.UserRelationAttribute.InfoHelpers.HintCustomComponent.IsNull() {
				*hintCustomComponent10 = r.UserRelationAttribute.InfoHelpers.HintCustomComponent.ValueString()
			} else {
				hintCustomComponent10 = nil
			}
			hintTooltipPlacement10 := new(string)
			if !r.UserRelationAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !r.UserRelationAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
				*hintTooltipPlacement10 = r.UserRelationAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
			} else {
				hintTooltipPlacement10 = nil
			}
			infoHelpers10 = &shared.UserRelationAttributeAttributeWithCompositeIDInfoHelpers{
				HintText:             hintText10,
				HintTextKey:          hintTextKey10,
				HintCustomComponent:  hintCustomComponent10,
				HintTooltipPlacement: hintTooltipPlacement10,
			}
		}
		typeVar10 := new(shared.UserRelationAttributeAttributeWithCompositeIDType)
		if !r.UserRelationAttribute.Type.IsUnknown() && !r.UserRelationAttribute.Type.IsNull() {
			*typeVar10 = shared.UserRelationAttributeAttributeWithCompositeIDType(r.UserRelationAttribute.Type.ValueString())
		} else {
			typeVar10 = nil
		}
		multiple := new(bool)
		if !r.UserRelationAttribute.Multiple.IsUnknown() && !r.UserRelationAttribute.Multiple.IsNull() {
			*multiple = r.UserRelationAttribute.Multiple.ValueBool()
		} else {
			multiple = nil
		}
		attributeWithCompositeIDUserRelationAttributeInput = &shared.AttributeWithCompositeIDUserRelationAttributeInput{
			Name:                     name21,
			Label:                    label11,
			Placeholder:              placeholder10,
			Hidden:                   hidden10,
			ShowInTable:              showInTable10,
			Sortable:                 sortable10,
			Required:                 required10,
			Readonly:                 readonly10,
			Deprecated:               deprecated10,
			DefaultValue:             defaultValue10,
			Group:                    group10,
			Order:                    order10,
			Layout:                   layout10,
			HideLabel:                hideLabel10,
			Icon:                     icon10,
			RenderCondition:          renderCondition10,
			Purpose:                  purpose10,
			Constraints:              constraints10,
			FeatureFlag:              featureFlag11,
			SettingsFlag:             settingsFlag11,
			ValueFormatter:           valueFormatter10,
			PreviewValueFormatter:    previewValueFormatter10,
			EntityBuilderDisableEdit: entityBuilderDisableEdit10,
			Protected:                protected10,
			InfoHelpers:              infoHelpers10,
			Type:                     typeVar10,
			Multiple:                 multiple,
		}
	}
	if attributeWithCompositeIDUserRelationAttributeInput != nil {
		out = shared.AttributeWithCompositeIDInput{
			AttributeWithCompositeIDUserRelationAttributeInput: attributeWithCompositeIDUserRelationAttributeInput,
		}
	}
	var attributeWithCompositeIDAddressRelationAttributeInput *shared.AttributeWithCompositeIDAddressRelationAttributeInput
	if r.AddressRelationAttribute != nil {
		name23 := r.AddressRelationAttribute.Name.ValueString()
		label12 := r.AddressRelationAttribute.Label.ValueString()
		placeholder11 := new(string)
		if !r.AddressRelationAttribute.Placeholder.IsUnknown() && !r.AddressRelationAttribute.Placeholder.IsNull() {
			*placeholder11 = r.AddressRelationAttribute.Placeholder.ValueString()
		} else {
			placeholder11 = nil
		}
		hidden11 := new(bool)
		if !r.AddressRelationAttribute.Hidden.IsUnknown() && !r.AddressRelationAttribute.Hidden.IsNull() {
			*hidden11 = r.AddressRelationAttribute.Hidden.ValueBool()
		} else {
			hidden11 = nil
		}
		showInTable11 := new(bool)
		if !r.AddressRelationAttribute.ShowInTable.IsUnknown() && !r.AddressRelationAttribute.ShowInTable.IsNull() {
			*showInTable11 = r.AddressRelationAttribute.ShowInTable.ValueBool()
		} else {
			showInTable11 = nil
		}
		sortable11 := new(bool)
		if !r.AddressRelationAttribute.Sortable.IsUnknown() && !r.AddressRelationAttribute.Sortable.IsNull() {
			*sortable11 = r.AddressRelationAttribute.Sortable.ValueBool()
		} else {
			sortable11 = nil
		}
		required11 := new(bool)
		if !r.AddressRelationAttribute.Required.IsUnknown() && !r.AddressRelationAttribute.Required.IsNull() {
			*required11 = r.AddressRelationAttribute.Required.ValueBool()
		} else {
			required11 = nil
		}
		readonly11 := new(bool)
		if !r.AddressRelationAttribute.Readonly.IsUnknown() && !r.AddressRelationAttribute.Readonly.IsNull() {
			*readonly11 = r.AddressRelationAttribute.Readonly.ValueBool()
		} else {
			readonly11 = nil
		}
		deprecated11 := new(bool)
		if !r.AddressRelationAttribute.Deprecated.IsUnknown() && !r.AddressRelationAttribute.Deprecated.IsNull() {
			*deprecated11 = r.AddressRelationAttribute.Deprecated.ValueBool()
		} else {
			deprecated11 = nil
		}
		var defaultValue11 interface{}
		if !r.AddressRelationAttribute.DefaultValue.IsUnknown() && !r.AddressRelationAttribute.DefaultValue.IsNull() {
			_ = json.Unmarshal([]byte(r.AddressRelationAttribute.DefaultValue.ValueString()), &defaultValue11)
		}
		group11 := new(string)
		if !r.AddressRelationAttribute.Group.IsUnknown() && !r.AddressRelationAttribute.Group.IsNull() {
			*group11 = r.AddressRelationAttribute.Group.ValueString()
		} else {
			group11 = nil
		}
		order11 := new(int64)
		if !r.AddressRelationAttribute.Order.IsUnknown() && !r.AddressRelationAttribute.Order.IsNull() {
			*order11 = r.AddressRelationAttribute.Order.ValueInt64()
		} else {
			order11 = nil
		}
		layout11 := new(string)
		if !r.AddressRelationAttribute.Layout.IsUnknown() && !r.AddressRelationAttribute.Layout.IsNull() {
			*layout11 = r.AddressRelationAttribute.Layout.ValueString()
		} else {
			layout11 = nil
		}
		hideLabel11 := new(bool)
		if !r.AddressRelationAttribute.HideLabel.IsUnknown() && !r.AddressRelationAttribute.HideLabel.IsNull() {
			*hideLabel11 = r.AddressRelationAttribute.HideLabel.ValueBool()
		} else {
			hideLabel11 = nil
		}
		icon11 := new(string)
		if !r.AddressRelationAttribute.Icon.IsUnknown() && !r.AddressRelationAttribute.Icon.IsNull() {
			*icon11 = r.AddressRelationAttribute.Icon.ValueString()
		} else {
			icon11 = nil
		}
		renderCondition11 := new(string)
		if !r.AddressRelationAttribute.RenderCondition.IsUnknown() && !r.AddressRelationAttribute.RenderCondition.IsNull() {
			*renderCondition11 = r.AddressRelationAttribute.RenderCondition.ValueString()
		} else {
			renderCondition11 = nil
		}
		var purpose11 []string = []string{}
		for _, purposeItem11 := range r.AddressRelationAttribute.Purpose {
			purpose11 = append(purpose11, purposeItem11.ValueString())
		}
		var constraints11 *shared.AddressRelationAttributeAttributeWithCompositeIDConstraints
		if r.AddressRelationAttribute.Constraints != nil {
			constraints11 = &shared.AddressRelationAttributeAttributeWithCompositeIDConstraints{}
		}
		featureFlag12 := new(string)
		if !r.AddressRelationAttribute.FeatureFlag.IsUnknown() && !r.AddressRelationAttribute.FeatureFlag.IsNull() {
			*featureFlag12 = r.AddressRelationAttribute.FeatureFlag.ValueString()
		} else {
			featureFlag12 = nil
		}
		var settingsFlag12 []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem12 := range r.AddressRelationAttribute.SettingsFlag {
			name24 := new(string)
			if !settingsFlagItem12.Name.IsUnknown() && !settingsFlagItem12.Name.IsNull() {
				*name24 = settingsFlagItem12.Name.ValueString()
			} else {
				name24 = nil
			}
			enabled12 := new(bool)
			if !settingsFlagItem12.Enabled.IsUnknown() && !settingsFlagItem12.Enabled.IsNull() {
				*enabled12 = settingsFlagItem12.Enabled.ValueBool()
			} else {
				enabled12 = nil
			}
			settingsFlag12 = append(settingsFlag12, shared.SettingFlag{
				Name:    name24,
				Enabled: enabled12,
			})
		}
		valueFormatter11 := new(string)
		if !r.AddressRelationAttribute.ValueFormatter.IsUnknown() && !r.AddressRelationAttribute.ValueFormatter.IsNull() {
			*valueFormatter11 = r.AddressRelationAttribute.ValueFormatter.ValueString()
		} else {
			valueFormatter11 = nil
		}
		previewValueFormatter11 := new(string)
		if !r.AddressRelationAttribute.PreviewValueFormatter.IsUnknown() && !r.AddressRelationAttribute.PreviewValueFormatter.IsNull() {
			*previewValueFormatter11 = r.AddressRelationAttribute.PreviewValueFormatter.ValueString()
		} else {
			previewValueFormatter11 = nil
		}
		entityBuilderDisableEdit11 := new(bool)
		if !r.AddressRelationAttribute.EntityBuilderDisableEdit.IsUnknown() && !r.AddressRelationAttribute.EntityBuilderDisableEdit.IsNull() {
			*entityBuilderDisableEdit11 = r.AddressRelationAttribute.EntityBuilderDisableEdit.ValueBool()
		} else {
			entityBuilderDisableEdit11 = nil
		}
		protected11 := new(bool)
		if !r.AddressRelationAttribute.Protected.IsUnknown() && !r.AddressRelationAttribute.Protected.IsNull() {
			*protected11 = r.AddressRelationAttribute.Protected.ValueBool()
		} else {
			protected11 = nil
		}
		var infoHelpers11 *shared.AddressRelationAttributeAttributeWithCompositeIDInfoHelpers
		if r.AddressRelationAttribute.InfoHelpers != nil {
			hintText11 := new(string)
			if !r.AddressRelationAttribute.InfoHelpers.HintText.IsUnknown() && !r.AddressRelationAttribute.InfoHelpers.HintText.IsNull() {
				*hintText11 = r.AddressRelationAttribute.InfoHelpers.HintText.ValueString()
			} else {
				hintText11 = nil
			}
			hintTextKey11 := new(string)
			if !r.AddressRelationAttribute.InfoHelpers.HintTextKey.IsUnknown() && !r.AddressRelationAttribute.InfoHelpers.HintTextKey.IsNull() {
				*hintTextKey11 = r.AddressRelationAttribute.InfoHelpers.HintTextKey.ValueString()
			} else {
				hintTextKey11 = nil
			}
			hintCustomComponent11 := new(string)
			if !r.AddressRelationAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !r.AddressRelationAttribute.InfoHelpers.HintCustomComponent.IsNull() {
				*hintCustomComponent11 = r.AddressRelationAttribute.InfoHelpers.HintCustomComponent.ValueString()
			} else {
				hintCustomComponent11 = nil
			}
			hintTooltipPlacement11 := new(string)
			if !r.AddressRelationAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !r.AddressRelationAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
				*hintTooltipPlacement11 = r.AddressRelationAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
			} else {
				hintTooltipPlacement11 = nil
			}
			infoHelpers11 = &shared.AddressRelationAttributeAttributeWithCompositeIDInfoHelpers{
				HintText:             hintText11,
				HintTextKey:          hintTextKey11,
				HintCustomComponent:  hintCustomComponent11,
				HintTooltipPlacement: hintTooltipPlacement11,
			}
		}
		typeVar11 := new(shared.AddressRelationAttributeAttributeWithCompositeIDType)
		if !r.AddressRelationAttribute.Type.IsUnknown() && !r.AddressRelationAttribute.Type.IsNull() {
			*typeVar11 = shared.AddressRelationAttributeAttributeWithCompositeIDType(r.AddressRelationAttribute.Type.ValueString())
		} else {
			typeVar11 = nil
		}
		hasPrimary1 := new(bool)
		if !r.AddressRelationAttribute.HasPrimary.IsUnknown() && !r.AddressRelationAttribute.HasPrimary.IsNull() {
			*hasPrimary1 = r.AddressRelationAttribute.HasPrimary.ValueBool()
		} else {
			hasPrimary1 = nil
		}
		attributeWithCompositeIDAddressRelationAttributeInput = &shared.AttributeWithCompositeIDAddressRelationAttributeInput{
			Name:                     name23,
			Label:                    label12,
			Placeholder:              placeholder11,
			Hidden:                   hidden11,
			ShowInTable:              showInTable11,
			Sortable:                 sortable11,
			Required:                 required11,
			Readonly:                 readonly11,
			Deprecated:               deprecated11,
			DefaultValue:             defaultValue11,
			Group:                    group11,
			Order:                    order11,
			Layout:                   layout11,
			HideLabel:                hideLabel11,
			Icon:                     icon11,
			RenderCondition:          renderCondition11,
			Purpose:                  purpose11,
			Constraints:              constraints11,
			FeatureFlag:              featureFlag12,
			SettingsFlag:             settingsFlag12,
			ValueFormatter:           valueFormatter11,
			PreviewValueFormatter:    previewValueFormatter11,
			EntityBuilderDisableEdit: entityBuilderDisableEdit11,
			Protected:                protected11,
			InfoHelpers:              infoHelpers11,
			Type:                     typeVar11,
			HasPrimary:               hasPrimary1,
		}
	}
	if attributeWithCompositeIDAddressRelationAttributeInput != nil {
		out = shared.AttributeWithCompositeIDInput{
			AttributeWithCompositeIDAddressRelationAttributeInput: attributeWithCompositeIDAddressRelationAttributeInput,
		}
	}
	var attributeWithCompositeIDPaymentMethodRelationAttributeInput *shared.AttributeWithCompositeIDPaymentMethodRelationAttributeInput
	if r.PaymentMethodRelationAttribute != nil {
		name25 := r.PaymentMethodRelationAttribute.Name.ValueString()
		label13 := r.PaymentMethodRelationAttribute.Label.ValueString()
		placeholder12 := new(string)
		if !r.PaymentMethodRelationAttribute.Placeholder.IsUnknown() && !r.PaymentMethodRelationAttribute.Placeholder.IsNull() {
			*placeholder12 = r.PaymentMethodRelationAttribute.Placeholder.ValueString()
		} else {
			placeholder12 = nil
		}
		hidden12 := new(bool)
		if !r.PaymentMethodRelationAttribute.Hidden.IsUnknown() && !r.PaymentMethodRelationAttribute.Hidden.IsNull() {
			*hidden12 = r.PaymentMethodRelationAttribute.Hidden.ValueBool()
		} else {
			hidden12 = nil
		}
		showInTable12 := new(bool)
		if !r.PaymentMethodRelationAttribute.ShowInTable.IsUnknown() && !r.PaymentMethodRelationAttribute.ShowInTable.IsNull() {
			*showInTable12 = r.PaymentMethodRelationAttribute.ShowInTable.ValueBool()
		} else {
			showInTable12 = nil
		}
		sortable12 := new(bool)
		if !r.PaymentMethodRelationAttribute.Sortable.IsUnknown() && !r.PaymentMethodRelationAttribute.Sortable.IsNull() {
			*sortable12 = r.PaymentMethodRelationAttribute.Sortable.ValueBool()
		} else {
			sortable12 = nil
		}
		required12 := new(bool)
		if !r.PaymentMethodRelationAttribute.Required.IsUnknown() && !r.PaymentMethodRelationAttribute.Required.IsNull() {
			*required12 = r.PaymentMethodRelationAttribute.Required.ValueBool()
		} else {
			required12 = nil
		}
		readonly12 := new(bool)
		if !r.PaymentMethodRelationAttribute.Readonly.IsUnknown() && !r.PaymentMethodRelationAttribute.Readonly.IsNull() {
			*readonly12 = r.PaymentMethodRelationAttribute.Readonly.ValueBool()
		} else {
			readonly12 = nil
		}
		deprecated12 := new(bool)
		if !r.PaymentMethodRelationAttribute.Deprecated.IsUnknown() && !r.PaymentMethodRelationAttribute.Deprecated.IsNull() {
			*deprecated12 = r.PaymentMethodRelationAttribute.Deprecated.ValueBool()
		} else {
			deprecated12 = nil
		}
		var defaultValue12 interface{}
		if !r.PaymentMethodRelationAttribute.DefaultValue.IsUnknown() && !r.PaymentMethodRelationAttribute.DefaultValue.IsNull() {
			_ = json.Unmarshal([]byte(r.PaymentMethodRelationAttribute.DefaultValue.ValueString()), &defaultValue12)
		}
		group12 := new(string)
		if !r.PaymentMethodRelationAttribute.Group.IsUnknown() && !r.PaymentMethodRelationAttribute.Group.IsNull() {
			*group12 = r.PaymentMethodRelationAttribute.Group.ValueString()
		} else {
			group12 = nil
		}
		order12 := new(int64)
		if !r.PaymentMethodRelationAttribute.Order.IsUnknown() && !r.PaymentMethodRelationAttribute.Order.IsNull() {
			*order12 = r.PaymentMethodRelationAttribute.Order.ValueInt64()
		} else {
			order12 = nil
		}
		layout12 := new(string)
		if !r.PaymentMethodRelationAttribute.Layout.IsUnknown() && !r.PaymentMethodRelationAttribute.Layout.IsNull() {
			*layout12 = r.PaymentMethodRelationAttribute.Layout.ValueString()
		} else {
			layout12 = nil
		}
		hideLabel12 := new(bool)
		if !r.PaymentMethodRelationAttribute.HideLabel.IsUnknown() && !r.PaymentMethodRelationAttribute.HideLabel.IsNull() {
			*hideLabel12 = r.PaymentMethodRelationAttribute.HideLabel.ValueBool()
		} else {
			hideLabel12 = nil
		}
		icon12 := new(string)
		if !r.PaymentMethodRelationAttribute.Icon.IsUnknown() && !r.PaymentMethodRelationAttribute.Icon.IsNull() {
			*icon12 = r.PaymentMethodRelationAttribute.Icon.ValueString()
		} else {
			icon12 = nil
		}
		renderCondition12 := new(string)
		if !r.PaymentMethodRelationAttribute.RenderCondition.IsUnknown() && !r.PaymentMethodRelationAttribute.RenderCondition.IsNull() {
			*renderCondition12 = r.PaymentMethodRelationAttribute.RenderCondition.ValueString()
		} else {
			renderCondition12 = nil
		}
		var purpose12 []string = []string{}
		for _, purposeItem12 := range r.PaymentMethodRelationAttribute.Purpose {
			purpose12 = append(purpose12, purposeItem12.ValueString())
		}
		var constraints12 *shared.PaymentMethodRelationAttributeAttributeWithCompositeIDConstraints
		if r.PaymentMethodRelationAttribute.Constraints != nil {
			constraints12 = &shared.PaymentMethodRelationAttributeAttributeWithCompositeIDConstraints{}
		}
		featureFlag13 := new(string)
		if !r.PaymentMethodRelationAttribute.FeatureFlag.IsUnknown() && !r.PaymentMethodRelationAttribute.FeatureFlag.IsNull() {
			*featureFlag13 = r.PaymentMethodRelationAttribute.FeatureFlag.ValueString()
		} else {
			featureFlag13 = nil
		}
		var settingsFlag13 []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem13 := range r.PaymentMethodRelationAttribute.SettingsFlag {
			name26 := new(string)
			if !settingsFlagItem13.Name.IsUnknown() && !settingsFlagItem13.Name.IsNull() {
				*name26 = settingsFlagItem13.Name.ValueString()
			} else {
				name26 = nil
			}
			enabled13 := new(bool)
			if !settingsFlagItem13.Enabled.IsUnknown() && !settingsFlagItem13.Enabled.IsNull() {
				*enabled13 = settingsFlagItem13.Enabled.ValueBool()
			} else {
				enabled13 = nil
			}
			settingsFlag13 = append(settingsFlag13, shared.SettingFlag{
				Name:    name26,
				Enabled: enabled13,
			})
		}
		valueFormatter12 := new(string)
		if !r.PaymentMethodRelationAttribute.ValueFormatter.IsUnknown() && !r.PaymentMethodRelationAttribute.ValueFormatter.IsNull() {
			*valueFormatter12 = r.PaymentMethodRelationAttribute.ValueFormatter.ValueString()
		} else {
			valueFormatter12 = nil
		}
		previewValueFormatter12 := new(string)
		if !r.PaymentMethodRelationAttribute.PreviewValueFormatter.IsUnknown() && !r.PaymentMethodRelationAttribute.PreviewValueFormatter.IsNull() {
			*previewValueFormatter12 = r.PaymentMethodRelationAttribute.PreviewValueFormatter.ValueString()
		} else {
			previewValueFormatter12 = nil
		}
		entityBuilderDisableEdit12 := new(bool)
		if !r.PaymentMethodRelationAttribute.EntityBuilderDisableEdit.IsUnknown() && !r.PaymentMethodRelationAttribute.EntityBuilderDisableEdit.IsNull() {
			*entityBuilderDisableEdit12 = r.PaymentMethodRelationAttribute.EntityBuilderDisableEdit.ValueBool()
		} else {
			entityBuilderDisableEdit12 = nil
		}
		protected12 := new(bool)
		if !r.PaymentMethodRelationAttribute.Protected.IsUnknown() && !r.PaymentMethodRelationAttribute.Protected.IsNull() {
			*protected12 = r.PaymentMethodRelationAttribute.Protected.ValueBool()
		} else {
			protected12 = nil
		}
		var infoHelpers12 *shared.PaymentMethodRelationAttributeAttributeWithCompositeIDInfoHelpers
		if r.PaymentMethodRelationAttribute.InfoHelpers != nil {
			hintText12 := new(string)
			if !r.PaymentMethodRelationAttribute.InfoHelpers.HintText.IsUnknown() && !r.PaymentMethodRelationAttribute.InfoHelpers.HintText.IsNull() {
				*hintText12 = r.PaymentMethodRelationAttribute.InfoHelpers.HintText.ValueString()
			} else {
				hintText12 = nil
			}
			hintTextKey12 := new(string)
			if !r.PaymentMethodRelationAttribute.InfoHelpers.HintTextKey.IsUnknown() && !r.PaymentMethodRelationAttribute.InfoHelpers.HintTextKey.IsNull() {
				*hintTextKey12 = r.PaymentMethodRelationAttribute.InfoHelpers.HintTextKey.ValueString()
			} else {
				hintTextKey12 = nil
			}
			hintCustomComponent12 := new(string)
			if !r.PaymentMethodRelationAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !r.PaymentMethodRelationAttribute.InfoHelpers.HintCustomComponent.IsNull() {
				*hintCustomComponent12 = r.PaymentMethodRelationAttribute.InfoHelpers.HintCustomComponent.ValueString()
			} else {
				hintCustomComponent12 = nil
			}
			hintTooltipPlacement12 := new(string)
			if !r.PaymentMethodRelationAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !r.PaymentMethodRelationAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
				*hintTooltipPlacement12 = r.PaymentMethodRelationAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
			} else {
				hintTooltipPlacement12 = nil
			}
			infoHelpers12 = &shared.PaymentMethodRelationAttributeAttributeWithCompositeIDInfoHelpers{
				HintText:             hintText12,
				HintTextKey:          hintTextKey12,
				HintCustomComponent:  hintCustomComponent12,
				HintTooltipPlacement: hintTooltipPlacement12,
			}
		}
		typeVar12 := new(shared.PaymentMethodRelationAttributeAttributeWithCompositeIDType)
		if !r.PaymentMethodRelationAttribute.Type.IsUnknown() && !r.PaymentMethodRelationAttribute.Type.IsNull() {
			*typeVar12 = shared.PaymentMethodRelationAttributeAttributeWithCompositeIDType(r.PaymentMethodRelationAttribute.Type.ValueString())
		} else {
			typeVar12 = nil
		}
		hasPrimary2 := new(bool)
		if !r.PaymentMethodRelationAttribute.HasPrimary.IsUnknown() && !r.PaymentMethodRelationAttribute.HasPrimary.IsNull() {
			*hasPrimary2 = r.PaymentMethodRelationAttribute.HasPrimary.ValueBool()
		} else {
			hasPrimary2 = nil
		}
		attributeWithCompositeIDPaymentMethodRelationAttributeInput = &shared.AttributeWithCompositeIDPaymentMethodRelationAttributeInput{
			Name:                     name25,
			Label:                    label13,
			Placeholder:              placeholder12,
			Hidden:                   hidden12,
			ShowInTable:              showInTable12,
			Sortable:                 sortable12,
			Required:                 required12,
			Readonly:                 readonly12,
			Deprecated:               deprecated12,
			DefaultValue:             defaultValue12,
			Group:                    group12,
			Order:                    order12,
			Layout:                   layout12,
			HideLabel:                hideLabel12,
			Icon:                     icon12,
			RenderCondition:          renderCondition12,
			Purpose:                  purpose12,
			Constraints:              constraints12,
			FeatureFlag:              featureFlag13,
			SettingsFlag:             settingsFlag13,
			ValueFormatter:           valueFormatter12,
			PreviewValueFormatter:    previewValueFormatter12,
			EntityBuilderDisableEdit: entityBuilderDisableEdit12,
			Protected:                protected12,
			InfoHelpers:              infoHelpers12,
			Type:                     typeVar12,
			HasPrimary:               hasPrimary2,
		}
	}
	if attributeWithCompositeIDPaymentMethodRelationAttributeInput != nil {
		out = shared.AttributeWithCompositeIDInput{
			AttributeWithCompositeIDPaymentMethodRelationAttributeInput: attributeWithCompositeIDPaymentMethodRelationAttributeInput,
		}
	}
	var attributeWithCompositeIDCurrencyAttributeInput *shared.AttributeWithCompositeIDCurrencyAttributeInput
	if r.CurrencyAttribute != nil {
		name27 := r.CurrencyAttribute.Name.ValueString()
		label14 := r.CurrencyAttribute.Label.ValueString()
		placeholder13 := new(string)
		if !r.CurrencyAttribute.Placeholder.IsUnknown() && !r.CurrencyAttribute.Placeholder.IsNull() {
			*placeholder13 = r.CurrencyAttribute.Placeholder.ValueString()
		} else {
			placeholder13 = nil
		}
		hidden13 := new(bool)
		if !r.CurrencyAttribute.Hidden.IsUnknown() && !r.CurrencyAttribute.Hidden.IsNull() {
			*hidden13 = r.CurrencyAttribute.Hidden.ValueBool()
		} else {
			hidden13 = nil
		}
		showInTable13 := new(bool)
		if !r.CurrencyAttribute.ShowInTable.IsUnknown() && !r.CurrencyAttribute.ShowInTable.IsNull() {
			*showInTable13 = r.CurrencyAttribute.ShowInTable.ValueBool()
		} else {
			showInTable13 = nil
		}
		sortable13 := new(bool)
		if !r.CurrencyAttribute.Sortable.IsUnknown() && !r.CurrencyAttribute.Sortable.IsNull() {
			*sortable13 = r.CurrencyAttribute.Sortable.ValueBool()
		} else {
			sortable13 = nil
		}
		required13 := new(bool)
		if !r.CurrencyAttribute.Required.IsUnknown() && !r.CurrencyAttribute.Required.IsNull() {
			*required13 = r.CurrencyAttribute.Required.ValueBool()
		} else {
			required13 = nil
		}
		readonly13 := new(bool)
		if !r.CurrencyAttribute.Readonly.IsUnknown() && !r.CurrencyAttribute.Readonly.IsNull() {
			*readonly13 = r.CurrencyAttribute.Readonly.ValueBool()
		} else {
			readonly13 = nil
		}
		deprecated13 := new(bool)
		if !r.CurrencyAttribute.Deprecated.IsUnknown() && !r.CurrencyAttribute.Deprecated.IsNull() {
			*deprecated13 = r.CurrencyAttribute.Deprecated.ValueBool()
		} else {
			deprecated13 = nil
		}
		var defaultValue13 interface{}
		if !r.CurrencyAttribute.DefaultValue.IsUnknown() && !r.CurrencyAttribute.DefaultValue.IsNull() {
			_ = json.Unmarshal([]byte(r.CurrencyAttribute.DefaultValue.ValueString()), &defaultValue13)
		}
		group13 := new(string)
		if !r.CurrencyAttribute.Group.IsUnknown() && !r.CurrencyAttribute.Group.IsNull() {
			*group13 = r.CurrencyAttribute.Group.ValueString()
		} else {
			group13 = nil
		}
		order13 := new(int64)
		if !r.CurrencyAttribute.Order.IsUnknown() && !r.CurrencyAttribute.Order.IsNull() {
			*order13 = r.CurrencyAttribute.Order.ValueInt64()
		} else {
			order13 = nil
		}
		layout13 := new(string)
		if !r.CurrencyAttribute.Layout.IsUnknown() && !r.CurrencyAttribute.Layout.IsNull() {
			*layout13 = r.CurrencyAttribute.Layout.ValueString()
		} else {
			layout13 = nil
		}
		hideLabel13 := new(bool)
		if !r.CurrencyAttribute.HideLabel.IsUnknown() && !r.CurrencyAttribute.HideLabel.IsNull() {
			*hideLabel13 = r.CurrencyAttribute.HideLabel.ValueBool()
		} else {
			hideLabel13 = nil
		}
		icon13 := new(string)
		if !r.CurrencyAttribute.Icon.IsUnknown() && !r.CurrencyAttribute.Icon.IsNull() {
			*icon13 = r.CurrencyAttribute.Icon.ValueString()
		} else {
			icon13 = nil
		}
		renderCondition13 := new(string)
		if !r.CurrencyAttribute.RenderCondition.IsUnknown() && !r.CurrencyAttribute.RenderCondition.IsNull() {
			*renderCondition13 = r.CurrencyAttribute.RenderCondition.ValueString()
		} else {
			renderCondition13 = nil
		}
		var purpose13 []string = []string{}
		for _, purposeItem13 := range r.CurrencyAttribute.Purpose {
			purpose13 = append(purpose13, purposeItem13.ValueString())
		}
		var constraints13 *shared.CurrencyAttributeAttributeWithCompositeIDConstraints
		if r.CurrencyAttribute.Constraints != nil {
			constraints13 = &shared.CurrencyAttributeAttributeWithCompositeIDConstraints{}
		}
		featureFlag14 := new(string)
		if !r.CurrencyAttribute.FeatureFlag.IsUnknown() && !r.CurrencyAttribute.FeatureFlag.IsNull() {
			*featureFlag14 = r.CurrencyAttribute.FeatureFlag.ValueString()
		} else {
			featureFlag14 = nil
		}
		var settingsFlag14 []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem14 := range r.CurrencyAttribute.SettingsFlag {
			name28 := new(string)
			if !settingsFlagItem14.Name.IsUnknown() && !settingsFlagItem14.Name.IsNull() {
				*name28 = settingsFlagItem14.Name.ValueString()
			} else {
				name28 = nil
			}
			enabled14 := new(bool)
			if !settingsFlagItem14.Enabled.IsUnknown() && !settingsFlagItem14.Enabled.IsNull() {
				*enabled14 = settingsFlagItem14.Enabled.ValueBool()
			} else {
				enabled14 = nil
			}
			settingsFlag14 = append(settingsFlag14, shared.SettingFlag{
				Name:    name28,
				Enabled: enabled14,
			})
		}
		valueFormatter13 := new(string)
		if !r.CurrencyAttribute.ValueFormatter.IsUnknown() && !r.CurrencyAttribute.ValueFormatter.IsNull() {
			*valueFormatter13 = r.CurrencyAttribute.ValueFormatter.ValueString()
		} else {
			valueFormatter13 = nil
		}
		previewValueFormatter13 := new(string)
		if !r.CurrencyAttribute.PreviewValueFormatter.IsUnknown() && !r.CurrencyAttribute.PreviewValueFormatter.IsNull() {
			*previewValueFormatter13 = r.CurrencyAttribute.PreviewValueFormatter.ValueString()
		} else {
			previewValueFormatter13 = nil
		}
		entityBuilderDisableEdit13 := new(bool)
		if !r.CurrencyAttribute.EntityBuilderDisableEdit.IsUnknown() && !r.CurrencyAttribute.EntityBuilderDisableEdit.IsNull() {
			*entityBuilderDisableEdit13 = r.CurrencyAttribute.EntityBuilderDisableEdit.ValueBool()
		} else {
			entityBuilderDisableEdit13 = nil
		}
		protected13 := new(bool)
		if !r.CurrencyAttribute.Protected.IsUnknown() && !r.CurrencyAttribute.Protected.IsNull() {
			*protected13 = r.CurrencyAttribute.Protected.ValueBool()
		} else {
			protected13 = nil
		}
		var infoHelpers13 *shared.CurrencyAttributeAttributeWithCompositeIDInfoHelpers
		if r.CurrencyAttribute.InfoHelpers != nil {
			hintText13 := new(string)
			if !r.CurrencyAttribute.InfoHelpers.HintText.IsUnknown() && !r.CurrencyAttribute.InfoHelpers.HintText.IsNull() {
				*hintText13 = r.CurrencyAttribute.InfoHelpers.HintText.ValueString()
			} else {
				hintText13 = nil
			}
			hintTextKey13 := new(string)
			if !r.CurrencyAttribute.InfoHelpers.HintTextKey.IsUnknown() && !r.CurrencyAttribute.InfoHelpers.HintTextKey.IsNull() {
				*hintTextKey13 = r.CurrencyAttribute.InfoHelpers.HintTextKey.ValueString()
			} else {
				hintTextKey13 = nil
			}
			hintCustomComponent13 := new(string)
			if !r.CurrencyAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !r.CurrencyAttribute.InfoHelpers.HintCustomComponent.IsNull() {
				*hintCustomComponent13 = r.CurrencyAttribute.InfoHelpers.HintCustomComponent.ValueString()
			} else {
				hintCustomComponent13 = nil
			}
			hintTooltipPlacement13 := new(string)
			if !r.CurrencyAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !r.CurrencyAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
				*hintTooltipPlacement13 = r.CurrencyAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
			} else {
				hintTooltipPlacement13 = nil
			}
			infoHelpers13 = &shared.CurrencyAttributeAttributeWithCompositeIDInfoHelpers{
				HintText:             hintText13,
				HintTextKey:          hintTextKey13,
				HintCustomComponent:  hintCustomComponent13,
				HintTooltipPlacement: hintTooltipPlacement13,
			}
		}
		typeVar13 := shared.CurrencyAttributeAttributeWithCompositeIDType(r.CurrencyAttribute.Type.ValueString())
		currencySelectorOnly := new(bool)
		if !r.CurrencyAttribute.CurrencySelectorOnly.IsUnknown() && !r.CurrencyAttribute.CurrencySelectorOnly.IsNull() {
			*currencySelectorOnly = r.CurrencyAttribute.CurrencySelectorOnly.ValueBool()
		} else {
			currencySelectorOnly = nil
		}
		var currency []shared.CurrencyAttributeCurrency = []shared.CurrencyAttributeCurrency{}
		for _, currencyItem := range r.CurrencyAttribute.Currency {
			if currencyItem.One != nil {
				code := currencyItem.One.Code.ValueString()
				description := currencyItem.One.Description.ValueString()
				symbol := currencyItem.One.Symbol.ValueString()
				flag := new(string)
				if !currencyItem.One.Flag.IsUnknown() && !currencyItem.One.Flag.IsNull() {
					*flag = currencyItem.One.Flag.ValueString()
				} else {
					flag = nil
				}
				currencyAttributeCurrency1 := shared.CurrencyAttributeCurrency1{
					Code:        code,
					Description: description,
					Symbol:      symbol,
					Flag:        flag,
				}
				currency = append(currency, shared.CurrencyAttributeCurrency{
					CurrencyAttributeCurrency1: &currencyAttributeCurrency1,
				})
			}
		}
		attributeWithCompositeIDCurrencyAttributeInput = &shared.AttributeWithCompositeIDCurrencyAttributeInput{
			Name:                     name27,
			Label:                    label14,
			Placeholder:              placeholder13,
			Hidden:                   hidden13,
			ShowInTable:              showInTable13,
			Sortable:                 sortable13,
			Required:                 required13,
			Readonly:                 readonly13,
			Deprecated:               deprecated13,
			DefaultValue:             defaultValue13,
			Group:                    group13,
			Order:                    order13,
			Layout:                   layout13,
			HideLabel:                hideLabel13,
			Icon:                     icon13,
			RenderCondition:          renderCondition13,
			Purpose:                  purpose13,
			Constraints:              constraints13,
			FeatureFlag:              featureFlag14,
			SettingsFlag:             settingsFlag14,
			ValueFormatter:           valueFormatter13,
			PreviewValueFormatter:    previewValueFormatter13,
			EntityBuilderDisableEdit: entityBuilderDisableEdit13,
			Protected:                protected13,
			InfoHelpers:              infoHelpers13,
			Type:                     typeVar13,
			CurrencySelectorOnly:     currencySelectorOnly,
			Currency:                 currency,
		}
	}
	if attributeWithCompositeIDCurrencyAttributeInput != nil {
		out = shared.AttributeWithCompositeIDInput{
			AttributeWithCompositeIDCurrencyAttributeInput: attributeWithCompositeIDCurrencyAttributeInput,
		}
	}
	var attributeWithCompositeIDRepeatableAttributeInput *shared.AttributeWithCompositeIDRepeatableAttributeInput
	if r.RepeatableAttribute != nil {
		name29 := r.RepeatableAttribute.Name.ValueString()
		label15 := r.RepeatableAttribute.Label.ValueString()
		placeholder14 := new(string)
		if !r.RepeatableAttribute.Placeholder.IsUnknown() && !r.RepeatableAttribute.Placeholder.IsNull() {
			*placeholder14 = r.RepeatableAttribute.Placeholder.ValueString()
		} else {
			placeholder14 = nil
		}
		hidden14 := new(bool)
		if !r.RepeatableAttribute.Hidden.IsUnknown() && !r.RepeatableAttribute.Hidden.IsNull() {
			*hidden14 = r.RepeatableAttribute.Hidden.ValueBool()
		} else {
			hidden14 = nil
		}
		showInTable14 := new(bool)
		if !r.RepeatableAttribute.ShowInTable.IsUnknown() && !r.RepeatableAttribute.ShowInTable.IsNull() {
			*showInTable14 = r.RepeatableAttribute.ShowInTable.ValueBool()
		} else {
			showInTable14 = nil
		}
		sortable14 := new(bool)
		if !r.RepeatableAttribute.Sortable.IsUnknown() && !r.RepeatableAttribute.Sortable.IsNull() {
			*sortable14 = r.RepeatableAttribute.Sortable.ValueBool()
		} else {
			sortable14 = nil
		}
		required14 := new(bool)
		if !r.RepeatableAttribute.Required.IsUnknown() && !r.RepeatableAttribute.Required.IsNull() {
			*required14 = r.RepeatableAttribute.Required.ValueBool()
		} else {
			required14 = nil
		}
		readonly14 := new(bool)
		if !r.RepeatableAttribute.Readonly.IsUnknown() && !r.RepeatableAttribute.Readonly.IsNull() {
			*readonly14 = r.RepeatableAttribute.Readonly.ValueBool()
		} else {
			readonly14 = nil
		}
		deprecated14 := new(bool)
		if !r.RepeatableAttribute.Deprecated.IsUnknown() && !r.RepeatableAttribute.Deprecated.IsNull() {
			*deprecated14 = r.RepeatableAttribute.Deprecated.ValueBool()
		} else {
			deprecated14 = nil
		}
		var defaultValue14 interface{}
		if !r.RepeatableAttribute.DefaultValue.IsUnknown() && !r.RepeatableAttribute.DefaultValue.IsNull() {
			_ = json.Unmarshal([]byte(r.RepeatableAttribute.DefaultValue.ValueString()), &defaultValue14)
		}
		group14 := new(string)
		if !r.RepeatableAttribute.Group.IsUnknown() && !r.RepeatableAttribute.Group.IsNull() {
			*group14 = r.RepeatableAttribute.Group.ValueString()
		} else {
			group14 = nil
		}
		order14 := new(int64)
		if !r.RepeatableAttribute.Order.IsUnknown() && !r.RepeatableAttribute.Order.IsNull() {
			*order14 = r.RepeatableAttribute.Order.ValueInt64()
		} else {
			order14 = nil
		}
		layout14 := new(string)
		if !r.RepeatableAttribute.Layout.IsUnknown() && !r.RepeatableAttribute.Layout.IsNull() {
			*layout14 = r.RepeatableAttribute.Layout.ValueString()
		} else {
			layout14 = nil
		}
		hideLabel14 := new(bool)
		if !r.RepeatableAttribute.HideLabel.IsUnknown() && !r.RepeatableAttribute.HideLabel.IsNull() {
			*hideLabel14 = r.RepeatableAttribute.HideLabel.ValueBool()
		} else {
			hideLabel14 = nil
		}
		icon14 := new(string)
		if !r.RepeatableAttribute.Icon.IsUnknown() && !r.RepeatableAttribute.Icon.IsNull() {
			*icon14 = r.RepeatableAttribute.Icon.ValueString()
		} else {
			icon14 = nil
		}
		renderCondition14 := new(string)
		if !r.RepeatableAttribute.RenderCondition.IsUnknown() && !r.RepeatableAttribute.RenderCondition.IsNull() {
			*renderCondition14 = r.RepeatableAttribute.RenderCondition.ValueString()
		} else {
			renderCondition14 = nil
		}
		var purpose14 []string = []string{}
		for _, purposeItem14 := range r.RepeatableAttribute.Purpose {
			purpose14 = append(purpose14, purposeItem14.ValueString())
		}
		var constraints14 *shared.RepeatableAttributeAttributeWithCompositeIDConstraints
		if r.RepeatableAttribute.Constraints != nil {
			constraints14 = &shared.RepeatableAttributeAttributeWithCompositeIDConstraints{}
		}
		featureFlag15 := new(string)
		if !r.RepeatableAttribute.FeatureFlag.IsUnknown() && !r.RepeatableAttribute.FeatureFlag.IsNull() {
			*featureFlag15 = r.RepeatableAttribute.FeatureFlag.ValueString()
		} else {
			featureFlag15 = nil
		}
		var settingsFlag15 []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem15 := range r.RepeatableAttribute.SettingsFlag {
			name30 := new(string)
			if !settingsFlagItem15.Name.IsUnknown() && !settingsFlagItem15.Name.IsNull() {
				*name30 = settingsFlagItem15.Name.ValueString()
			} else {
				name30 = nil
			}
			enabled15 := new(bool)
			if !settingsFlagItem15.Enabled.IsUnknown() && !settingsFlagItem15.Enabled.IsNull() {
				*enabled15 = settingsFlagItem15.Enabled.ValueBool()
			} else {
				enabled15 = nil
			}
			settingsFlag15 = append(settingsFlag15, shared.SettingFlag{
				Name:    name30,
				Enabled: enabled15,
			})
		}
		valueFormatter14 := new(string)
		if !r.RepeatableAttribute.ValueFormatter.IsUnknown() && !r.RepeatableAttribute.ValueFormatter.IsNull() {
			*valueFormatter14 = r.RepeatableAttribute.ValueFormatter.ValueString()
		} else {
			valueFormatter14 = nil
		}
		previewValueFormatter14 := new(string)
		if !r.RepeatableAttribute.PreviewValueFormatter.IsUnknown() && !r.RepeatableAttribute.PreviewValueFormatter.IsNull() {
			*previewValueFormatter14 = r.RepeatableAttribute.PreviewValueFormatter.ValueString()
		} else {
			previewValueFormatter14 = nil
		}
		entityBuilderDisableEdit14 := new(bool)
		if !r.RepeatableAttribute.EntityBuilderDisableEdit.IsUnknown() && !r.RepeatableAttribute.EntityBuilderDisableEdit.IsNull() {
			*entityBuilderDisableEdit14 = r.RepeatableAttribute.EntityBuilderDisableEdit.ValueBool()
		} else {
			entityBuilderDisableEdit14 = nil
		}
		protected14 := new(bool)
		if !r.RepeatableAttribute.Protected.IsUnknown() && !r.RepeatableAttribute.Protected.IsNull() {
			*protected14 = r.RepeatableAttribute.Protected.ValueBool()
		} else {
			protected14 = nil
		}
		var infoHelpers14 *shared.RepeatableAttributeAttributeWithCompositeIDInfoHelpers
		if r.RepeatableAttribute.InfoHelpers != nil {
			hintText14 := new(string)
			if !r.RepeatableAttribute.InfoHelpers.HintText.IsUnknown() && !r.RepeatableAttribute.InfoHelpers.HintText.IsNull() {
				*hintText14 = r.RepeatableAttribute.InfoHelpers.HintText.ValueString()
			} else {
				hintText14 = nil
			}
			hintTextKey14 := new(string)
			if !r.RepeatableAttribute.InfoHelpers.HintTextKey.IsUnknown() && !r.RepeatableAttribute.InfoHelpers.HintTextKey.IsNull() {
				*hintTextKey14 = r.RepeatableAttribute.InfoHelpers.HintTextKey.ValueString()
			} else {
				hintTextKey14 = nil
			}
			hintCustomComponent14 := new(string)
			if !r.RepeatableAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !r.RepeatableAttribute.InfoHelpers.HintCustomComponent.IsNull() {
				*hintCustomComponent14 = r.RepeatableAttribute.InfoHelpers.HintCustomComponent.ValueString()
			} else {
				hintCustomComponent14 = nil
			}
			hintTooltipPlacement14 := new(string)
			if !r.RepeatableAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !r.RepeatableAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
				*hintTooltipPlacement14 = r.RepeatableAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
			} else {
				hintTooltipPlacement14 = nil
			}
			infoHelpers14 = &shared.RepeatableAttributeAttributeWithCompositeIDInfoHelpers{
				HintText:             hintText14,
				HintTextKey:          hintTextKey14,
				HintCustomComponent:  hintCustomComponent14,
				HintTooltipPlacement: hintTooltipPlacement14,
			}
		}
		repeatable := new(bool)
		if !r.RepeatableAttribute.Repeatable.IsUnknown() && !r.RepeatableAttribute.Repeatable.IsNull() {
			*repeatable = r.RepeatableAttribute.Repeatable.ValueBool()
		} else {
			repeatable = nil
		}
		hasPrimary3 := new(bool)
		if !r.RepeatableAttribute.HasPrimary.IsUnknown() && !r.RepeatableAttribute.HasPrimary.IsNull() {
			*hasPrimary3 = r.RepeatableAttribute.HasPrimary.ValueBool()
		} else {
			hasPrimary3 = nil
		}
		relationAffinityMode1 := new(shared.RepeatableAttributeAttributeWithCompositeIDRelationAffinityMode)
		if !r.RepeatableAttribute.RelationAffinityMode.IsUnknown() && !r.RepeatableAttribute.RelationAffinityMode.IsNull() {
			*relationAffinityMode1 = shared.RepeatableAttributeAttributeWithCompositeIDRelationAffinityMode(r.RepeatableAttribute.RelationAffinityMode.ValueString())
		} else {
			relationAffinityMode1 = nil
		}
		typeVar14 := new(shared.RepeatableAttributeAttributeWithCompositeIDType)
		if !r.RepeatableAttribute.Type.IsUnknown() && !r.RepeatableAttribute.Type.IsNull() {
			*typeVar14 = shared.RepeatableAttributeAttributeWithCompositeIDType(r.RepeatableAttribute.Type.ValueString())
		} else {
			typeVar14 = nil
		}
		enableRelationPicker1 := new(bool)
		if !r.RepeatableAttribute.EnableRelationPicker.IsUnknown() && !r.RepeatableAttribute.EnableRelationPicker.IsNull() {
			*enableRelationPicker1 = r.RepeatableAttribute.EnableRelationPicker.ValueBool()
		} else {
			enableRelationPicker1 = nil
		}
		attributeWithCompositeIDRepeatableAttributeInput = &shared.AttributeWithCompositeIDRepeatableAttributeInput{
			Name:                     name29,
			Label:                    label15,
			Placeholder:              placeholder14,
			Hidden:                   hidden14,
			ShowInTable:              showInTable14,
			Sortable:                 sortable14,
			Required:                 required14,
			Readonly:                 readonly14,
			Deprecated:               deprecated14,
			DefaultValue:             defaultValue14,
			Group:                    group14,
			Order:                    order14,
			Layout:                   layout14,
			HideLabel:                hideLabel14,
			Icon:                     icon14,
			RenderCondition:          renderCondition14,
			Purpose:                  purpose14,
			Constraints:              constraints14,
			FeatureFlag:              featureFlag15,
			SettingsFlag:             settingsFlag15,
			ValueFormatter:           valueFormatter14,
			PreviewValueFormatter:    previewValueFormatter14,
			EntityBuilderDisableEdit: entityBuilderDisableEdit14,
			Protected:                protected14,
			InfoHelpers:              infoHelpers14,
			Repeatable:               repeatable,
			HasPrimary:               hasPrimary3,
			RelationAffinityMode:     relationAffinityMode1,
			Type:                     typeVar14,
			EnableRelationPicker:     enableRelationPicker1,
		}
	}
	if attributeWithCompositeIDRepeatableAttributeInput != nil {
		out = shared.AttributeWithCompositeIDInput{
			AttributeWithCompositeIDRepeatableAttributeInput: attributeWithCompositeIDRepeatableAttributeInput,
		}
	}
	var attributeWithCompositeIDTagsAttributeInput *shared.AttributeWithCompositeIDTagsAttributeInput
	if r.TagsAttribute != nil {
		name31 := r.TagsAttribute.Name.ValueString()
		label16 := r.TagsAttribute.Label.ValueString()
		placeholder15 := new(string)
		if !r.TagsAttribute.Placeholder.IsUnknown() && !r.TagsAttribute.Placeholder.IsNull() {
			*placeholder15 = r.TagsAttribute.Placeholder.ValueString()
		} else {
			placeholder15 = nil
		}
		hidden15 := new(bool)
		if !r.TagsAttribute.Hidden.IsUnknown() && !r.TagsAttribute.Hidden.IsNull() {
			*hidden15 = r.TagsAttribute.Hidden.ValueBool()
		} else {
			hidden15 = nil
		}
		showInTable15 := new(bool)
		if !r.TagsAttribute.ShowInTable.IsUnknown() && !r.TagsAttribute.ShowInTable.IsNull() {
			*showInTable15 = r.TagsAttribute.ShowInTable.ValueBool()
		} else {
			showInTable15 = nil
		}
		sortable15 := new(bool)
		if !r.TagsAttribute.Sortable.IsUnknown() && !r.TagsAttribute.Sortable.IsNull() {
			*sortable15 = r.TagsAttribute.Sortable.ValueBool()
		} else {
			sortable15 = nil
		}
		required15 := new(bool)
		if !r.TagsAttribute.Required.IsUnknown() && !r.TagsAttribute.Required.IsNull() {
			*required15 = r.TagsAttribute.Required.ValueBool()
		} else {
			required15 = nil
		}
		readonly15 := new(bool)
		if !r.TagsAttribute.Readonly.IsUnknown() && !r.TagsAttribute.Readonly.IsNull() {
			*readonly15 = r.TagsAttribute.Readonly.ValueBool()
		} else {
			readonly15 = nil
		}
		deprecated15 := new(bool)
		if !r.TagsAttribute.Deprecated.IsUnknown() && !r.TagsAttribute.Deprecated.IsNull() {
			*deprecated15 = r.TagsAttribute.Deprecated.ValueBool()
		} else {
			deprecated15 = nil
		}
		var defaultValue15 interface{}
		if !r.TagsAttribute.DefaultValue.IsUnknown() && !r.TagsAttribute.DefaultValue.IsNull() {
			_ = json.Unmarshal([]byte(r.TagsAttribute.DefaultValue.ValueString()), &defaultValue15)
		}
		group15 := new(string)
		if !r.TagsAttribute.Group.IsUnknown() && !r.TagsAttribute.Group.IsNull() {
			*group15 = r.TagsAttribute.Group.ValueString()
		} else {
			group15 = nil
		}
		order15 := new(int64)
		if !r.TagsAttribute.Order.IsUnknown() && !r.TagsAttribute.Order.IsNull() {
			*order15 = r.TagsAttribute.Order.ValueInt64()
		} else {
			order15 = nil
		}
		layout15 := new(string)
		if !r.TagsAttribute.Layout.IsUnknown() && !r.TagsAttribute.Layout.IsNull() {
			*layout15 = r.TagsAttribute.Layout.ValueString()
		} else {
			layout15 = nil
		}
		hideLabel15 := new(bool)
		if !r.TagsAttribute.HideLabel.IsUnknown() && !r.TagsAttribute.HideLabel.IsNull() {
			*hideLabel15 = r.TagsAttribute.HideLabel.ValueBool()
		} else {
			hideLabel15 = nil
		}
		icon15 := new(string)
		if !r.TagsAttribute.Icon.IsUnknown() && !r.TagsAttribute.Icon.IsNull() {
			*icon15 = r.TagsAttribute.Icon.ValueString()
		} else {
			icon15 = nil
		}
		renderCondition15 := new(string)
		if !r.TagsAttribute.RenderCondition.IsUnknown() && !r.TagsAttribute.RenderCondition.IsNull() {
			*renderCondition15 = r.TagsAttribute.RenderCondition.ValueString()
		} else {
			renderCondition15 = nil
		}
		var purpose15 []string = []string{}
		for _, purposeItem15 := range r.TagsAttribute.Purpose {
			purpose15 = append(purpose15, purposeItem15.ValueString())
		}
		var constraints15 *shared.TagsAttributeAttributeWithCompositeIDConstraints
		if r.TagsAttribute.Constraints != nil {
			constraints15 = &shared.TagsAttributeAttributeWithCompositeIDConstraints{}
		}
		featureFlag16 := new(string)
		if !r.TagsAttribute.FeatureFlag.IsUnknown() && !r.TagsAttribute.FeatureFlag.IsNull() {
			*featureFlag16 = r.TagsAttribute.FeatureFlag.ValueString()
		} else {
			featureFlag16 = nil
		}
		var settingsFlag16 []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem16 := range r.TagsAttribute.SettingsFlag {
			name32 := new(string)
			if !settingsFlagItem16.Name.IsUnknown() && !settingsFlagItem16.Name.IsNull() {
				*name32 = settingsFlagItem16.Name.ValueString()
			} else {
				name32 = nil
			}
			enabled16 := new(bool)
			if !settingsFlagItem16.Enabled.IsUnknown() && !settingsFlagItem16.Enabled.IsNull() {
				*enabled16 = settingsFlagItem16.Enabled.ValueBool()
			} else {
				enabled16 = nil
			}
			settingsFlag16 = append(settingsFlag16, shared.SettingFlag{
				Name:    name32,
				Enabled: enabled16,
			})
		}
		valueFormatter15 := new(string)
		if !r.TagsAttribute.ValueFormatter.IsUnknown() && !r.TagsAttribute.ValueFormatter.IsNull() {
			*valueFormatter15 = r.TagsAttribute.ValueFormatter.ValueString()
		} else {
			valueFormatter15 = nil
		}
		previewValueFormatter15 := new(string)
		if !r.TagsAttribute.PreviewValueFormatter.IsUnknown() && !r.TagsAttribute.PreviewValueFormatter.IsNull() {
			*previewValueFormatter15 = r.TagsAttribute.PreviewValueFormatter.ValueString()
		} else {
			previewValueFormatter15 = nil
		}
		entityBuilderDisableEdit15 := new(bool)
		if !r.TagsAttribute.EntityBuilderDisableEdit.IsUnknown() && !r.TagsAttribute.EntityBuilderDisableEdit.IsNull() {
			*entityBuilderDisableEdit15 = r.TagsAttribute.EntityBuilderDisableEdit.ValueBool()
		} else {
			entityBuilderDisableEdit15 = nil
		}
		protected15 := new(bool)
		if !r.TagsAttribute.Protected.IsUnknown() && !r.TagsAttribute.Protected.IsNull() {
			*protected15 = r.TagsAttribute.Protected.ValueBool()
		} else {
			protected15 = nil
		}
		var infoHelpers15 *shared.TagsAttributeAttributeWithCompositeIDInfoHelpers
		if r.TagsAttribute.InfoHelpers != nil {
			hintText15 := new(string)
			if !r.TagsAttribute.InfoHelpers.HintText.IsUnknown() && !r.TagsAttribute.InfoHelpers.HintText.IsNull() {
				*hintText15 = r.TagsAttribute.InfoHelpers.HintText.ValueString()
			} else {
				hintText15 = nil
			}
			hintTextKey15 := new(string)
			if !r.TagsAttribute.InfoHelpers.HintTextKey.IsUnknown() && !r.TagsAttribute.InfoHelpers.HintTextKey.IsNull() {
				*hintTextKey15 = r.TagsAttribute.InfoHelpers.HintTextKey.ValueString()
			} else {
				hintTextKey15 = nil
			}
			hintCustomComponent15 := new(string)
			if !r.TagsAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !r.TagsAttribute.InfoHelpers.HintCustomComponent.IsNull() {
				*hintCustomComponent15 = r.TagsAttribute.InfoHelpers.HintCustomComponent.ValueString()
			} else {
				hintCustomComponent15 = nil
			}
			hintTooltipPlacement15 := new(string)
			if !r.TagsAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !r.TagsAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
				*hintTooltipPlacement15 = r.TagsAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
			} else {
				hintTooltipPlacement15 = nil
			}
			infoHelpers15 = &shared.TagsAttributeAttributeWithCompositeIDInfoHelpers{
				HintText:             hintText15,
				HintTextKey:          hintTextKey15,
				HintCustomComponent:  hintCustomComponent15,
				HintTooltipPlacement: hintTooltipPlacement15,
			}
		}
		typeVar15 := new(shared.TagsAttributeAttributeWithCompositeIDType)
		if !r.TagsAttribute.Type.IsUnknown() && !r.TagsAttribute.Type.IsNull() {
			*typeVar15 = shared.TagsAttributeAttributeWithCompositeIDType(r.TagsAttribute.Type.ValueString())
		} else {
			typeVar15 = nil
		}
		var options4 []string = []string{}
		for _, optionsItem3 := range r.TagsAttribute.Options {
			options4 = append(options4, optionsItem3.ValueString())
		}
		var suggestions []string = []string{}
		for _, suggestionsItem := range r.TagsAttribute.Suggestions {
			suggestions = append(suggestions, suggestionsItem.ValueString())
		}
		attributeWithCompositeIDTagsAttributeInput = &shared.AttributeWithCompositeIDTagsAttributeInput{
			Name:                     name31,
			Label:                    label16,
			Placeholder:              placeholder15,
			Hidden:                   hidden15,
			ShowInTable:              showInTable15,
			Sortable:                 sortable15,
			Required:                 required15,
			Readonly:                 readonly15,
			Deprecated:               deprecated15,
			DefaultValue:             defaultValue15,
			Group:                    group15,
			Order:                    order15,
			Layout:                   layout15,
			HideLabel:                hideLabel15,
			Icon:                     icon15,
			RenderCondition:          renderCondition15,
			Purpose:                  purpose15,
			Constraints:              constraints15,
			FeatureFlag:              featureFlag16,
			SettingsFlag:             settingsFlag16,
			ValueFormatter:           valueFormatter15,
			PreviewValueFormatter:    previewValueFormatter15,
			EntityBuilderDisableEdit: entityBuilderDisableEdit15,
			Protected:                protected15,
			InfoHelpers:              infoHelpers15,
			Type:                     typeVar15,
			Options:                  options4,
			Suggestions:              suggestions,
		}
	}
	if attributeWithCompositeIDTagsAttributeInput != nil {
		out = shared.AttributeWithCompositeIDInput{
			AttributeWithCompositeIDTagsAttributeInput: attributeWithCompositeIDTagsAttributeInput,
		}
	}
	var attributeWithCompositeIDNumberAttributeInput *shared.AttributeWithCompositeIDNumberAttributeInput
	if r.NumberAttribute != nil {
		name33 := r.NumberAttribute.Name.ValueString()
		label17 := r.NumberAttribute.Label.ValueString()
		placeholder16 := new(string)
		if !r.NumberAttribute.Placeholder.IsUnknown() && !r.NumberAttribute.Placeholder.IsNull() {
			*placeholder16 = r.NumberAttribute.Placeholder.ValueString()
		} else {
			placeholder16 = nil
		}
		hidden16 := new(bool)
		if !r.NumberAttribute.Hidden.IsUnknown() && !r.NumberAttribute.Hidden.IsNull() {
			*hidden16 = r.NumberAttribute.Hidden.ValueBool()
		} else {
			hidden16 = nil
		}
		showInTable16 := new(bool)
		if !r.NumberAttribute.ShowInTable.IsUnknown() && !r.NumberAttribute.ShowInTable.IsNull() {
			*showInTable16 = r.NumberAttribute.ShowInTable.ValueBool()
		} else {
			showInTable16 = nil
		}
		sortable16 := new(bool)
		if !r.NumberAttribute.Sortable.IsUnknown() && !r.NumberAttribute.Sortable.IsNull() {
			*sortable16 = r.NumberAttribute.Sortable.ValueBool()
		} else {
			sortable16 = nil
		}
		required16 := new(bool)
		if !r.NumberAttribute.Required.IsUnknown() && !r.NumberAttribute.Required.IsNull() {
			*required16 = r.NumberAttribute.Required.ValueBool()
		} else {
			required16 = nil
		}
		readonly16 := new(bool)
		if !r.NumberAttribute.Readonly.IsUnknown() && !r.NumberAttribute.Readonly.IsNull() {
			*readonly16 = r.NumberAttribute.Readonly.ValueBool()
		} else {
			readonly16 = nil
		}
		deprecated16 := new(bool)
		if !r.NumberAttribute.Deprecated.IsUnknown() && !r.NumberAttribute.Deprecated.IsNull() {
			*deprecated16 = r.NumberAttribute.Deprecated.ValueBool()
		} else {
			deprecated16 = nil
		}
		var defaultValue16 interface{}
		if !r.NumberAttribute.DefaultValue.IsUnknown() && !r.NumberAttribute.DefaultValue.IsNull() {
			_ = json.Unmarshal([]byte(r.NumberAttribute.DefaultValue.ValueString()), &defaultValue16)
		}
		group16 := new(string)
		if !r.NumberAttribute.Group.IsUnknown() && !r.NumberAttribute.Group.IsNull() {
			*group16 = r.NumberAttribute.Group.ValueString()
		} else {
			group16 = nil
		}
		order16 := new(int64)
		if !r.NumberAttribute.Order.IsUnknown() && !r.NumberAttribute.Order.IsNull() {
			*order16 = r.NumberAttribute.Order.ValueInt64()
		} else {
			order16 = nil
		}
		layout16 := new(string)
		if !r.NumberAttribute.Layout.IsUnknown() && !r.NumberAttribute.Layout.IsNull() {
			*layout16 = r.NumberAttribute.Layout.ValueString()
		} else {
			layout16 = nil
		}
		hideLabel16 := new(bool)
		if !r.NumberAttribute.HideLabel.IsUnknown() && !r.NumberAttribute.HideLabel.IsNull() {
			*hideLabel16 = r.NumberAttribute.HideLabel.ValueBool()
		} else {
			hideLabel16 = nil
		}
		icon16 := new(string)
		if !r.NumberAttribute.Icon.IsUnknown() && !r.NumberAttribute.Icon.IsNull() {
			*icon16 = r.NumberAttribute.Icon.ValueString()
		} else {
			icon16 = nil
		}
		renderCondition16 := new(string)
		if !r.NumberAttribute.RenderCondition.IsUnknown() && !r.NumberAttribute.RenderCondition.IsNull() {
			*renderCondition16 = r.NumberAttribute.RenderCondition.ValueString()
		} else {
			renderCondition16 = nil
		}
		var purpose16 []string = []string{}
		for _, purposeItem16 := range r.NumberAttribute.Purpose {
			purpose16 = append(purpose16, purposeItem16.ValueString())
		}
		var constraints16 *shared.NumberAttributeAttributeWithCompositeIDConstraints
		if r.NumberAttribute.Constraints != nil {
			constraints16 = &shared.NumberAttributeAttributeWithCompositeIDConstraints{}
		}
		featureFlag17 := new(string)
		if !r.NumberAttribute.FeatureFlag.IsUnknown() && !r.NumberAttribute.FeatureFlag.IsNull() {
			*featureFlag17 = r.NumberAttribute.FeatureFlag.ValueString()
		} else {
			featureFlag17 = nil
		}
		var settingsFlag17 []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem17 := range r.NumberAttribute.SettingsFlag {
			name34 := new(string)
			if !settingsFlagItem17.Name.IsUnknown() && !settingsFlagItem17.Name.IsNull() {
				*name34 = settingsFlagItem17.Name.ValueString()
			} else {
				name34 = nil
			}
			enabled17 := new(bool)
			if !settingsFlagItem17.Enabled.IsUnknown() && !settingsFlagItem17.Enabled.IsNull() {
				*enabled17 = settingsFlagItem17.Enabled.ValueBool()
			} else {
				enabled17 = nil
			}
			settingsFlag17 = append(settingsFlag17, shared.SettingFlag{
				Name:    name34,
				Enabled: enabled17,
			})
		}
		valueFormatter16 := new(string)
		if !r.NumberAttribute.ValueFormatter.IsUnknown() && !r.NumberAttribute.ValueFormatter.IsNull() {
			*valueFormatter16 = r.NumberAttribute.ValueFormatter.ValueString()
		} else {
			valueFormatter16 = nil
		}
		previewValueFormatter16 := new(string)
		if !r.NumberAttribute.PreviewValueFormatter.IsUnknown() && !r.NumberAttribute.PreviewValueFormatter.IsNull() {
			*previewValueFormatter16 = r.NumberAttribute.PreviewValueFormatter.ValueString()
		} else {
			previewValueFormatter16 = nil
		}
		entityBuilderDisableEdit16 := new(bool)
		if !r.NumberAttribute.EntityBuilderDisableEdit.IsUnknown() && !r.NumberAttribute.EntityBuilderDisableEdit.IsNull() {
			*entityBuilderDisableEdit16 = r.NumberAttribute.EntityBuilderDisableEdit.ValueBool()
		} else {
			entityBuilderDisableEdit16 = nil
		}
		protected16 := new(bool)
		if !r.NumberAttribute.Protected.IsUnknown() && !r.NumberAttribute.Protected.IsNull() {
			*protected16 = r.NumberAttribute.Protected.ValueBool()
		} else {
			protected16 = nil
		}
		var infoHelpers16 *shared.NumberAttributeAttributeWithCompositeIDInfoHelpers
		if r.NumberAttribute.InfoHelpers != nil {
			hintText16 := new(string)
			if !r.NumberAttribute.InfoHelpers.HintText.IsUnknown() && !r.NumberAttribute.InfoHelpers.HintText.IsNull() {
				*hintText16 = r.NumberAttribute.InfoHelpers.HintText.ValueString()
			} else {
				hintText16 = nil
			}
			hintTextKey16 := new(string)
			if !r.NumberAttribute.InfoHelpers.HintTextKey.IsUnknown() && !r.NumberAttribute.InfoHelpers.HintTextKey.IsNull() {
				*hintTextKey16 = r.NumberAttribute.InfoHelpers.HintTextKey.ValueString()
			} else {
				hintTextKey16 = nil
			}
			hintCustomComponent16 := new(string)
			if !r.NumberAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !r.NumberAttribute.InfoHelpers.HintCustomComponent.IsNull() {
				*hintCustomComponent16 = r.NumberAttribute.InfoHelpers.HintCustomComponent.ValueString()
			} else {
				hintCustomComponent16 = nil
			}
			hintTooltipPlacement16 := new(string)
			if !r.NumberAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !r.NumberAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
				*hintTooltipPlacement16 = r.NumberAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
			} else {
				hintTooltipPlacement16 = nil
			}
			infoHelpers16 = &shared.NumberAttributeAttributeWithCompositeIDInfoHelpers{
				HintText:             hintText16,
				HintTextKey:          hintTextKey16,
				HintCustomComponent:  hintCustomComponent16,
				HintTooltipPlacement: hintTooltipPlacement16,
			}
		}
		typeVar16 := new(shared.NumberAttributeAttributeWithCompositeIDType)
		if !r.NumberAttribute.Type.IsUnknown() && !r.NumberAttribute.Type.IsNull() {
			*typeVar16 = shared.NumberAttributeAttributeWithCompositeIDType(r.NumberAttribute.Type.ValueString())
		} else {
			typeVar16 = nil
		}
		format := new(string)
		if !r.NumberAttribute.Format.IsUnknown() && !r.NumberAttribute.Format.IsNull() {
			*format = r.NumberAttribute.Format.ValueString()
		} else {
			format = nil
		}
		attributeWithCompositeIDNumberAttributeInput = &shared.AttributeWithCompositeIDNumberAttributeInput{
			Name:                     name33,
			Label:                    label17,
			Placeholder:              placeholder16,
			Hidden:                   hidden16,
			ShowInTable:              showInTable16,
			Sortable:                 sortable16,
			Required:                 required16,
			Readonly:                 readonly16,
			Deprecated:               deprecated16,
			DefaultValue:             defaultValue16,
			Group:                    group16,
			Order:                    order16,
			Layout:                   layout16,
			HideLabel:                hideLabel16,
			Icon:                     icon16,
			RenderCondition:          renderCondition16,
			Purpose:                  purpose16,
			Constraints:              constraints16,
			FeatureFlag:              featureFlag17,
			SettingsFlag:             settingsFlag17,
			ValueFormatter:           valueFormatter16,
			PreviewValueFormatter:    previewValueFormatter16,
			EntityBuilderDisableEdit: entityBuilderDisableEdit16,
			Protected:                protected16,
			InfoHelpers:              infoHelpers16,
			Type:                     typeVar16,
			Format:                   format,
		}
	}
	if attributeWithCompositeIDNumberAttributeInput != nil {
		out = shared.AttributeWithCompositeIDInput{
			AttributeWithCompositeIDNumberAttributeInput: attributeWithCompositeIDNumberAttributeInput,
		}
	}
	var attributeWithCompositeIDConsentAttributeInput *shared.AttributeWithCompositeIDConsentAttributeInput
	if r.ConsentAttribute != nil {
		name35 := r.ConsentAttribute.Name.ValueString()
		label18 := r.ConsentAttribute.Label.ValueString()
		placeholder17 := new(string)
		if !r.ConsentAttribute.Placeholder.IsUnknown() && !r.ConsentAttribute.Placeholder.IsNull() {
			*placeholder17 = r.ConsentAttribute.Placeholder.ValueString()
		} else {
			placeholder17 = nil
		}
		hidden17 := new(bool)
		if !r.ConsentAttribute.Hidden.IsUnknown() && !r.ConsentAttribute.Hidden.IsNull() {
			*hidden17 = r.ConsentAttribute.Hidden.ValueBool()
		} else {
			hidden17 = nil
		}
		showInTable17 := new(bool)
		if !r.ConsentAttribute.ShowInTable.IsUnknown() && !r.ConsentAttribute.ShowInTable.IsNull() {
			*showInTable17 = r.ConsentAttribute.ShowInTable.ValueBool()
		} else {
			showInTable17 = nil
		}
		sortable17 := new(bool)
		if !r.ConsentAttribute.Sortable.IsUnknown() && !r.ConsentAttribute.Sortable.IsNull() {
			*sortable17 = r.ConsentAttribute.Sortable.ValueBool()
		} else {
			sortable17 = nil
		}
		required17 := new(bool)
		if !r.ConsentAttribute.Required.IsUnknown() && !r.ConsentAttribute.Required.IsNull() {
			*required17 = r.ConsentAttribute.Required.ValueBool()
		} else {
			required17 = nil
		}
		readonly17 := new(bool)
		if !r.ConsentAttribute.Readonly.IsUnknown() && !r.ConsentAttribute.Readonly.IsNull() {
			*readonly17 = r.ConsentAttribute.Readonly.ValueBool()
		} else {
			readonly17 = nil
		}
		deprecated17 := new(bool)
		if !r.ConsentAttribute.Deprecated.IsUnknown() && !r.ConsentAttribute.Deprecated.IsNull() {
			*deprecated17 = r.ConsentAttribute.Deprecated.ValueBool()
		} else {
			deprecated17 = nil
		}
		var defaultValue17 interface{}
		if !r.ConsentAttribute.DefaultValue.IsUnknown() && !r.ConsentAttribute.DefaultValue.IsNull() {
			_ = json.Unmarshal([]byte(r.ConsentAttribute.DefaultValue.ValueString()), &defaultValue17)
		}
		group17 := new(string)
		if !r.ConsentAttribute.Group.IsUnknown() && !r.ConsentAttribute.Group.IsNull() {
			*group17 = r.ConsentAttribute.Group.ValueString()
		} else {
			group17 = nil
		}
		order17 := new(int64)
		if !r.ConsentAttribute.Order.IsUnknown() && !r.ConsentAttribute.Order.IsNull() {
			*order17 = r.ConsentAttribute.Order.ValueInt64()
		} else {
			order17 = nil
		}
		layout17 := new(string)
		if !r.ConsentAttribute.Layout.IsUnknown() && !r.ConsentAttribute.Layout.IsNull() {
			*layout17 = r.ConsentAttribute.Layout.ValueString()
		} else {
			layout17 = nil
		}
		hideLabel17 := new(bool)
		if !r.ConsentAttribute.HideLabel.IsUnknown() && !r.ConsentAttribute.HideLabel.IsNull() {
			*hideLabel17 = r.ConsentAttribute.HideLabel.ValueBool()
		} else {
			hideLabel17 = nil
		}
		icon17 := new(string)
		if !r.ConsentAttribute.Icon.IsUnknown() && !r.ConsentAttribute.Icon.IsNull() {
			*icon17 = r.ConsentAttribute.Icon.ValueString()
		} else {
			icon17 = nil
		}
		renderCondition17 := new(string)
		if !r.ConsentAttribute.RenderCondition.IsUnknown() && !r.ConsentAttribute.RenderCondition.IsNull() {
			*renderCondition17 = r.ConsentAttribute.RenderCondition.ValueString()
		} else {
			renderCondition17 = nil
		}
		var purpose17 []string = []string{}
		for _, purposeItem17 := range r.ConsentAttribute.Purpose {
			purpose17 = append(purpose17, purposeItem17.ValueString())
		}
		var constraints17 *shared.ConsentAttributeAttributeWithCompositeIDConstraints
		if r.ConsentAttribute.Constraints != nil {
			constraints17 = &shared.ConsentAttributeAttributeWithCompositeIDConstraints{}
		}
		featureFlag18 := new(string)
		if !r.ConsentAttribute.FeatureFlag.IsUnknown() && !r.ConsentAttribute.FeatureFlag.IsNull() {
			*featureFlag18 = r.ConsentAttribute.FeatureFlag.ValueString()
		} else {
			featureFlag18 = nil
		}
		var settingsFlag18 []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem18 := range r.ConsentAttribute.SettingsFlag {
			name36 := new(string)
			if !settingsFlagItem18.Name.IsUnknown() && !settingsFlagItem18.Name.IsNull() {
				*name36 = settingsFlagItem18.Name.ValueString()
			} else {
				name36 = nil
			}
			enabled18 := new(bool)
			if !settingsFlagItem18.Enabled.IsUnknown() && !settingsFlagItem18.Enabled.IsNull() {
				*enabled18 = settingsFlagItem18.Enabled.ValueBool()
			} else {
				enabled18 = nil
			}
			settingsFlag18 = append(settingsFlag18, shared.SettingFlag{
				Name:    name36,
				Enabled: enabled18,
			})
		}
		valueFormatter17 := new(string)
		if !r.ConsentAttribute.ValueFormatter.IsUnknown() && !r.ConsentAttribute.ValueFormatter.IsNull() {
			*valueFormatter17 = r.ConsentAttribute.ValueFormatter.ValueString()
		} else {
			valueFormatter17 = nil
		}
		previewValueFormatter17 := new(string)
		if !r.ConsentAttribute.PreviewValueFormatter.IsUnknown() && !r.ConsentAttribute.PreviewValueFormatter.IsNull() {
			*previewValueFormatter17 = r.ConsentAttribute.PreviewValueFormatter.ValueString()
		} else {
			previewValueFormatter17 = nil
		}
		entityBuilderDisableEdit17 := new(bool)
		if !r.ConsentAttribute.EntityBuilderDisableEdit.IsUnknown() && !r.ConsentAttribute.EntityBuilderDisableEdit.IsNull() {
			*entityBuilderDisableEdit17 = r.ConsentAttribute.EntityBuilderDisableEdit.ValueBool()
		} else {
			entityBuilderDisableEdit17 = nil
		}
		protected17 := new(bool)
		if !r.ConsentAttribute.Protected.IsUnknown() && !r.ConsentAttribute.Protected.IsNull() {
			*protected17 = r.ConsentAttribute.Protected.ValueBool()
		} else {
			protected17 = nil
		}
		var infoHelpers17 *shared.ConsentAttributeAttributeWithCompositeIDInfoHelpers
		if r.ConsentAttribute.InfoHelpers != nil {
			hintText17 := new(string)
			if !r.ConsentAttribute.InfoHelpers.HintText.IsUnknown() && !r.ConsentAttribute.InfoHelpers.HintText.IsNull() {
				*hintText17 = r.ConsentAttribute.InfoHelpers.HintText.ValueString()
			} else {
				hintText17 = nil
			}
			hintTextKey17 := new(string)
			if !r.ConsentAttribute.InfoHelpers.HintTextKey.IsUnknown() && !r.ConsentAttribute.InfoHelpers.HintTextKey.IsNull() {
				*hintTextKey17 = r.ConsentAttribute.InfoHelpers.HintTextKey.ValueString()
			} else {
				hintTextKey17 = nil
			}
			hintCustomComponent17 := new(string)
			if !r.ConsentAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !r.ConsentAttribute.InfoHelpers.HintCustomComponent.IsNull() {
				*hintCustomComponent17 = r.ConsentAttribute.InfoHelpers.HintCustomComponent.ValueString()
			} else {
				hintCustomComponent17 = nil
			}
			hintTooltipPlacement17 := new(string)
			if !r.ConsentAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !r.ConsentAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
				*hintTooltipPlacement17 = r.ConsentAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
			} else {
				hintTooltipPlacement17 = nil
			}
			infoHelpers17 = &shared.ConsentAttributeAttributeWithCompositeIDInfoHelpers{
				HintText:             hintText17,
				HintTextKey:          hintTextKey17,
				HintCustomComponent:  hintCustomComponent17,
				HintTooltipPlacement: hintTooltipPlacement17,
			}
		}
		typeVar17 := shared.ConsentAttributeAttributeWithCompositeIDType(r.ConsentAttribute.Type.ValueString())
		topic := r.ConsentAttribute.Topic.ValueString()
		var identifiers []string = []string{}
		for _, identifiersItem := range r.ConsentAttribute.Identifiers {
			identifiers = append(identifiers, identifiersItem.ValueString())
		}
		attributeWithCompositeIDConsentAttributeInput = &shared.AttributeWithCompositeIDConsentAttributeInput{
			Name:                     name35,
			Label:                    label18,
			Placeholder:              placeholder17,
			Hidden:                   hidden17,
			ShowInTable:              showInTable17,
			Sortable:                 sortable17,
			Required:                 required17,
			Readonly:                 readonly17,
			Deprecated:               deprecated17,
			DefaultValue:             defaultValue17,
			Group:                    group17,
			Order:                    order17,
			Layout:                   layout17,
			HideLabel:                hideLabel17,
			Icon:                     icon17,
			RenderCondition:          renderCondition17,
			Purpose:                  purpose17,
			Constraints:              constraints17,
			FeatureFlag:              featureFlag18,
			SettingsFlag:             settingsFlag18,
			ValueFormatter:           valueFormatter17,
			PreviewValueFormatter:    previewValueFormatter17,
			EntityBuilderDisableEdit: entityBuilderDisableEdit17,
			Protected:                protected17,
			InfoHelpers:              infoHelpers17,
			Type:                     typeVar17,
			Topic:                    topic,
			Identifiers:              identifiers,
		}
	}
	if attributeWithCompositeIDConsentAttributeInput != nil {
		out = shared.AttributeWithCompositeIDInput{
			AttributeWithCompositeIDConsentAttributeInput: attributeWithCompositeIDConsentAttributeInput,
		}
	}
	var attributeWithCompositeIDInternalAttributeInput *shared.AttributeWithCompositeIDInternalAttributeInput
	if r.InternalAttribute != nil {
		name37 := r.InternalAttribute.Name.ValueString()
		label19 := r.InternalAttribute.Label.ValueString()
		placeholder18 := new(string)
		if !r.InternalAttribute.Placeholder.IsUnknown() && !r.InternalAttribute.Placeholder.IsNull() {
			*placeholder18 = r.InternalAttribute.Placeholder.ValueString()
		} else {
			placeholder18 = nil
		}
		hidden18 := new(bool)
		if !r.InternalAttribute.Hidden.IsUnknown() && !r.InternalAttribute.Hidden.IsNull() {
			*hidden18 = r.InternalAttribute.Hidden.ValueBool()
		} else {
			hidden18 = nil
		}
		showInTable18 := new(bool)
		if !r.InternalAttribute.ShowInTable.IsUnknown() && !r.InternalAttribute.ShowInTable.IsNull() {
			*showInTable18 = r.InternalAttribute.ShowInTable.ValueBool()
		} else {
			showInTable18 = nil
		}
		sortable18 := new(bool)
		if !r.InternalAttribute.Sortable.IsUnknown() && !r.InternalAttribute.Sortable.IsNull() {
			*sortable18 = r.InternalAttribute.Sortable.ValueBool()
		} else {
			sortable18 = nil
		}
		required18 := new(bool)
		if !r.InternalAttribute.Required.IsUnknown() && !r.InternalAttribute.Required.IsNull() {
			*required18 = r.InternalAttribute.Required.ValueBool()
		} else {
			required18 = nil
		}
		readonly18 := new(bool)
		if !r.InternalAttribute.Readonly.IsUnknown() && !r.InternalAttribute.Readonly.IsNull() {
			*readonly18 = r.InternalAttribute.Readonly.ValueBool()
		} else {
			readonly18 = nil
		}
		deprecated18 := new(bool)
		if !r.InternalAttribute.Deprecated.IsUnknown() && !r.InternalAttribute.Deprecated.IsNull() {
			*deprecated18 = r.InternalAttribute.Deprecated.ValueBool()
		} else {
			deprecated18 = nil
		}
		var defaultValue18 interface{}
		if !r.InternalAttribute.DefaultValue.IsUnknown() && !r.InternalAttribute.DefaultValue.IsNull() {
			_ = json.Unmarshal([]byte(r.InternalAttribute.DefaultValue.ValueString()), &defaultValue18)
		}
		group18 := new(string)
		if !r.InternalAttribute.Group.IsUnknown() && !r.InternalAttribute.Group.IsNull() {
			*group18 = r.InternalAttribute.Group.ValueString()
		} else {
			group18 = nil
		}
		order18 := new(int64)
		if !r.InternalAttribute.Order.IsUnknown() && !r.InternalAttribute.Order.IsNull() {
			*order18 = r.InternalAttribute.Order.ValueInt64()
		} else {
			order18 = nil
		}
		layout18 := new(string)
		if !r.InternalAttribute.Layout.IsUnknown() && !r.InternalAttribute.Layout.IsNull() {
			*layout18 = r.InternalAttribute.Layout.ValueString()
		} else {
			layout18 = nil
		}
		hideLabel18 := new(bool)
		if !r.InternalAttribute.HideLabel.IsUnknown() && !r.InternalAttribute.HideLabel.IsNull() {
			*hideLabel18 = r.InternalAttribute.HideLabel.ValueBool()
		} else {
			hideLabel18 = nil
		}
		icon18 := new(string)
		if !r.InternalAttribute.Icon.IsUnknown() && !r.InternalAttribute.Icon.IsNull() {
			*icon18 = r.InternalAttribute.Icon.ValueString()
		} else {
			icon18 = nil
		}
		renderCondition18 := new(string)
		if !r.InternalAttribute.RenderCondition.IsUnknown() && !r.InternalAttribute.RenderCondition.IsNull() {
			*renderCondition18 = r.InternalAttribute.RenderCondition.ValueString()
		} else {
			renderCondition18 = nil
		}
		var purpose18 []string = []string{}
		for _, purposeItem18 := range r.InternalAttribute.Purpose {
			purpose18 = append(purpose18, purposeItem18.ValueString())
		}
		var constraints18 *shared.InternalAttributeAttributeWithCompositeIDConstraints
		if r.InternalAttribute.Constraints != nil {
			constraints18 = &shared.InternalAttributeAttributeWithCompositeIDConstraints{}
		}
		featureFlag19 := new(string)
		if !r.InternalAttribute.FeatureFlag.IsUnknown() && !r.InternalAttribute.FeatureFlag.IsNull() {
			*featureFlag19 = r.InternalAttribute.FeatureFlag.ValueString()
		} else {
			featureFlag19 = nil
		}
		var settingsFlag19 []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem19 := range r.InternalAttribute.SettingsFlag {
			name38 := new(string)
			if !settingsFlagItem19.Name.IsUnknown() && !settingsFlagItem19.Name.IsNull() {
				*name38 = settingsFlagItem19.Name.ValueString()
			} else {
				name38 = nil
			}
			enabled19 := new(bool)
			if !settingsFlagItem19.Enabled.IsUnknown() && !settingsFlagItem19.Enabled.IsNull() {
				*enabled19 = settingsFlagItem19.Enabled.ValueBool()
			} else {
				enabled19 = nil
			}
			settingsFlag19 = append(settingsFlag19, shared.SettingFlag{
				Name:    name38,
				Enabled: enabled19,
			})
		}
		valueFormatter18 := new(string)
		if !r.InternalAttribute.ValueFormatter.IsUnknown() && !r.InternalAttribute.ValueFormatter.IsNull() {
			*valueFormatter18 = r.InternalAttribute.ValueFormatter.ValueString()
		} else {
			valueFormatter18 = nil
		}
		previewValueFormatter18 := new(string)
		if !r.InternalAttribute.PreviewValueFormatter.IsUnknown() && !r.InternalAttribute.PreviewValueFormatter.IsNull() {
			*previewValueFormatter18 = r.InternalAttribute.PreviewValueFormatter.ValueString()
		} else {
			previewValueFormatter18 = nil
		}
		entityBuilderDisableEdit18 := new(bool)
		if !r.InternalAttribute.EntityBuilderDisableEdit.IsUnknown() && !r.InternalAttribute.EntityBuilderDisableEdit.IsNull() {
			*entityBuilderDisableEdit18 = r.InternalAttribute.EntityBuilderDisableEdit.ValueBool()
		} else {
			entityBuilderDisableEdit18 = nil
		}
		protected18 := new(bool)
		if !r.InternalAttribute.Protected.IsUnknown() && !r.InternalAttribute.Protected.IsNull() {
			*protected18 = r.InternalAttribute.Protected.ValueBool()
		} else {
			protected18 = nil
		}
		var infoHelpers18 *shared.InternalAttributeAttributeWithCompositeIDInfoHelpers
		if r.InternalAttribute.InfoHelpers != nil {
			hintText18 := new(string)
			if !r.InternalAttribute.InfoHelpers.HintText.IsUnknown() && !r.InternalAttribute.InfoHelpers.HintText.IsNull() {
				*hintText18 = r.InternalAttribute.InfoHelpers.HintText.ValueString()
			} else {
				hintText18 = nil
			}
			hintTextKey18 := new(string)
			if !r.InternalAttribute.InfoHelpers.HintTextKey.IsUnknown() && !r.InternalAttribute.InfoHelpers.HintTextKey.IsNull() {
				*hintTextKey18 = r.InternalAttribute.InfoHelpers.HintTextKey.ValueString()
			} else {
				hintTextKey18 = nil
			}
			hintCustomComponent18 := new(string)
			if !r.InternalAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !r.InternalAttribute.InfoHelpers.HintCustomComponent.IsNull() {
				*hintCustomComponent18 = r.InternalAttribute.InfoHelpers.HintCustomComponent.ValueString()
			} else {
				hintCustomComponent18 = nil
			}
			hintTooltipPlacement18 := new(string)
			if !r.InternalAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !r.InternalAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
				*hintTooltipPlacement18 = r.InternalAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
			} else {
				hintTooltipPlacement18 = nil
			}
			infoHelpers18 = &shared.InternalAttributeAttributeWithCompositeIDInfoHelpers{
				HintText:             hintText18,
				HintTextKey:          hintTextKey18,
				HintCustomComponent:  hintCustomComponent18,
				HintTooltipPlacement: hintTooltipPlacement18,
			}
		}
		typeVar18 := new(shared.InternalAttributeAttributeWithCompositeIDType)
		if !r.InternalAttribute.Type.IsUnknown() && !r.InternalAttribute.Type.IsNull() {
			*typeVar18 = shared.InternalAttributeAttributeWithCompositeIDType(r.InternalAttribute.Type.ValueString())
		} else {
			typeVar18 = nil
		}
		attributeWithCompositeIDInternalAttributeInput = &shared.AttributeWithCompositeIDInternalAttributeInput{
			Name:                     name37,
			Label:                    label19,
			Placeholder:              placeholder18,
			Hidden:                   hidden18,
			ShowInTable:              showInTable18,
			Sortable:                 sortable18,
			Required:                 required18,
			Readonly:                 readonly18,
			Deprecated:               deprecated18,
			DefaultValue:             defaultValue18,
			Group:                    group18,
			Order:                    order18,
			Layout:                   layout18,
			HideLabel:                hideLabel18,
			Icon:                     icon18,
			RenderCondition:          renderCondition18,
			Purpose:                  purpose18,
			Constraints:              constraints18,
			FeatureFlag:              featureFlag19,
			SettingsFlag:             settingsFlag19,
			ValueFormatter:           valueFormatter18,
			PreviewValueFormatter:    previewValueFormatter18,
			EntityBuilderDisableEdit: entityBuilderDisableEdit18,
			Protected:                protected18,
			InfoHelpers:              infoHelpers18,
			Type:                     typeVar18,
		}
	}
	if attributeWithCompositeIDInternalAttributeInput != nil {
		out = shared.AttributeWithCompositeIDInput{
			AttributeWithCompositeIDInternalAttributeInput: attributeWithCompositeIDInternalAttributeInput,
		}
	}
	var attributeWithCompositeIDOrderedListAttributeInput *shared.AttributeWithCompositeIDOrderedListAttributeInput
	if r.OrderedListAttribute != nil {
		name39 := r.OrderedListAttribute.Name.ValueString()
		label20 := r.OrderedListAttribute.Label.ValueString()
		placeholder19 := new(string)
		if !r.OrderedListAttribute.Placeholder.IsUnknown() && !r.OrderedListAttribute.Placeholder.IsNull() {
			*placeholder19 = r.OrderedListAttribute.Placeholder.ValueString()
		} else {
			placeholder19 = nil
		}
		hidden19 := new(bool)
		if !r.OrderedListAttribute.Hidden.IsUnknown() && !r.OrderedListAttribute.Hidden.IsNull() {
			*hidden19 = r.OrderedListAttribute.Hidden.ValueBool()
		} else {
			hidden19 = nil
		}
		showInTable19 := new(bool)
		if !r.OrderedListAttribute.ShowInTable.IsUnknown() && !r.OrderedListAttribute.ShowInTable.IsNull() {
			*showInTable19 = r.OrderedListAttribute.ShowInTable.ValueBool()
		} else {
			showInTable19 = nil
		}
		sortable19 := new(bool)
		if !r.OrderedListAttribute.Sortable.IsUnknown() && !r.OrderedListAttribute.Sortable.IsNull() {
			*sortable19 = r.OrderedListAttribute.Sortable.ValueBool()
		} else {
			sortable19 = nil
		}
		required19 := new(bool)
		if !r.OrderedListAttribute.Required.IsUnknown() && !r.OrderedListAttribute.Required.IsNull() {
			*required19 = r.OrderedListAttribute.Required.ValueBool()
		} else {
			required19 = nil
		}
		readonly19 := new(bool)
		if !r.OrderedListAttribute.Readonly.IsUnknown() && !r.OrderedListAttribute.Readonly.IsNull() {
			*readonly19 = r.OrderedListAttribute.Readonly.ValueBool()
		} else {
			readonly19 = nil
		}
		deprecated19 := new(bool)
		if !r.OrderedListAttribute.Deprecated.IsUnknown() && !r.OrderedListAttribute.Deprecated.IsNull() {
			*deprecated19 = r.OrderedListAttribute.Deprecated.ValueBool()
		} else {
			deprecated19 = nil
		}
		var defaultValue19 interface{}
		if !r.OrderedListAttribute.DefaultValue.IsUnknown() && !r.OrderedListAttribute.DefaultValue.IsNull() {
			_ = json.Unmarshal([]byte(r.OrderedListAttribute.DefaultValue.ValueString()), &defaultValue19)
		}
		group19 := new(string)
		if !r.OrderedListAttribute.Group.IsUnknown() && !r.OrderedListAttribute.Group.IsNull() {
			*group19 = r.OrderedListAttribute.Group.ValueString()
		} else {
			group19 = nil
		}
		order19 := new(int64)
		if !r.OrderedListAttribute.Order.IsUnknown() && !r.OrderedListAttribute.Order.IsNull() {
			*order19 = r.OrderedListAttribute.Order.ValueInt64()
		} else {
			order19 = nil
		}
		layout19 := new(string)
		if !r.OrderedListAttribute.Layout.IsUnknown() && !r.OrderedListAttribute.Layout.IsNull() {
			*layout19 = r.OrderedListAttribute.Layout.ValueString()
		} else {
			layout19 = nil
		}
		hideLabel19 := new(bool)
		if !r.OrderedListAttribute.HideLabel.IsUnknown() && !r.OrderedListAttribute.HideLabel.IsNull() {
			*hideLabel19 = r.OrderedListAttribute.HideLabel.ValueBool()
		} else {
			hideLabel19 = nil
		}
		icon19 := new(string)
		if !r.OrderedListAttribute.Icon.IsUnknown() && !r.OrderedListAttribute.Icon.IsNull() {
			*icon19 = r.OrderedListAttribute.Icon.ValueString()
		} else {
			icon19 = nil
		}
		renderCondition19 := new(string)
		if !r.OrderedListAttribute.RenderCondition.IsUnknown() && !r.OrderedListAttribute.RenderCondition.IsNull() {
			*renderCondition19 = r.OrderedListAttribute.RenderCondition.ValueString()
		} else {
			renderCondition19 = nil
		}
		var purpose19 []string = []string{}
		for _, purposeItem19 := range r.OrderedListAttribute.Purpose {
			purpose19 = append(purpose19, purposeItem19.ValueString())
		}
		var constraints19 *shared.OrderedListAttributeAttributeWithCompositeIDConstraints
		if r.OrderedListAttribute.Constraints != nil {
			constraints19 = &shared.OrderedListAttributeAttributeWithCompositeIDConstraints{}
		}
		featureFlag20 := new(string)
		if !r.OrderedListAttribute.FeatureFlag.IsUnknown() && !r.OrderedListAttribute.FeatureFlag.IsNull() {
			*featureFlag20 = r.OrderedListAttribute.FeatureFlag.ValueString()
		} else {
			featureFlag20 = nil
		}
		var settingsFlag20 []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem20 := range r.OrderedListAttribute.SettingsFlag {
			name40 := new(string)
			if !settingsFlagItem20.Name.IsUnknown() && !settingsFlagItem20.Name.IsNull() {
				*name40 = settingsFlagItem20.Name.ValueString()
			} else {
				name40 = nil
			}
			enabled20 := new(bool)
			if !settingsFlagItem20.Enabled.IsUnknown() && !settingsFlagItem20.Enabled.IsNull() {
				*enabled20 = settingsFlagItem20.Enabled.ValueBool()
			} else {
				enabled20 = nil
			}
			settingsFlag20 = append(settingsFlag20, shared.SettingFlag{
				Name:    name40,
				Enabled: enabled20,
			})
		}
		valueFormatter19 := new(string)
		if !r.OrderedListAttribute.ValueFormatter.IsUnknown() && !r.OrderedListAttribute.ValueFormatter.IsNull() {
			*valueFormatter19 = r.OrderedListAttribute.ValueFormatter.ValueString()
		} else {
			valueFormatter19 = nil
		}
		previewValueFormatter19 := new(string)
		if !r.OrderedListAttribute.PreviewValueFormatter.IsUnknown() && !r.OrderedListAttribute.PreviewValueFormatter.IsNull() {
			*previewValueFormatter19 = r.OrderedListAttribute.PreviewValueFormatter.ValueString()
		} else {
			previewValueFormatter19 = nil
		}
		entityBuilderDisableEdit19 := new(bool)
		if !r.OrderedListAttribute.EntityBuilderDisableEdit.IsUnknown() && !r.OrderedListAttribute.EntityBuilderDisableEdit.IsNull() {
			*entityBuilderDisableEdit19 = r.OrderedListAttribute.EntityBuilderDisableEdit.ValueBool()
		} else {
			entityBuilderDisableEdit19 = nil
		}
		protected19 := new(bool)
		if !r.OrderedListAttribute.Protected.IsUnknown() && !r.OrderedListAttribute.Protected.IsNull() {
			*protected19 = r.OrderedListAttribute.Protected.ValueBool()
		} else {
			protected19 = nil
		}
		var infoHelpers19 *shared.OrderedListAttributeAttributeWithCompositeIDInfoHelpers
		if r.OrderedListAttribute.InfoHelpers != nil {
			hintText19 := new(string)
			if !r.OrderedListAttribute.InfoHelpers.HintText.IsUnknown() && !r.OrderedListAttribute.InfoHelpers.HintText.IsNull() {
				*hintText19 = r.OrderedListAttribute.InfoHelpers.HintText.ValueString()
			} else {
				hintText19 = nil
			}
			hintTextKey19 := new(string)
			if !r.OrderedListAttribute.InfoHelpers.HintTextKey.IsUnknown() && !r.OrderedListAttribute.InfoHelpers.HintTextKey.IsNull() {
				*hintTextKey19 = r.OrderedListAttribute.InfoHelpers.HintTextKey.ValueString()
			} else {
				hintTextKey19 = nil
			}
			hintCustomComponent19 := new(string)
			if !r.OrderedListAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !r.OrderedListAttribute.InfoHelpers.HintCustomComponent.IsNull() {
				*hintCustomComponent19 = r.OrderedListAttribute.InfoHelpers.HintCustomComponent.ValueString()
			} else {
				hintCustomComponent19 = nil
			}
			hintTooltipPlacement19 := new(string)
			if !r.OrderedListAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !r.OrderedListAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
				*hintTooltipPlacement19 = r.OrderedListAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
			} else {
				hintTooltipPlacement19 = nil
			}
			infoHelpers19 = &shared.OrderedListAttributeAttributeWithCompositeIDInfoHelpers{
				HintText:             hintText19,
				HintTextKey:          hintTextKey19,
				HintCustomComponent:  hintCustomComponent19,
				HintTooltipPlacement: hintTooltipPlacement19,
			}
		}
		typeVar19 := new(shared.OrderedListAttributeAttributeWithCompositeIDType)
		if !r.OrderedListAttribute.Type.IsUnknown() && !r.OrderedListAttribute.Type.IsNull() {
			*typeVar19 = shared.OrderedListAttributeAttributeWithCompositeIDType(r.OrderedListAttribute.Type.ValueString())
		} else {
			typeVar19 = nil
		}
		attributeWithCompositeIDOrderedListAttributeInput = &shared.AttributeWithCompositeIDOrderedListAttributeInput{
			Name:                     name39,
			Label:                    label20,
			Placeholder:              placeholder19,
			Hidden:                   hidden19,
			ShowInTable:              showInTable19,
			Sortable:                 sortable19,
			Required:                 required19,
			Readonly:                 readonly19,
			Deprecated:               deprecated19,
			DefaultValue:             defaultValue19,
			Group:                    group19,
			Order:                    order19,
			Layout:                   layout19,
			HideLabel:                hideLabel19,
			Icon:                     icon19,
			RenderCondition:          renderCondition19,
			Purpose:                  purpose19,
			Constraints:              constraints19,
			FeatureFlag:              featureFlag20,
			SettingsFlag:             settingsFlag20,
			ValueFormatter:           valueFormatter19,
			PreviewValueFormatter:    previewValueFormatter19,
			EntityBuilderDisableEdit: entityBuilderDisableEdit19,
			Protected:                protected19,
			InfoHelpers:              infoHelpers19,
			Type:                     typeVar19,
		}
	}
	if attributeWithCompositeIDOrderedListAttributeInput != nil {
		out = shared.AttributeWithCompositeIDInput{
			AttributeWithCompositeIDOrderedListAttributeInput: attributeWithCompositeIDOrderedListAttributeInput,
		}
	}
	var attributeWithCompositeIDFileAttributeInput *shared.AttributeWithCompositeIDFileAttributeInput
	if r.FileAttribute != nil {
		name41 := r.FileAttribute.Name.ValueString()
		label21 := r.FileAttribute.Label.ValueString()
		placeholder20 := new(string)
		if !r.FileAttribute.Placeholder.IsUnknown() && !r.FileAttribute.Placeholder.IsNull() {
			*placeholder20 = r.FileAttribute.Placeholder.ValueString()
		} else {
			placeholder20 = nil
		}
		hidden20 := new(bool)
		if !r.FileAttribute.Hidden.IsUnknown() && !r.FileAttribute.Hidden.IsNull() {
			*hidden20 = r.FileAttribute.Hidden.ValueBool()
		} else {
			hidden20 = nil
		}
		showInTable20 := new(bool)
		if !r.FileAttribute.ShowInTable.IsUnknown() && !r.FileAttribute.ShowInTable.IsNull() {
			*showInTable20 = r.FileAttribute.ShowInTable.ValueBool()
		} else {
			showInTable20 = nil
		}
		sortable20 := new(bool)
		if !r.FileAttribute.Sortable.IsUnknown() && !r.FileAttribute.Sortable.IsNull() {
			*sortable20 = r.FileAttribute.Sortable.ValueBool()
		} else {
			sortable20 = nil
		}
		required20 := new(bool)
		if !r.FileAttribute.Required.IsUnknown() && !r.FileAttribute.Required.IsNull() {
			*required20 = r.FileAttribute.Required.ValueBool()
		} else {
			required20 = nil
		}
		readonly20 := new(bool)
		if !r.FileAttribute.Readonly.IsUnknown() && !r.FileAttribute.Readonly.IsNull() {
			*readonly20 = r.FileAttribute.Readonly.ValueBool()
		} else {
			readonly20 = nil
		}
		deprecated20 := new(bool)
		if !r.FileAttribute.Deprecated.IsUnknown() && !r.FileAttribute.Deprecated.IsNull() {
			*deprecated20 = r.FileAttribute.Deprecated.ValueBool()
		} else {
			deprecated20 = nil
		}
		var defaultValue20 interface{}
		if !r.FileAttribute.DefaultValue.IsUnknown() && !r.FileAttribute.DefaultValue.IsNull() {
			_ = json.Unmarshal([]byte(r.FileAttribute.DefaultValue.ValueString()), &defaultValue20)
		}
		group20 := new(string)
		if !r.FileAttribute.Group.IsUnknown() && !r.FileAttribute.Group.IsNull() {
			*group20 = r.FileAttribute.Group.ValueString()
		} else {
			group20 = nil
		}
		order20 := new(int64)
		if !r.FileAttribute.Order.IsUnknown() && !r.FileAttribute.Order.IsNull() {
			*order20 = r.FileAttribute.Order.ValueInt64()
		} else {
			order20 = nil
		}
		layout20 := new(string)
		if !r.FileAttribute.Layout.IsUnknown() && !r.FileAttribute.Layout.IsNull() {
			*layout20 = r.FileAttribute.Layout.ValueString()
		} else {
			layout20 = nil
		}
		hideLabel20 := new(bool)
		if !r.FileAttribute.HideLabel.IsUnknown() && !r.FileAttribute.HideLabel.IsNull() {
			*hideLabel20 = r.FileAttribute.HideLabel.ValueBool()
		} else {
			hideLabel20 = nil
		}
		icon20 := new(string)
		if !r.FileAttribute.Icon.IsUnknown() && !r.FileAttribute.Icon.IsNull() {
			*icon20 = r.FileAttribute.Icon.ValueString()
		} else {
			icon20 = nil
		}
		renderCondition20 := new(string)
		if !r.FileAttribute.RenderCondition.IsUnknown() && !r.FileAttribute.RenderCondition.IsNull() {
			*renderCondition20 = r.FileAttribute.RenderCondition.ValueString()
		} else {
			renderCondition20 = nil
		}
		var purpose20 []string = []string{}
		for _, purposeItem20 := range r.FileAttribute.Purpose {
			purpose20 = append(purpose20, purposeItem20.ValueString())
		}
		var constraints20 *shared.FileAttributeAttributeWithCompositeIDConstraints
		if r.FileAttribute.Constraints != nil {
			constraints20 = &shared.FileAttributeAttributeWithCompositeIDConstraints{}
		}
		featureFlag21 := new(string)
		if !r.FileAttribute.FeatureFlag.IsUnknown() && !r.FileAttribute.FeatureFlag.IsNull() {
			*featureFlag21 = r.FileAttribute.FeatureFlag.ValueString()
		} else {
			featureFlag21 = nil
		}
		var settingsFlag21 []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem21 := range r.FileAttribute.SettingsFlag {
			name42 := new(string)
			if !settingsFlagItem21.Name.IsUnknown() && !settingsFlagItem21.Name.IsNull() {
				*name42 = settingsFlagItem21.Name.ValueString()
			} else {
				name42 = nil
			}
			enabled21 := new(bool)
			if !settingsFlagItem21.Enabled.IsUnknown() && !settingsFlagItem21.Enabled.IsNull() {
				*enabled21 = settingsFlagItem21.Enabled.ValueBool()
			} else {
				enabled21 = nil
			}
			settingsFlag21 = append(settingsFlag21, shared.SettingFlag{
				Name:    name42,
				Enabled: enabled21,
			})
		}
		valueFormatter20 := new(string)
		if !r.FileAttribute.ValueFormatter.IsUnknown() && !r.FileAttribute.ValueFormatter.IsNull() {
			*valueFormatter20 = r.FileAttribute.ValueFormatter.ValueString()
		} else {
			valueFormatter20 = nil
		}
		previewValueFormatter20 := new(string)
		if !r.FileAttribute.PreviewValueFormatter.IsUnknown() && !r.FileAttribute.PreviewValueFormatter.IsNull() {
			*previewValueFormatter20 = r.FileAttribute.PreviewValueFormatter.ValueString()
		} else {
			previewValueFormatter20 = nil
		}
		entityBuilderDisableEdit20 := new(bool)
		if !r.FileAttribute.EntityBuilderDisableEdit.IsUnknown() && !r.FileAttribute.EntityBuilderDisableEdit.IsNull() {
			*entityBuilderDisableEdit20 = r.FileAttribute.EntityBuilderDisableEdit.ValueBool()
		} else {
			entityBuilderDisableEdit20 = nil
		}
		protected20 := new(bool)
		if !r.FileAttribute.Protected.IsUnknown() && !r.FileAttribute.Protected.IsNull() {
			*protected20 = r.FileAttribute.Protected.ValueBool()
		} else {
			protected20 = nil
		}
		var infoHelpers20 *shared.FileAttributeAttributeWithCompositeIDInfoHelpers
		if r.FileAttribute.InfoHelpers != nil {
			hintText20 := new(string)
			if !r.FileAttribute.InfoHelpers.HintText.IsUnknown() && !r.FileAttribute.InfoHelpers.HintText.IsNull() {
				*hintText20 = r.FileAttribute.InfoHelpers.HintText.ValueString()
			} else {
				hintText20 = nil
			}
			hintTextKey20 := new(string)
			if !r.FileAttribute.InfoHelpers.HintTextKey.IsUnknown() && !r.FileAttribute.InfoHelpers.HintTextKey.IsNull() {
				*hintTextKey20 = r.FileAttribute.InfoHelpers.HintTextKey.ValueString()
			} else {
				hintTextKey20 = nil
			}
			hintCustomComponent20 := new(string)
			if !r.FileAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !r.FileAttribute.InfoHelpers.HintCustomComponent.IsNull() {
				*hintCustomComponent20 = r.FileAttribute.InfoHelpers.HintCustomComponent.ValueString()
			} else {
				hintCustomComponent20 = nil
			}
			hintTooltipPlacement20 := new(string)
			if !r.FileAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !r.FileAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
				*hintTooltipPlacement20 = r.FileAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
			} else {
				hintTooltipPlacement20 = nil
			}
			infoHelpers20 = &shared.FileAttributeAttributeWithCompositeIDInfoHelpers{
				HintText:             hintText20,
				HintTextKey:          hintTextKey20,
				HintCustomComponent:  hintCustomComponent20,
				HintTooltipPlacement: hintTooltipPlacement20,
			}
		}
		typeVar20 := shared.FileAttributeAttributeWithCompositeIDType(r.FileAttribute.Type.ValueString())
		multiple1 := new(bool)
		if !r.FileAttribute.Multiple.IsUnknown() && !r.FileAttribute.Multiple.IsNull() {
			*multiple1 = r.FileAttribute.Multiple.ValueBool()
		} else {
			multiple1 = nil
		}
		var allowedExtensions []string = []string{}
		for _, allowedExtensionsItem := range r.FileAttribute.AllowedExtensions {
			allowedExtensions = append(allowedExtensions, allowedExtensionsItem.ValueString())
		}
		displayImagesLandscaped := new(bool)
		if !r.FileAttribute.DisplayImagesLandscaped.IsUnknown() && !r.FileAttribute.DisplayImagesLandscaped.IsNull() {
			*displayImagesLandscaped = r.FileAttribute.DisplayImagesLandscaped.ValueBool()
		} else {
			displayImagesLandscaped = nil
		}
		enableDescription := new(bool)
		if !r.FileAttribute.EnableDescription.IsUnknown() && !r.FileAttribute.EnableDescription.IsNull() {
			*enableDescription = r.FileAttribute.EnableDescription.ValueBool()
		} else {
			enableDescription = nil
		}
		defaultAccessControl := new(shared.FileAttributeDefaultAccessControl)
		if !r.FileAttribute.DefaultAccessControl.IsUnknown() && !r.FileAttribute.DefaultAccessControl.IsNull() {
			*defaultAccessControl = shared.FileAttributeDefaultAccessControl(r.FileAttribute.DefaultAccessControl.ValueString())
		} else {
			defaultAccessControl = nil
		}
		attributeWithCompositeIDFileAttributeInput = &shared.AttributeWithCompositeIDFileAttributeInput{
			Name:                     name41,
			Label:                    label21,
			Placeholder:              placeholder20,
			Hidden:                   hidden20,
			ShowInTable:              showInTable20,
			Sortable:                 sortable20,
			Required:                 required20,
			Readonly:                 readonly20,
			Deprecated:               deprecated20,
			DefaultValue:             defaultValue20,
			Group:                    group20,
			Order:                    order20,
			Layout:                   layout20,
			HideLabel:                hideLabel20,
			Icon:                     icon20,
			RenderCondition:          renderCondition20,
			Purpose:                  purpose20,
			Constraints:              constraints20,
			FeatureFlag:              featureFlag21,
			SettingsFlag:             settingsFlag21,
			ValueFormatter:           valueFormatter20,
			PreviewValueFormatter:    previewValueFormatter20,
			EntityBuilderDisableEdit: entityBuilderDisableEdit20,
			Protected:                protected20,
			InfoHelpers:              infoHelpers20,
			Type:                     typeVar20,
			Multiple:                 multiple1,
			AllowedExtensions:        allowedExtensions,
			DisplayImagesLandscaped:  displayImagesLandscaped,
			EnableDescription:        enableDescription,
			DefaultAccessControl:     defaultAccessControl,
		}
	}
	if attributeWithCompositeIDFileAttributeInput != nil {
		out = shared.AttributeWithCompositeIDInput{
			AttributeWithCompositeIDFileAttributeInput: attributeWithCompositeIDFileAttributeInput,
		}
	}
	var attributeWithCompositeIDComputedAttributeInput *shared.AttributeWithCompositeIDComputedAttributeInput
	if r.ComputedAttribute != nil {
		name43 := r.ComputedAttribute.Name.ValueString()
		label22 := r.ComputedAttribute.Label.ValueString()
		placeholder21 := new(string)
		if !r.ComputedAttribute.Placeholder.IsUnknown() && !r.ComputedAttribute.Placeholder.IsNull() {
			*placeholder21 = r.ComputedAttribute.Placeholder.ValueString()
		} else {
			placeholder21 = nil
		}
		hidden21 := new(bool)
		if !r.ComputedAttribute.Hidden.IsUnknown() && !r.ComputedAttribute.Hidden.IsNull() {
			*hidden21 = r.ComputedAttribute.Hidden.ValueBool()
		} else {
			hidden21 = nil
		}
		showInTable21 := new(bool)
		if !r.ComputedAttribute.ShowInTable.IsUnknown() && !r.ComputedAttribute.ShowInTable.IsNull() {
			*showInTable21 = r.ComputedAttribute.ShowInTable.ValueBool()
		} else {
			showInTable21 = nil
		}
		sortable21 := new(bool)
		if !r.ComputedAttribute.Sortable.IsUnknown() && !r.ComputedAttribute.Sortable.IsNull() {
			*sortable21 = r.ComputedAttribute.Sortable.ValueBool()
		} else {
			sortable21 = nil
		}
		required21 := new(bool)
		if !r.ComputedAttribute.Required.IsUnknown() && !r.ComputedAttribute.Required.IsNull() {
			*required21 = r.ComputedAttribute.Required.ValueBool()
		} else {
			required21 = nil
		}
		readonly21 := new(bool)
		if !r.ComputedAttribute.Readonly.IsUnknown() && !r.ComputedAttribute.Readonly.IsNull() {
			*readonly21 = r.ComputedAttribute.Readonly.ValueBool()
		} else {
			readonly21 = nil
		}
		deprecated21 := new(bool)
		if !r.ComputedAttribute.Deprecated.IsUnknown() && !r.ComputedAttribute.Deprecated.IsNull() {
			*deprecated21 = r.ComputedAttribute.Deprecated.ValueBool()
		} else {
			deprecated21 = nil
		}
		var defaultValue21 interface{}
		if !r.ComputedAttribute.DefaultValue.IsUnknown() && !r.ComputedAttribute.DefaultValue.IsNull() {
			_ = json.Unmarshal([]byte(r.ComputedAttribute.DefaultValue.ValueString()), &defaultValue21)
		}
		group21 := new(string)
		if !r.ComputedAttribute.Group.IsUnknown() && !r.ComputedAttribute.Group.IsNull() {
			*group21 = r.ComputedAttribute.Group.ValueString()
		} else {
			group21 = nil
		}
		order21 := new(int64)
		if !r.ComputedAttribute.Order.IsUnknown() && !r.ComputedAttribute.Order.IsNull() {
			*order21 = r.ComputedAttribute.Order.ValueInt64()
		} else {
			order21 = nil
		}
		layout21 := new(string)
		if !r.ComputedAttribute.Layout.IsUnknown() && !r.ComputedAttribute.Layout.IsNull() {
			*layout21 = r.ComputedAttribute.Layout.ValueString()
		} else {
			layout21 = nil
		}
		hideLabel21 := new(bool)
		if !r.ComputedAttribute.HideLabel.IsUnknown() && !r.ComputedAttribute.HideLabel.IsNull() {
			*hideLabel21 = r.ComputedAttribute.HideLabel.ValueBool()
		} else {
			hideLabel21 = nil
		}
		icon21 := new(string)
		if !r.ComputedAttribute.Icon.IsUnknown() && !r.ComputedAttribute.Icon.IsNull() {
			*icon21 = r.ComputedAttribute.Icon.ValueString()
		} else {
			icon21 = nil
		}
		renderCondition21 := new(string)
		if !r.ComputedAttribute.RenderCondition.IsUnknown() && !r.ComputedAttribute.RenderCondition.IsNull() {
			*renderCondition21 = r.ComputedAttribute.RenderCondition.ValueString()
		} else {
			renderCondition21 = nil
		}
		var purpose21 []string = []string{}
		for _, purposeItem21 := range r.ComputedAttribute.Purpose {
			purpose21 = append(purpose21, purposeItem21.ValueString())
		}
		var constraints21 *shared.ComputedAttributeAttributeWithCompositeIDConstraints
		if r.ComputedAttribute.Constraints != nil {
			constraints21 = &shared.ComputedAttributeAttributeWithCompositeIDConstraints{}
		}
		featureFlag22 := new(string)
		if !r.ComputedAttribute.FeatureFlag.IsUnknown() && !r.ComputedAttribute.FeatureFlag.IsNull() {
			*featureFlag22 = r.ComputedAttribute.FeatureFlag.ValueString()
		} else {
			featureFlag22 = nil
		}
		var settingsFlag22 []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem22 := range r.ComputedAttribute.SettingsFlag {
			name44 := new(string)
			if !settingsFlagItem22.Name.IsUnknown() && !settingsFlagItem22.Name.IsNull() {
				*name44 = settingsFlagItem22.Name.ValueString()
			} else {
				name44 = nil
			}
			enabled22 := new(bool)
			if !settingsFlagItem22.Enabled.IsUnknown() && !settingsFlagItem22.Enabled.IsNull() {
				*enabled22 = settingsFlagItem22.Enabled.ValueBool()
			} else {
				enabled22 = nil
			}
			settingsFlag22 = append(settingsFlag22, shared.SettingFlag{
				Name:    name44,
				Enabled: enabled22,
			})
		}
		valueFormatter21 := new(string)
		if !r.ComputedAttribute.ValueFormatter.IsUnknown() && !r.ComputedAttribute.ValueFormatter.IsNull() {
			*valueFormatter21 = r.ComputedAttribute.ValueFormatter.ValueString()
		} else {
			valueFormatter21 = nil
		}
		previewValueFormatter21 := new(string)
		if !r.ComputedAttribute.PreviewValueFormatter.IsUnknown() && !r.ComputedAttribute.PreviewValueFormatter.IsNull() {
			*previewValueFormatter21 = r.ComputedAttribute.PreviewValueFormatter.ValueString()
		} else {
			previewValueFormatter21 = nil
		}
		entityBuilderDisableEdit21 := new(bool)
		if !r.ComputedAttribute.EntityBuilderDisableEdit.IsUnknown() && !r.ComputedAttribute.EntityBuilderDisableEdit.IsNull() {
			*entityBuilderDisableEdit21 = r.ComputedAttribute.EntityBuilderDisableEdit.ValueBool()
		} else {
			entityBuilderDisableEdit21 = nil
		}
		protected21 := new(bool)
		if !r.ComputedAttribute.Protected.IsUnknown() && !r.ComputedAttribute.Protected.IsNull() {
			*protected21 = r.ComputedAttribute.Protected.ValueBool()
		} else {
			protected21 = nil
		}
		var infoHelpers21 *shared.ComputedAttributeAttributeWithCompositeIDInfoHelpers
		if r.ComputedAttribute.InfoHelpers != nil {
			hintText21 := new(string)
			if !r.ComputedAttribute.InfoHelpers.HintText.IsUnknown() && !r.ComputedAttribute.InfoHelpers.HintText.IsNull() {
				*hintText21 = r.ComputedAttribute.InfoHelpers.HintText.ValueString()
			} else {
				hintText21 = nil
			}
			hintTextKey21 := new(string)
			if !r.ComputedAttribute.InfoHelpers.HintTextKey.IsUnknown() && !r.ComputedAttribute.InfoHelpers.HintTextKey.IsNull() {
				*hintTextKey21 = r.ComputedAttribute.InfoHelpers.HintTextKey.ValueString()
			} else {
				hintTextKey21 = nil
			}
			hintCustomComponent21 := new(string)
			if !r.ComputedAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !r.ComputedAttribute.InfoHelpers.HintCustomComponent.IsNull() {
				*hintCustomComponent21 = r.ComputedAttribute.InfoHelpers.HintCustomComponent.ValueString()
			} else {
				hintCustomComponent21 = nil
			}
			hintTooltipPlacement21 := new(string)
			if !r.ComputedAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !r.ComputedAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
				*hintTooltipPlacement21 = r.ComputedAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
			} else {
				hintTooltipPlacement21 = nil
			}
			infoHelpers21 = &shared.ComputedAttributeAttributeWithCompositeIDInfoHelpers{
				HintText:             hintText21,
				HintTextKey:          hintTextKey21,
				HintCustomComponent:  hintCustomComponent21,
				HintTooltipPlacement: hintTooltipPlacement21,
			}
		}
		typeVar21 := new(shared.ComputedAttributeAttributeWithCompositeIDType)
		if !r.ComputedAttribute.Type.IsUnknown() && !r.ComputedAttribute.Type.IsNull() {
			*typeVar21 = shared.ComputedAttributeAttributeWithCompositeIDType(r.ComputedAttribute.Type.ValueString())
		} else {
			typeVar21 = nil
		}
		attributeWithCompositeIDComputedAttributeInput = &shared.AttributeWithCompositeIDComputedAttributeInput{
			Name:                     name43,
			Label:                    label22,
			Placeholder:              placeholder21,
			Hidden:                   hidden21,
			ShowInTable:              showInTable21,
			Sortable:                 sortable21,
			Required:                 required21,
			Readonly:                 readonly21,
			Deprecated:               deprecated21,
			DefaultValue:             defaultValue21,
			Group:                    group21,
			Order:                    order21,
			Layout:                   layout21,
			HideLabel:                hideLabel21,
			Icon:                     icon21,
			RenderCondition:          renderCondition21,
			Purpose:                  purpose21,
			Constraints:              constraints21,
			FeatureFlag:              featureFlag22,
			SettingsFlag:             settingsFlag22,
			ValueFormatter:           valueFormatter21,
			PreviewValueFormatter:    previewValueFormatter21,
			EntityBuilderDisableEdit: entityBuilderDisableEdit21,
			Protected:                protected21,
			InfoHelpers:              infoHelpers21,
			Type:                     typeVar21,
		}
	}
	if attributeWithCompositeIDComputedAttributeInput != nil {
		out = shared.AttributeWithCompositeIDInput{
			AttributeWithCompositeIDComputedAttributeInput: attributeWithCompositeIDComputedAttributeInput,
		}
	}
	var attributeWithCompositeIDPartnerStatusAttributeInput *shared.AttributeWithCompositeIDPartnerStatusAttributeInput
	if r.PartnerStatusAttribute != nil {
		name45 := r.PartnerStatusAttribute.Name.ValueString()
		label23 := r.PartnerStatusAttribute.Label.ValueString()
		placeholder22 := new(string)
		if !r.PartnerStatusAttribute.Placeholder.IsUnknown() && !r.PartnerStatusAttribute.Placeholder.IsNull() {
			*placeholder22 = r.PartnerStatusAttribute.Placeholder.ValueString()
		} else {
			placeholder22 = nil
		}
		hidden22 := new(bool)
		if !r.PartnerStatusAttribute.Hidden.IsUnknown() && !r.PartnerStatusAttribute.Hidden.IsNull() {
			*hidden22 = r.PartnerStatusAttribute.Hidden.ValueBool()
		} else {
			hidden22 = nil
		}
		showInTable22 := new(bool)
		if !r.PartnerStatusAttribute.ShowInTable.IsUnknown() && !r.PartnerStatusAttribute.ShowInTable.IsNull() {
			*showInTable22 = r.PartnerStatusAttribute.ShowInTable.ValueBool()
		} else {
			showInTable22 = nil
		}
		sortable22 := new(bool)
		if !r.PartnerStatusAttribute.Sortable.IsUnknown() && !r.PartnerStatusAttribute.Sortable.IsNull() {
			*sortable22 = r.PartnerStatusAttribute.Sortable.ValueBool()
		} else {
			sortable22 = nil
		}
		required22 := new(bool)
		if !r.PartnerStatusAttribute.Required.IsUnknown() && !r.PartnerStatusAttribute.Required.IsNull() {
			*required22 = r.PartnerStatusAttribute.Required.ValueBool()
		} else {
			required22 = nil
		}
		readonly22 := new(bool)
		if !r.PartnerStatusAttribute.Readonly.IsUnknown() && !r.PartnerStatusAttribute.Readonly.IsNull() {
			*readonly22 = r.PartnerStatusAttribute.Readonly.ValueBool()
		} else {
			readonly22 = nil
		}
		deprecated22 := new(bool)
		if !r.PartnerStatusAttribute.Deprecated.IsUnknown() && !r.PartnerStatusAttribute.Deprecated.IsNull() {
			*deprecated22 = r.PartnerStatusAttribute.Deprecated.ValueBool()
		} else {
			deprecated22 = nil
		}
		var defaultValue22 interface{}
		if !r.PartnerStatusAttribute.DefaultValue.IsUnknown() && !r.PartnerStatusAttribute.DefaultValue.IsNull() {
			_ = json.Unmarshal([]byte(r.PartnerStatusAttribute.DefaultValue.ValueString()), &defaultValue22)
		}
		group22 := new(string)
		if !r.PartnerStatusAttribute.Group.IsUnknown() && !r.PartnerStatusAttribute.Group.IsNull() {
			*group22 = r.PartnerStatusAttribute.Group.ValueString()
		} else {
			group22 = nil
		}
		order22 := new(int64)
		if !r.PartnerStatusAttribute.Order.IsUnknown() && !r.PartnerStatusAttribute.Order.IsNull() {
			*order22 = r.PartnerStatusAttribute.Order.ValueInt64()
		} else {
			order22 = nil
		}
		layout22 := new(string)
		if !r.PartnerStatusAttribute.Layout.IsUnknown() && !r.PartnerStatusAttribute.Layout.IsNull() {
			*layout22 = r.PartnerStatusAttribute.Layout.ValueString()
		} else {
			layout22 = nil
		}
		hideLabel22 := new(bool)
		if !r.PartnerStatusAttribute.HideLabel.IsUnknown() && !r.PartnerStatusAttribute.HideLabel.IsNull() {
			*hideLabel22 = r.PartnerStatusAttribute.HideLabel.ValueBool()
		} else {
			hideLabel22 = nil
		}
		icon22 := new(string)
		if !r.PartnerStatusAttribute.Icon.IsUnknown() && !r.PartnerStatusAttribute.Icon.IsNull() {
			*icon22 = r.PartnerStatusAttribute.Icon.ValueString()
		} else {
			icon22 = nil
		}
		renderCondition22 := new(string)
		if !r.PartnerStatusAttribute.RenderCondition.IsUnknown() && !r.PartnerStatusAttribute.RenderCondition.IsNull() {
			*renderCondition22 = r.PartnerStatusAttribute.RenderCondition.ValueString()
		} else {
			renderCondition22 = nil
		}
		var purpose22 []string = []string{}
		for _, purposeItem22 := range r.PartnerStatusAttribute.Purpose {
			purpose22 = append(purpose22, purposeItem22.ValueString())
		}
		var constraints22 *shared.PartnerStatusAttributeAttributeWithCompositeIDConstraints
		if r.PartnerStatusAttribute.Constraints != nil {
			constraints22 = &shared.PartnerStatusAttributeAttributeWithCompositeIDConstraints{}
		}
		featureFlag23 := new(string)
		if !r.PartnerStatusAttribute.FeatureFlag.IsUnknown() && !r.PartnerStatusAttribute.FeatureFlag.IsNull() {
			*featureFlag23 = r.PartnerStatusAttribute.FeatureFlag.ValueString()
		} else {
			featureFlag23 = nil
		}
		var settingsFlag23 []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem23 := range r.PartnerStatusAttribute.SettingsFlag {
			name46 := new(string)
			if !settingsFlagItem23.Name.IsUnknown() && !settingsFlagItem23.Name.IsNull() {
				*name46 = settingsFlagItem23.Name.ValueString()
			} else {
				name46 = nil
			}
			enabled23 := new(bool)
			if !settingsFlagItem23.Enabled.IsUnknown() && !settingsFlagItem23.Enabled.IsNull() {
				*enabled23 = settingsFlagItem23.Enabled.ValueBool()
			} else {
				enabled23 = nil
			}
			settingsFlag23 = append(settingsFlag23, shared.SettingFlag{
				Name:    name46,
				Enabled: enabled23,
			})
		}
		valueFormatter22 := new(string)
		if !r.PartnerStatusAttribute.ValueFormatter.IsUnknown() && !r.PartnerStatusAttribute.ValueFormatter.IsNull() {
			*valueFormatter22 = r.PartnerStatusAttribute.ValueFormatter.ValueString()
		} else {
			valueFormatter22 = nil
		}
		previewValueFormatter22 := new(string)
		if !r.PartnerStatusAttribute.PreviewValueFormatter.IsUnknown() && !r.PartnerStatusAttribute.PreviewValueFormatter.IsNull() {
			*previewValueFormatter22 = r.PartnerStatusAttribute.PreviewValueFormatter.ValueString()
		} else {
			previewValueFormatter22 = nil
		}
		entityBuilderDisableEdit22 := new(bool)
		if !r.PartnerStatusAttribute.EntityBuilderDisableEdit.IsUnknown() && !r.PartnerStatusAttribute.EntityBuilderDisableEdit.IsNull() {
			*entityBuilderDisableEdit22 = r.PartnerStatusAttribute.EntityBuilderDisableEdit.ValueBool()
		} else {
			entityBuilderDisableEdit22 = nil
		}
		protected22 := new(bool)
		if !r.PartnerStatusAttribute.Protected.IsUnknown() && !r.PartnerStatusAttribute.Protected.IsNull() {
			*protected22 = r.PartnerStatusAttribute.Protected.ValueBool()
		} else {
			protected22 = nil
		}
		var infoHelpers22 *shared.PartnerStatusAttributeAttributeWithCompositeIDInfoHelpers
		if r.PartnerStatusAttribute.InfoHelpers != nil {
			hintText22 := new(string)
			if !r.PartnerStatusAttribute.InfoHelpers.HintText.IsUnknown() && !r.PartnerStatusAttribute.InfoHelpers.HintText.IsNull() {
				*hintText22 = r.PartnerStatusAttribute.InfoHelpers.HintText.ValueString()
			} else {
				hintText22 = nil
			}
			hintTextKey22 := new(string)
			if !r.PartnerStatusAttribute.InfoHelpers.HintTextKey.IsUnknown() && !r.PartnerStatusAttribute.InfoHelpers.HintTextKey.IsNull() {
				*hintTextKey22 = r.PartnerStatusAttribute.InfoHelpers.HintTextKey.ValueString()
			} else {
				hintTextKey22 = nil
			}
			hintCustomComponent22 := new(string)
			if !r.PartnerStatusAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !r.PartnerStatusAttribute.InfoHelpers.HintCustomComponent.IsNull() {
				*hintCustomComponent22 = r.PartnerStatusAttribute.InfoHelpers.HintCustomComponent.ValueString()
			} else {
				hintCustomComponent22 = nil
			}
			hintTooltipPlacement22 := new(string)
			if !r.PartnerStatusAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !r.PartnerStatusAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
				*hintTooltipPlacement22 = r.PartnerStatusAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
			} else {
				hintTooltipPlacement22 = nil
			}
			infoHelpers22 = &shared.PartnerStatusAttributeAttributeWithCompositeIDInfoHelpers{
				HintText:             hintText22,
				HintTextKey:          hintTextKey22,
				HintCustomComponent:  hintCustomComponent22,
				HintTooltipPlacement: hintTooltipPlacement22,
			}
		}
		typeVar22 := new(shared.PartnerStatusAttributeAttributeWithCompositeIDType)
		if !r.PartnerStatusAttribute.Type.IsUnknown() && !r.PartnerStatusAttribute.Type.IsNull() {
			*typeVar22 = shared.PartnerStatusAttributeAttributeWithCompositeIDType(r.PartnerStatusAttribute.Type.ValueString())
		} else {
			typeVar22 = nil
		}
		attributeWithCompositeIDPartnerStatusAttributeInput = &shared.AttributeWithCompositeIDPartnerStatusAttributeInput{
			Name:                     name45,
			Label:                    label23,
			Placeholder:              placeholder22,
			Hidden:                   hidden22,
			ShowInTable:              showInTable22,
			Sortable:                 sortable22,
			Required:                 required22,
			Readonly:                 readonly22,
			Deprecated:               deprecated22,
			DefaultValue:             defaultValue22,
			Group:                    group22,
			Order:                    order22,
			Layout:                   layout22,
			HideLabel:                hideLabel22,
			Icon:                     icon22,
			RenderCondition:          renderCondition22,
			Purpose:                  purpose22,
			Constraints:              constraints22,
			FeatureFlag:              featureFlag23,
			SettingsFlag:             settingsFlag23,
			ValueFormatter:           valueFormatter22,
			PreviewValueFormatter:    previewValueFormatter22,
			EntityBuilderDisableEdit: entityBuilderDisableEdit22,
			Protected:                protected22,
			InfoHelpers:              infoHelpers22,
			Type:                     typeVar22,
		}
	}
	if attributeWithCompositeIDPartnerStatusAttributeInput != nil {
		out = shared.AttributeWithCompositeIDInput{
			AttributeWithCompositeIDPartnerStatusAttributeInput: attributeWithCompositeIDPartnerStatusAttributeInput,
		}
	}
	var attributeWithCompositeIDInvitationEmailAttributeInput *shared.AttributeWithCompositeIDInvitationEmailAttributeInput
	if r.InvitationEmailAttribute != nil {
		name47 := r.InvitationEmailAttribute.Name.ValueString()
		label24 := r.InvitationEmailAttribute.Label.ValueString()
		placeholder23 := new(string)
		if !r.InvitationEmailAttribute.Placeholder.IsUnknown() && !r.InvitationEmailAttribute.Placeholder.IsNull() {
			*placeholder23 = r.InvitationEmailAttribute.Placeholder.ValueString()
		} else {
			placeholder23 = nil
		}
		hidden23 := new(bool)
		if !r.InvitationEmailAttribute.Hidden.IsUnknown() && !r.InvitationEmailAttribute.Hidden.IsNull() {
			*hidden23 = r.InvitationEmailAttribute.Hidden.ValueBool()
		} else {
			hidden23 = nil
		}
		showInTable23 := new(bool)
		if !r.InvitationEmailAttribute.ShowInTable.IsUnknown() && !r.InvitationEmailAttribute.ShowInTable.IsNull() {
			*showInTable23 = r.InvitationEmailAttribute.ShowInTable.ValueBool()
		} else {
			showInTable23 = nil
		}
		sortable23 := new(bool)
		if !r.InvitationEmailAttribute.Sortable.IsUnknown() && !r.InvitationEmailAttribute.Sortable.IsNull() {
			*sortable23 = r.InvitationEmailAttribute.Sortable.ValueBool()
		} else {
			sortable23 = nil
		}
		required23 := new(bool)
		if !r.InvitationEmailAttribute.Required.IsUnknown() && !r.InvitationEmailAttribute.Required.IsNull() {
			*required23 = r.InvitationEmailAttribute.Required.ValueBool()
		} else {
			required23 = nil
		}
		readonly23 := new(bool)
		if !r.InvitationEmailAttribute.Readonly.IsUnknown() && !r.InvitationEmailAttribute.Readonly.IsNull() {
			*readonly23 = r.InvitationEmailAttribute.Readonly.ValueBool()
		} else {
			readonly23 = nil
		}
		deprecated23 := new(bool)
		if !r.InvitationEmailAttribute.Deprecated.IsUnknown() && !r.InvitationEmailAttribute.Deprecated.IsNull() {
			*deprecated23 = r.InvitationEmailAttribute.Deprecated.ValueBool()
		} else {
			deprecated23 = nil
		}
		var defaultValue23 interface{}
		if !r.InvitationEmailAttribute.DefaultValue.IsUnknown() && !r.InvitationEmailAttribute.DefaultValue.IsNull() {
			_ = json.Unmarshal([]byte(r.InvitationEmailAttribute.DefaultValue.ValueString()), &defaultValue23)
		}
		group23 := new(string)
		if !r.InvitationEmailAttribute.Group.IsUnknown() && !r.InvitationEmailAttribute.Group.IsNull() {
			*group23 = r.InvitationEmailAttribute.Group.ValueString()
		} else {
			group23 = nil
		}
		order23 := new(int64)
		if !r.InvitationEmailAttribute.Order.IsUnknown() && !r.InvitationEmailAttribute.Order.IsNull() {
			*order23 = r.InvitationEmailAttribute.Order.ValueInt64()
		} else {
			order23 = nil
		}
		layout23 := new(string)
		if !r.InvitationEmailAttribute.Layout.IsUnknown() && !r.InvitationEmailAttribute.Layout.IsNull() {
			*layout23 = r.InvitationEmailAttribute.Layout.ValueString()
		} else {
			layout23 = nil
		}
		hideLabel23 := new(bool)
		if !r.InvitationEmailAttribute.HideLabel.IsUnknown() && !r.InvitationEmailAttribute.HideLabel.IsNull() {
			*hideLabel23 = r.InvitationEmailAttribute.HideLabel.ValueBool()
		} else {
			hideLabel23 = nil
		}
		icon23 := new(string)
		if !r.InvitationEmailAttribute.Icon.IsUnknown() && !r.InvitationEmailAttribute.Icon.IsNull() {
			*icon23 = r.InvitationEmailAttribute.Icon.ValueString()
		} else {
			icon23 = nil
		}
		renderCondition23 := new(string)
		if !r.InvitationEmailAttribute.RenderCondition.IsUnknown() && !r.InvitationEmailAttribute.RenderCondition.IsNull() {
			*renderCondition23 = r.InvitationEmailAttribute.RenderCondition.ValueString()
		} else {
			renderCondition23 = nil
		}
		var purpose23 []string = []string{}
		for _, purposeItem23 := range r.InvitationEmailAttribute.Purpose {
			purpose23 = append(purpose23, purposeItem23.ValueString())
		}
		var constraints23 *shared.InvitationEmailAttributeAttributeWithCompositeIDConstraints
		if r.InvitationEmailAttribute.Constraints != nil {
			constraints23 = &shared.InvitationEmailAttributeAttributeWithCompositeIDConstraints{}
		}
		featureFlag24 := new(string)
		if !r.InvitationEmailAttribute.FeatureFlag.IsUnknown() && !r.InvitationEmailAttribute.FeatureFlag.IsNull() {
			*featureFlag24 = r.InvitationEmailAttribute.FeatureFlag.ValueString()
		} else {
			featureFlag24 = nil
		}
		var settingsFlag24 []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem24 := range r.InvitationEmailAttribute.SettingsFlag {
			name48 := new(string)
			if !settingsFlagItem24.Name.IsUnknown() && !settingsFlagItem24.Name.IsNull() {
				*name48 = settingsFlagItem24.Name.ValueString()
			} else {
				name48 = nil
			}
			enabled24 := new(bool)
			if !settingsFlagItem24.Enabled.IsUnknown() && !settingsFlagItem24.Enabled.IsNull() {
				*enabled24 = settingsFlagItem24.Enabled.ValueBool()
			} else {
				enabled24 = nil
			}
			settingsFlag24 = append(settingsFlag24, shared.SettingFlag{
				Name:    name48,
				Enabled: enabled24,
			})
		}
		valueFormatter23 := new(string)
		if !r.InvitationEmailAttribute.ValueFormatter.IsUnknown() && !r.InvitationEmailAttribute.ValueFormatter.IsNull() {
			*valueFormatter23 = r.InvitationEmailAttribute.ValueFormatter.ValueString()
		} else {
			valueFormatter23 = nil
		}
		previewValueFormatter23 := new(string)
		if !r.InvitationEmailAttribute.PreviewValueFormatter.IsUnknown() && !r.InvitationEmailAttribute.PreviewValueFormatter.IsNull() {
			*previewValueFormatter23 = r.InvitationEmailAttribute.PreviewValueFormatter.ValueString()
		} else {
			previewValueFormatter23 = nil
		}
		entityBuilderDisableEdit23 := new(bool)
		if !r.InvitationEmailAttribute.EntityBuilderDisableEdit.IsUnknown() && !r.InvitationEmailAttribute.EntityBuilderDisableEdit.IsNull() {
			*entityBuilderDisableEdit23 = r.InvitationEmailAttribute.EntityBuilderDisableEdit.ValueBool()
		} else {
			entityBuilderDisableEdit23 = nil
		}
		protected23 := new(bool)
		if !r.InvitationEmailAttribute.Protected.IsUnknown() && !r.InvitationEmailAttribute.Protected.IsNull() {
			*protected23 = r.InvitationEmailAttribute.Protected.ValueBool()
		} else {
			protected23 = nil
		}
		var infoHelpers23 *shared.InvitationEmailAttributeAttributeWithCompositeIDInfoHelpers
		if r.InvitationEmailAttribute.InfoHelpers != nil {
			hintText23 := new(string)
			if !r.InvitationEmailAttribute.InfoHelpers.HintText.IsUnknown() && !r.InvitationEmailAttribute.InfoHelpers.HintText.IsNull() {
				*hintText23 = r.InvitationEmailAttribute.InfoHelpers.HintText.ValueString()
			} else {
				hintText23 = nil
			}
			hintTextKey23 := new(string)
			if !r.InvitationEmailAttribute.InfoHelpers.HintTextKey.IsUnknown() && !r.InvitationEmailAttribute.InfoHelpers.HintTextKey.IsNull() {
				*hintTextKey23 = r.InvitationEmailAttribute.InfoHelpers.HintTextKey.ValueString()
			} else {
				hintTextKey23 = nil
			}
			hintCustomComponent23 := new(string)
			if !r.InvitationEmailAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !r.InvitationEmailAttribute.InfoHelpers.HintCustomComponent.IsNull() {
				*hintCustomComponent23 = r.InvitationEmailAttribute.InfoHelpers.HintCustomComponent.ValueString()
			} else {
				hintCustomComponent23 = nil
			}
			hintTooltipPlacement23 := new(string)
			if !r.InvitationEmailAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !r.InvitationEmailAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
				*hintTooltipPlacement23 = r.InvitationEmailAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
			} else {
				hintTooltipPlacement23 = nil
			}
			infoHelpers23 = &shared.InvitationEmailAttributeAttributeWithCompositeIDInfoHelpers{
				HintText:             hintText23,
				HintTextKey:          hintTextKey23,
				HintCustomComponent:  hintCustomComponent23,
				HintTooltipPlacement: hintTooltipPlacement23,
			}
		}
		typeVar23 := new(shared.InvitationEmailAttributeAttributeWithCompositeIDType)
		if !r.InvitationEmailAttribute.Type.IsUnknown() && !r.InvitationEmailAttribute.Type.IsNull() {
			*typeVar23 = shared.InvitationEmailAttributeAttributeWithCompositeIDType(r.InvitationEmailAttribute.Type.ValueString())
		} else {
			typeVar23 = nil
		}
		attributeWithCompositeIDInvitationEmailAttributeInput = &shared.AttributeWithCompositeIDInvitationEmailAttributeInput{
			Name:                     name47,
			Label:                    label24,
			Placeholder:              placeholder23,
			Hidden:                   hidden23,
			ShowInTable:              showInTable23,
			Sortable:                 sortable23,
			Required:                 required23,
			Readonly:                 readonly23,
			Deprecated:               deprecated23,
			DefaultValue:             defaultValue23,
			Group:                    group23,
			Order:                    order23,
			Layout:                   layout23,
			HideLabel:                hideLabel23,
			Icon:                     icon23,
			RenderCondition:          renderCondition23,
			Purpose:                  purpose23,
			Constraints:              constraints23,
			FeatureFlag:              featureFlag24,
			SettingsFlag:             settingsFlag24,
			ValueFormatter:           valueFormatter23,
			PreviewValueFormatter:    previewValueFormatter23,
			EntityBuilderDisableEdit: entityBuilderDisableEdit23,
			Protected:                protected23,
			InfoHelpers:              infoHelpers23,
			Type:                     typeVar23,
		}
	}
	if attributeWithCompositeIDInvitationEmailAttributeInput != nil {
		out = shared.AttributeWithCompositeIDInput{
			AttributeWithCompositeIDInvitationEmailAttributeInput: attributeWithCompositeIDInvitationEmailAttributeInput,
		}
	}
	var attributeWithCompositeIDAutomationAttributeInput *shared.AttributeWithCompositeIDAutomationAttributeInput
	if r.AutomationAttribute != nil {
		name49 := r.AutomationAttribute.Name.ValueString()
		label25 := r.AutomationAttribute.Label.ValueString()
		placeholder24 := new(string)
		if !r.AutomationAttribute.Placeholder.IsUnknown() && !r.AutomationAttribute.Placeholder.IsNull() {
			*placeholder24 = r.AutomationAttribute.Placeholder.ValueString()
		} else {
			placeholder24 = nil
		}
		hidden24 := new(bool)
		if !r.AutomationAttribute.Hidden.IsUnknown() && !r.AutomationAttribute.Hidden.IsNull() {
			*hidden24 = r.AutomationAttribute.Hidden.ValueBool()
		} else {
			hidden24 = nil
		}
		showInTable24 := new(bool)
		if !r.AutomationAttribute.ShowInTable.IsUnknown() && !r.AutomationAttribute.ShowInTable.IsNull() {
			*showInTable24 = r.AutomationAttribute.ShowInTable.ValueBool()
		} else {
			showInTable24 = nil
		}
		sortable24 := new(bool)
		if !r.AutomationAttribute.Sortable.IsUnknown() && !r.AutomationAttribute.Sortable.IsNull() {
			*sortable24 = r.AutomationAttribute.Sortable.ValueBool()
		} else {
			sortable24 = nil
		}
		required24 := new(bool)
		if !r.AutomationAttribute.Required.IsUnknown() && !r.AutomationAttribute.Required.IsNull() {
			*required24 = r.AutomationAttribute.Required.ValueBool()
		} else {
			required24 = nil
		}
		readonly24 := new(bool)
		if !r.AutomationAttribute.Readonly.IsUnknown() && !r.AutomationAttribute.Readonly.IsNull() {
			*readonly24 = r.AutomationAttribute.Readonly.ValueBool()
		} else {
			readonly24 = nil
		}
		deprecated24 := new(bool)
		if !r.AutomationAttribute.Deprecated.IsUnknown() && !r.AutomationAttribute.Deprecated.IsNull() {
			*deprecated24 = r.AutomationAttribute.Deprecated.ValueBool()
		} else {
			deprecated24 = nil
		}
		var defaultValue24 interface{}
		if !r.AutomationAttribute.DefaultValue.IsUnknown() && !r.AutomationAttribute.DefaultValue.IsNull() {
			_ = json.Unmarshal([]byte(r.AutomationAttribute.DefaultValue.ValueString()), &defaultValue24)
		}
		group24 := new(string)
		if !r.AutomationAttribute.Group.IsUnknown() && !r.AutomationAttribute.Group.IsNull() {
			*group24 = r.AutomationAttribute.Group.ValueString()
		} else {
			group24 = nil
		}
		order24 := new(int64)
		if !r.AutomationAttribute.Order.IsUnknown() && !r.AutomationAttribute.Order.IsNull() {
			*order24 = r.AutomationAttribute.Order.ValueInt64()
		} else {
			order24 = nil
		}
		layout24 := new(string)
		if !r.AutomationAttribute.Layout.IsUnknown() && !r.AutomationAttribute.Layout.IsNull() {
			*layout24 = r.AutomationAttribute.Layout.ValueString()
		} else {
			layout24 = nil
		}
		hideLabel24 := new(bool)
		if !r.AutomationAttribute.HideLabel.IsUnknown() && !r.AutomationAttribute.HideLabel.IsNull() {
			*hideLabel24 = r.AutomationAttribute.HideLabel.ValueBool()
		} else {
			hideLabel24 = nil
		}
		icon24 := new(string)
		if !r.AutomationAttribute.Icon.IsUnknown() && !r.AutomationAttribute.Icon.IsNull() {
			*icon24 = r.AutomationAttribute.Icon.ValueString()
		} else {
			icon24 = nil
		}
		renderCondition24 := new(string)
		if !r.AutomationAttribute.RenderCondition.IsUnknown() && !r.AutomationAttribute.RenderCondition.IsNull() {
			*renderCondition24 = r.AutomationAttribute.RenderCondition.ValueString()
		} else {
			renderCondition24 = nil
		}
		var purpose24 []string = []string{}
		for _, purposeItem24 := range r.AutomationAttribute.Purpose {
			purpose24 = append(purpose24, purposeItem24.ValueString())
		}
		var constraints24 *shared.AutomationAttributeAttributeWithCompositeIDConstraints
		if r.AutomationAttribute.Constraints != nil {
			constraints24 = &shared.AutomationAttributeAttributeWithCompositeIDConstraints{}
		}
		featureFlag25 := new(string)
		if !r.AutomationAttribute.FeatureFlag.IsUnknown() && !r.AutomationAttribute.FeatureFlag.IsNull() {
			*featureFlag25 = r.AutomationAttribute.FeatureFlag.ValueString()
		} else {
			featureFlag25 = nil
		}
		var settingsFlag25 []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem25 := range r.AutomationAttribute.SettingsFlag {
			name50 := new(string)
			if !settingsFlagItem25.Name.IsUnknown() && !settingsFlagItem25.Name.IsNull() {
				*name50 = settingsFlagItem25.Name.ValueString()
			} else {
				name50 = nil
			}
			enabled25 := new(bool)
			if !settingsFlagItem25.Enabled.IsUnknown() && !settingsFlagItem25.Enabled.IsNull() {
				*enabled25 = settingsFlagItem25.Enabled.ValueBool()
			} else {
				enabled25 = nil
			}
			settingsFlag25 = append(settingsFlag25, shared.SettingFlag{
				Name:    name50,
				Enabled: enabled25,
			})
		}
		valueFormatter24 := new(string)
		if !r.AutomationAttribute.ValueFormatter.IsUnknown() && !r.AutomationAttribute.ValueFormatter.IsNull() {
			*valueFormatter24 = r.AutomationAttribute.ValueFormatter.ValueString()
		} else {
			valueFormatter24 = nil
		}
		previewValueFormatter24 := new(string)
		if !r.AutomationAttribute.PreviewValueFormatter.IsUnknown() && !r.AutomationAttribute.PreviewValueFormatter.IsNull() {
			*previewValueFormatter24 = r.AutomationAttribute.PreviewValueFormatter.ValueString()
		} else {
			previewValueFormatter24 = nil
		}
		entityBuilderDisableEdit24 := new(bool)
		if !r.AutomationAttribute.EntityBuilderDisableEdit.IsUnknown() && !r.AutomationAttribute.EntityBuilderDisableEdit.IsNull() {
			*entityBuilderDisableEdit24 = r.AutomationAttribute.EntityBuilderDisableEdit.ValueBool()
		} else {
			entityBuilderDisableEdit24 = nil
		}
		protected24 := new(bool)
		if !r.AutomationAttribute.Protected.IsUnknown() && !r.AutomationAttribute.Protected.IsNull() {
			*protected24 = r.AutomationAttribute.Protected.ValueBool()
		} else {
			protected24 = nil
		}
		var infoHelpers24 *shared.AutomationAttributeAttributeWithCompositeIDInfoHelpers
		if r.AutomationAttribute.InfoHelpers != nil {
			hintText24 := new(string)
			if !r.AutomationAttribute.InfoHelpers.HintText.IsUnknown() && !r.AutomationAttribute.InfoHelpers.HintText.IsNull() {
				*hintText24 = r.AutomationAttribute.InfoHelpers.HintText.ValueString()
			} else {
				hintText24 = nil
			}
			hintTextKey24 := new(string)
			if !r.AutomationAttribute.InfoHelpers.HintTextKey.IsUnknown() && !r.AutomationAttribute.InfoHelpers.HintTextKey.IsNull() {
				*hintTextKey24 = r.AutomationAttribute.InfoHelpers.HintTextKey.ValueString()
			} else {
				hintTextKey24 = nil
			}
			hintCustomComponent24 := new(string)
			if !r.AutomationAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !r.AutomationAttribute.InfoHelpers.HintCustomComponent.IsNull() {
				*hintCustomComponent24 = r.AutomationAttribute.InfoHelpers.HintCustomComponent.ValueString()
			} else {
				hintCustomComponent24 = nil
			}
			hintTooltipPlacement24 := new(string)
			if !r.AutomationAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !r.AutomationAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
				*hintTooltipPlacement24 = r.AutomationAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
			} else {
				hintTooltipPlacement24 = nil
			}
			infoHelpers24 = &shared.AutomationAttributeAttributeWithCompositeIDInfoHelpers{
				HintText:             hintText24,
				HintTextKey:          hintTextKey24,
				HintCustomComponent:  hintCustomComponent24,
				HintTooltipPlacement: hintTooltipPlacement24,
			}
		}
		typeVar24 := new(shared.AutomationAttributeAttributeWithCompositeIDType)
		if !r.AutomationAttribute.Type.IsUnknown() && !r.AutomationAttribute.Type.IsNull() {
			*typeVar24 = shared.AutomationAttributeAttributeWithCompositeIDType(r.AutomationAttribute.Type.ValueString())
		} else {
			typeVar24 = nil
		}
		attributeWithCompositeIDAutomationAttributeInput = &shared.AttributeWithCompositeIDAutomationAttributeInput{
			Name:                     name49,
			Label:                    label25,
			Placeholder:              placeholder24,
			Hidden:                   hidden24,
			ShowInTable:              showInTable24,
			Sortable:                 sortable24,
			Required:                 required24,
			Readonly:                 readonly24,
			Deprecated:               deprecated24,
			DefaultValue:             defaultValue24,
			Group:                    group24,
			Order:                    order24,
			Layout:                   layout24,
			HideLabel:                hideLabel24,
			Icon:                     icon24,
			RenderCondition:          renderCondition24,
			Purpose:                  purpose24,
			Constraints:              constraints24,
			FeatureFlag:              featureFlag25,
			SettingsFlag:             settingsFlag25,
			ValueFormatter:           valueFormatter24,
			PreviewValueFormatter:    previewValueFormatter24,
			EntityBuilderDisableEdit: entityBuilderDisableEdit24,
			Protected:                protected24,
			InfoHelpers:              infoHelpers24,
			Type:                     typeVar24,
		}
	}
	if attributeWithCompositeIDAutomationAttributeInput != nil {
		out = shared.AttributeWithCompositeIDInput{
			AttributeWithCompositeIDAutomationAttributeInput: attributeWithCompositeIDAutomationAttributeInput,
		}
	}
	var attributeWithCompositeIDInternalUserAttributeInput *shared.AttributeWithCompositeIDInternalUserAttributeInput
	if r.InternalUserAttribute != nil {
		name51 := r.InternalUserAttribute.Name.ValueString()
		label26 := r.InternalUserAttribute.Label.ValueString()
		placeholder25 := new(string)
		if !r.InternalUserAttribute.Placeholder.IsUnknown() && !r.InternalUserAttribute.Placeholder.IsNull() {
			*placeholder25 = r.InternalUserAttribute.Placeholder.ValueString()
		} else {
			placeholder25 = nil
		}
		hidden25 := new(bool)
		if !r.InternalUserAttribute.Hidden.IsUnknown() && !r.InternalUserAttribute.Hidden.IsNull() {
			*hidden25 = r.InternalUserAttribute.Hidden.ValueBool()
		} else {
			hidden25 = nil
		}
		showInTable25 := new(bool)
		if !r.InternalUserAttribute.ShowInTable.IsUnknown() && !r.InternalUserAttribute.ShowInTable.IsNull() {
			*showInTable25 = r.InternalUserAttribute.ShowInTable.ValueBool()
		} else {
			showInTable25 = nil
		}
		sortable25 := new(bool)
		if !r.InternalUserAttribute.Sortable.IsUnknown() && !r.InternalUserAttribute.Sortable.IsNull() {
			*sortable25 = r.InternalUserAttribute.Sortable.ValueBool()
		} else {
			sortable25 = nil
		}
		required25 := new(bool)
		if !r.InternalUserAttribute.Required.IsUnknown() && !r.InternalUserAttribute.Required.IsNull() {
			*required25 = r.InternalUserAttribute.Required.ValueBool()
		} else {
			required25 = nil
		}
		readonly25 := new(bool)
		if !r.InternalUserAttribute.Readonly.IsUnknown() && !r.InternalUserAttribute.Readonly.IsNull() {
			*readonly25 = r.InternalUserAttribute.Readonly.ValueBool()
		} else {
			readonly25 = nil
		}
		deprecated25 := new(bool)
		if !r.InternalUserAttribute.Deprecated.IsUnknown() && !r.InternalUserAttribute.Deprecated.IsNull() {
			*deprecated25 = r.InternalUserAttribute.Deprecated.ValueBool()
		} else {
			deprecated25 = nil
		}
		var defaultValue25 interface{}
		if !r.InternalUserAttribute.DefaultValue.IsUnknown() && !r.InternalUserAttribute.DefaultValue.IsNull() {
			_ = json.Unmarshal([]byte(r.InternalUserAttribute.DefaultValue.ValueString()), &defaultValue25)
		}
		group25 := new(string)
		if !r.InternalUserAttribute.Group.IsUnknown() && !r.InternalUserAttribute.Group.IsNull() {
			*group25 = r.InternalUserAttribute.Group.ValueString()
		} else {
			group25 = nil
		}
		order25 := new(int64)
		if !r.InternalUserAttribute.Order.IsUnknown() && !r.InternalUserAttribute.Order.IsNull() {
			*order25 = r.InternalUserAttribute.Order.ValueInt64()
		} else {
			order25 = nil
		}
		layout25 := new(string)
		if !r.InternalUserAttribute.Layout.IsUnknown() && !r.InternalUserAttribute.Layout.IsNull() {
			*layout25 = r.InternalUserAttribute.Layout.ValueString()
		} else {
			layout25 = nil
		}
		hideLabel25 := new(bool)
		if !r.InternalUserAttribute.HideLabel.IsUnknown() && !r.InternalUserAttribute.HideLabel.IsNull() {
			*hideLabel25 = r.InternalUserAttribute.HideLabel.ValueBool()
		} else {
			hideLabel25 = nil
		}
		icon25 := new(string)
		if !r.InternalUserAttribute.Icon.IsUnknown() && !r.InternalUserAttribute.Icon.IsNull() {
			*icon25 = r.InternalUserAttribute.Icon.ValueString()
		} else {
			icon25 = nil
		}
		renderCondition25 := new(string)
		if !r.InternalUserAttribute.RenderCondition.IsUnknown() && !r.InternalUserAttribute.RenderCondition.IsNull() {
			*renderCondition25 = r.InternalUserAttribute.RenderCondition.ValueString()
		} else {
			renderCondition25 = nil
		}
		var purpose25 []string = []string{}
		for _, purposeItem25 := range r.InternalUserAttribute.Purpose {
			purpose25 = append(purpose25, purposeItem25.ValueString())
		}
		var constraints25 *shared.InternalUserAttributeAttributeWithCompositeIDConstraints
		if r.InternalUserAttribute.Constraints != nil {
			constraints25 = &shared.InternalUserAttributeAttributeWithCompositeIDConstraints{}
		}
		featureFlag26 := new(string)
		if !r.InternalUserAttribute.FeatureFlag.IsUnknown() && !r.InternalUserAttribute.FeatureFlag.IsNull() {
			*featureFlag26 = r.InternalUserAttribute.FeatureFlag.ValueString()
		} else {
			featureFlag26 = nil
		}
		var settingsFlag26 []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem26 := range r.InternalUserAttribute.SettingsFlag {
			name52 := new(string)
			if !settingsFlagItem26.Name.IsUnknown() && !settingsFlagItem26.Name.IsNull() {
				*name52 = settingsFlagItem26.Name.ValueString()
			} else {
				name52 = nil
			}
			enabled26 := new(bool)
			if !settingsFlagItem26.Enabled.IsUnknown() && !settingsFlagItem26.Enabled.IsNull() {
				*enabled26 = settingsFlagItem26.Enabled.ValueBool()
			} else {
				enabled26 = nil
			}
			settingsFlag26 = append(settingsFlag26, shared.SettingFlag{
				Name:    name52,
				Enabled: enabled26,
			})
		}
		valueFormatter25 := new(string)
		if !r.InternalUserAttribute.ValueFormatter.IsUnknown() && !r.InternalUserAttribute.ValueFormatter.IsNull() {
			*valueFormatter25 = r.InternalUserAttribute.ValueFormatter.ValueString()
		} else {
			valueFormatter25 = nil
		}
		previewValueFormatter25 := new(string)
		if !r.InternalUserAttribute.PreviewValueFormatter.IsUnknown() && !r.InternalUserAttribute.PreviewValueFormatter.IsNull() {
			*previewValueFormatter25 = r.InternalUserAttribute.PreviewValueFormatter.ValueString()
		} else {
			previewValueFormatter25 = nil
		}
		entityBuilderDisableEdit25 := new(bool)
		if !r.InternalUserAttribute.EntityBuilderDisableEdit.IsUnknown() && !r.InternalUserAttribute.EntityBuilderDisableEdit.IsNull() {
			*entityBuilderDisableEdit25 = r.InternalUserAttribute.EntityBuilderDisableEdit.ValueBool()
		} else {
			entityBuilderDisableEdit25 = nil
		}
		protected25 := new(bool)
		if !r.InternalUserAttribute.Protected.IsUnknown() && !r.InternalUserAttribute.Protected.IsNull() {
			*protected25 = r.InternalUserAttribute.Protected.ValueBool()
		} else {
			protected25 = nil
		}
		var infoHelpers25 *shared.InternalUserAttributeAttributeWithCompositeIDInfoHelpers
		if r.InternalUserAttribute.InfoHelpers != nil {
			hintText25 := new(string)
			if !r.InternalUserAttribute.InfoHelpers.HintText.IsUnknown() && !r.InternalUserAttribute.InfoHelpers.HintText.IsNull() {
				*hintText25 = r.InternalUserAttribute.InfoHelpers.HintText.ValueString()
			} else {
				hintText25 = nil
			}
			hintTextKey25 := new(string)
			if !r.InternalUserAttribute.InfoHelpers.HintTextKey.IsUnknown() && !r.InternalUserAttribute.InfoHelpers.HintTextKey.IsNull() {
				*hintTextKey25 = r.InternalUserAttribute.InfoHelpers.HintTextKey.ValueString()
			} else {
				hintTextKey25 = nil
			}
			hintCustomComponent25 := new(string)
			if !r.InternalUserAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !r.InternalUserAttribute.InfoHelpers.HintCustomComponent.IsNull() {
				*hintCustomComponent25 = r.InternalUserAttribute.InfoHelpers.HintCustomComponent.ValueString()
			} else {
				hintCustomComponent25 = nil
			}
			hintTooltipPlacement25 := new(string)
			if !r.InternalUserAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !r.InternalUserAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
				*hintTooltipPlacement25 = r.InternalUserAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
			} else {
				hintTooltipPlacement25 = nil
			}
			infoHelpers25 = &shared.InternalUserAttributeAttributeWithCompositeIDInfoHelpers{
				HintText:             hintText25,
				HintTextKey:          hintTextKey25,
				HintCustomComponent:  hintCustomComponent25,
				HintTooltipPlacement: hintTooltipPlacement25,
			}
		}
		typeVar25 := new(shared.InternalUserAttributeAttributeWithCompositeIDType)
		if !r.InternalUserAttribute.Type.IsUnknown() && !r.InternalUserAttribute.Type.IsNull() {
			*typeVar25 = shared.InternalUserAttributeAttributeWithCompositeIDType(r.InternalUserAttribute.Type.ValueString())
		} else {
			typeVar25 = nil
		}
		attributeWithCompositeIDInternalUserAttributeInput = &shared.AttributeWithCompositeIDInternalUserAttributeInput{
			Name:                     name51,
			Label:                    label26,
			Placeholder:              placeholder25,
			Hidden:                   hidden25,
			ShowInTable:              showInTable25,
			Sortable:                 sortable25,
			Required:                 required25,
			Readonly:                 readonly25,
			Deprecated:               deprecated25,
			DefaultValue:             defaultValue25,
			Group:                    group25,
			Order:                    order25,
			Layout:                   layout25,
			HideLabel:                hideLabel25,
			Icon:                     icon25,
			RenderCondition:          renderCondition25,
			Purpose:                  purpose25,
			Constraints:              constraints25,
			FeatureFlag:              featureFlag26,
			SettingsFlag:             settingsFlag26,
			ValueFormatter:           valueFormatter25,
			PreviewValueFormatter:    previewValueFormatter25,
			EntityBuilderDisableEdit: entityBuilderDisableEdit25,
			Protected:                protected25,
			InfoHelpers:              infoHelpers25,
			Type:                     typeVar25,
		}
	}
	if attributeWithCompositeIDInternalUserAttributeInput != nil {
		out = shared.AttributeWithCompositeIDInput{
			AttributeWithCompositeIDInternalUserAttributeInput: attributeWithCompositeIDInternalUserAttributeInput,
		}
	}
	var attributeWithCompositeIDPurposeAttributeInput *shared.AttributeWithCompositeIDPurposeAttributeInput
	if r.PurposeAttribute != nil {
		name53 := r.PurposeAttribute.Name.ValueString()
		label27 := r.PurposeAttribute.Label.ValueString()
		placeholder26 := new(string)
		if !r.PurposeAttribute.Placeholder.IsUnknown() && !r.PurposeAttribute.Placeholder.IsNull() {
			*placeholder26 = r.PurposeAttribute.Placeholder.ValueString()
		} else {
			placeholder26 = nil
		}
		hidden26 := new(bool)
		if !r.PurposeAttribute.Hidden.IsUnknown() && !r.PurposeAttribute.Hidden.IsNull() {
			*hidden26 = r.PurposeAttribute.Hidden.ValueBool()
		} else {
			hidden26 = nil
		}
		showInTable26 := new(bool)
		if !r.PurposeAttribute.ShowInTable.IsUnknown() && !r.PurposeAttribute.ShowInTable.IsNull() {
			*showInTable26 = r.PurposeAttribute.ShowInTable.ValueBool()
		} else {
			showInTable26 = nil
		}
		sortable26 := new(bool)
		if !r.PurposeAttribute.Sortable.IsUnknown() && !r.PurposeAttribute.Sortable.IsNull() {
			*sortable26 = r.PurposeAttribute.Sortable.ValueBool()
		} else {
			sortable26 = nil
		}
		required26 := new(bool)
		if !r.PurposeAttribute.Required.IsUnknown() && !r.PurposeAttribute.Required.IsNull() {
			*required26 = r.PurposeAttribute.Required.ValueBool()
		} else {
			required26 = nil
		}
		readonly26 := new(bool)
		if !r.PurposeAttribute.Readonly.IsUnknown() && !r.PurposeAttribute.Readonly.IsNull() {
			*readonly26 = r.PurposeAttribute.Readonly.ValueBool()
		} else {
			readonly26 = nil
		}
		deprecated26 := new(bool)
		if !r.PurposeAttribute.Deprecated.IsUnknown() && !r.PurposeAttribute.Deprecated.IsNull() {
			*deprecated26 = r.PurposeAttribute.Deprecated.ValueBool()
		} else {
			deprecated26 = nil
		}
		var defaultValue26 interface{}
		if !r.PurposeAttribute.DefaultValue.IsUnknown() && !r.PurposeAttribute.DefaultValue.IsNull() {
			_ = json.Unmarshal([]byte(r.PurposeAttribute.DefaultValue.ValueString()), &defaultValue26)
		}
		group26 := new(string)
		if !r.PurposeAttribute.Group.IsUnknown() && !r.PurposeAttribute.Group.IsNull() {
			*group26 = r.PurposeAttribute.Group.ValueString()
		} else {
			group26 = nil
		}
		order26 := new(int64)
		if !r.PurposeAttribute.Order.IsUnknown() && !r.PurposeAttribute.Order.IsNull() {
			*order26 = r.PurposeAttribute.Order.ValueInt64()
		} else {
			order26 = nil
		}
		layout26 := new(string)
		if !r.PurposeAttribute.Layout.IsUnknown() && !r.PurposeAttribute.Layout.IsNull() {
			*layout26 = r.PurposeAttribute.Layout.ValueString()
		} else {
			layout26 = nil
		}
		hideLabel26 := new(bool)
		if !r.PurposeAttribute.HideLabel.IsUnknown() && !r.PurposeAttribute.HideLabel.IsNull() {
			*hideLabel26 = r.PurposeAttribute.HideLabel.ValueBool()
		} else {
			hideLabel26 = nil
		}
		icon26 := new(string)
		if !r.PurposeAttribute.Icon.IsUnknown() && !r.PurposeAttribute.Icon.IsNull() {
			*icon26 = r.PurposeAttribute.Icon.ValueString()
		} else {
			icon26 = nil
		}
		renderCondition26 := new(string)
		if !r.PurposeAttribute.RenderCondition.IsUnknown() && !r.PurposeAttribute.RenderCondition.IsNull() {
			*renderCondition26 = r.PurposeAttribute.RenderCondition.ValueString()
		} else {
			renderCondition26 = nil
		}
		var purpose26 []string = []string{}
		for _, purposeItem26 := range r.PurposeAttribute.Purpose {
			purpose26 = append(purpose26, purposeItem26.ValueString())
		}
		var constraints26 *shared.PurposeAttributeAttributeWithCompositeIDConstraints
		if r.PurposeAttribute.Constraints != nil {
			constraints26 = &shared.PurposeAttributeAttributeWithCompositeIDConstraints{}
		}
		featureFlag27 := new(string)
		if !r.PurposeAttribute.FeatureFlag.IsUnknown() && !r.PurposeAttribute.FeatureFlag.IsNull() {
			*featureFlag27 = r.PurposeAttribute.FeatureFlag.ValueString()
		} else {
			featureFlag27 = nil
		}
		var settingsFlag27 []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem27 := range r.PurposeAttribute.SettingsFlag {
			name54 := new(string)
			if !settingsFlagItem27.Name.IsUnknown() && !settingsFlagItem27.Name.IsNull() {
				*name54 = settingsFlagItem27.Name.ValueString()
			} else {
				name54 = nil
			}
			enabled27 := new(bool)
			if !settingsFlagItem27.Enabled.IsUnknown() && !settingsFlagItem27.Enabled.IsNull() {
				*enabled27 = settingsFlagItem27.Enabled.ValueBool()
			} else {
				enabled27 = nil
			}
			settingsFlag27 = append(settingsFlag27, shared.SettingFlag{
				Name:    name54,
				Enabled: enabled27,
			})
		}
		valueFormatter26 := new(string)
		if !r.PurposeAttribute.ValueFormatter.IsUnknown() && !r.PurposeAttribute.ValueFormatter.IsNull() {
			*valueFormatter26 = r.PurposeAttribute.ValueFormatter.ValueString()
		} else {
			valueFormatter26 = nil
		}
		previewValueFormatter26 := new(string)
		if !r.PurposeAttribute.PreviewValueFormatter.IsUnknown() && !r.PurposeAttribute.PreviewValueFormatter.IsNull() {
			*previewValueFormatter26 = r.PurposeAttribute.PreviewValueFormatter.ValueString()
		} else {
			previewValueFormatter26 = nil
		}
		entityBuilderDisableEdit26 := new(bool)
		if !r.PurposeAttribute.EntityBuilderDisableEdit.IsUnknown() && !r.PurposeAttribute.EntityBuilderDisableEdit.IsNull() {
			*entityBuilderDisableEdit26 = r.PurposeAttribute.EntityBuilderDisableEdit.ValueBool()
		} else {
			entityBuilderDisableEdit26 = nil
		}
		protected26 := new(bool)
		if !r.PurposeAttribute.Protected.IsUnknown() && !r.PurposeAttribute.Protected.IsNull() {
			*protected26 = r.PurposeAttribute.Protected.ValueBool()
		} else {
			protected26 = nil
		}
		var infoHelpers26 *shared.PurposeAttributeAttributeWithCompositeIDInfoHelpers
		if r.PurposeAttribute.InfoHelpers != nil {
			hintText26 := new(string)
			if !r.PurposeAttribute.InfoHelpers.HintText.IsUnknown() && !r.PurposeAttribute.InfoHelpers.HintText.IsNull() {
				*hintText26 = r.PurposeAttribute.InfoHelpers.HintText.ValueString()
			} else {
				hintText26 = nil
			}
			hintTextKey26 := new(string)
			if !r.PurposeAttribute.InfoHelpers.HintTextKey.IsUnknown() && !r.PurposeAttribute.InfoHelpers.HintTextKey.IsNull() {
				*hintTextKey26 = r.PurposeAttribute.InfoHelpers.HintTextKey.ValueString()
			} else {
				hintTextKey26 = nil
			}
			hintCustomComponent26 := new(string)
			if !r.PurposeAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !r.PurposeAttribute.InfoHelpers.HintCustomComponent.IsNull() {
				*hintCustomComponent26 = r.PurposeAttribute.InfoHelpers.HintCustomComponent.ValueString()
			} else {
				hintCustomComponent26 = nil
			}
			hintTooltipPlacement26 := new(string)
			if !r.PurposeAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !r.PurposeAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
				*hintTooltipPlacement26 = r.PurposeAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
			} else {
				hintTooltipPlacement26 = nil
			}
			infoHelpers26 = &shared.PurposeAttributeAttributeWithCompositeIDInfoHelpers{
				HintText:             hintText26,
				HintTextKey:          hintTextKey26,
				HintCustomComponent:  hintCustomComponent26,
				HintTooltipPlacement: hintTooltipPlacement26,
			}
		}
		id1 := new(string)
		if !r.PurposeAttribute.ID.IsUnknown() && !r.PurposeAttribute.ID.IsNull() {
			*id1 = r.PurposeAttribute.ID.ValueString()
		} else {
			id1 = nil
		}
		slug := new(string)
		if !r.PurposeAttribute.Slug.IsUnknown() && !r.PurposeAttribute.Slug.IsNull() {
			*slug = r.PurposeAttribute.Slug.ValueString()
		} else {
			slug = nil
		}
		var parents []string = []string{}
		for _, parentsItem := range r.PurposeAttribute.Parents {
			parents = append(parents, parentsItem.ValueString())
		}
		createdAt1 := new(time.Time)
		if !r.PurposeAttribute.CreatedAt.IsUnknown() && !r.PurposeAttribute.CreatedAt.IsNull() {
			*createdAt1, _ = time.Parse(time.RFC3339Nano, r.PurposeAttribute.CreatedAt.ValueString())
		} else {
			createdAt1 = nil
		}
		updatedAt1 := new(time.Time)
		if !r.PurposeAttribute.UpdatedAt.IsUnknown() && !r.PurposeAttribute.UpdatedAt.IsNull() {
			*updatedAt1, _ = time.Parse(time.RFC3339Nano, r.PurposeAttribute.UpdatedAt.ValueString())
		} else {
			updatedAt1 = nil
		}
		typeVar26 := new(shared.PurposeAttributeAttributeWithCompositeIDType)
		if !r.PurposeAttribute.Type.IsUnknown() && !r.PurposeAttribute.Type.IsNull() {
			*typeVar26 = shared.PurposeAttributeAttributeWithCompositeIDType(r.PurposeAttribute.Type.ValueString())
		} else {
			typeVar26 = nil
		}
		attributeWithCompositeIDPurposeAttributeInput = &shared.AttributeWithCompositeIDPurposeAttributeInput{
			Name:                     name53,
			Label:                    label27,
			Placeholder:              placeholder26,
			Hidden:                   hidden26,
			ShowInTable:              showInTable26,
			Sortable:                 sortable26,
			Required:                 required26,
			Readonly:                 readonly26,
			Deprecated:               deprecated26,
			DefaultValue:             defaultValue26,
			Group:                    group26,
			Order:                    order26,
			Layout:                   layout26,
			HideLabel:                hideLabel26,
			Icon:                     icon26,
			RenderCondition:          renderCondition26,
			Purpose:                  purpose26,
			Constraints:              constraints26,
			FeatureFlag:              featureFlag27,
			SettingsFlag:             settingsFlag27,
			ValueFormatter:           valueFormatter26,
			PreviewValueFormatter:    previewValueFormatter26,
			EntityBuilderDisableEdit: entityBuilderDisableEdit26,
			Protected:                protected26,
			InfoHelpers:              infoHelpers26,
			ID:                       id1,
			Slug:                     slug,
			Parents:                  parents,
			CreatedAt:                createdAt1,
			UpdatedAt:                updatedAt1,
			Type:                     typeVar26,
		}
	}
	if attributeWithCompositeIDPurposeAttributeInput != nil {
		out = shared.AttributeWithCompositeIDInput{
			AttributeWithCompositeIDPurposeAttributeInput: attributeWithCompositeIDPurposeAttributeInput,
		}
	}
	var attributeWithCompositeIDPartnerOrganisationAttributeInput *shared.AttributeWithCompositeIDPartnerOrganisationAttributeInput
	if r.PartnerOrganisationAttribute != nil {
		name55 := r.PartnerOrganisationAttribute.Name.ValueString()
		label28 := r.PartnerOrganisationAttribute.Label.ValueString()
		placeholder27 := new(string)
		if !r.PartnerOrganisationAttribute.Placeholder.IsUnknown() && !r.PartnerOrganisationAttribute.Placeholder.IsNull() {
			*placeholder27 = r.PartnerOrganisationAttribute.Placeholder.ValueString()
		} else {
			placeholder27 = nil
		}
		hidden27 := new(bool)
		if !r.PartnerOrganisationAttribute.Hidden.IsUnknown() && !r.PartnerOrganisationAttribute.Hidden.IsNull() {
			*hidden27 = r.PartnerOrganisationAttribute.Hidden.ValueBool()
		} else {
			hidden27 = nil
		}
		showInTable27 := new(bool)
		if !r.PartnerOrganisationAttribute.ShowInTable.IsUnknown() && !r.PartnerOrganisationAttribute.ShowInTable.IsNull() {
			*showInTable27 = r.PartnerOrganisationAttribute.ShowInTable.ValueBool()
		} else {
			showInTable27 = nil
		}
		sortable27 := new(bool)
		if !r.PartnerOrganisationAttribute.Sortable.IsUnknown() && !r.PartnerOrganisationAttribute.Sortable.IsNull() {
			*sortable27 = r.PartnerOrganisationAttribute.Sortable.ValueBool()
		} else {
			sortable27 = nil
		}
		required27 := new(bool)
		if !r.PartnerOrganisationAttribute.Required.IsUnknown() && !r.PartnerOrganisationAttribute.Required.IsNull() {
			*required27 = r.PartnerOrganisationAttribute.Required.ValueBool()
		} else {
			required27 = nil
		}
		readonly27 := new(bool)
		if !r.PartnerOrganisationAttribute.Readonly.IsUnknown() && !r.PartnerOrganisationAttribute.Readonly.IsNull() {
			*readonly27 = r.PartnerOrganisationAttribute.Readonly.ValueBool()
		} else {
			readonly27 = nil
		}
		deprecated27 := new(bool)
		if !r.PartnerOrganisationAttribute.Deprecated.IsUnknown() && !r.PartnerOrganisationAttribute.Deprecated.IsNull() {
			*deprecated27 = r.PartnerOrganisationAttribute.Deprecated.ValueBool()
		} else {
			deprecated27 = nil
		}
		var defaultValue27 interface{}
		if !r.PartnerOrganisationAttribute.DefaultValue.IsUnknown() && !r.PartnerOrganisationAttribute.DefaultValue.IsNull() {
			_ = json.Unmarshal([]byte(r.PartnerOrganisationAttribute.DefaultValue.ValueString()), &defaultValue27)
		}
		group27 := new(string)
		if !r.PartnerOrganisationAttribute.Group.IsUnknown() && !r.PartnerOrganisationAttribute.Group.IsNull() {
			*group27 = r.PartnerOrganisationAttribute.Group.ValueString()
		} else {
			group27 = nil
		}
		order27 := new(int64)
		if !r.PartnerOrganisationAttribute.Order.IsUnknown() && !r.PartnerOrganisationAttribute.Order.IsNull() {
			*order27 = r.PartnerOrganisationAttribute.Order.ValueInt64()
		} else {
			order27 = nil
		}
		layout27 := new(string)
		if !r.PartnerOrganisationAttribute.Layout.IsUnknown() && !r.PartnerOrganisationAttribute.Layout.IsNull() {
			*layout27 = r.PartnerOrganisationAttribute.Layout.ValueString()
		} else {
			layout27 = nil
		}
		hideLabel27 := new(bool)
		if !r.PartnerOrganisationAttribute.HideLabel.IsUnknown() && !r.PartnerOrganisationAttribute.HideLabel.IsNull() {
			*hideLabel27 = r.PartnerOrganisationAttribute.HideLabel.ValueBool()
		} else {
			hideLabel27 = nil
		}
		icon27 := new(string)
		if !r.PartnerOrganisationAttribute.Icon.IsUnknown() && !r.PartnerOrganisationAttribute.Icon.IsNull() {
			*icon27 = r.PartnerOrganisationAttribute.Icon.ValueString()
		} else {
			icon27 = nil
		}
		renderCondition27 := new(string)
		if !r.PartnerOrganisationAttribute.RenderCondition.IsUnknown() && !r.PartnerOrganisationAttribute.RenderCondition.IsNull() {
			*renderCondition27 = r.PartnerOrganisationAttribute.RenderCondition.ValueString()
		} else {
			renderCondition27 = nil
		}
		var purpose27 []string = []string{}
		for _, purposeItem27 := range r.PartnerOrganisationAttribute.Purpose {
			purpose27 = append(purpose27, purposeItem27.ValueString())
		}
		var constraints27 *shared.PartnerOrganisationAttributeAttributeWithCompositeIDConstraints
		if r.PartnerOrganisationAttribute.Constraints != nil {
			constraints27 = &shared.PartnerOrganisationAttributeAttributeWithCompositeIDConstraints{}
		}
		featureFlag28 := new(string)
		if !r.PartnerOrganisationAttribute.FeatureFlag.IsUnknown() && !r.PartnerOrganisationAttribute.FeatureFlag.IsNull() {
			*featureFlag28 = r.PartnerOrganisationAttribute.FeatureFlag.ValueString()
		} else {
			featureFlag28 = nil
		}
		var settingsFlag28 []shared.SettingFlag = []shared.SettingFlag{}
		for _, settingsFlagItem28 := range r.PartnerOrganisationAttribute.SettingsFlag {
			name56 := new(string)
			if !settingsFlagItem28.Name.IsUnknown() && !settingsFlagItem28.Name.IsNull() {
				*name56 = settingsFlagItem28.Name.ValueString()
			} else {
				name56 = nil
			}
			enabled28 := new(bool)
			if !settingsFlagItem28.Enabled.IsUnknown() && !settingsFlagItem28.Enabled.IsNull() {
				*enabled28 = settingsFlagItem28.Enabled.ValueBool()
			} else {
				enabled28 = nil
			}
			settingsFlag28 = append(settingsFlag28, shared.SettingFlag{
				Name:    name56,
				Enabled: enabled28,
			})
		}
		valueFormatter27 := new(string)
		if !r.PartnerOrganisationAttribute.ValueFormatter.IsUnknown() && !r.PartnerOrganisationAttribute.ValueFormatter.IsNull() {
			*valueFormatter27 = r.PartnerOrganisationAttribute.ValueFormatter.ValueString()
		} else {
			valueFormatter27 = nil
		}
		previewValueFormatter27 := new(string)
		if !r.PartnerOrganisationAttribute.PreviewValueFormatter.IsUnknown() && !r.PartnerOrganisationAttribute.PreviewValueFormatter.IsNull() {
			*previewValueFormatter27 = r.PartnerOrganisationAttribute.PreviewValueFormatter.ValueString()
		} else {
			previewValueFormatter27 = nil
		}
		entityBuilderDisableEdit27 := new(bool)
		if !r.PartnerOrganisationAttribute.EntityBuilderDisableEdit.IsUnknown() && !r.PartnerOrganisationAttribute.EntityBuilderDisableEdit.IsNull() {
			*entityBuilderDisableEdit27 = r.PartnerOrganisationAttribute.EntityBuilderDisableEdit.ValueBool()
		} else {
			entityBuilderDisableEdit27 = nil
		}
		protected27 := new(bool)
		if !r.PartnerOrganisationAttribute.Protected.IsUnknown() && !r.PartnerOrganisationAttribute.Protected.IsNull() {
			*protected27 = r.PartnerOrganisationAttribute.Protected.ValueBool()
		} else {
			protected27 = nil
		}
		var infoHelpers27 *shared.PartnerOrganisationAttributeAttributeWithCompositeIDInfoHelpers
		if r.PartnerOrganisationAttribute.InfoHelpers != nil {
			hintText27 := new(string)
			if !r.PartnerOrganisationAttribute.InfoHelpers.HintText.IsUnknown() && !r.PartnerOrganisationAttribute.InfoHelpers.HintText.IsNull() {
				*hintText27 = r.PartnerOrganisationAttribute.InfoHelpers.HintText.ValueString()
			} else {
				hintText27 = nil
			}
			hintTextKey27 := new(string)
			if !r.PartnerOrganisationAttribute.InfoHelpers.HintTextKey.IsUnknown() && !r.PartnerOrganisationAttribute.InfoHelpers.HintTextKey.IsNull() {
				*hintTextKey27 = r.PartnerOrganisationAttribute.InfoHelpers.HintTextKey.ValueString()
			} else {
				hintTextKey27 = nil
			}
			hintCustomComponent27 := new(string)
			if !r.PartnerOrganisationAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !r.PartnerOrganisationAttribute.InfoHelpers.HintCustomComponent.IsNull() {
				*hintCustomComponent27 = r.PartnerOrganisationAttribute.InfoHelpers.HintCustomComponent.ValueString()
			} else {
				hintCustomComponent27 = nil
			}
			hintTooltipPlacement27 := new(string)
			if !r.PartnerOrganisationAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !r.PartnerOrganisationAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
				*hintTooltipPlacement27 = r.PartnerOrganisationAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
			} else {
				hintTooltipPlacement27 = nil
			}
			infoHelpers27 = &shared.PartnerOrganisationAttributeAttributeWithCompositeIDInfoHelpers{
				HintText:             hintText27,
				HintTextKey:          hintTextKey27,
				HintCustomComponent:  hintCustomComponent27,
				HintTooltipPlacement: hintTooltipPlacement27,
			}
		}
		typeVar27 := new(shared.PartnerOrganisationAttributeAttributeWithCompositeIDType)
		if !r.PartnerOrganisationAttribute.Type.IsUnknown() && !r.PartnerOrganisationAttribute.Type.IsNull() {
			*typeVar27 = shared.PartnerOrganisationAttributeAttributeWithCompositeIDType(r.PartnerOrganisationAttribute.Type.ValueString())
		} else {
			typeVar27 = nil
		}
		attributeWithCompositeIDPartnerOrganisationAttributeInput = &shared.AttributeWithCompositeIDPartnerOrganisationAttributeInput{
			Name:                     name55,
			Label:                    label28,
			Placeholder:              placeholder27,
			Hidden:                   hidden27,
			ShowInTable:              showInTable27,
			Sortable:                 sortable27,
			Required:                 required27,
			Readonly:                 readonly27,
			Deprecated:               deprecated27,
			DefaultValue:             defaultValue27,
			Group:                    group27,
			Order:                    order27,
			Layout:                   layout27,
			HideLabel:                hideLabel27,
			Icon:                     icon27,
			RenderCondition:          renderCondition27,
			Purpose:                  purpose27,
			Constraints:              constraints27,
			FeatureFlag:              featureFlag28,
			SettingsFlag:             settingsFlag28,
			ValueFormatter:           valueFormatter27,
			PreviewValueFormatter:    previewValueFormatter27,
			EntityBuilderDisableEdit: entityBuilderDisableEdit27,
			Protected:                protected27,
			InfoHelpers:              infoHelpers27,
			Type:                     typeVar27,
		}
	}
	if attributeWithCompositeIDPartnerOrganisationAttributeInput != nil {
		out = shared.AttributeWithCompositeIDInput{
			AttributeWithCompositeIDPartnerOrganisationAttributeInput: attributeWithCompositeIDPartnerOrganisationAttributeInput,
		}
	}
	return &out
}

func (r *SchemaAttributeResourceModel) RefreshFromSharedAttributeWithCompositeID(resp *shared.AttributeWithCompositeID) {
	if resp != nil {
	}
}
