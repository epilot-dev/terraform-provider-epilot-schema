// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"encoding/json"
	tfTypes "github.com/epilot/terraform-provider-epilot-schema/internal/provider/types"
	"github.com/epilot/terraform-provider-epilot-schema/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"time"
)

func (r *SchemaCapabilityResourceModel) ToSharedEntityCapabilityWithCompositeIDInput() *shared.EntityCapabilityWithCompositeIDInput {
	id := new(string)
	if !r.ID.IsUnknown() && !r.ID.IsNull() {
		*id = r.ID.ValueString()
	} else {
		id = nil
	}
	name := r.Name.ValueString()
	title := new(string)
	if !r.Title.IsUnknown() && !r.Title.IsNull() {
		*title = r.Title.ValueString()
	} else {
		title = nil
	}
	var attributes []shared.Attribute = []shared.Attribute{}
	for _, attributesItem := range r.Attributes {
		if attributesItem.TextAttribute != nil {
			id1 := new(string)
			if !attributesItem.TextAttribute.ID.IsUnknown() && !attributesItem.TextAttribute.ID.IsNull() {
				*id1 = attributesItem.TextAttribute.ID.ValueString()
			} else {
				id1 = nil
			}
			name1 := attributesItem.TextAttribute.Name.ValueString()
			label := attributesItem.TextAttribute.Label.ValueString()
			placeholder := new(string)
			if !attributesItem.TextAttribute.Placeholder.IsUnknown() && !attributesItem.TextAttribute.Placeholder.IsNull() {
				*placeholder = attributesItem.TextAttribute.Placeholder.ValueString()
			} else {
				placeholder = nil
			}
			hidden := new(bool)
			if !attributesItem.TextAttribute.Hidden.IsUnknown() && !attributesItem.TextAttribute.Hidden.IsNull() {
				*hidden = attributesItem.TextAttribute.Hidden.ValueBool()
			} else {
				hidden = nil
			}
			showInTable := new(bool)
			if !attributesItem.TextAttribute.ShowInTable.IsUnknown() && !attributesItem.TextAttribute.ShowInTable.IsNull() {
				*showInTable = attributesItem.TextAttribute.ShowInTable.ValueBool()
			} else {
				showInTable = nil
			}
			sortable := new(bool)
			if !attributesItem.TextAttribute.Sortable.IsUnknown() && !attributesItem.TextAttribute.Sortable.IsNull() {
				*sortable = attributesItem.TextAttribute.Sortable.ValueBool()
			} else {
				sortable = nil
			}
			required := new(bool)
			if !attributesItem.TextAttribute.Required.IsUnknown() && !attributesItem.TextAttribute.Required.IsNull() {
				*required = attributesItem.TextAttribute.Required.ValueBool()
			} else {
				required = nil
			}
			readonly := new(bool)
			if !attributesItem.TextAttribute.Readonly.IsUnknown() && !attributesItem.TextAttribute.Readonly.IsNull() {
				*readonly = attributesItem.TextAttribute.Readonly.ValueBool()
			} else {
				readonly = nil
			}
			deprecated := new(bool)
			if !attributesItem.TextAttribute.Deprecated.IsUnknown() && !attributesItem.TextAttribute.Deprecated.IsNull() {
				*deprecated = attributesItem.TextAttribute.Deprecated.ValueBool()
			} else {
				deprecated = nil
			}
			var defaultValue interface{}
			if !attributesItem.TextAttribute.DefaultValue.IsUnknown() && !attributesItem.TextAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem.TextAttribute.DefaultValue.ValueString()), &defaultValue)
			}
			group := new(string)
			if !attributesItem.TextAttribute.Group.IsUnknown() && !attributesItem.TextAttribute.Group.IsNull() {
				*group = attributesItem.TextAttribute.Group.ValueString()
			} else {
				group = nil
			}
			order := new(int64)
			if !attributesItem.TextAttribute.Order.IsUnknown() && !attributesItem.TextAttribute.Order.IsNull() {
				*order = attributesItem.TextAttribute.Order.ValueInt64()
			} else {
				order = nil
			}
			layout := new(string)
			if !attributesItem.TextAttribute.Layout.IsUnknown() && !attributesItem.TextAttribute.Layout.IsNull() {
				*layout = attributesItem.TextAttribute.Layout.ValueString()
			} else {
				layout = nil
			}
			hideLabel := new(bool)
			if !attributesItem.TextAttribute.HideLabel.IsUnknown() && !attributesItem.TextAttribute.HideLabel.IsNull() {
				*hideLabel = attributesItem.TextAttribute.HideLabel.ValueBool()
			} else {
				hideLabel = nil
			}
			icon := new(string)
			if !attributesItem.TextAttribute.Icon.IsUnknown() && !attributesItem.TextAttribute.Icon.IsNull() {
				*icon = attributesItem.TextAttribute.Icon.ValueString()
			} else {
				icon = nil
			}
			renderCondition := new(string)
			if !attributesItem.TextAttribute.RenderCondition.IsUnknown() && !attributesItem.TextAttribute.RenderCondition.IsNull() {
				*renderCondition = attributesItem.TextAttribute.RenderCondition.ValueString()
			} else {
				renderCondition = nil
			}
			var purpose []string = []string{}
			for _, purposeItem := range attributesItem.TextAttribute.Purpose {
				purpose = append(purpose, purposeItem.ValueString())
			}
			var constraints *shared.Constraints
			if attributesItem.TextAttribute.Constraints != nil {
				constraints = &shared.Constraints{}
			}
			featureFlag := new(string)
			if !attributesItem.TextAttribute.FeatureFlag.IsUnknown() && !attributesItem.TextAttribute.FeatureFlag.IsNull() {
				*featureFlag = attributesItem.TextAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag = nil
			}
			var settingsFlag []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem := range attributesItem.TextAttribute.SettingsFlag {
				name2 := new(string)
				if !settingsFlagItem.Name.IsUnknown() && !settingsFlagItem.Name.IsNull() {
					*name2 = settingsFlagItem.Name.ValueString()
				} else {
					name2 = nil
				}
				enabled := new(bool)
				if !settingsFlagItem.Enabled.IsUnknown() && !settingsFlagItem.Enabled.IsNull() {
					*enabled = settingsFlagItem.Enabled.ValueBool()
				} else {
					enabled = nil
				}
				settingsFlag = append(settingsFlag, shared.SettingFlag{
					Name:    name2,
					Enabled: enabled,
				})
			}
			valueFormatter := new(string)
			if !attributesItem.TextAttribute.ValueFormatter.IsUnknown() && !attributesItem.TextAttribute.ValueFormatter.IsNull() {
				*valueFormatter = attributesItem.TextAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter = nil
			}
			previewValueFormatter := new(string)
			if !attributesItem.TextAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.TextAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter = attributesItem.TextAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter = nil
			}
			entityBuilderDisableEdit := new(bool)
			if !attributesItem.TextAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.TextAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit = attributesItem.TextAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit = nil
			}
			protected := new(bool)
			if !attributesItem.TextAttribute.Protected.IsUnknown() && !attributesItem.TextAttribute.Protected.IsNull() {
				*protected = attributesItem.TextAttribute.Protected.ValueBool()
			} else {
				protected = nil
			}
			var infoHelpers *shared.InfoHelpers
			if attributesItem.TextAttribute.InfoHelpers != nil {
				hintText := new(string)
				if !attributesItem.TextAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.TextAttribute.InfoHelpers.HintText.IsNull() {
					*hintText = attributesItem.TextAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText = nil
				}
				hintTextKey := new(string)
				if !attributesItem.TextAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.TextAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey = attributesItem.TextAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey = nil
				}
				hintCustomComponent := new(string)
				if !attributesItem.TextAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.TextAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent = attributesItem.TextAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent = nil
				}
				hintTooltipPlacement := new(string)
				if !attributesItem.TextAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.TextAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement = attributesItem.TextAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement = nil
				}
				infoHelpers = &shared.InfoHelpers{
					HintText:             hintText,
					HintTextKey:          hintTextKey,
					HintCustomComponent:  hintCustomComponent,
					HintTooltipPlacement: hintTooltipPlacement,
				}
			}
			typeVar := new(shared.Type)
			if !attributesItem.TextAttribute.Type.IsUnknown() && !attributesItem.TextAttribute.Type.IsNull() {
				*typeVar = shared.Type(attributesItem.TextAttribute.Type.ValueString())
			} else {
				typeVar = nil
			}
			multiline := new(bool)
			if !attributesItem.TextAttribute.Multiline.IsUnknown() && !attributesItem.TextAttribute.Multiline.IsNull() {
				*multiline = attributesItem.TextAttribute.Multiline.ValueBool()
			} else {
				multiline = nil
			}
			textAttribute := shared.TextAttribute{
				ID:                       id1,
				Name:                     name1,
				Label:                    label,
				Placeholder:              placeholder,
				Hidden:                   hidden,
				ShowInTable:              showInTable,
				Sortable:                 sortable,
				Required:                 required,
				Readonly:                 readonly,
				Deprecated:               deprecated,
				DefaultValue:             defaultValue,
				Group:                    group,
				Order:                    order,
				Layout:                   layout,
				HideLabel:                hideLabel,
				Icon:                     icon,
				RenderCondition:          renderCondition,
				Purpose:                  purpose,
				Constraints:              constraints,
				FeatureFlag:              featureFlag,
				SettingsFlag:             settingsFlag,
				ValueFormatter:           valueFormatter,
				PreviewValueFormatter:    previewValueFormatter,
				EntityBuilderDisableEdit: entityBuilderDisableEdit,
				Protected:                protected,
				InfoHelpers:              infoHelpers,
				Type:                     typeVar,
				Multiline:                multiline,
			}
			attributes = append(attributes, shared.Attribute{
				TextAttribute: &textAttribute,
			})
		}
		if attributesItem.LinkAttribute != nil {
			id2 := new(string)
			if !attributesItem.LinkAttribute.ID.IsUnknown() && !attributesItem.LinkAttribute.ID.IsNull() {
				*id2 = attributesItem.LinkAttribute.ID.ValueString()
			} else {
				id2 = nil
			}
			name3 := attributesItem.LinkAttribute.Name.ValueString()
			label1 := attributesItem.LinkAttribute.Label.ValueString()
			placeholder1 := new(string)
			if !attributesItem.LinkAttribute.Placeholder.IsUnknown() && !attributesItem.LinkAttribute.Placeholder.IsNull() {
				*placeholder1 = attributesItem.LinkAttribute.Placeholder.ValueString()
			} else {
				placeholder1 = nil
			}
			hidden1 := new(bool)
			if !attributesItem.LinkAttribute.Hidden.IsUnknown() && !attributesItem.LinkAttribute.Hidden.IsNull() {
				*hidden1 = attributesItem.LinkAttribute.Hidden.ValueBool()
			} else {
				hidden1 = nil
			}
			showInTable1 := new(bool)
			if !attributesItem.LinkAttribute.ShowInTable.IsUnknown() && !attributesItem.LinkAttribute.ShowInTable.IsNull() {
				*showInTable1 = attributesItem.LinkAttribute.ShowInTable.ValueBool()
			} else {
				showInTable1 = nil
			}
			sortable1 := new(bool)
			if !attributesItem.LinkAttribute.Sortable.IsUnknown() && !attributesItem.LinkAttribute.Sortable.IsNull() {
				*sortable1 = attributesItem.LinkAttribute.Sortable.ValueBool()
			} else {
				sortable1 = nil
			}
			required1 := new(bool)
			if !attributesItem.LinkAttribute.Required.IsUnknown() && !attributesItem.LinkAttribute.Required.IsNull() {
				*required1 = attributesItem.LinkAttribute.Required.ValueBool()
			} else {
				required1 = nil
			}
			readonly1 := new(bool)
			if !attributesItem.LinkAttribute.Readonly.IsUnknown() && !attributesItem.LinkAttribute.Readonly.IsNull() {
				*readonly1 = attributesItem.LinkAttribute.Readonly.ValueBool()
			} else {
				readonly1 = nil
			}
			deprecated1 := new(bool)
			if !attributesItem.LinkAttribute.Deprecated.IsUnknown() && !attributesItem.LinkAttribute.Deprecated.IsNull() {
				*deprecated1 = attributesItem.LinkAttribute.Deprecated.ValueBool()
			} else {
				deprecated1 = nil
			}
			var defaultValue1 interface{}
			if !attributesItem.LinkAttribute.DefaultValue.IsUnknown() && !attributesItem.LinkAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem.LinkAttribute.DefaultValue.ValueString()), &defaultValue1)
			}
			group1 := new(string)
			if !attributesItem.LinkAttribute.Group.IsUnknown() && !attributesItem.LinkAttribute.Group.IsNull() {
				*group1 = attributesItem.LinkAttribute.Group.ValueString()
			} else {
				group1 = nil
			}
			order1 := new(int64)
			if !attributesItem.LinkAttribute.Order.IsUnknown() && !attributesItem.LinkAttribute.Order.IsNull() {
				*order1 = attributesItem.LinkAttribute.Order.ValueInt64()
			} else {
				order1 = nil
			}
			layout1 := new(string)
			if !attributesItem.LinkAttribute.Layout.IsUnknown() && !attributesItem.LinkAttribute.Layout.IsNull() {
				*layout1 = attributesItem.LinkAttribute.Layout.ValueString()
			} else {
				layout1 = nil
			}
			hideLabel1 := new(bool)
			if !attributesItem.LinkAttribute.HideLabel.IsUnknown() && !attributesItem.LinkAttribute.HideLabel.IsNull() {
				*hideLabel1 = attributesItem.LinkAttribute.HideLabel.ValueBool()
			} else {
				hideLabel1 = nil
			}
			icon1 := new(string)
			if !attributesItem.LinkAttribute.Icon.IsUnknown() && !attributesItem.LinkAttribute.Icon.IsNull() {
				*icon1 = attributesItem.LinkAttribute.Icon.ValueString()
			} else {
				icon1 = nil
			}
			renderCondition1 := new(string)
			if !attributesItem.LinkAttribute.RenderCondition.IsUnknown() && !attributesItem.LinkAttribute.RenderCondition.IsNull() {
				*renderCondition1 = attributesItem.LinkAttribute.RenderCondition.ValueString()
			} else {
				renderCondition1 = nil
			}
			var purpose1 []string = []string{}
			for _, purposeItem1 := range attributesItem.LinkAttribute.Purpose {
				purpose1 = append(purpose1, purposeItem1.ValueString())
			}
			var constraints1 *shared.LinkAttributeConstraints
			if attributesItem.LinkAttribute.Constraints != nil {
				constraints1 = &shared.LinkAttributeConstraints{}
			}
			featureFlag1 := new(string)
			if !attributesItem.LinkAttribute.FeatureFlag.IsUnknown() && !attributesItem.LinkAttribute.FeatureFlag.IsNull() {
				*featureFlag1 = attributesItem.LinkAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag1 = nil
			}
			var settingsFlag1 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem1 := range attributesItem.LinkAttribute.SettingsFlag {
				name4 := new(string)
				if !settingsFlagItem1.Name.IsUnknown() && !settingsFlagItem1.Name.IsNull() {
					*name4 = settingsFlagItem1.Name.ValueString()
				} else {
					name4 = nil
				}
				enabled1 := new(bool)
				if !settingsFlagItem1.Enabled.IsUnknown() && !settingsFlagItem1.Enabled.IsNull() {
					*enabled1 = settingsFlagItem1.Enabled.ValueBool()
				} else {
					enabled1 = nil
				}
				settingsFlag1 = append(settingsFlag1, shared.SettingFlag{
					Name:    name4,
					Enabled: enabled1,
				})
			}
			valueFormatter1 := new(string)
			if !attributesItem.LinkAttribute.ValueFormatter.IsUnknown() && !attributesItem.LinkAttribute.ValueFormatter.IsNull() {
				*valueFormatter1 = attributesItem.LinkAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter1 = nil
			}
			previewValueFormatter1 := new(string)
			if !attributesItem.LinkAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.LinkAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter1 = attributesItem.LinkAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter1 = nil
			}
			entityBuilderDisableEdit1 := new(bool)
			if !attributesItem.LinkAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.LinkAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit1 = attributesItem.LinkAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit1 = nil
			}
			protected1 := new(bool)
			if !attributesItem.LinkAttribute.Protected.IsUnknown() && !attributesItem.LinkAttribute.Protected.IsNull() {
				*protected1 = attributesItem.LinkAttribute.Protected.ValueBool()
			} else {
				protected1 = nil
			}
			var infoHelpers1 *shared.LinkAttributeInfoHelpers
			if attributesItem.LinkAttribute.InfoHelpers != nil {
				hintText1 := new(string)
				if !attributesItem.LinkAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.LinkAttribute.InfoHelpers.HintText.IsNull() {
					*hintText1 = attributesItem.LinkAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText1 = nil
				}
				hintTextKey1 := new(string)
				if !attributesItem.LinkAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.LinkAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey1 = attributesItem.LinkAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey1 = nil
				}
				hintCustomComponent1 := new(string)
				if !attributesItem.LinkAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.LinkAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent1 = attributesItem.LinkAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent1 = nil
				}
				hintTooltipPlacement1 := new(string)
				if !attributesItem.LinkAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.LinkAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement1 = attributesItem.LinkAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement1 = nil
				}
				infoHelpers1 = &shared.LinkAttributeInfoHelpers{
					HintText:             hintText1,
					HintTextKey:          hintTextKey1,
					HintCustomComponent:  hintCustomComponent1,
					HintTooltipPlacement: hintTooltipPlacement1,
				}
			}
			typeVar1 := new(shared.LinkAttributeType)
			if !attributesItem.LinkAttribute.Type.IsUnknown() && !attributesItem.LinkAttribute.Type.IsNull() {
				*typeVar1 = shared.LinkAttributeType(attributesItem.LinkAttribute.Type.ValueString())
			} else {
				typeVar1 = nil
			}
			linkAttribute := shared.LinkAttribute{
				ID:                       id2,
				Name:                     name3,
				Label:                    label1,
				Placeholder:              placeholder1,
				Hidden:                   hidden1,
				ShowInTable:              showInTable1,
				Sortable:                 sortable1,
				Required:                 required1,
				Readonly:                 readonly1,
				Deprecated:               deprecated1,
				DefaultValue:             defaultValue1,
				Group:                    group1,
				Order:                    order1,
				Layout:                   layout1,
				HideLabel:                hideLabel1,
				Icon:                     icon1,
				RenderCondition:          renderCondition1,
				Purpose:                  purpose1,
				Constraints:              constraints1,
				FeatureFlag:              featureFlag1,
				SettingsFlag:             settingsFlag1,
				ValueFormatter:           valueFormatter1,
				PreviewValueFormatter:    previewValueFormatter1,
				EntityBuilderDisableEdit: entityBuilderDisableEdit1,
				Protected:                protected1,
				InfoHelpers:              infoHelpers1,
				Type:                     typeVar1,
			}
			attributes = append(attributes, shared.Attribute{
				LinkAttribute: &linkAttribute,
			})
		}
		if attributesItem.DateAttribute != nil {
			id3 := new(string)
			if !attributesItem.DateAttribute.ID.IsUnknown() && !attributesItem.DateAttribute.ID.IsNull() {
				*id3 = attributesItem.DateAttribute.ID.ValueString()
			} else {
				id3 = nil
			}
			name5 := attributesItem.DateAttribute.Name.ValueString()
			label2 := attributesItem.DateAttribute.Label.ValueString()
			placeholder2 := new(string)
			if !attributesItem.DateAttribute.Placeholder.IsUnknown() && !attributesItem.DateAttribute.Placeholder.IsNull() {
				*placeholder2 = attributesItem.DateAttribute.Placeholder.ValueString()
			} else {
				placeholder2 = nil
			}
			hidden2 := new(bool)
			if !attributesItem.DateAttribute.Hidden.IsUnknown() && !attributesItem.DateAttribute.Hidden.IsNull() {
				*hidden2 = attributesItem.DateAttribute.Hidden.ValueBool()
			} else {
				hidden2 = nil
			}
			showInTable2 := new(bool)
			if !attributesItem.DateAttribute.ShowInTable.IsUnknown() && !attributesItem.DateAttribute.ShowInTable.IsNull() {
				*showInTable2 = attributesItem.DateAttribute.ShowInTable.ValueBool()
			} else {
				showInTable2 = nil
			}
			sortable2 := new(bool)
			if !attributesItem.DateAttribute.Sortable.IsUnknown() && !attributesItem.DateAttribute.Sortable.IsNull() {
				*sortable2 = attributesItem.DateAttribute.Sortable.ValueBool()
			} else {
				sortable2 = nil
			}
			required2 := new(bool)
			if !attributesItem.DateAttribute.Required.IsUnknown() && !attributesItem.DateAttribute.Required.IsNull() {
				*required2 = attributesItem.DateAttribute.Required.ValueBool()
			} else {
				required2 = nil
			}
			readonly2 := new(bool)
			if !attributesItem.DateAttribute.Readonly.IsUnknown() && !attributesItem.DateAttribute.Readonly.IsNull() {
				*readonly2 = attributesItem.DateAttribute.Readonly.ValueBool()
			} else {
				readonly2 = nil
			}
			deprecated2 := new(bool)
			if !attributesItem.DateAttribute.Deprecated.IsUnknown() && !attributesItem.DateAttribute.Deprecated.IsNull() {
				*deprecated2 = attributesItem.DateAttribute.Deprecated.ValueBool()
			} else {
				deprecated2 = nil
			}
			var defaultValue2 interface{}
			if !attributesItem.DateAttribute.DefaultValue.IsUnknown() && !attributesItem.DateAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem.DateAttribute.DefaultValue.ValueString()), &defaultValue2)
			}
			group2 := new(string)
			if !attributesItem.DateAttribute.Group.IsUnknown() && !attributesItem.DateAttribute.Group.IsNull() {
				*group2 = attributesItem.DateAttribute.Group.ValueString()
			} else {
				group2 = nil
			}
			order2 := new(int64)
			if !attributesItem.DateAttribute.Order.IsUnknown() && !attributesItem.DateAttribute.Order.IsNull() {
				*order2 = attributesItem.DateAttribute.Order.ValueInt64()
			} else {
				order2 = nil
			}
			layout2 := new(string)
			if !attributesItem.DateAttribute.Layout.IsUnknown() && !attributesItem.DateAttribute.Layout.IsNull() {
				*layout2 = attributesItem.DateAttribute.Layout.ValueString()
			} else {
				layout2 = nil
			}
			hideLabel2 := new(bool)
			if !attributesItem.DateAttribute.HideLabel.IsUnknown() && !attributesItem.DateAttribute.HideLabel.IsNull() {
				*hideLabel2 = attributesItem.DateAttribute.HideLabel.ValueBool()
			} else {
				hideLabel2 = nil
			}
			icon2 := new(string)
			if !attributesItem.DateAttribute.Icon.IsUnknown() && !attributesItem.DateAttribute.Icon.IsNull() {
				*icon2 = attributesItem.DateAttribute.Icon.ValueString()
			} else {
				icon2 = nil
			}
			renderCondition2 := new(string)
			if !attributesItem.DateAttribute.RenderCondition.IsUnknown() && !attributesItem.DateAttribute.RenderCondition.IsNull() {
				*renderCondition2 = attributesItem.DateAttribute.RenderCondition.ValueString()
			} else {
				renderCondition2 = nil
			}
			var purpose2 []string = []string{}
			for _, purposeItem2 := range attributesItem.DateAttribute.Purpose {
				purpose2 = append(purpose2, purposeItem2.ValueString())
			}
			var constraints2 *shared.DateAttributeConstraints
			if attributesItem.DateAttribute.Constraints != nil {
				constraints2 = &shared.DateAttributeConstraints{}
			}
			featureFlag2 := new(string)
			if !attributesItem.DateAttribute.FeatureFlag.IsUnknown() && !attributesItem.DateAttribute.FeatureFlag.IsNull() {
				*featureFlag2 = attributesItem.DateAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag2 = nil
			}
			var settingsFlag2 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem2 := range attributesItem.DateAttribute.SettingsFlag {
				name6 := new(string)
				if !settingsFlagItem2.Name.IsUnknown() && !settingsFlagItem2.Name.IsNull() {
					*name6 = settingsFlagItem2.Name.ValueString()
				} else {
					name6 = nil
				}
				enabled2 := new(bool)
				if !settingsFlagItem2.Enabled.IsUnknown() && !settingsFlagItem2.Enabled.IsNull() {
					*enabled2 = settingsFlagItem2.Enabled.ValueBool()
				} else {
					enabled2 = nil
				}
				settingsFlag2 = append(settingsFlag2, shared.SettingFlag{
					Name:    name6,
					Enabled: enabled2,
				})
			}
			valueFormatter2 := new(string)
			if !attributesItem.DateAttribute.ValueFormatter.IsUnknown() && !attributesItem.DateAttribute.ValueFormatter.IsNull() {
				*valueFormatter2 = attributesItem.DateAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter2 = nil
			}
			previewValueFormatter2 := new(string)
			if !attributesItem.DateAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.DateAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter2 = attributesItem.DateAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter2 = nil
			}
			entityBuilderDisableEdit2 := new(bool)
			if !attributesItem.DateAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.DateAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit2 = attributesItem.DateAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit2 = nil
			}
			protected2 := new(bool)
			if !attributesItem.DateAttribute.Protected.IsUnknown() && !attributesItem.DateAttribute.Protected.IsNull() {
				*protected2 = attributesItem.DateAttribute.Protected.ValueBool()
			} else {
				protected2 = nil
			}
			var infoHelpers2 *shared.DateAttributeInfoHelpers
			if attributesItem.DateAttribute.InfoHelpers != nil {
				hintText2 := new(string)
				if !attributesItem.DateAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.DateAttribute.InfoHelpers.HintText.IsNull() {
					*hintText2 = attributesItem.DateAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText2 = nil
				}
				hintTextKey2 := new(string)
				if !attributesItem.DateAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.DateAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey2 = attributesItem.DateAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey2 = nil
				}
				hintCustomComponent2 := new(string)
				if !attributesItem.DateAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.DateAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent2 = attributesItem.DateAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent2 = nil
				}
				hintTooltipPlacement2 := new(string)
				if !attributesItem.DateAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.DateAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement2 = attributesItem.DateAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement2 = nil
				}
				infoHelpers2 = &shared.DateAttributeInfoHelpers{
					HintText:             hintText2,
					HintTextKey:          hintTextKey2,
					HintCustomComponent:  hintCustomComponent2,
					HintTooltipPlacement: hintTooltipPlacement2,
				}
			}
			typeVar2 := new(shared.DateAttributeType)
			if !attributesItem.DateAttribute.Type.IsUnknown() && !attributesItem.DateAttribute.Type.IsNull() {
				*typeVar2 = shared.DateAttributeType(attributesItem.DateAttribute.Type.ValueString())
			} else {
				typeVar2 = nil
			}
			dateAttribute := shared.DateAttribute{
				ID:                       id3,
				Name:                     name5,
				Label:                    label2,
				Placeholder:              placeholder2,
				Hidden:                   hidden2,
				ShowInTable:              showInTable2,
				Sortable:                 sortable2,
				Required:                 required2,
				Readonly:                 readonly2,
				Deprecated:               deprecated2,
				DefaultValue:             defaultValue2,
				Group:                    group2,
				Order:                    order2,
				Layout:                   layout2,
				HideLabel:                hideLabel2,
				Icon:                     icon2,
				RenderCondition:          renderCondition2,
				Purpose:                  purpose2,
				Constraints:              constraints2,
				FeatureFlag:              featureFlag2,
				SettingsFlag:             settingsFlag2,
				ValueFormatter:           valueFormatter2,
				PreviewValueFormatter:    previewValueFormatter2,
				EntityBuilderDisableEdit: entityBuilderDisableEdit2,
				Protected:                protected2,
				InfoHelpers:              infoHelpers2,
				Type:                     typeVar2,
			}
			attributes = append(attributes, shared.Attribute{
				DateAttribute: &dateAttribute,
			})
		}
		if attributesItem.CountryAttribute != nil {
			id4 := new(string)
			if !attributesItem.CountryAttribute.ID.IsUnknown() && !attributesItem.CountryAttribute.ID.IsNull() {
				*id4 = attributesItem.CountryAttribute.ID.ValueString()
			} else {
				id4 = nil
			}
			name7 := attributesItem.CountryAttribute.Name.ValueString()
			label3 := attributesItem.CountryAttribute.Label.ValueString()
			placeholder3 := new(string)
			if !attributesItem.CountryAttribute.Placeholder.IsUnknown() && !attributesItem.CountryAttribute.Placeholder.IsNull() {
				*placeholder3 = attributesItem.CountryAttribute.Placeholder.ValueString()
			} else {
				placeholder3 = nil
			}
			hidden3 := new(bool)
			if !attributesItem.CountryAttribute.Hidden.IsUnknown() && !attributesItem.CountryAttribute.Hidden.IsNull() {
				*hidden3 = attributesItem.CountryAttribute.Hidden.ValueBool()
			} else {
				hidden3 = nil
			}
			showInTable3 := new(bool)
			if !attributesItem.CountryAttribute.ShowInTable.IsUnknown() && !attributesItem.CountryAttribute.ShowInTable.IsNull() {
				*showInTable3 = attributesItem.CountryAttribute.ShowInTable.ValueBool()
			} else {
				showInTable3 = nil
			}
			sortable3 := new(bool)
			if !attributesItem.CountryAttribute.Sortable.IsUnknown() && !attributesItem.CountryAttribute.Sortable.IsNull() {
				*sortable3 = attributesItem.CountryAttribute.Sortable.ValueBool()
			} else {
				sortable3 = nil
			}
			required3 := new(bool)
			if !attributesItem.CountryAttribute.Required.IsUnknown() && !attributesItem.CountryAttribute.Required.IsNull() {
				*required3 = attributesItem.CountryAttribute.Required.ValueBool()
			} else {
				required3 = nil
			}
			readonly3 := new(bool)
			if !attributesItem.CountryAttribute.Readonly.IsUnknown() && !attributesItem.CountryAttribute.Readonly.IsNull() {
				*readonly3 = attributesItem.CountryAttribute.Readonly.ValueBool()
			} else {
				readonly3 = nil
			}
			deprecated3 := new(bool)
			if !attributesItem.CountryAttribute.Deprecated.IsUnknown() && !attributesItem.CountryAttribute.Deprecated.IsNull() {
				*deprecated3 = attributesItem.CountryAttribute.Deprecated.ValueBool()
			} else {
				deprecated3 = nil
			}
			var defaultValue3 interface{}
			if !attributesItem.CountryAttribute.DefaultValue.IsUnknown() && !attributesItem.CountryAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem.CountryAttribute.DefaultValue.ValueString()), &defaultValue3)
			}
			group3 := new(string)
			if !attributesItem.CountryAttribute.Group.IsUnknown() && !attributesItem.CountryAttribute.Group.IsNull() {
				*group3 = attributesItem.CountryAttribute.Group.ValueString()
			} else {
				group3 = nil
			}
			order3 := new(int64)
			if !attributesItem.CountryAttribute.Order.IsUnknown() && !attributesItem.CountryAttribute.Order.IsNull() {
				*order3 = attributesItem.CountryAttribute.Order.ValueInt64()
			} else {
				order3 = nil
			}
			layout3 := new(string)
			if !attributesItem.CountryAttribute.Layout.IsUnknown() && !attributesItem.CountryAttribute.Layout.IsNull() {
				*layout3 = attributesItem.CountryAttribute.Layout.ValueString()
			} else {
				layout3 = nil
			}
			hideLabel3 := new(bool)
			if !attributesItem.CountryAttribute.HideLabel.IsUnknown() && !attributesItem.CountryAttribute.HideLabel.IsNull() {
				*hideLabel3 = attributesItem.CountryAttribute.HideLabel.ValueBool()
			} else {
				hideLabel3 = nil
			}
			icon3 := new(string)
			if !attributesItem.CountryAttribute.Icon.IsUnknown() && !attributesItem.CountryAttribute.Icon.IsNull() {
				*icon3 = attributesItem.CountryAttribute.Icon.ValueString()
			} else {
				icon3 = nil
			}
			renderCondition3 := new(string)
			if !attributesItem.CountryAttribute.RenderCondition.IsUnknown() && !attributesItem.CountryAttribute.RenderCondition.IsNull() {
				*renderCondition3 = attributesItem.CountryAttribute.RenderCondition.ValueString()
			} else {
				renderCondition3 = nil
			}
			var purpose3 []string = []string{}
			for _, purposeItem3 := range attributesItem.CountryAttribute.Purpose {
				purpose3 = append(purpose3, purposeItem3.ValueString())
			}
			var constraints3 *shared.CountryAttributeConstraints
			if attributesItem.CountryAttribute.Constraints != nil {
				constraints3 = &shared.CountryAttributeConstraints{}
			}
			featureFlag3 := new(string)
			if !attributesItem.CountryAttribute.FeatureFlag.IsUnknown() && !attributesItem.CountryAttribute.FeatureFlag.IsNull() {
				*featureFlag3 = attributesItem.CountryAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag3 = nil
			}
			var settingsFlag3 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem3 := range attributesItem.CountryAttribute.SettingsFlag {
				name8 := new(string)
				if !settingsFlagItem3.Name.IsUnknown() && !settingsFlagItem3.Name.IsNull() {
					*name8 = settingsFlagItem3.Name.ValueString()
				} else {
					name8 = nil
				}
				enabled3 := new(bool)
				if !settingsFlagItem3.Enabled.IsUnknown() && !settingsFlagItem3.Enabled.IsNull() {
					*enabled3 = settingsFlagItem3.Enabled.ValueBool()
				} else {
					enabled3 = nil
				}
				settingsFlag3 = append(settingsFlag3, shared.SettingFlag{
					Name:    name8,
					Enabled: enabled3,
				})
			}
			valueFormatter3 := new(string)
			if !attributesItem.CountryAttribute.ValueFormatter.IsUnknown() && !attributesItem.CountryAttribute.ValueFormatter.IsNull() {
				*valueFormatter3 = attributesItem.CountryAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter3 = nil
			}
			previewValueFormatter3 := new(string)
			if !attributesItem.CountryAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.CountryAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter3 = attributesItem.CountryAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter3 = nil
			}
			entityBuilderDisableEdit3 := new(bool)
			if !attributesItem.CountryAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.CountryAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit3 = attributesItem.CountryAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit3 = nil
			}
			protected3 := new(bool)
			if !attributesItem.CountryAttribute.Protected.IsUnknown() && !attributesItem.CountryAttribute.Protected.IsNull() {
				*protected3 = attributesItem.CountryAttribute.Protected.ValueBool()
			} else {
				protected3 = nil
			}
			var infoHelpers3 *shared.CountryAttributeInfoHelpers
			if attributesItem.CountryAttribute.InfoHelpers != nil {
				hintText3 := new(string)
				if !attributesItem.CountryAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.CountryAttribute.InfoHelpers.HintText.IsNull() {
					*hintText3 = attributesItem.CountryAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText3 = nil
				}
				hintTextKey3 := new(string)
				if !attributesItem.CountryAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.CountryAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey3 = attributesItem.CountryAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey3 = nil
				}
				hintCustomComponent3 := new(string)
				if !attributesItem.CountryAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.CountryAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent3 = attributesItem.CountryAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent3 = nil
				}
				hintTooltipPlacement3 := new(string)
				if !attributesItem.CountryAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.CountryAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement3 = attributesItem.CountryAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement3 = nil
				}
				infoHelpers3 = &shared.CountryAttributeInfoHelpers{
					HintText:             hintText3,
					HintTextKey:          hintTextKey3,
					HintCustomComponent:  hintCustomComponent3,
					HintTooltipPlacement: hintTooltipPlacement3,
				}
			}
			typeVar3 := new(shared.CountryAttributeType)
			if !attributesItem.CountryAttribute.Type.IsUnknown() && !attributesItem.CountryAttribute.Type.IsNull() {
				*typeVar3 = shared.CountryAttributeType(attributesItem.CountryAttribute.Type.ValueString())
			} else {
				typeVar3 = nil
			}
			countryAttribute := shared.CountryAttribute{
				ID:                       id4,
				Name:                     name7,
				Label:                    label3,
				Placeholder:              placeholder3,
				Hidden:                   hidden3,
				ShowInTable:              showInTable3,
				Sortable:                 sortable3,
				Required:                 required3,
				Readonly:                 readonly3,
				Deprecated:               deprecated3,
				DefaultValue:             defaultValue3,
				Group:                    group3,
				Order:                    order3,
				Layout:                   layout3,
				HideLabel:                hideLabel3,
				Icon:                     icon3,
				RenderCondition:          renderCondition3,
				Purpose:                  purpose3,
				Constraints:              constraints3,
				FeatureFlag:              featureFlag3,
				SettingsFlag:             settingsFlag3,
				ValueFormatter:           valueFormatter3,
				PreviewValueFormatter:    previewValueFormatter3,
				EntityBuilderDisableEdit: entityBuilderDisableEdit3,
				Protected:                protected3,
				InfoHelpers:              infoHelpers3,
				Type:                     typeVar3,
			}
			attributes = append(attributes, shared.Attribute{
				CountryAttribute: &countryAttribute,
			})
		}
		if attributesItem.BooleanAttribute != nil {
			id5 := new(string)
			if !attributesItem.BooleanAttribute.ID.IsUnknown() && !attributesItem.BooleanAttribute.ID.IsNull() {
				*id5 = attributesItem.BooleanAttribute.ID.ValueString()
			} else {
				id5 = nil
			}
			name9 := attributesItem.BooleanAttribute.Name.ValueString()
			label4 := attributesItem.BooleanAttribute.Label.ValueString()
			placeholder4 := new(string)
			if !attributesItem.BooleanAttribute.Placeholder.IsUnknown() && !attributesItem.BooleanAttribute.Placeholder.IsNull() {
				*placeholder4 = attributesItem.BooleanAttribute.Placeholder.ValueString()
			} else {
				placeholder4 = nil
			}
			hidden4 := new(bool)
			if !attributesItem.BooleanAttribute.Hidden.IsUnknown() && !attributesItem.BooleanAttribute.Hidden.IsNull() {
				*hidden4 = attributesItem.BooleanAttribute.Hidden.ValueBool()
			} else {
				hidden4 = nil
			}
			showInTable4 := new(bool)
			if !attributesItem.BooleanAttribute.ShowInTable.IsUnknown() && !attributesItem.BooleanAttribute.ShowInTable.IsNull() {
				*showInTable4 = attributesItem.BooleanAttribute.ShowInTable.ValueBool()
			} else {
				showInTable4 = nil
			}
			sortable4 := new(bool)
			if !attributesItem.BooleanAttribute.Sortable.IsUnknown() && !attributesItem.BooleanAttribute.Sortable.IsNull() {
				*sortable4 = attributesItem.BooleanAttribute.Sortable.ValueBool()
			} else {
				sortable4 = nil
			}
			required4 := new(bool)
			if !attributesItem.BooleanAttribute.Required.IsUnknown() && !attributesItem.BooleanAttribute.Required.IsNull() {
				*required4 = attributesItem.BooleanAttribute.Required.ValueBool()
			} else {
				required4 = nil
			}
			readonly4 := new(bool)
			if !attributesItem.BooleanAttribute.Readonly.IsUnknown() && !attributesItem.BooleanAttribute.Readonly.IsNull() {
				*readonly4 = attributesItem.BooleanAttribute.Readonly.ValueBool()
			} else {
				readonly4 = nil
			}
			deprecated4 := new(bool)
			if !attributesItem.BooleanAttribute.Deprecated.IsUnknown() && !attributesItem.BooleanAttribute.Deprecated.IsNull() {
				*deprecated4 = attributesItem.BooleanAttribute.Deprecated.ValueBool()
			} else {
				deprecated4 = nil
			}
			var defaultValue4 interface{}
			if !attributesItem.BooleanAttribute.DefaultValue.IsUnknown() && !attributesItem.BooleanAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem.BooleanAttribute.DefaultValue.ValueString()), &defaultValue4)
			}
			group4 := new(string)
			if !attributesItem.BooleanAttribute.Group.IsUnknown() && !attributesItem.BooleanAttribute.Group.IsNull() {
				*group4 = attributesItem.BooleanAttribute.Group.ValueString()
			} else {
				group4 = nil
			}
			order4 := new(int64)
			if !attributesItem.BooleanAttribute.Order.IsUnknown() && !attributesItem.BooleanAttribute.Order.IsNull() {
				*order4 = attributesItem.BooleanAttribute.Order.ValueInt64()
			} else {
				order4 = nil
			}
			layout4 := new(string)
			if !attributesItem.BooleanAttribute.Layout.IsUnknown() && !attributesItem.BooleanAttribute.Layout.IsNull() {
				*layout4 = attributesItem.BooleanAttribute.Layout.ValueString()
			} else {
				layout4 = nil
			}
			hideLabel4 := new(bool)
			if !attributesItem.BooleanAttribute.HideLabel.IsUnknown() && !attributesItem.BooleanAttribute.HideLabel.IsNull() {
				*hideLabel4 = attributesItem.BooleanAttribute.HideLabel.ValueBool()
			} else {
				hideLabel4 = nil
			}
			icon4 := new(string)
			if !attributesItem.BooleanAttribute.Icon.IsUnknown() && !attributesItem.BooleanAttribute.Icon.IsNull() {
				*icon4 = attributesItem.BooleanAttribute.Icon.ValueString()
			} else {
				icon4 = nil
			}
			renderCondition4 := new(string)
			if !attributesItem.BooleanAttribute.RenderCondition.IsUnknown() && !attributesItem.BooleanAttribute.RenderCondition.IsNull() {
				*renderCondition4 = attributesItem.BooleanAttribute.RenderCondition.ValueString()
			} else {
				renderCondition4 = nil
			}
			var purpose4 []string = []string{}
			for _, purposeItem4 := range attributesItem.BooleanAttribute.Purpose {
				purpose4 = append(purpose4, purposeItem4.ValueString())
			}
			var constraints4 *shared.BooleanAttributeConstraints
			if attributesItem.BooleanAttribute.Constraints != nil {
				constraints4 = &shared.BooleanAttributeConstraints{}
			}
			featureFlag4 := new(string)
			if !attributesItem.BooleanAttribute.FeatureFlag.IsUnknown() && !attributesItem.BooleanAttribute.FeatureFlag.IsNull() {
				*featureFlag4 = attributesItem.BooleanAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag4 = nil
			}
			var settingsFlag4 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem4 := range attributesItem.BooleanAttribute.SettingsFlag {
				name10 := new(string)
				if !settingsFlagItem4.Name.IsUnknown() && !settingsFlagItem4.Name.IsNull() {
					*name10 = settingsFlagItem4.Name.ValueString()
				} else {
					name10 = nil
				}
				enabled4 := new(bool)
				if !settingsFlagItem4.Enabled.IsUnknown() && !settingsFlagItem4.Enabled.IsNull() {
					*enabled4 = settingsFlagItem4.Enabled.ValueBool()
				} else {
					enabled4 = nil
				}
				settingsFlag4 = append(settingsFlag4, shared.SettingFlag{
					Name:    name10,
					Enabled: enabled4,
				})
			}
			valueFormatter4 := new(string)
			if !attributesItem.BooleanAttribute.ValueFormatter.IsUnknown() && !attributesItem.BooleanAttribute.ValueFormatter.IsNull() {
				*valueFormatter4 = attributesItem.BooleanAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter4 = nil
			}
			previewValueFormatter4 := new(string)
			if !attributesItem.BooleanAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.BooleanAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter4 = attributesItem.BooleanAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter4 = nil
			}
			entityBuilderDisableEdit4 := new(bool)
			if !attributesItem.BooleanAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.BooleanAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit4 = attributesItem.BooleanAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit4 = nil
			}
			protected4 := new(bool)
			if !attributesItem.BooleanAttribute.Protected.IsUnknown() && !attributesItem.BooleanAttribute.Protected.IsNull() {
				*protected4 = attributesItem.BooleanAttribute.Protected.ValueBool()
			} else {
				protected4 = nil
			}
			var infoHelpers4 *shared.BooleanAttributeInfoHelpers
			if attributesItem.BooleanAttribute.InfoHelpers != nil {
				hintText4 := new(string)
				if !attributesItem.BooleanAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.BooleanAttribute.InfoHelpers.HintText.IsNull() {
					*hintText4 = attributesItem.BooleanAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText4 = nil
				}
				hintTextKey4 := new(string)
				if !attributesItem.BooleanAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.BooleanAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey4 = attributesItem.BooleanAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey4 = nil
				}
				hintCustomComponent4 := new(string)
				if !attributesItem.BooleanAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.BooleanAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent4 = attributesItem.BooleanAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent4 = nil
				}
				hintTooltipPlacement4 := new(string)
				if !attributesItem.BooleanAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.BooleanAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement4 = attributesItem.BooleanAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement4 = nil
				}
				infoHelpers4 = &shared.BooleanAttributeInfoHelpers{
					HintText:             hintText4,
					HintTextKey:          hintTextKey4,
					HintCustomComponent:  hintCustomComponent4,
					HintTooltipPlacement: hintTooltipPlacement4,
				}
			}
			typeVar4 := new(shared.BooleanAttributeType)
			if !attributesItem.BooleanAttribute.Type.IsUnknown() && !attributesItem.BooleanAttribute.Type.IsNull() {
				*typeVar4 = shared.BooleanAttributeType(attributesItem.BooleanAttribute.Type.ValueString())
			} else {
				typeVar4 = nil
			}
			booleanAttribute := shared.BooleanAttribute{
				ID:                       id5,
				Name:                     name9,
				Label:                    label4,
				Placeholder:              placeholder4,
				Hidden:                   hidden4,
				ShowInTable:              showInTable4,
				Sortable:                 sortable4,
				Required:                 required4,
				Readonly:                 readonly4,
				Deprecated:               deprecated4,
				DefaultValue:             defaultValue4,
				Group:                    group4,
				Order:                    order4,
				Layout:                   layout4,
				HideLabel:                hideLabel4,
				Icon:                     icon4,
				RenderCondition:          renderCondition4,
				Purpose:                  purpose4,
				Constraints:              constraints4,
				FeatureFlag:              featureFlag4,
				SettingsFlag:             settingsFlag4,
				ValueFormatter:           valueFormatter4,
				PreviewValueFormatter:    previewValueFormatter4,
				EntityBuilderDisableEdit: entityBuilderDisableEdit4,
				Protected:                protected4,
				InfoHelpers:              infoHelpers4,
				Type:                     typeVar4,
			}
			attributes = append(attributes, shared.Attribute{
				BooleanAttribute: &booleanAttribute,
			})
		}
		if attributesItem.SelectAttribute != nil {
			id6 := new(string)
			if !attributesItem.SelectAttribute.ID.IsUnknown() && !attributesItem.SelectAttribute.ID.IsNull() {
				*id6 = attributesItem.SelectAttribute.ID.ValueString()
			} else {
				id6 = nil
			}
			name11 := attributesItem.SelectAttribute.Name.ValueString()
			label5 := attributesItem.SelectAttribute.Label.ValueString()
			placeholder5 := new(string)
			if !attributesItem.SelectAttribute.Placeholder.IsUnknown() && !attributesItem.SelectAttribute.Placeholder.IsNull() {
				*placeholder5 = attributesItem.SelectAttribute.Placeholder.ValueString()
			} else {
				placeholder5 = nil
			}
			hidden5 := new(bool)
			if !attributesItem.SelectAttribute.Hidden.IsUnknown() && !attributesItem.SelectAttribute.Hidden.IsNull() {
				*hidden5 = attributesItem.SelectAttribute.Hidden.ValueBool()
			} else {
				hidden5 = nil
			}
			showInTable5 := new(bool)
			if !attributesItem.SelectAttribute.ShowInTable.IsUnknown() && !attributesItem.SelectAttribute.ShowInTable.IsNull() {
				*showInTable5 = attributesItem.SelectAttribute.ShowInTable.ValueBool()
			} else {
				showInTable5 = nil
			}
			sortable5 := new(bool)
			if !attributesItem.SelectAttribute.Sortable.IsUnknown() && !attributesItem.SelectAttribute.Sortable.IsNull() {
				*sortable5 = attributesItem.SelectAttribute.Sortable.ValueBool()
			} else {
				sortable5 = nil
			}
			required5 := new(bool)
			if !attributesItem.SelectAttribute.Required.IsUnknown() && !attributesItem.SelectAttribute.Required.IsNull() {
				*required5 = attributesItem.SelectAttribute.Required.ValueBool()
			} else {
				required5 = nil
			}
			readonly5 := new(bool)
			if !attributesItem.SelectAttribute.Readonly.IsUnknown() && !attributesItem.SelectAttribute.Readonly.IsNull() {
				*readonly5 = attributesItem.SelectAttribute.Readonly.ValueBool()
			} else {
				readonly5 = nil
			}
			deprecated5 := new(bool)
			if !attributesItem.SelectAttribute.Deprecated.IsUnknown() && !attributesItem.SelectAttribute.Deprecated.IsNull() {
				*deprecated5 = attributesItem.SelectAttribute.Deprecated.ValueBool()
			} else {
				deprecated5 = nil
			}
			var defaultValue5 interface{}
			if !attributesItem.SelectAttribute.DefaultValue.IsUnknown() && !attributesItem.SelectAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem.SelectAttribute.DefaultValue.ValueString()), &defaultValue5)
			}
			group5 := new(string)
			if !attributesItem.SelectAttribute.Group.IsUnknown() && !attributesItem.SelectAttribute.Group.IsNull() {
				*group5 = attributesItem.SelectAttribute.Group.ValueString()
			} else {
				group5 = nil
			}
			order5 := new(int64)
			if !attributesItem.SelectAttribute.Order.IsUnknown() && !attributesItem.SelectAttribute.Order.IsNull() {
				*order5 = attributesItem.SelectAttribute.Order.ValueInt64()
			} else {
				order5 = nil
			}
			layout5 := new(string)
			if !attributesItem.SelectAttribute.Layout.IsUnknown() && !attributesItem.SelectAttribute.Layout.IsNull() {
				*layout5 = attributesItem.SelectAttribute.Layout.ValueString()
			} else {
				layout5 = nil
			}
			hideLabel5 := new(bool)
			if !attributesItem.SelectAttribute.HideLabel.IsUnknown() && !attributesItem.SelectAttribute.HideLabel.IsNull() {
				*hideLabel5 = attributesItem.SelectAttribute.HideLabel.ValueBool()
			} else {
				hideLabel5 = nil
			}
			icon5 := new(string)
			if !attributesItem.SelectAttribute.Icon.IsUnknown() && !attributesItem.SelectAttribute.Icon.IsNull() {
				*icon5 = attributesItem.SelectAttribute.Icon.ValueString()
			} else {
				icon5 = nil
			}
			renderCondition5 := new(string)
			if !attributesItem.SelectAttribute.RenderCondition.IsUnknown() && !attributesItem.SelectAttribute.RenderCondition.IsNull() {
				*renderCondition5 = attributesItem.SelectAttribute.RenderCondition.ValueString()
			} else {
				renderCondition5 = nil
			}
			var purpose5 []string = []string{}
			for _, purposeItem5 := range attributesItem.SelectAttribute.Purpose {
				purpose5 = append(purpose5, purposeItem5.ValueString())
			}
			var constraints5 *shared.SelectAttributeConstraints
			if attributesItem.SelectAttribute.Constraints != nil {
				constraints5 = &shared.SelectAttributeConstraints{}
			}
			featureFlag5 := new(string)
			if !attributesItem.SelectAttribute.FeatureFlag.IsUnknown() && !attributesItem.SelectAttribute.FeatureFlag.IsNull() {
				*featureFlag5 = attributesItem.SelectAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag5 = nil
			}
			var settingsFlag5 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem5 := range attributesItem.SelectAttribute.SettingsFlag {
				name12 := new(string)
				if !settingsFlagItem5.Name.IsUnknown() && !settingsFlagItem5.Name.IsNull() {
					*name12 = settingsFlagItem5.Name.ValueString()
				} else {
					name12 = nil
				}
				enabled5 := new(bool)
				if !settingsFlagItem5.Enabled.IsUnknown() && !settingsFlagItem5.Enabled.IsNull() {
					*enabled5 = settingsFlagItem5.Enabled.ValueBool()
				} else {
					enabled5 = nil
				}
				settingsFlag5 = append(settingsFlag5, shared.SettingFlag{
					Name:    name12,
					Enabled: enabled5,
				})
			}
			valueFormatter5 := new(string)
			if !attributesItem.SelectAttribute.ValueFormatter.IsUnknown() && !attributesItem.SelectAttribute.ValueFormatter.IsNull() {
				*valueFormatter5 = attributesItem.SelectAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter5 = nil
			}
			previewValueFormatter5 := new(string)
			if !attributesItem.SelectAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.SelectAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter5 = attributesItem.SelectAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter5 = nil
			}
			entityBuilderDisableEdit5 := new(bool)
			if !attributesItem.SelectAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.SelectAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit5 = attributesItem.SelectAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit5 = nil
			}
			protected5 := new(bool)
			if !attributesItem.SelectAttribute.Protected.IsUnknown() && !attributesItem.SelectAttribute.Protected.IsNull() {
				*protected5 = attributesItem.SelectAttribute.Protected.ValueBool()
			} else {
				protected5 = nil
			}
			var infoHelpers5 *shared.SelectAttributeInfoHelpers
			if attributesItem.SelectAttribute.InfoHelpers != nil {
				hintText5 := new(string)
				if !attributesItem.SelectAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.SelectAttribute.InfoHelpers.HintText.IsNull() {
					*hintText5 = attributesItem.SelectAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText5 = nil
				}
				hintTextKey5 := new(string)
				if !attributesItem.SelectAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.SelectAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey5 = attributesItem.SelectAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey5 = nil
				}
				hintCustomComponent5 := new(string)
				if !attributesItem.SelectAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.SelectAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent5 = attributesItem.SelectAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent5 = nil
				}
				hintTooltipPlacement5 := new(string)
				if !attributesItem.SelectAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.SelectAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement5 = attributesItem.SelectAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement5 = nil
				}
				infoHelpers5 = &shared.SelectAttributeInfoHelpers{
					HintText:             hintText5,
					HintTextKey:          hintTextKey5,
					HintCustomComponent:  hintCustomComponent5,
					HintTooltipPlacement: hintTooltipPlacement5,
				}
			}
			typeVar5 := new(shared.SelectAttributeType)
			if !attributesItem.SelectAttribute.Type.IsUnknown() && !attributesItem.SelectAttribute.Type.IsNull() {
				*typeVar5 = shared.SelectAttributeType(attributesItem.SelectAttribute.Type.ValueString())
			} else {
				typeVar5 = nil
			}
			var options []shared.Options = []shared.Options{}
			for _, optionsItem := range attributesItem.SelectAttribute.Options {
				if optionsItem.One != nil {
					value := new(string)
					if !optionsItem.One.Value.IsUnknown() && !optionsItem.One.Value.IsNull() {
						*value = optionsItem.One.Value.ValueString()
					} else {
						value = nil
					}
					title1 := new(string)
					if !optionsItem.One.Title.IsUnknown() && !optionsItem.One.Title.IsNull() {
						*title1 = optionsItem.One.Title.ValueString()
					} else {
						title1 = nil
					}
					one := shared.One{
						Value: value,
						Title: title1,
					}
					options = append(options, shared.Options{
						One: &one,
					})
				}
				if !optionsItem.Str.IsUnknown() && !optionsItem.Str.IsNull() {
					str := optionsItem.Str.ValueString()
					options = append(options, shared.Options{
						Str: &str,
					})
				}
			}
			allowAny := new(bool)
			if !attributesItem.SelectAttribute.AllowAny.IsUnknown() && !attributesItem.SelectAttribute.AllowAny.IsNull() {
				*allowAny = attributesItem.SelectAttribute.AllowAny.ValueBool()
			} else {
				allowAny = nil
			}
			selectAttribute := shared.SelectAttribute{
				ID:                       id6,
				Name:                     name11,
				Label:                    label5,
				Placeholder:              placeholder5,
				Hidden:                   hidden5,
				ShowInTable:              showInTable5,
				Sortable:                 sortable5,
				Required:                 required5,
				Readonly:                 readonly5,
				Deprecated:               deprecated5,
				DefaultValue:             defaultValue5,
				Group:                    group5,
				Order:                    order5,
				Layout:                   layout5,
				HideLabel:                hideLabel5,
				Icon:                     icon5,
				RenderCondition:          renderCondition5,
				Purpose:                  purpose5,
				Constraints:              constraints5,
				FeatureFlag:              featureFlag5,
				SettingsFlag:             settingsFlag5,
				ValueFormatter:           valueFormatter5,
				PreviewValueFormatter:    previewValueFormatter5,
				EntityBuilderDisableEdit: entityBuilderDisableEdit5,
				Protected:                protected5,
				InfoHelpers:              infoHelpers5,
				Type:                     typeVar5,
				Options:                  options,
				AllowAny:                 allowAny,
			}
			attributes = append(attributes, shared.Attribute{
				SelectAttribute: &selectAttribute,
			})
		}
		if attributesItem.MultiSelectAttribute != nil {
			id7 := new(string)
			if !attributesItem.MultiSelectAttribute.ID.IsUnknown() && !attributesItem.MultiSelectAttribute.ID.IsNull() {
				*id7 = attributesItem.MultiSelectAttribute.ID.ValueString()
			} else {
				id7 = nil
			}
			name13 := attributesItem.MultiSelectAttribute.Name.ValueString()
			label6 := attributesItem.MultiSelectAttribute.Label.ValueString()
			placeholder6 := new(string)
			if !attributesItem.MultiSelectAttribute.Placeholder.IsUnknown() && !attributesItem.MultiSelectAttribute.Placeholder.IsNull() {
				*placeholder6 = attributesItem.MultiSelectAttribute.Placeholder.ValueString()
			} else {
				placeholder6 = nil
			}
			hidden6 := new(bool)
			if !attributesItem.MultiSelectAttribute.Hidden.IsUnknown() && !attributesItem.MultiSelectAttribute.Hidden.IsNull() {
				*hidden6 = attributesItem.MultiSelectAttribute.Hidden.ValueBool()
			} else {
				hidden6 = nil
			}
			showInTable6 := new(bool)
			if !attributesItem.MultiSelectAttribute.ShowInTable.IsUnknown() && !attributesItem.MultiSelectAttribute.ShowInTable.IsNull() {
				*showInTable6 = attributesItem.MultiSelectAttribute.ShowInTable.ValueBool()
			} else {
				showInTable6 = nil
			}
			sortable6 := new(bool)
			if !attributesItem.MultiSelectAttribute.Sortable.IsUnknown() && !attributesItem.MultiSelectAttribute.Sortable.IsNull() {
				*sortable6 = attributesItem.MultiSelectAttribute.Sortable.ValueBool()
			} else {
				sortable6 = nil
			}
			required6 := new(bool)
			if !attributesItem.MultiSelectAttribute.Required.IsUnknown() && !attributesItem.MultiSelectAttribute.Required.IsNull() {
				*required6 = attributesItem.MultiSelectAttribute.Required.ValueBool()
			} else {
				required6 = nil
			}
			readonly6 := new(bool)
			if !attributesItem.MultiSelectAttribute.Readonly.IsUnknown() && !attributesItem.MultiSelectAttribute.Readonly.IsNull() {
				*readonly6 = attributesItem.MultiSelectAttribute.Readonly.ValueBool()
			} else {
				readonly6 = nil
			}
			deprecated6 := new(bool)
			if !attributesItem.MultiSelectAttribute.Deprecated.IsUnknown() && !attributesItem.MultiSelectAttribute.Deprecated.IsNull() {
				*deprecated6 = attributesItem.MultiSelectAttribute.Deprecated.ValueBool()
			} else {
				deprecated6 = nil
			}
			var defaultValue6 interface{}
			if !attributesItem.MultiSelectAttribute.DefaultValue.IsUnknown() && !attributesItem.MultiSelectAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem.MultiSelectAttribute.DefaultValue.ValueString()), &defaultValue6)
			}
			group6 := new(string)
			if !attributesItem.MultiSelectAttribute.Group.IsUnknown() && !attributesItem.MultiSelectAttribute.Group.IsNull() {
				*group6 = attributesItem.MultiSelectAttribute.Group.ValueString()
			} else {
				group6 = nil
			}
			order6 := new(int64)
			if !attributesItem.MultiSelectAttribute.Order.IsUnknown() && !attributesItem.MultiSelectAttribute.Order.IsNull() {
				*order6 = attributesItem.MultiSelectAttribute.Order.ValueInt64()
			} else {
				order6 = nil
			}
			layout6 := new(string)
			if !attributesItem.MultiSelectAttribute.Layout.IsUnknown() && !attributesItem.MultiSelectAttribute.Layout.IsNull() {
				*layout6 = attributesItem.MultiSelectAttribute.Layout.ValueString()
			} else {
				layout6 = nil
			}
			hideLabel6 := new(bool)
			if !attributesItem.MultiSelectAttribute.HideLabel.IsUnknown() && !attributesItem.MultiSelectAttribute.HideLabel.IsNull() {
				*hideLabel6 = attributesItem.MultiSelectAttribute.HideLabel.ValueBool()
			} else {
				hideLabel6 = nil
			}
			icon6 := new(string)
			if !attributesItem.MultiSelectAttribute.Icon.IsUnknown() && !attributesItem.MultiSelectAttribute.Icon.IsNull() {
				*icon6 = attributesItem.MultiSelectAttribute.Icon.ValueString()
			} else {
				icon6 = nil
			}
			renderCondition6 := new(string)
			if !attributesItem.MultiSelectAttribute.RenderCondition.IsUnknown() && !attributesItem.MultiSelectAttribute.RenderCondition.IsNull() {
				*renderCondition6 = attributesItem.MultiSelectAttribute.RenderCondition.ValueString()
			} else {
				renderCondition6 = nil
			}
			var purpose6 []string = []string{}
			for _, purposeItem6 := range attributesItem.MultiSelectAttribute.Purpose {
				purpose6 = append(purpose6, purposeItem6.ValueString())
			}
			var constraints6 *shared.MultiSelectAttributeConstraints
			if attributesItem.MultiSelectAttribute.Constraints != nil {
				constraints6 = &shared.MultiSelectAttributeConstraints{}
			}
			featureFlag6 := new(string)
			if !attributesItem.MultiSelectAttribute.FeatureFlag.IsUnknown() && !attributesItem.MultiSelectAttribute.FeatureFlag.IsNull() {
				*featureFlag6 = attributesItem.MultiSelectAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag6 = nil
			}
			var settingsFlag6 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem6 := range attributesItem.MultiSelectAttribute.SettingsFlag {
				name14 := new(string)
				if !settingsFlagItem6.Name.IsUnknown() && !settingsFlagItem6.Name.IsNull() {
					*name14 = settingsFlagItem6.Name.ValueString()
				} else {
					name14 = nil
				}
				enabled6 := new(bool)
				if !settingsFlagItem6.Enabled.IsUnknown() && !settingsFlagItem6.Enabled.IsNull() {
					*enabled6 = settingsFlagItem6.Enabled.ValueBool()
				} else {
					enabled6 = nil
				}
				settingsFlag6 = append(settingsFlag6, shared.SettingFlag{
					Name:    name14,
					Enabled: enabled6,
				})
			}
			valueFormatter6 := new(string)
			if !attributesItem.MultiSelectAttribute.ValueFormatter.IsUnknown() && !attributesItem.MultiSelectAttribute.ValueFormatter.IsNull() {
				*valueFormatter6 = attributesItem.MultiSelectAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter6 = nil
			}
			previewValueFormatter6 := new(string)
			if !attributesItem.MultiSelectAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.MultiSelectAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter6 = attributesItem.MultiSelectAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter6 = nil
			}
			entityBuilderDisableEdit6 := new(bool)
			if !attributesItem.MultiSelectAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.MultiSelectAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit6 = attributesItem.MultiSelectAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit6 = nil
			}
			protected6 := new(bool)
			if !attributesItem.MultiSelectAttribute.Protected.IsUnknown() && !attributesItem.MultiSelectAttribute.Protected.IsNull() {
				*protected6 = attributesItem.MultiSelectAttribute.Protected.ValueBool()
			} else {
				protected6 = nil
			}
			var infoHelpers6 *shared.MultiSelectAttributeInfoHelpers
			if attributesItem.MultiSelectAttribute.InfoHelpers != nil {
				hintText6 := new(string)
				if !attributesItem.MultiSelectAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.MultiSelectAttribute.InfoHelpers.HintText.IsNull() {
					*hintText6 = attributesItem.MultiSelectAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText6 = nil
				}
				hintTextKey6 := new(string)
				if !attributesItem.MultiSelectAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.MultiSelectAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey6 = attributesItem.MultiSelectAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey6 = nil
				}
				hintCustomComponent6 := new(string)
				if !attributesItem.MultiSelectAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.MultiSelectAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent6 = attributesItem.MultiSelectAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent6 = nil
				}
				hintTooltipPlacement6 := new(string)
				if !attributesItem.MultiSelectAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.MultiSelectAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement6 = attributesItem.MultiSelectAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement6 = nil
				}
				infoHelpers6 = &shared.MultiSelectAttributeInfoHelpers{
					HintText:             hintText6,
					HintTextKey:          hintTextKey6,
					HintCustomComponent:  hintCustomComponent6,
					HintTooltipPlacement: hintTooltipPlacement6,
				}
			}
			typeVar6 := new(shared.MultiSelectAttributeType)
			if !attributesItem.MultiSelectAttribute.Type.IsUnknown() && !attributesItem.MultiSelectAttribute.Type.IsNull() {
				*typeVar6 = shared.MultiSelectAttributeType(attributesItem.MultiSelectAttribute.Type.ValueString())
			} else {
				typeVar6 = nil
			}
			disableCaseSensitive := new(bool)
			if !attributesItem.MultiSelectAttribute.DisableCaseSensitive.IsUnknown() && !attributesItem.MultiSelectAttribute.DisableCaseSensitive.IsNull() {
				*disableCaseSensitive = attributesItem.MultiSelectAttribute.DisableCaseSensitive.ValueBool()
			} else {
				disableCaseSensitive = nil
			}
			allowExtraOptions := new(bool)
			if !attributesItem.MultiSelectAttribute.AllowExtraOptions.IsUnknown() && !attributesItem.MultiSelectAttribute.AllowExtraOptions.IsNull() {
				*allowExtraOptions = attributesItem.MultiSelectAttribute.AllowExtraOptions.ValueBool()
			} else {
				allowExtraOptions = nil
			}
			var options1 []shared.MultiSelectAttributeOptions = []shared.MultiSelectAttributeOptions{}
			for _, optionsItem1 := range attributesItem.MultiSelectAttribute.Options {
				if !optionsItem1.Str.IsUnknown() && !optionsItem1.Str.IsNull() {
					str1 := optionsItem1.Str.ValueString()
					options1 = append(options1, shared.MultiSelectAttributeOptions{
						Str: &str1,
					})
				}
				if optionsItem1.Two != nil {
					value1 := optionsItem1.Two.Value.ValueString()
					title2 := new(string)
					if !optionsItem1.Two.Title.IsUnknown() && !optionsItem1.Two.Title.IsNull() {
						*title2 = optionsItem1.Two.Title.ValueString()
					} else {
						title2 = nil
					}
					two := shared.Two{
						Value: value1,
						Title: title2,
					}
					options1 = append(options1, shared.MultiSelectAttributeOptions{
						Two: &two,
					})
				}
			}
			allowAny1 := new(bool)
			if !attributesItem.MultiSelectAttribute.AllowAny.IsUnknown() && !attributesItem.MultiSelectAttribute.AllowAny.IsNull() {
				*allowAny1 = attributesItem.MultiSelectAttribute.AllowAny.ValueBool()
			} else {
				allowAny1 = nil
			}
			multiSelectAttribute := shared.MultiSelectAttribute{
				ID:                       id7,
				Name:                     name13,
				Label:                    label6,
				Placeholder:              placeholder6,
				Hidden:                   hidden6,
				ShowInTable:              showInTable6,
				Sortable:                 sortable6,
				Required:                 required6,
				Readonly:                 readonly6,
				Deprecated:               deprecated6,
				DefaultValue:             defaultValue6,
				Group:                    group6,
				Order:                    order6,
				Layout:                   layout6,
				HideLabel:                hideLabel6,
				Icon:                     icon6,
				RenderCondition:          renderCondition6,
				Purpose:                  purpose6,
				Constraints:              constraints6,
				FeatureFlag:              featureFlag6,
				SettingsFlag:             settingsFlag6,
				ValueFormatter:           valueFormatter6,
				PreviewValueFormatter:    previewValueFormatter6,
				EntityBuilderDisableEdit: entityBuilderDisableEdit6,
				Protected:                protected6,
				InfoHelpers:              infoHelpers6,
				Type:                     typeVar6,
				DisableCaseSensitive:     disableCaseSensitive,
				AllowExtraOptions:        allowExtraOptions,
				Options:                  options1,
				AllowAny:                 allowAny1,
			}
			attributes = append(attributes, shared.Attribute{
				MultiSelectAttribute: &multiSelectAttribute,
			})
		}
		if attributesItem.StatusAttribute != nil {
			id8 := new(string)
			if !attributesItem.StatusAttribute.ID.IsUnknown() && !attributesItem.StatusAttribute.ID.IsNull() {
				*id8 = attributesItem.StatusAttribute.ID.ValueString()
			} else {
				id8 = nil
			}
			name15 := attributesItem.StatusAttribute.Name.ValueString()
			label7 := attributesItem.StatusAttribute.Label.ValueString()
			placeholder7 := new(string)
			if !attributesItem.StatusAttribute.Placeholder.IsUnknown() && !attributesItem.StatusAttribute.Placeholder.IsNull() {
				*placeholder7 = attributesItem.StatusAttribute.Placeholder.ValueString()
			} else {
				placeholder7 = nil
			}
			hidden7 := new(bool)
			if !attributesItem.StatusAttribute.Hidden.IsUnknown() && !attributesItem.StatusAttribute.Hidden.IsNull() {
				*hidden7 = attributesItem.StatusAttribute.Hidden.ValueBool()
			} else {
				hidden7 = nil
			}
			showInTable7 := new(bool)
			if !attributesItem.StatusAttribute.ShowInTable.IsUnknown() && !attributesItem.StatusAttribute.ShowInTable.IsNull() {
				*showInTable7 = attributesItem.StatusAttribute.ShowInTable.ValueBool()
			} else {
				showInTable7 = nil
			}
			sortable7 := new(bool)
			if !attributesItem.StatusAttribute.Sortable.IsUnknown() && !attributesItem.StatusAttribute.Sortable.IsNull() {
				*sortable7 = attributesItem.StatusAttribute.Sortable.ValueBool()
			} else {
				sortable7 = nil
			}
			required7 := new(bool)
			if !attributesItem.StatusAttribute.Required.IsUnknown() && !attributesItem.StatusAttribute.Required.IsNull() {
				*required7 = attributesItem.StatusAttribute.Required.ValueBool()
			} else {
				required7 = nil
			}
			readonly7 := new(bool)
			if !attributesItem.StatusAttribute.Readonly.IsUnknown() && !attributesItem.StatusAttribute.Readonly.IsNull() {
				*readonly7 = attributesItem.StatusAttribute.Readonly.ValueBool()
			} else {
				readonly7 = nil
			}
			deprecated7 := new(bool)
			if !attributesItem.StatusAttribute.Deprecated.IsUnknown() && !attributesItem.StatusAttribute.Deprecated.IsNull() {
				*deprecated7 = attributesItem.StatusAttribute.Deprecated.ValueBool()
			} else {
				deprecated7 = nil
			}
			var defaultValue7 interface{}
			if !attributesItem.StatusAttribute.DefaultValue.IsUnknown() && !attributesItem.StatusAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem.StatusAttribute.DefaultValue.ValueString()), &defaultValue7)
			}
			group7 := new(string)
			if !attributesItem.StatusAttribute.Group.IsUnknown() && !attributesItem.StatusAttribute.Group.IsNull() {
				*group7 = attributesItem.StatusAttribute.Group.ValueString()
			} else {
				group7 = nil
			}
			order7 := new(int64)
			if !attributesItem.StatusAttribute.Order.IsUnknown() && !attributesItem.StatusAttribute.Order.IsNull() {
				*order7 = attributesItem.StatusAttribute.Order.ValueInt64()
			} else {
				order7 = nil
			}
			layout7 := new(string)
			if !attributesItem.StatusAttribute.Layout.IsUnknown() && !attributesItem.StatusAttribute.Layout.IsNull() {
				*layout7 = attributesItem.StatusAttribute.Layout.ValueString()
			} else {
				layout7 = nil
			}
			hideLabel7 := new(bool)
			if !attributesItem.StatusAttribute.HideLabel.IsUnknown() && !attributesItem.StatusAttribute.HideLabel.IsNull() {
				*hideLabel7 = attributesItem.StatusAttribute.HideLabel.ValueBool()
			} else {
				hideLabel7 = nil
			}
			icon7 := new(string)
			if !attributesItem.StatusAttribute.Icon.IsUnknown() && !attributesItem.StatusAttribute.Icon.IsNull() {
				*icon7 = attributesItem.StatusAttribute.Icon.ValueString()
			} else {
				icon7 = nil
			}
			renderCondition7 := new(string)
			if !attributesItem.StatusAttribute.RenderCondition.IsUnknown() && !attributesItem.StatusAttribute.RenderCondition.IsNull() {
				*renderCondition7 = attributesItem.StatusAttribute.RenderCondition.ValueString()
			} else {
				renderCondition7 = nil
			}
			var purpose7 []string = []string{}
			for _, purposeItem7 := range attributesItem.StatusAttribute.Purpose {
				purpose7 = append(purpose7, purposeItem7.ValueString())
			}
			var constraints7 *shared.StatusAttributeConstraints
			if attributesItem.StatusAttribute.Constraints != nil {
				constraints7 = &shared.StatusAttributeConstraints{}
			}
			featureFlag7 := new(string)
			if !attributesItem.StatusAttribute.FeatureFlag.IsUnknown() && !attributesItem.StatusAttribute.FeatureFlag.IsNull() {
				*featureFlag7 = attributesItem.StatusAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag7 = nil
			}
			var settingsFlag7 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem7 := range attributesItem.StatusAttribute.SettingsFlag {
				name16 := new(string)
				if !settingsFlagItem7.Name.IsUnknown() && !settingsFlagItem7.Name.IsNull() {
					*name16 = settingsFlagItem7.Name.ValueString()
				} else {
					name16 = nil
				}
				enabled7 := new(bool)
				if !settingsFlagItem7.Enabled.IsUnknown() && !settingsFlagItem7.Enabled.IsNull() {
					*enabled7 = settingsFlagItem7.Enabled.ValueBool()
				} else {
					enabled7 = nil
				}
				settingsFlag7 = append(settingsFlag7, shared.SettingFlag{
					Name:    name16,
					Enabled: enabled7,
				})
			}
			valueFormatter7 := new(string)
			if !attributesItem.StatusAttribute.ValueFormatter.IsUnknown() && !attributesItem.StatusAttribute.ValueFormatter.IsNull() {
				*valueFormatter7 = attributesItem.StatusAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter7 = nil
			}
			previewValueFormatter7 := new(string)
			if !attributesItem.StatusAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.StatusAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter7 = attributesItem.StatusAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter7 = nil
			}
			entityBuilderDisableEdit7 := new(bool)
			if !attributesItem.StatusAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.StatusAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit7 = attributesItem.StatusAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit7 = nil
			}
			protected7 := new(bool)
			if !attributesItem.StatusAttribute.Protected.IsUnknown() && !attributesItem.StatusAttribute.Protected.IsNull() {
				*protected7 = attributesItem.StatusAttribute.Protected.ValueBool()
			} else {
				protected7 = nil
			}
			var infoHelpers7 *shared.StatusAttributeInfoHelpers
			if attributesItem.StatusAttribute.InfoHelpers != nil {
				hintText7 := new(string)
				if !attributesItem.StatusAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.StatusAttribute.InfoHelpers.HintText.IsNull() {
					*hintText7 = attributesItem.StatusAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText7 = nil
				}
				hintTextKey7 := new(string)
				if !attributesItem.StatusAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.StatusAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey7 = attributesItem.StatusAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey7 = nil
				}
				hintCustomComponent7 := new(string)
				if !attributesItem.StatusAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.StatusAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent7 = attributesItem.StatusAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent7 = nil
				}
				hintTooltipPlacement7 := new(string)
				if !attributesItem.StatusAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.StatusAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement7 = attributesItem.StatusAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement7 = nil
				}
				infoHelpers7 = &shared.StatusAttributeInfoHelpers{
					HintText:             hintText7,
					HintTextKey:          hintTextKey7,
					HintCustomComponent:  hintCustomComponent7,
					HintTooltipPlacement: hintTooltipPlacement7,
				}
			}
			typeVar7 := new(shared.StatusAttributeType)
			if !attributesItem.StatusAttribute.Type.IsUnknown() && !attributesItem.StatusAttribute.Type.IsNull() {
				*typeVar7 = shared.StatusAttributeType(attributesItem.StatusAttribute.Type.ValueString())
			} else {
				typeVar7 = nil
			}
			var options2 []shared.StatusAttributeOptions = []shared.StatusAttributeOptions{}
			for _, optionsItem2 := range attributesItem.StatusAttribute.Options {
				if !optionsItem2.Str.IsUnknown() && !optionsItem2.Str.IsNull() {
					str2 := optionsItem2.Str.ValueString()
					options2 = append(options2, shared.StatusAttributeOptions{
						Str: &str2,
					})
				}
				if optionsItem2.Two != nil {
					value2 := optionsItem2.Two.Value.ValueString()
					title3 := new(string)
					if !optionsItem2.Two.Title.IsUnknown() && !optionsItem2.Two.Title.IsNull() {
						*title3 = optionsItem2.Two.Title.ValueString()
					} else {
						title3 = nil
					}
					options21 := shared.Options2{
						Value: value2,
						Title: title3,
					}
					options2 = append(options2, shared.StatusAttributeOptions{
						Options2: &options21,
					})
				}
			}
			statusAttribute := shared.StatusAttribute{
				ID:                       id8,
				Name:                     name15,
				Label:                    label7,
				Placeholder:              placeholder7,
				Hidden:                   hidden7,
				ShowInTable:              showInTable7,
				Sortable:                 sortable7,
				Required:                 required7,
				Readonly:                 readonly7,
				Deprecated:               deprecated7,
				DefaultValue:             defaultValue7,
				Group:                    group7,
				Order:                    order7,
				Layout:                   layout7,
				HideLabel:                hideLabel7,
				Icon:                     icon7,
				RenderCondition:          renderCondition7,
				Purpose:                  purpose7,
				Constraints:              constraints7,
				FeatureFlag:              featureFlag7,
				SettingsFlag:             settingsFlag7,
				ValueFormatter:           valueFormatter7,
				PreviewValueFormatter:    previewValueFormatter7,
				EntityBuilderDisableEdit: entityBuilderDisableEdit7,
				Protected:                protected7,
				InfoHelpers:              infoHelpers7,
				Type:                     typeVar7,
				Options:                  options2,
			}
			attributes = append(attributes, shared.Attribute{
				StatusAttribute: &statusAttribute,
			})
		}
		if attributesItem.SequenceAttribute != nil {
			id9 := new(string)
			if !attributesItem.SequenceAttribute.ID.IsUnknown() && !attributesItem.SequenceAttribute.ID.IsNull() {
				*id9 = attributesItem.SequenceAttribute.ID.ValueString()
			} else {
				id9 = nil
			}
			name17 := attributesItem.SequenceAttribute.Name.ValueString()
			label8 := attributesItem.SequenceAttribute.Label.ValueString()
			placeholder8 := new(string)
			if !attributesItem.SequenceAttribute.Placeholder.IsUnknown() && !attributesItem.SequenceAttribute.Placeholder.IsNull() {
				*placeholder8 = attributesItem.SequenceAttribute.Placeholder.ValueString()
			} else {
				placeholder8 = nil
			}
			hidden8 := new(bool)
			if !attributesItem.SequenceAttribute.Hidden.IsUnknown() && !attributesItem.SequenceAttribute.Hidden.IsNull() {
				*hidden8 = attributesItem.SequenceAttribute.Hidden.ValueBool()
			} else {
				hidden8 = nil
			}
			showInTable8 := new(bool)
			if !attributesItem.SequenceAttribute.ShowInTable.IsUnknown() && !attributesItem.SequenceAttribute.ShowInTable.IsNull() {
				*showInTable8 = attributesItem.SequenceAttribute.ShowInTable.ValueBool()
			} else {
				showInTable8 = nil
			}
			sortable8 := new(bool)
			if !attributesItem.SequenceAttribute.Sortable.IsUnknown() && !attributesItem.SequenceAttribute.Sortable.IsNull() {
				*sortable8 = attributesItem.SequenceAttribute.Sortable.ValueBool()
			} else {
				sortable8 = nil
			}
			required8 := new(bool)
			if !attributesItem.SequenceAttribute.Required.IsUnknown() && !attributesItem.SequenceAttribute.Required.IsNull() {
				*required8 = attributesItem.SequenceAttribute.Required.ValueBool()
			} else {
				required8 = nil
			}
			readonly8 := new(bool)
			if !attributesItem.SequenceAttribute.Readonly.IsUnknown() && !attributesItem.SequenceAttribute.Readonly.IsNull() {
				*readonly8 = attributesItem.SequenceAttribute.Readonly.ValueBool()
			} else {
				readonly8 = nil
			}
			deprecated8 := new(bool)
			if !attributesItem.SequenceAttribute.Deprecated.IsUnknown() && !attributesItem.SequenceAttribute.Deprecated.IsNull() {
				*deprecated8 = attributesItem.SequenceAttribute.Deprecated.ValueBool()
			} else {
				deprecated8 = nil
			}
			var defaultValue8 interface{}
			if !attributesItem.SequenceAttribute.DefaultValue.IsUnknown() && !attributesItem.SequenceAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem.SequenceAttribute.DefaultValue.ValueString()), &defaultValue8)
			}
			group8 := new(string)
			if !attributesItem.SequenceAttribute.Group.IsUnknown() && !attributesItem.SequenceAttribute.Group.IsNull() {
				*group8 = attributesItem.SequenceAttribute.Group.ValueString()
			} else {
				group8 = nil
			}
			order8 := new(int64)
			if !attributesItem.SequenceAttribute.Order.IsUnknown() && !attributesItem.SequenceAttribute.Order.IsNull() {
				*order8 = attributesItem.SequenceAttribute.Order.ValueInt64()
			} else {
				order8 = nil
			}
			layout8 := new(string)
			if !attributesItem.SequenceAttribute.Layout.IsUnknown() && !attributesItem.SequenceAttribute.Layout.IsNull() {
				*layout8 = attributesItem.SequenceAttribute.Layout.ValueString()
			} else {
				layout8 = nil
			}
			hideLabel8 := new(bool)
			if !attributesItem.SequenceAttribute.HideLabel.IsUnknown() && !attributesItem.SequenceAttribute.HideLabel.IsNull() {
				*hideLabel8 = attributesItem.SequenceAttribute.HideLabel.ValueBool()
			} else {
				hideLabel8 = nil
			}
			icon8 := new(string)
			if !attributesItem.SequenceAttribute.Icon.IsUnknown() && !attributesItem.SequenceAttribute.Icon.IsNull() {
				*icon8 = attributesItem.SequenceAttribute.Icon.ValueString()
			} else {
				icon8 = nil
			}
			renderCondition8 := new(string)
			if !attributesItem.SequenceAttribute.RenderCondition.IsUnknown() && !attributesItem.SequenceAttribute.RenderCondition.IsNull() {
				*renderCondition8 = attributesItem.SequenceAttribute.RenderCondition.ValueString()
			} else {
				renderCondition8 = nil
			}
			var purpose8 []string = []string{}
			for _, purposeItem8 := range attributesItem.SequenceAttribute.Purpose {
				purpose8 = append(purpose8, purposeItem8.ValueString())
			}
			var constraints8 *shared.SequenceAttributeConstraints
			if attributesItem.SequenceAttribute.Constraints != nil {
				constraints8 = &shared.SequenceAttributeConstraints{}
			}
			featureFlag8 := new(string)
			if !attributesItem.SequenceAttribute.FeatureFlag.IsUnknown() && !attributesItem.SequenceAttribute.FeatureFlag.IsNull() {
				*featureFlag8 = attributesItem.SequenceAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag8 = nil
			}
			var settingsFlag8 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem8 := range attributesItem.SequenceAttribute.SettingsFlag {
				name18 := new(string)
				if !settingsFlagItem8.Name.IsUnknown() && !settingsFlagItem8.Name.IsNull() {
					*name18 = settingsFlagItem8.Name.ValueString()
				} else {
					name18 = nil
				}
				enabled8 := new(bool)
				if !settingsFlagItem8.Enabled.IsUnknown() && !settingsFlagItem8.Enabled.IsNull() {
					*enabled8 = settingsFlagItem8.Enabled.ValueBool()
				} else {
					enabled8 = nil
				}
				settingsFlag8 = append(settingsFlag8, shared.SettingFlag{
					Name:    name18,
					Enabled: enabled8,
				})
			}
			valueFormatter8 := new(string)
			if !attributesItem.SequenceAttribute.ValueFormatter.IsUnknown() && !attributesItem.SequenceAttribute.ValueFormatter.IsNull() {
				*valueFormatter8 = attributesItem.SequenceAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter8 = nil
			}
			previewValueFormatter8 := new(string)
			if !attributesItem.SequenceAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.SequenceAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter8 = attributesItem.SequenceAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter8 = nil
			}
			entityBuilderDisableEdit8 := new(bool)
			if !attributesItem.SequenceAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.SequenceAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit8 = attributesItem.SequenceAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit8 = nil
			}
			protected8 := new(bool)
			if !attributesItem.SequenceAttribute.Protected.IsUnknown() && !attributesItem.SequenceAttribute.Protected.IsNull() {
				*protected8 = attributesItem.SequenceAttribute.Protected.ValueBool()
			} else {
				protected8 = nil
			}
			var infoHelpers8 *shared.SequenceAttributeInfoHelpers
			if attributesItem.SequenceAttribute.InfoHelpers != nil {
				hintText8 := new(string)
				if !attributesItem.SequenceAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.SequenceAttribute.InfoHelpers.HintText.IsNull() {
					*hintText8 = attributesItem.SequenceAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText8 = nil
				}
				hintTextKey8 := new(string)
				if !attributesItem.SequenceAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.SequenceAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey8 = attributesItem.SequenceAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey8 = nil
				}
				hintCustomComponent8 := new(string)
				if !attributesItem.SequenceAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.SequenceAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent8 = attributesItem.SequenceAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent8 = nil
				}
				hintTooltipPlacement8 := new(string)
				if !attributesItem.SequenceAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.SequenceAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement8 = attributesItem.SequenceAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement8 = nil
				}
				infoHelpers8 = &shared.SequenceAttributeInfoHelpers{
					HintText:             hintText8,
					HintTextKey:          hintTextKey8,
					HintCustomComponent:  hintCustomComponent8,
					HintTooltipPlacement: hintTooltipPlacement8,
				}
			}
			typeVar8 := new(shared.SequenceAttributeType)
			if !attributesItem.SequenceAttribute.Type.IsUnknown() && !attributesItem.SequenceAttribute.Type.IsNull() {
				*typeVar8 = shared.SequenceAttributeType(attributesItem.SequenceAttribute.Type.ValueString())
			} else {
				typeVar8 = nil
			}
			prefix := new(string)
			if !attributesItem.SequenceAttribute.Prefix.IsUnknown() && !attributesItem.SequenceAttribute.Prefix.IsNull() {
				*prefix = attributesItem.SequenceAttribute.Prefix.ValueString()
			} else {
				prefix = nil
			}
			startNumber := new(int64)
			if !attributesItem.SequenceAttribute.StartNumber.IsUnknown() && !attributesItem.SequenceAttribute.StartNumber.IsNull() {
				*startNumber = attributesItem.SequenceAttribute.StartNumber.ValueInt64()
			} else {
				startNumber = nil
			}
			sequenceAttribute := shared.SequenceAttribute{
				ID:                       id9,
				Name:                     name17,
				Label:                    label8,
				Placeholder:              placeholder8,
				Hidden:                   hidden8,
				ShowInTable:              showInTable8,
				Sortable:                 sortable8,
				Required:                 required8,
				Readonly:                 readonly8,
				Deprecated:               deprecated8,
				DefaultValue:             defaultValue8,
				Group:                    group8,
				Order:                    order8,
				Layout:                   layout8,
				HideLabel:                hideLabel8,
				Icon:                     icon8,
				RenderCondition:          renderCondition8,
				Purpose:                  purpose8,
				Constraints:              constraints8,
				FeatureFlag:              featureFlag8,
				SettingsFlag:             settingsFlag8,
				ValueFormatter:           valueFormatter8,
				PreviewValueFormatter:    previewValueFormatter8,
				EntityBuilderDisableEdit: entityBuilderDisableEdit8,
				Protected:                protected8,
				InfoHelpers:              infoHelpers8,
				Type:                     typeVar8,
				Prefix:                   prefix,
				StartNumber:              startNumber,
			}
			attributes = append(attributes, shared.Attribute{
				SequenceAttribute: &sequenceAttribute,
			})
		}
		if attributesItem.RelationAttribute != nil {
			id10 := new(string)
			if !attributesItem.RelationAttribute.ID.IsUnknown() && !attributesItem.RelationAttribute.ID.IsNull() {
				*id10 = attributesItem.RelationAttribute.ID.ValueString()
			} else {
				id10 = nil
			}
			name19 := attributesItem.RelationAttribute.Name.ValueString()
			label9 := attributesItem.RelationAttribute.Label.ValueString()
			placeholder9 := new(string)
			if !attributesItem.RelationAttribute.Placeholder.IsUnknown() && !attributesItem.RelationAttribute.Placeholder.IsNull() {
				*placeholder9 = attributesItem.RelationAttribute.Placeholder.ValueString()
			} else {
				placeholder9 = nil
			}
			hidden9 := new(bool)
			if !attributesItem.RelationAttribute.Hidden.IsUnknown() && !attributesItem.RelationAttribute.Hidden.IsNull() {
				*hidden9 = attributesItem.RelationAttribute.Hidden.ValueBool()
			} else {
				hidden9 = nil
			}
			showInTable9 := new(bool)
			if !attributesItem.RelationAttribute.ShowInTable.IsUnknown() && !attributesItem.RelationAttribute.ShowInTable.IsNull() {
				*showInTable9 = attributesItem.RelationAttribute.ShowInTable.ValueBool()
			} else {
				showInTable9 = nil
			}
			sortable9 := new(bool)
			if !attributesItem.RelationAttribute.Sortable.IsUnknown() && !attributesItem.RelationAttribute.Sortable.IsNull() {
				*sortable9 = attributesItem.RelationAttribute.Sortable.ValueBool()
			} else {
				sortable9 = nil
			}
			required9 := new(bool)
			if !attributesItem.RelationAttribute.Required.IsUnknown() && !attributesItem.RelationAttribute.Required.IsNull() {
				*required9 = attributesItem.RelationAttribute.Required.ValueBool()
			} else {
				required9 = nil
			}
			readonly9 := new(bool)
			if !attributesItem.RelationAttribute.Readonly.IsUnknown() && !attributesItem.RelationAttribute.Readonly.IsNull() {
				*readonly9 = attributesItem.RelationAttribute.Readonly.ValueBool()
			} else {
				readonly9 = nil
			}
			deprecated9 := new(bool)
			if !attributesItem.RelationAttribute.Deprecated.IsUnknown() && !attributesItem.RelationAttribute.Deprecated.IsNull() {
				*deprecated9 = attributesItem.RelationAttribute.Deprecated.ValueBool()
			} else {
				deprecated9 = nil
			}
			var defaultValue9 interface{}
			if !attributesItem.RelationAttribute.DefaultValue.IsUnknown() && !attributesItem.RelationAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem.RelationAttribute.DefaultValue.ValueString()), &defaultValue9)
			}
			group9 := new(string)
			if !attributesItem.RelationAttribute.Group.IsUnknown() && !attributesItem.RelationAttribute.Group.IsNull() {
				*group9 = attributesItem.RelationAttribute.Group.ValueString()
			} else {
				group9 = nil
			}
			order9 := new(int64)
			if !attributesItem.RelationAttribute.Order.IsUnknown() && !attributesItem.RelationAttribute.Order.IsNull() {
				*order9 = attributesItem.RelationAttribute.Order.ValueInt64()
			} else {
				order9 = nil
			}
			layout9 := new(string)
			if !attributesItem.RelationAttribute.Layout.IsUnknown() && !attributesItem.RelationAttribute.Layout.IsNull() {
				*layout9 = attributesItem.RelationAttribute.Layout.ValueString()
			} else {
				layout9 = nil
			}
			hideLabel9 := new(bool)
			if !attributesItem.RelationAttribute.HideLabel.IsUnknown() && !attributesItem.RelationAttribute.HideLabel.IsNull() {
				*hideLabel9 = attributesItem.RelationAttribute.HideLabel.ValueBool()
			} else {
				hideLabel9 = nil
			}
			icon9 := new(string)
			if !attributesItem.RelationAttribute.Icon.IsUnknown() && !attributesItem.RelationAttribute.Icon.IsNull() {
				*icon9 = attributesItem.RelationAttribute.Icon.ValueString()
			} else {
				icon9 = nil
			}
			renderCondition9 := new(string)
			if !attributesItem.RelationAttribute.RenderCondition.IsUnknown() && !attributesItem.RelationAttribute.RenderCondition.IsNull() {
				*renderCondition9 = attributesItem.RelationAttribute.RenderCondition.ValueString()
			} else {
				renderCondition9 = nil
			}
			var purpose9 []string = []string{}
			for _, purposeItem9 := range attributesItem.RelationAttribute.Purpose {
				purpose9 = append(purpose9, purposeItem9.ValueString())
			}
			var constraints9 *shared.RelationAttributeConstraints
			if attributesItem.RelationAttribute.Constraints != nil {
				constraints9 = &shared.RelationAttributeConstraints{}
			}
			featureFlag9 := new(string)
			if !attributesItem.RelationAttribute.FeatureFlag.IsUnknown() && !attributesItem.RelationAttribute.FeatureFlag.IsNull() {
				*featureFlag9 = attributesItem.RelationAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag9 = nil
			}
			var settingsFlag9 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem9 := range attributesItem.RelationAttribute.SettingsFlag {
				name20 := new(string)
				if !settingsFlagItem9.Name.IsUnknown() && !settingsFlagItem9.Name.IsNull() {
					*name20 = settingsFlagItem9.Name.ValueString()
				} else {
					name20 = nil
				}
				enabled9 := new(bool)
				if !settingsFlagItem9.Enabled.IsUnknown() && !settingsFlagItem9.Enabled.IsNull() {
					*enabled9 = settingsFlagItem9.Enabled.ValueBool()
				} else {
					enabled9 = nil
				}
				settingsFlag9 = append(settingsFlag9, shared.SettingFlag{
					Name:    name20,
					Enabled: enabled9,
				})
			}
			valueFormatter9 := new(string)
			if !attributesItem.RelationAttribute.ValueFormatter.IsUnknown() && !attributesItem.RelationAttribute.ValueFormatter.IsNull() {
				*valueFormatter9 = attributesItem.RelationAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter9 = nil
			}
			previewValueFormatter9 := new(string)
			if !attributesItem.RelationAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.RelationAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter9 = attributesItem.RelationAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter9 = nil
			}
			entityBuilderDisableEdit9 := new(bool)
			if !attributesItem.RelationAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.RelationAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit9 = attributesItem.RelationAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit9 = nil
			}
			protected9 := new(bool)
			if !attributesItem.RelationAttribute.Protected.IsUnknown() && !attributesItem.RelationAttribute.Protected.IsNull() {
				*protected9 = attributesItem.RelationAttribute.Protected.ValueBool()
			} else {
				protected9 = nil
			}
			var infoHelpers9 *shared.RelationAttributeInfoHelpers
			if attributesItem.RelationAttribute.InfoHelpers != nil {
				hintText9 := new(string)
				if !attributesItem.RelationAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.RelationAttribute.InfoHelpers.HintText.IsNull() {
					*hintText9 = attributesItem.RelationAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText9 = nil
				}
				hintTextKey9 := new(string)
				if !attributesItem.RelationAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.RelationAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey9 = attributesItem.RelationAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey9 = nil
				}
				hintCustomComponent9 := new(string)
				if !attributesItem.RelationAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.RelationAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent9 = attributesItem.RelationAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent9 = nil
				}
				hintTooltipPlacement9 := new(string)
				if !attributesItem.RelationAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.RelationAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement9 = attributesItem.RelationAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement9 = nil
				}
				infoHelpers9 = &shared.RelationAttributeInfoHelpers{
					HintText:             hintText9,
					HintTextKey:          hintTextKey9,
					HintCustomComponent:  hintCustomComponent9,
					HintTooltipPlacement: hintTooltipPlacement9,
				}
			}
			typeVar9 := new(shared.RelationAttributeType)
			if !attributesItem.RelationAttribute.Type.IsUnknown() && !attributesItem.RelationAttribute.Type.IsNull() {
				*typeVar9 = shared.RelationAttributeType(attributesItem.RelationAttribute.Type.ValueString())
			} else {
				typeVar9 = nil
			}
			relationType := new(shared.RelationType)
			if !attributesItem.RelationAttribute.RelationType.IsUnknown() && !attributesItem.RelationAttribute.RelationType.IsNull() {
				*relationType = shared.RelationType(attributesItem.RelationAttribute.RelationType.ValueString())
			} else {
				relationType = nil
			}
			reverseAttributes := make(map[string]string)
			for reverseAttributesKey, reverseAttributesValue := range attributesItem.RelationAttribute.ReverseAttributes {
				reverseAttributesInst := reverseAttributesValue.ValueString()
				reverseAttributes[reverseAttributesKey] = reverseAttributesInst
			}
			relationAffinityMode := new(shared.RelationAffinityMode)
			if !attributesItem.RelationAttribute.RelationAffinityMode.IsUnknown() && !attributesItem.RelationAttribute.RelationAffinityMode.IsNull() {
				*relationAffinityMode = shared.RelationAffinityMode(attributesItem.RelationAttribute.RelationAffinityMode.ValueString())
			} else {
				relationAffinityMode = nil
			}
			enableRelationPicker := new(bool)
			if !attributesItem.RelationAttribute.EnableRelationPicker.IsUnknown() && !attributesItem.RelationAttribute.EnableRelationPicker.IsNull() {
				*enableRelationPicker = attributesItem.RelationAttribute.EnableRelationPicker.ValueBool()
			} else {
				enableRelationPicker = nil
			}
			editMode := new(shared.EditMode)
			if !attributesItem.RelationAttribute.EditMode.IsUnknown() && !attributesItem.RelationAttribute.EditMode.IsNull() {
				*editMode = shared.EditMode(attributesItem.RelationAttribute.EditMode.ValueString())
			} else {
				editMode = nil
			}
			detailsViewModeEnabled := new(bool)
			if !attributesItem.RelationAttribute.DetailsViewModeEnabled.IsUnknown() && !attributesItem.RelationAttribute.DetailsViewModeEnabled.IsNull() {
				*detailsViewModeEnabled = attributesItem.RelationAttribute.DetailsViewModeEnabled.ValueBool()
			} else {
				detailsViewModeEnabled = nil
			}
			var actions []shared.Actions = []shared.Actions{}
			for _, actionsItem := range attributesItem.RelationAttribute.Actions {
				actionType := new(shared.ActionType)
				if !actionsItem.ActionType.IsUnknown() && !actionsItem.ActionType.IsNull() {
					*actionType = shared.ActionType(actionsItem.ActionType.ValueString())
				} else {
					actionType = nil
				}
				label10 := new(string)
				if !actionsItem.Label.IsUnknown() && !actionsItem.Label.IsNull() {
					*label10 = actionsItem.Label.ValueString()
				} else {
					label10 = nil
				}
				defaultVar := new(bool)
				if !actionsItem.Default.IsUnknown() && !actionsItem.Default.IsNull() {
					*defaultVar = actionsItem.Default.ValueBool()
				} else {
					defaultVar = nil
				}
				featureFlag10 := new(string)
				if !actionsItem.FeatureFlag.IsUnknown() && !actionsItem.FeatureFlag.IsNull() {
					*featureFlag10 = actionsItem.FeatureFlag.ValueString()
				} else {
					featureFlag10 = nil
				}
				var settingsFlag10 []shared.SettingFlag = []shared.SettingFlag{}
				for _, settingsFlagItem10 := range actionsItem.SettingsFlag {
					name21 := new(string)
					if !settingsFlagItem10.Name.IsUnknown() && !settingsFlagItem10.Name.IsNull() {
						*name21 = settingsFlagItem10.Name.ValueString()
					} else {
						name21 = nil
					}
					enabled10 := new(bool)
					if !settingsFlagItem10.Enabled.IsUnknown() && !settingsFlagItem10.Enabled.IsNull() {
						*enabled10 = settingsFlagItem10.Enabled.ValueBool()
					} else {
						enabled10 = nil
					}
					settingsFlag10 = append(settingsFlag10, shared.SettingFlag{
						Name:    name21,
						Enabled: enabled10,
					})
				}
				var newEntityItem *shared.NewEntityItem
				if actionsItem.NewEntityItem != nil {
					id11 := actionsItem.NewEntityItem.ID.ValueString()
					org := actionsItem.NewEntityItem.Org.ValueString()
					var owners []shared.EntityOwner = []shared.EntityOwner{}
					for _, ownersItem := range actionsItem.NewEntityItem.Owners {
						orgID := ownersItem.OrgID.ValueString()
						userID := new(string)
						if !ownersItem.UserID.IsUnknown() && !ownersItem.UserID.IsNull() {
							*userID = ownersItem.UserID.ValueString()
						} else {
							userID = nil
						}
						owners = append(owners, shared.EntityOwner{
							OrgID:  orgID,
							UserID: userID,
						})
					}
					schema := actionsItem.NewEntityItem.Schema.ValueString()
					title4 := new(string)
					if !actionsItem.NewEntityItem.Title.IsUnknown() && !actionsItem.NewEntityItem.Title.IsNull() {
						*title4 = actionsItem.NewEntityItem.Title.ValueString()
					} else {
						title4 = nil
					}
					var tags []string = []string{}
					for _, tagsItem := range actionsItem.NewEntityItem.Tags {
						tags = append(tags, tagsItem.ValueString())
					}
					createdAt := new(time.Time)
					if !actionsItem.NewEntityItem.CreatedAt.IsUnknown() && !actionsItem.NewEntityItem.CreatedAt.IsNull() {
						*createdAt, _ = time.Parse(time.RFC3339Nano, actionsItem.NewEntityItem.CreatedAt.ValueString())
					} else {
						createdAt = nil
					}
					updatedAt := new(time.Time)
					if !actionsItem.NewEntityItem.UpdatedAt.IsUnknown() && !actionsItem.NewEntityItem.UpdatedAt.IsNull() {
						*updatedAt, _ = time.Parse(time.RFC3339Nano, actionsItem.NewEntityItem.UpdatedAt.ValueString())
					} else {
						updatedAt = nil
					}
					var acl *shared.EntityACL
					if actionsItem.NewEntityItem.ACL != nil {
						var view []string = []string{}
						for _, viewItem := range actionsItem.NewEntityItem.ACL.View {
							view = append(view, viewItem.ValueString())
						}
						var edit []string = []string{}
						for _, editItem := range actionsItem.NewEntityItem.ACL.Edit {
							edit = append(edit, editItem.ValueString())
						}
						var delete []string = []string{}
						for _, deleteItem := range actionsItem.NewEntityItem.ACL.Delete {
							delete = append(delete, deleteItem.ValueString())
						}
						var additionalProperties interface{}
						if !actionsItem.NewEntityItem.ACL.AdditionalProperties.IsUnknown() && !actionsItem.NewEntityItem.ACL.AdditionalProperties.IsNull() {
							_ = json.Unmarshal([]byte(actionsItem.NewEntityItem.ACL.AdditionalProperties.ValueString()), &additionalProperties)
						}
						acl = &shared.EntityACL{
							View:                 view,
							Edit:                 edit,
							Delete:               delete,
							AdditionalProperties: additionalProperties,
						}
					}
					var additionalProperties1 interface{}
					if !actionsItem.NewEntityItem.AdditionalProperties.IsUnknown() && !actionsItem.NewEntityItem.AdditionalProperties.IsNull() {
						_ = json.Unmarshal([]byte(actionsItem.NewEntityItem.AdditionalProperties.ValueString()), &additionalProperties1)
					}
					newEntityItem = &shared.NewEntityItem{
						ID:                   id11,
						Org:                  org,
						Owners:               owners,
						Schema:               schema,
						Title:                title4,
						Tags:                 tags,
						CreatedAt:            createdAt,
						UpdatedAt:            updatedAt,
						ACL:                  acl,
						AdditionalProperties: additionalProperties1,
					}
				}
				actions = append(actions, shared.Actions{
					ActionType:    actionType,
					Label:         label10,
					Default:       defaultVar,
					FeatureFlag:   featureFlag10,
					SettingsFlag:  settingsFlag10,
					NewEntityItem: newEntityItem,
				})
			}
			drawerSize := new(shared.DrawerSize)
			if !attributesItem.RelationAttribute.DrawerSize.IsUnknown() && !attributesItem.RelationAttribute.DrawerSize.IsNull() {
				*drawerSize = shared.DrawerSize(attributesItem.RelationAttribute.DrawerSize.ValueString())
			} else {
				drawerSize = nil
			}
			var summaryFields []shared.SummaryFields = []shared.SummaryFields{}
			for _, summaryFieldsItem := range attributesItem.RelationAttribute.SummaryFields {
				if !summaryFieldsItem.Str.IsUnknown() && !summaryFieldsItem.Str.IsNull() {
					str3 := summaryFieldsItem.Str.ValueString()
					summaryFields = append(summaryFields, shared.SummaryFields{
						Str: &str3,
					})
				}
				if summaryFieldsItem.SummaryField != nil {
					field := new(string)
					if !summaryFieldsItem.SummaryField.Field.IsUnknown() && !summaryFieldsItem.SummaryField.Field.IsNull() {
						*field = summaryFieldsItem.SummaryField.Field.ValueString()
					} else {
						field = nil
					}
					displayAs := new(string)
					if !summaryFieldsItem.SummaryField.DisplayAs.IsUnknown() && !summaryFieldsItem.SummaryField.DisplayAs.IsNull() {
						*displayAs = summaryFieldsItem.SummaryField.DisplayAs.ValueString()
					} else {
						displayAs = nil
					}
					summaryField := shared.SummaryField{
						Field:     field,
						DisplayAs: displayAs,
					}
					summaryFields = append(summaryFields, shared.SummaryFields{
						SummaryField: &summaryField,
					})
				}
			}
			hasPrimary := new(bool)
			if !attributesItem.RelationAttribute.HasPrimary.IsUnknown() && !attributesItem.RelationAttribute.HasPrimary.IsNull() {
				*hasPrimary = attributesItem.RelationAttribute.HasPrimary.ValueBool()
			} else {
				hasPrimary = nil
			}
			var allowedSchemas []string = []string{}
			for _, allowedSchemasItem := range attributesItem.RelationAttribute.AllowedSchemas {
				allowedSchemas = append(allowedSchemas, allowedSchemasItem.ValueString())
			}
			enableRelationTags := new(bool)
			if !attributesItem.RelationAttribute.EnableRelationTags.IsUnknown() && !attributesItem.RelationAttribute.EnableRelationTags.IsNull() {
				*enableRelationTags = attributesItem.RelationAttribute.EnableRelationTags.ValueBool()
			} else {
				enableRelationTags = nil
			}
			addButtonLabel := new(string)
			if !attributesItem.RelationAttribute.AddButtonLabel.IsUnknown() && !attributesItem.RelationAttribute.AddButtonLabel.IsNull() {
				*addButtonLabel = attributesItem.RelationAttribute.AddButtonLabel.ValueString()
			} else {
				addButtonLabel = nil
			}
			searchPlaceholder := new(string)
			if !attributesItem.RelationAttribute.SearchPlaceholder.IsUnknown() && !attributesItem.RelationAttribute.SearchPlaceholder.IsNull() {
				*searchPlaceholder = attributesItem.RelationAttribute.SearchPlaceholder.ValueString()
			} else {
				searchPlaceholder = nil
			}
			relationAttribute := shared.RelationAttribute{
				ID:                       id10,
				Name:                     name19,
				Label:                    label9,
				Placeholder:              placeholder9,
				Hidden:                   hidden9,
				ShowInTable:              showInTable9,
				Sortable:                 sortable9,
				Required:                 required9,
				Readonly:                 readonly9,
				Deprecated:               deprecated9,
				DefaultValue:             defaultValue9,
				Group:                    group9,
				Order:                    order9,
				Layout:                   layout9,
				HideLabel:                hideLabel9,
				Icon:                     icon9,
				RenderCondition:          renderCondition9,
				Purpose:                  purpose9,
				Constraints:              constraints9,
				FeatureFlag:              featureFlag9,
				SettingsFlag:             settingsFlag9,
				ValueFormatter:           valueFormatter9,
				PreviewValueFormatter:    previewValueFormatter9,
				EntityBuilderDisableEdit: entityBuilderDisableEdit9,
				Protected:                protected9,
				InfoHelpers:              infoHelpers9,
				Type:                     typeVar9,
				RelationType:             relationType,
				ReverseAttributes:        reverseAttributes,
				RelationAffinityMode:     relationAffinityMode,
				EnableRelationPicker:     enableRelationPicker,
				EditMode:                 editMode,
				DetailsViewModeEnabled:   detailsViewModeEnabled,
				Actions:                  actions,
				DrawerSize:               drawerSize,
				SummaryFields:            summaryFields,
				HasPrimary:               hasPrimary,
				AllowedSchemas:           allowedSchemas,
				EnableRelationTags:       enableRelationTags,
				AddButtonLabel:           addButtonLabel,
				SearchPlaceholder:        searchPlaceholder,
			}
			attributes = append(attributes, shared.Attribute{
				RelationAttribute: &relationAttribute,
			})
		}
		if attributesItem.UserRelationAttribute != nil {
			id12 := new(string)
			if !attributesItem.UserRelationAttribute.ID.IsUnknown() && !attributesItem.UserRelationAttribute.ID.IsNull() {
				*id12 = attributesItem.UserRelationAttribute.ID.ValueString()
			} else {
				id12 = nil
			}
			name22 := attributesItem.UserRelationAttribute.Name.ValueString()
			label11 := attributesItem.UserRelationAttribute.Label.ValueString()
			placeholder10 := new(string)
			if !attributesItem.UserRelationAttribute.Placeholder.IsUnknown() && !attributesItem.UserRelationAttribute.Placeholder.IsNull() {
				*placeholder10 = attributesItem.UserRelationAttribute.Placeholder.ValueString()
			} else {
				placeholder10 = nil
			}
			hidden10 := new(bool)
			if !attributesItem.UserRelationAttribute.Hidden.IsUnknown() && !attributesItem.UserRelationAttribute.Hidden.IsNull() {
				*hidden10 = attributesItem.UserRelationAttribute.Hidden.ValueBool()
			} else {
				hidden10 = nil
			}
			showInTable10 := new(bool)
			if !attributesItem.UserRelationAttribute.ShowInTable.IsUnknown() && !attributesItem.UserRelationAttribute.ShowInTable.IsNull() {
				*showInTable10 = attributesItem.UserRelationAttribute.ShowInTable.ValueBool()
			} else {
				showInTable10 = nil
			}
			sortable10 := new(bool)
			if !attributesItem.UserRelationAttribute.Sortable.IsUnknown() && !attributesItem.UserRelationAttribute.Sortable.IsNull() {
				*sortable10 = attributesItem.UserRelationAttribute.Sortable.ValueBool()
			} else {
				sortable10 = nil
			}
			required10 := new(bool)
			if !attributesItem.UserRelationAttribute.Required.IsUnknown() && !attributesItem.UserRelationAttribute.Required.IsNull() {
				*required10 = attributesItem.UserRelationAttribute.Required.ValueBool()
			} else {
				required10 = nil
			}
			readonly10 := new(bool)
			if !attributesItem.UserRelationAttribute.Readonly.IsUnknown() && !attributesItem.UserRelationAttribute.Readonly.IsNull() {
				*readonly10 = attributesItem.UserRelationAttribute.Readonly.ValueBool()
			} else {
				readonly10 = nil
			}
			deprecated10 := new(bool)
			if !attributesItem.UserRelationAttribute.Deprecated.IsUnknown() && !attributesItem.UserRelationAttribute.Deprecated.IsNull() {
				*deprecated10 = attributesItem.UserRelationAttribute.Deprecated.ValueBool()
			} else {
				deprecated10 = nil
			}
			var defaultValue10 interface{}
			if !attributesItem.UserRelationAttribute.DefaultValue.IsUnknown() && !attributesItem.UserRelationAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem.UserRelationAttribute.DefaultValue.ValueString()), &defaultValue10)
			}
			group10 := new(string)
			if !attributesItem.UserRelationAttribute.Group.IsUnknown() && !attributesItem.UserRelationAttribute.Group.IsNull() {
				*group10 = attributesItem.UserRelationAttribute.Group.ValueString()
			} else {
				group10 = nil
			}
			order10 := new(int64)
			if !attributesItem.UserRelationAttribute.Order.IsUnknown() && !attributesItem.UserRelationAttribute.Order.IsNull() {
				*order10 = attributesItem.UserRelationAttribute.Order.ValueInt64()
			} else {
				order10 = nil
			}
			layout10 := new(string)
			if !attributesItem.UserRelationAttribute.Layout.IsUnknown() && !attributesItem.UserRelationAttribute.Layout.IsNull() {
				*layout10 = attributesItem.UserRelationAttribute.Layout.ValueString()
			} else {
				layout10 = nil
			}
			hideLabel10 := new(bool)
			if !attributesItem.UserRelationAttribute.HideLabel.IsUnknown() && !attributesItem.UserRelationAttribute.HideLabel.IsNull() {
				*hideLabel10 = attributesItem.UserRelationAttribute.HideLabel.ValueBool()
			} else {
				hideLabel10 = nil
			}
			icon10 := new(string)
			if !attributesItem.UserRelationAttribute.Icon.IsUnknown() && !attributesItem.UserRelationAttribute.Icon.IsNull() {
				*icon10 = attributesItem.UserRelationAttribute.Icon.ValueString()
			} else {
				icon10 = nil
			}
			renderCondition10 := new(string)
			if !attributesItem.UserRelationAttribute.RenderCondition.IsUnknown() && !attributesItem.UserRelationAttribute.RenderCondition.IsNull() {
				*renderCondition10 = attributesItem.UserRelationAttribute.RenderCondition.ValueString()
			} else {
				renderCondition10 = nil
			}
			var purpose10 []string = []string{}
			for _, purposeItem10 := range attributesItem.UserRelationAttribute.Purpose {
				purpose10 = append(purpose10, purposeItem10.ValueString())
			}
			var constraints10 *shared.UserRelationAttributeConstraints
			if attributesItem.UserRelationAttribute.Constraints != nil {
				constraints10 = &shared.UserRelationAttributeConstraints{}
			}
			featureFlag11 := new(string)
			if !attributesItem.UserRelationAttribute.FeatureFlag.IsUnknown() && !attributesItem.UserRelationAttribute.FeatureFlag.IsNull() {
				*featureFlag11 = attributesItem.UserRelationAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag11 = nil
			}
			var settingsFlag11 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem11 := range attributesItem.UserRelationAttribute.SettingsFlag {
				name23 := new(string)
				if !settingsFlagItem11.Name.IsUnknown() && !settingsFlagItem11.Name.IsNull() {
					*name23 = settingsFlagItem11.Name.ValueString()
				} else {
					name23 = nil
				}
				enabled11 := new(bool)
				if !settingsFlagItem11.Enabled.IsUnknown() && !settingsFlagItem11.Enabled.IsNull() {
					*enabled11 = settingsFlagItem11.Enabled.ValueBool()
				} else {
					enabled11 = nil
				}
				settingsFlag11 = append(settingsFlag11, shared.SettingFlag{
					Name:    name23,
					Enabled: enabled11,
				})
			}
			valueFormatter10 := new(string)
			if !attributesItem.UserRelationAttribute.ValueFormatter.IsUnknown() && !attributesItem.UserRelationAttribute.ValueFormatter.IsNull() {
				*valueFormatter10 = attributesItem.UserRelationAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter10 = nil
			}
			previewValueFormatter10 := new(string)
			if !attributesItem.UserRelationAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.UserRelationAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter10 = attributesItem.UserRelationAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter10 = nil
			}
			entityBuilderDisableEdit10 := new(bool)
			if !attributesItem.UserRelationAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.UserRelationAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit10 = attributesItem.UserRelationAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit10 = nil
			}
			protected10 := new(bool)
			if !attributesItem.UserRelationAttribute.Protected.IsUnknown() && !attributesItem.UserRelationAttribute.Protected.IsNull() {
				*protected10 = attributesItem.UserRelationAttribute.Protected.ValueBool()
			} else {
				protected10 = nil
			}
			var infoHelpers10 *shared.UserRelationAttributeInfoHelpers
			if attributesItem.UserRelationAttribute.InfoHelpers != nil {
				hintText10 := new(string)
				if !attributesItem.UserRelationAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.UserRelationAttribute.InfoHelpers.HintText.IsNull() {
					*hintText10 = attributesItem.UserRelationAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText10 = nil
				}
				hintTextKey10 := new(string)
				if !attributesItem.UserRelationAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.UserRelationAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey10 = attributesItem.UserRelationAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey10 = nil
				}
				hintCustomComponent10 := new(string)
				if !attributesItem.UserRelationAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.UserRelationAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent10 = attributesItem.UserRelationAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent10 = nil
				}
				hintTooltipPlacement10 := new(string)
				if !attributesItem.UserRelationAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.UserRelationAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement10 = attributesItem.UserRelationAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement10 = nil
				}
				infoHelpers10 = &shared.UserRelationAttributeInfoHelpers{
					HintText:             hintText10,
					HintTextKey:          hintTextKey10,
					HintCustomComponent:  hintCustomComponent10,
					HintTooltipPlacement: hintTooltipPlacement10,
				}
			}
			typeVar10 := new(shared.UserRelationAttributeType)
			if !attributesItem.UserRelationAttribute.Type.IsUnknown() && !attributesItem.UserRelationAttribute.Type.IsNull() {
				*typeVar10 = shared.UserRelationAttributeType(attributesItem.UserRelationAttribute.Type.ValueString())
			} else {
				typeVar10 = nil
			}
			multiple := new(bool)
			if !attributesItem.UserRelationAttribute.Multiple.IsUnknown() && !attributesItem.UserRelationAttribute.Multiple.IsNull() {
				*multiple = attributesItem.UserRelationAttribute.Multiple.ValueBool()
			} else {
				multiple = nil
			}
			userRelationAttribute := shared.UserRelationAttribute{
				ID:                       id12,
				Name:                     name22,
				Label:                    label11,
				Placeholder:              placeholder10,
				Hidden:                   hidden10,
				ShowInTable:              showInTable10,
				Sortable:                 sortable10,
				Required:                 required10,
				Readonly:                 readonly10,
				Deprecated:               deprecated10,
				DefaultValue:             defaultValue10,
				Group:                    group10,
				Order:                    order10,
				Layout:                   layout10,
				HideLabel:                hideLabel10,
				Icon:                     icon10,
				RenderCondition:          renderCondition10,
				Purpose:                  purpose10,
				Constraints:              constraints10,
				FeatureFlag:              featureFlag11,
				SettingsFlag:             settingsFlag11,
				ValueFormatter:           valueFormatter10,
				PreviewValueFormatter:    previewValueFormatter10,
				EntityBuilderDisableEdit: entityBuilderDisableEdit10,
				Protected:                protected10,
				InfoHelpers:              infoHelpers10,
				Type:                     typeVar10,
				Multiple:                 multiple,
			}
			attributes = append(attributes, shared.Attribute{
				UserRelationAttribute: &userRelationAttribute,
			})
		}
		if attributesItem.AddressRelationAttribute != nil {
			id13 := new(string)
			if !attributesItem.AddressRelationAttribute.ID.IsUnknown() && !attributesItem.AddressRelationAttribute.ID.IsNull() {
				*id13 = attributesItem.AddressRelationAttribute.ID.ValueString()
			} else {
				id13 = nil
			}
			name24 := attributesItem.AddressRelationAttribute.Name.ValueString()
			label12 := attributesItem.AddressRelationAttribute.Label.ValueString()
			placeholder11 := new(string)
			if !attributesItem.AddressRelationAttribute.Placeholder.IsUnknown() && !attributesItem.AddressRelationAttribute.Placeholder.IsNull() {
				*placeholder11 = attributesItem.AddressRelationAttribute.Placeholder.ValueString()
			} else {
				placeholder11 = nil
			}
			hidden11 := new(bool)
			if !attributesItem.AddressRelationAttribute.Hidden.IsUnknown() && !attributesItem.AddressRelationAttribute.Hidden.IsNull() {
				*hidden11 = attributesItem.AddressRelationAttribute.Hidden.ValueBool()
			} else {
				hidden11 = nil
			}
			showInTable11 := new(bool)
			if !attributesItem.AddressRelationAttribute.ShowInTable.IsUnknown() && !attributesItem.AddressRelationAttribute.ShowInTable.IsNull() {
				*showInTable11 = attributesItem.AddressRelationAttribute.ShowInTable.ValueBool()
			} else {
				showInTable11 = nil
			}
			sortable11 := new(bool)
			if !attributesItem.AddressRelationAttribute.Sortable.IsUnknown() && !attributesItem.AddressRelationAttribute.Sortable.IsNull() {
				*sortable11 = attributesItem.AddressRelationAttribute.Sortable.ValueBool()
			} else {
				sortable11 = nil
			}
			required11 := new(bool)
			if !attributesItem.AddressRelationAttribute.Required.IsUnknown() && !attributesItem.AddressRelationAttribute.Required.IsNull() {
				*required11 = attributesItem.AddressRelationAttribute.Required.ValueBool()
			} else {
				required11 = nil
			}
			readonly11 := new(bool)
			if !attributesItem.AddressRelationAttribute.Readonly.IsUnknown() && !attributesItem.AddressRelationAttribute.Readonly.IsNull() {
				*readonly11 = attributesItem.AddressRelationAttribute.Readonly.ValueBool()
			} else {
				readonly11 = nil
			}
			deprecated11 := new(bool)
			if !attributesItem.AddressRelationAttribute.Deprecated.IsUnknown() && !attributesItem.AddressRelationAttribute.Deprecated.IsNull() {
				*deprecated11 = attributesItem.AddressRelationAttribute.Deprecated.ValueBool()
			} else {
				deprecated11 = nil
			}
			var defaultValue11 interface{}
			if !attributesItem.AddressRelationAttribute.DefaultValue.IsUnknown() && !attributesItem.AddressRelationAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem.AddressRelationAttribute.DefaultValue.ValueString()), &defaultValue11)
			}
			group11 := new(string)
			if !attributesItem.AddressRelationAttribute.Group.IsUnknown() && !attributesItem.AddressRelationAttribute.Group.IsNull() {
				*group11 = attributesItem.AddressRelationAttribute.Group.ValueString()
			} else {
				group11 = nil
			}
			order11 := new(int64)
			if !attributesItem.AddressRelationAttribute.Order.IsUnknown() && !attributesItem.AddressRelationAttribute.Order.IsNull() {
				*order11 = attributesItem.AddressRelationAttribute.Order.ValueInt64()
			} else {
				order11 = nil
			}
			layout11 := new(string)
			if !attributesItem.AddressRelationAttribute.Layout.IsUnknown() && !attributesItem.AddressRelationAttribute.Layout.IsNull() {
				*layout11 = attributesItem.AddressRelationAttribute.Layout.ValueString()
			} else {
				layout11 = nil
			}
			hideLabel11 := new(bool)
			if !attributesItem.AddressRelationAttribute.HideLabel.IsUnknown() && !attributesItem.AddressRelationAttribute.HideLabel.IsNull() {
				*hideLabel11 = attributesItem.AddressRelationAttribute.HideLabel.ValueBool()
			} else {
				hideLabel11 = nil
			}
			icon11 := new(string)
			if !attributesItem.AddressRelationAttribute.Icon.IsUnknown() && !attributesItem.AddressRelationAttribute.Icon.IsNull() {
				*icon11 = attributesItem.AddressRelationAttribute.Icon.ValueString()
			} else {
				icon11 = nil
			}
			renderCondition11 := new(string)
			if !attributesItem.AddressRelationAttribute.RenderCondition.IsUnknown() && !attributesItem.AddressRelationAttribute.RenderCondition.IsNull() {
				*renderCondition11 = attributesItem.AddressRelationAttribute.RenderCondition.ValueString()
			} else {
				renderCondition11 = nil
			}
			var purpose11 []string = []string{}
			for _, purposeItem11 := range attributesItem.AddressRelationAttribute.Purpose {
				purpose11 = append(purpose11, purposeItem11.ValueString())
			}
			var constraints11 *shared.AddressRelationAttributeConstraints
			if attributesItem.AddressRelationAttribute.Constraints != nil {
				constraints11 = &shared.AddressRelationAttributeConstraints{}
			}
			featureFlag12 := new(string)
			if !attributesItem.AddressRelationAttribute.FeatureFlag.IsUnknown() && !attributesItem.AddressRelationAttribute.FeatureFlag.IsNull() {
				*featureFlag12 = attributesItem.AddressRelationAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag12 = nil
			}
			var settingsFlag12 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem12 := range attributesItem.AddressRelationAttribute.SettingsFlag {
				name25 := new(string)
				if !settingsFlagItem12.Name.IsUnknown() && !settingsFlagItem12.Name.IsNull() {
					*name25 = settingsFlagItem12.Name.ValueString()
				} else {
					name25 = nil
				}
				enabled12 := new(bool)
				if !settingsFlagItem12.Enabled.IsUnknown() && !settingsFlagItem12.Enabled.IsNull() {
					*enabled12 = settingsFlagItem12.Enabled.ValueBool()
				} else {
					enabled12 = nil
				}
				settingsFlag12 = append(settingsFlag12, shared.SettingFlag{
					Name:    name25,
					Enabled: enabled12,
				})
			}
			valueFormatter11 := new(string)
			if !attributesItem.AddressRelationAttribute.ValueFormatter.IsUnknown() && !attributesItem.AddressRelationAttribute.ValueFormatter.IsNull() {
				*valueFormatter11 = attributesItem.AddressRelationAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter11 = nil
			}
			previewValueFormatter11 := new(string)
			if !attributesItem.AddressRelationAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.AddressRelationAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter11 = attributesItem.AddressRelationAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter11 = nil
			}
			entityBuilderDisableEdit11 := new(bool)
			if !attributesItem.AddressRelationAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.AddressRelationAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit11 = attributesItem.AddressRelationAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit11 = nil
			}
			protected11 := new(bool)
			if !attributesItem.AddressRelationAttribute.Protected.IsUnknown() && !attributesItem.AddressRelationAttribute.Protected.IsNull() {
				*protected11 = attributesItem.AddressRelationAttribute.Protected.ValueBool()
			} else {
				protected11 = nil
			}
			var infoHelpers11 *shared.AddressRelationAttributeInfoHelpers
			if attributesItem.AddressRelationAttribute.InfoHelpers != nil {
				hintText11 := new(string)
				if !attributesItem.AddressRelationAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.AddressRelationAttribute.InfoHelpers.HintText.IsNull() {
					*hintText11 = attributesItem.AddressRelationAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText11 = nil
				}
				hintTextKey11 := new(string)
				if !attributesItem.AddressRelationAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.AddressRelationAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey11 = attributesItem.AddressRelationAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey11 = nil
				}
				hintCustomComponent11 := new(string)
				if !attributesItem.AddressRelationAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.AddressRelationAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent11 = attributesItem.AddressRelationAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent11 = nil
				}
				hintTooltipPlacement11 := new(string)
				if !attributesItem.AddressRelationAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.AddressRelationAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement11 = attributesItem.AddressRelationAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement11 = nil
				}
				infoHelpers11 = &shared.AddressRelationAttributeInfoHelpers{
					HintText:             hintText11,
					HintTextKey:          hintTextKey11,
					HintCustomComponent:  hintCustomComponent11,
					HintTooltipPlacement: hintTooltipPlacement11,
				}
			}
			typeVar11 := new(shared.AddressRelationAttributeType)
			if !attributesItem.AddressRelationAttribute.Type.IsUnknown() && !attributesItem.AddressRelationAttribute.Type.IsNull() {
				*typeVar11 = shared.AddressRelationAttributeType(attributesItem.AddressRelationAttribute.Type.ValueString())
			} else {
				typeVar11 = nil
			}
			hasPrimary1 := new(bool)
			if !attributesItem.AddressRelationAttribute.HasPrimary.IsUnknown() && !attributesItem.AddressRelationAttribute.HasPrimary.IsNull() {
				*hasPrimary1 = attributesItem.AddressRelationAttribute.HasPrimary.ValueBool()
			} else {
				hasPrimary1 = nil
			}
			addressRelationAttribute := shared.AddressRelationAttribute{
				ID:                       id13,
				Name:                     name24,
				Label:                    label12,
				Placeholder:              placeholder11,
				Hidden:                   hidden11,
				ShowInTable:              showInTable11,
				Sortable:                 sortable11,
				Required:                 required11,
				Readonly:                 readonly11,
				Deprecated:               deprecated11,
				DefaultValue:             defaultValue11,
				Group:                    group11,
				Order:                    order11,
				Layout:                   layout11,
				HideLabel:                hideLabel11,
				Icon:                     icon11,
				RenderCondition:          renderCondition11,
				Purpose:                  purpose11,
				Constraints:              constraints11,
				FeatureFlag:              featureFlag12,
				SettingsFlag:             settingsFlag12,
				ValueFormatter:           valueFormatter11,
				PreviewValueFormatter:    previewValueFormatter11,
				EntityBuilderDisableEdit: entityBuilderDisableEdit11,
				Protected:                protected11,
				InfoHelpers:              infoHelpers11,
				Type:                     typeVar11,
				HasPrimary:               hasPrimary1,
			}
			attributes = append(attributes, shared.Attribute{
				AddressRelationAttribute: &addressRelationAttribute,
			})
		}
		if attributesItem.PaymentMethodRelationAttribute != nil {
			id14 := new(string)
			if !attributesItem.PaymentMethodRelationAttribute.ID.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.ID.IsNull() {
				*id14 = attributesItem.PaymentMethodRelationAttribute.ID.ValueString()
			} else {
				id14 = nil
			}
			name26 := attributesItem.PaymentMethodRelationAttribute.Name.ValueString()
			label13 := attributesItem.PaymentMethodRelationAttribute.Label.ValueString()
			placeholder12 := new(string)
			if !attributesItem.PaymentMethodRelationAttribute.Placeholder.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.Placeholder.IsNull() {
				*placeholder12 = attributesItem.PaymentMethodRelationAttribute.Placeholder.ValueString()
			} else {
				placeholder12 = nil
			}
			hidden12 := new(bool)
			if !attributesItem.PaymentMethodRelationAttribute.Hidden.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.Hidden.IsNull() {
				*hidden12 = attributesItem.PaymentMethodRelationAttribute.Hidden.ValueBool()
			} else {
				hidden12 = nil
			}
			showInTable12 := new(bool)
			if !attributesItem.PaymentMethodRelationAttribute.ShowInTable.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.ShowInTable.IsNull() {
				*showInTable12 = attributesItem.PaymentMethodRelationAttribute.ShowInTable.ValueBool()
			} else {
				showInTable12 = nil
			}
			sortable12 := new(bool)
			if !attributesItem.PaymentMethodRelationAttribute.Sortable.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.Sortable.IsNull() {
				*sortable12 = attributesItem.PaymentMethodRelationAttribute.Sortable.ValueBool()
			} else {
				sortable12 = nil
			}
			required12 := new(bool)
			if !attributesItem.PaymentMethodRelationAttribute.Required.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.Required.IsNull() {
				*required12 = attributesItem.PaymentMethodRelationAttribute.Required.ValueBool()
			} else {
				required12 = nil
			}
			readonly12 := new(bool)
			if !attributesItem.PaymentMethodRelationAttribute.Readonly.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.Readonly.IsNull() {
				*readonly12 = attributesItem.PaymentMethodRelationAttribute.Readonly.ValueBool()
			} else {
				readonly12 = nil
			}
			deprecated12 := new(bool)
			if !attributesItem.PaymentMethodRelationAttribute.Deprecated.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.Deprecated.IsNull() {
				*deprecated12 = attributesItem.PaymentMethodRelationAttribute.Deprecated.ValueBool()
			} else {
				deprecated12 = nil
			}
			var defaultValue12 interface{}
			if !attributesItem.PaymentMethodRelationAttribute.DefaultValue.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem.PaymentMethodRelationAttribute.DefaultValue.ValueString()), &defaultValue12)
			}
			group12 := new(string)
			if !attributesItem.PaymentMethodRelationAttribute.Group.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.Group.IsNull() {
				*group12 = attributesItem.PaymentMethodRelationAttribute.Group.ValueString()
			} else {
				group12 = nil
			}
			order12 := new(int64)
			if !attributesItem.PaymentMethodRelationAttribute.Order.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.Order.IsNull() {
				*order12 = attributesItem.PaymentMethodRelationAttribute.Order.ValueInt64()
			} else {
				order12 = nil
			}
			layout12 := new(string)
			if !attributesItem.PaymentMethodRelationAttribute.Layout.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.Layout.IsNull() {
				*layout12 = attributesItem.PaymentMethodRelationAttribute.Layout.ValueString()
			} else {
				layout12 = nil
			}
			hideLabel12 := new(bool)
			if !attributesItem.PaymentMethodRelationAttribute.HideLabel.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.HideLabel.IsNull() {
				*hideLabel12 = attributesItem.PaymentMethodRelationAttribute.HideLabel.ValueBool()
			} else {
				hideLabel12 = nil
			}
			icon12 := new(string)
			if !attributesItem.PaymentMethodRelationAttribute.Icon.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.Icon.IsNull() {
				*icon12 = attributesItem.PaymentMethodRelationAttribute.Icon.ValueString()
			} else {
				icon12 = nil
			}
			renderCondition12 := new(string)
			if !attributesItem.PaymentMethodRelationAttribute.RenderCondition.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.RenderCondition.IsNull() {
				*renderCondition12 = attributesItem.PaymentMethodRelationAttribute.RenderCondition.ValueString()
			} else {
				renderCondition12 = nil
			}
			var purpose12 []string = []string{}
			for _, purposeItem12 := range attributesItem.PaymentMethodRelationAttribute.Purpose {
				purpose12 = append(purpose12, purposeItem12.ValueString())
			}
			var constraints12 *shared.PaymentMethodRelationAttributeConstraints
			if attributesItem.PaymentMethodRelationAttribute.Constraints != nil {
				constraints12 = &shared.PaymentMethodRelationAttributeConstraints{}
			}
			featureFlag13 := new(string)
			if !attributesItem.PaymentMethodRelationAttribute.FeatureFlag.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.FeatureFlag.IsNull() {
				*featureFlag13 = attributesItem.PaymentMethodRelationAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag13 = nil
			}
			var settingsFlag13 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem13 := range attributesItem.PaymentMethodRelationAttribute.SettingsFlag {
				name27 := new(string)
				if !settingsFlagItem13.Name.IsUnknown() && !settingsFlagItem13.Name.IsNull() {
					*name27 = settingsFlagItem13.Name.ValueString()
				} else {
					name27 = nil
				}
				enabled13 := new(bool)
				if !settingsFlagItem13.Enabled.IsUnknown() && !settingsFlagItem13.Enabled.IsNull() {
					*enabled13 = settingsFlagItem13.Enabled.ValueBool()
				} else {
					enabled13 = nil
				}
				settingsFlag13 = append(settingsFlag13, shared.SettingFlag{
					Name:    name27,
					Enabled: enabled13,
				})
			}
			valueFormatter12 := new(string)
			if !attributesItem.PaymentMethodRelationAttribute.ValueFormatter.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.ValueFormatter.IsNull() {
				*valueFormatter12 = attributesItem.PaymentMethodRelationAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter12 = nil
			}
			previewValueFormatter12 := new(string)
			if !attributesItem.PaymentMethodRelationAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter12 = attributesItem.PaymentMethodRelationAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter12 = nil
			}
			entityBuilderDisableEdit12 := new(bool)
			if !attributesItem.PaymentMethodRelationAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit12 = attributesItem.PaymentMethodRelationAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit12 = nil
			}
			protected12 := new(bool)
			if !attributesItem.PaymentMethodRelationAttribute.Protected.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.Protected.IsNull() {
				*protected12 = attributesItem.PaymentMethodRelationAttribute.Protected.ValueBool()
			} else {
				protected12 = nil
			}
			var infoHelpers12 *shared.PaymentMethodRelationAttributeInfoHelpers
			if attributesItem.PaymentMethodRelationAttribute.InfoHelpers != nil {
				hintText12 := new(string)
				if !attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintText.IsNull() {
					*hintText12 = attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText12 = nil
				}
				hintTextKey12 := new(string)
				if !attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey12 = attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey12 = nil
				}
				hintCustomComponent12 := new(string)
				if !attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent12 = attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent12 = nil
				}
				hintTooltipPlacement12 := new(string)
				if !attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement12 = attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement12 = nil
				}
				infoHelpers12 = &shared.PaymentMethodRelationAttributeInfoHelpers{
					HintText:             hintText12,
					HintTextKey:          hintTextKey12,
					HintCustomComponent:  hintCustomComponent12,
					HintTooltipPlacement: hintTooltipPlacement12,
				}
			}
			typeVar12 := new(shared.PaymentMethodRelationAttributeType)
			if !attributesItem.PaymentMethodRelationAttribute.Type.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.Type.IsNull() {
				*typeVar12 = shared.PaymentMethodRelationAttributeType(attributesItem.PaymentMethodRelationAttribute.Type.ValueString())
			} else {
				typeVar12 = nil
			}
			hasPrimary2 := new(bool)
			if !attributesItem.PaymentMethodRelationAttribute.HasPrimary.IsUnknown() && !attributesItem.PaymentMethodRelationAttribute.HasPrimary.IsNull() {
				*hasPrimary2 = attributesItem.PaymentMethodRelationAttribute.HasPrimary.ValueBool()
			} else {
				hasPrimary2 = nil
			}
			paymentMethodRelationAttribute := shared.PaymentMethodRelationAttribute{
				ID:                       id14,
				Name:                     name26,
				Label:                    label13,
				Placeholder:              placeholder12,
				Hidden:                   hidden12,
				ShowInTable:              showInTable12,
				Sortable:                 sortable12,
				Required:                 required12,
				Readonly:                 readonly12,
				Deprecated:               deprecated12,
				DefaultValue:             defaultValue12,
				Group:                    group12,
				Order:                    order12,
				Layout:                   layout12,
				HideLabel:                hideLabel12,
				Icon:                     icon12,
				RenderCondition:          renderCondition12,
				Purpose:                  purpose12,
				Constraints:              constraints12,
				FeatureFlag:              featureFlag13,
				SettingsFlag:             settingsFlag13,
				ValueFormatter:           valueFormatter12,
				PreviewValueFormatter:    previewValueFormatter12,
				EntityBuilderDisableEdit: entityBuilderDisableEdit12,
				Protected:                protected12,
				InfoHelpers:              infoHelpers12,
				Type:                     typeVar12,
				HasPrimary:               hasPrimary2,
			}
			attributes = append(attributes, shared.Attribute{
				PaymentMethodRelationAttribute: &paymentMethodRelationAttribute,
			})
		}
		if attributesItem.CurrencyAttribute != nil {
			id15 := new(string)
			if !attributesItem.CurrencyAttribute.ID.IsUnknown() && !attributesItem.CurrencyAttribute.ID.IsNull() {
				*id15 = attributesItem.CurrencyAttribute.ID.ValueString()
			} else {
				id15 = nil
			}
			name28 := attributesItem.CurrencyAttribute.Name.ValueString()
			label14 := attributesItem.CurrencyAttribute.Label.ValueString()
			placeholder13 := new(string)
			if !attributesItem.CurrencyAttribute.Placeholder.IsUnknown() && !attributesItem.CurrencyAttribute.Placeholder.IsNull() {
				*placeholder13 = attributesItem.CurrencyAttribute.Placeholder.ValueString()
			} else {
				placeholder13 = nil
			}
			hidden13 := new(bool)
			if !attributesItem.CurrencyAttribute.Hidden.IsUnknown() && !attributesItem.CurrencyAttribute.Hidden.IsNull() {
				*hidden13 = attributesItem.CurrencyAttribute.Hidden.ValueBool()
			} else {
				hidden13 = nil
			}
			showInTable13 := new(bool)
			if !attributesItem.CurrencyAttribute.ShowInTable.IsUnknown() && !attributesItem.CurrencyAttribute.ShowInTable.IsNull() {
				*showInTable13 = attributesItem.CurrencyAttribute.ShowInTable.ValueBool()
			} else {
				showInTable13 = nil
			}
			sortable13 := new(bool)
			if !attributesItem.CurrencyAttribute.Sortable.IsUnknown() && !attributesItem.CurrencyAttribute.Sortable.IsNull() {
				*sortable13 = attributesItem.CurrencyAttribute.Sortable.ValueBool()
			} else {
				sortable13 = nil
			}
			required13 := new(bool)
			if !attributesItem.CurrencyAttribute.Required.IsUnknown() && !attributesItem.CurrencyAttribute.Required.IsNull() {
				*required13 = attributesItem.CurrencyAttribute.Required.ValueBool()
			} else {
				required13 = nil
			}
			readonly13 := new(bool)
			if !attributesItem.CurrencyAttribute.Readonly.IsUnknown() && !attributesItem.CurrencyAttribute.Readonly.IsNull() {
				*readonly13 = attributesItem.CurrencyAttribute.Readonly.ValueBool()
			} else {
				readonly13 = nil
			}
			deprecated13 := new(bool)
			if !attributesItem.CurrencyAttribute.Deprecated.IsUnknown() && !attributesItem.CurrencyAttribute.Deprecated.IsNull() {
				*deprecated13 = attributesItem.CurrencyAttribute.Deprecated.ValueBool()
			} else {
				deprecated13 = nil
			}
			var defaultValue13 interface{}
			if !attributesItem.CurrencyAttribute.DefaultValue.IsUnknown() && !attributesItem.CurrencyAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem.CurrencyAttribute.DefaultValue.ValueString()), &defaultValue13)
			}
			group13 := new(string)
			if !attributesItem.CurrencyAttribute.Group.IsUnknown() && !attributesItem.CurrencyAttribute.Group.IsNull() {
				*group13 = attributesItem.CurrencyAttribute.Group.ValueString()
			} else {
				group13 = nil
			}
			order13 := new(int64)
			if !attributesItem.CurrencyAttribute.Order.IsUnknown() && !attributesItem.CurrencyAttribute.Order.IsNull() {
				*order13 = attributesItem.CurrencyAttribute.Order.ValueInt64()
			} else {
				order13 = nil
			}
			layout13 := new(string)
			if !attributesItem.CurrencyAttribute.Layout.IsUnknown() && !attributesItem.CurrencyAttribute.Layout.IsNull() {
				*layout13 = attributesItem.CurrencyAttribute.Layout.ValueString()
			} else {
				layout13 = nil
			}
			hideLabel13 := new(bool)
			if !attributesItem.CurrencyAttribute.HideLabel.IsUnknown() && !attributesItem.CurrencyAttribute.HideLabel.IsNull() {
				*hideLabel13 = attributesItem.CurrencyAttribute.HideLabel.ValueBool()
			} else {
				hideLabel13 = nil
			}
			icon13 := new(string)
			if !attributesItem.CurrencyAttribute.Icon.IsUnknown() && !attributesItem.CurrencyAttribute.Icon.IsNull() {
				*icon13 = attributesItem.CurrencyAttribute.Icon.ValueString()
			} else {
				icon13 = nil
			}
			renderCondition13 := new(string)
			if !attributesItem.CurrencyAttribute.RenderCondition.IsUnknown() && !attributesItem.CurrencyAttribute.RenderCondition.IsNull() {
				*renderCondition13 = attributesItem.CurrencyAttribute.RenderCondition.ValueString()
			} else {
				renderCondition13 = nil
			}
			var purpose13 []string = []string{}
			for _, purposeItem13 := range attributesItem.CurrencyAttribute.Purpose {
				purpose13 = append(purpose13, purposeItem13.ValueString())
			}
			var constraints13 *shared.CurrencyAttributeConstraints
			if attributesItem.CurrencyAttribute.Constraints != nil {
				constraints13 = &shared.CurrencyAttributeConstraints{}
			}
			featureFlag14 := new(string)
			if !attributesItem.CurrencyAttribute.FeatureFlag.IsUnknown() && !attributesItem.CurrencyAttribute.FeatureFlag.IsNull() {
				*featureFlag14 = attributesItem.CurrencyAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag14 = nil
			}
			var settingsFlag14 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem14 := range attributesItem.CurrencyAttribute.SettingsFlag {
				name29 := new(string)
				if !settingsFlagItem14.Name.IsUnknown() && !settingsFlagItem14.Name.IsNull() {
					*name29 = settingsFlagItem14.Name.ValueString()
				} else {
					name29 = nil
				}
				enabled14 := new(bool)
				if !settingsFlagItem14.Enabled.IsUnknown() && !settingsFlagItem14.Enabled.IsNull() {
					*enabled14 = settingsFlagItem14.Enabled.ValueBool()
				} else {
					enabled14 = nil
				}
				settingsFlag14 = append(settingsFlag14, shared.SettingFlag{
					Name:    name29,
					Enabled: enabled14,
				})
			}
			valueFormatter13 := new(string)
			if !attributesItem.CurrencyAttribute.ValueFormatter.IsUnknown() && !attributesItem.CurrencyAttribute.ValueFormatter.IsNull() {
				*valueFormatter13 = attributesItem.CurrencyAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter13 = nil
			}
			previewValueFormatter13 := new(string)
			if !attributesItem.CurrencyAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.CurrencyAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter13 = attributesItem.CurrencyAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter13 = nil
			}
			entityBuilderDisableEdit13 := new(bool)
			if !attributesItem.CurrencyAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.CurrencyAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit13 = attributesItem.CurrencyAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit13 = nil
			}
			protected13 := new(bool)
			if !attributesItem.CurrencyAttribute.Protected.IsUnknown() && !attributesItem.CurrencyAttribute.Protected.IsNull() {
				*protected13 = attributesItem.CurrencyAttribute.Protected.ValueBool()
			} else {
				protected13 = nil
			}
			var infoHelpers13 *shared.CurrencyAttributeInfoHelpers
			if attributesItem.CurrencyAttribute.InfoHelpers != nil {
				hintText13 := new(string)
				if !attributesItem.CurrencyAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.CurrencyAttribute.InfoHelpers.HintText.IsNull() {
					*hintText13 = attributesItem.CurrencyAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText13 = nil
				}
				hintTextKey13 := new(string)
				if !attributesItem.CurrencyAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.CurrencyAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey13 = attributesItem.CurrencyAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey13 = nil
				}
				hintCustomComponent13 := new(string)
				if !attributesItem.CurrencyAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.CurrencyAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent13 = attributesItem.CurrencyAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent13 = nil
				}
				hintTooltipPlacement13 := new(string)
				if !attributesItem.CurrencyAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.CurrencyAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement13 = attributesItem.CurrencyAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement13 = nil
				}
				infoHelpers13 = &shared.CurrencyAttributeInfoHelpers{
					HintText:             hintText13,
					HintTextKey:          hintTextKey13,
					HintCustomComponent:  hintCustomComponent13,
					HintTooltipPlacement: hintTooltipPlacement13,
				}
			}
			typeVar13 := shared.CurrencyAttributeType(attributesItem.CurrencyAttribute.Type.ValueString())
			currencySelectorOnly := new(bool)
			if !attributesItem.CurrencyAttribute.CurrencySelectorOnly.IsUnknown() && !attributesItem.CurrencyAttribute.CurrencySelectorOnly.IsNull() {
				*currencySelectorOnly = attributesItem.CurrencyAttribute.CurrencySelectorOnly.ValueBool()
			} else {
				currencySelectorOnly = nil
			}
			var currency []shared.Currency = []shared.Currency{}
			for _, currencyItem := range attributesItem.CurrencyAttribute.Currency {
				if currencyItem.One != nil {
					code := currencyItem.One.Code.ValueString()
					description := currencyItem.One.Description.ValueString()
					symbol := currencyItem.One.Symbol.ValueString()
					flag := new(string)
					if !currencyItem.One.Flag.IsUnknown() && !currencyItem.One.Flag.IsNull() {
						*flag = currencyItem.One.Flag.ValueString()
					} else {
						flag = nil
					}
					currency1 := shared.Currency1{
						Code:        code,
						Description: description,
						Symbol:      symbol,
						Flag:        flag,
					}
					currency = append(currency, shared.Currency{
						Currency1: &currency1,
					})
				}
			}
			currencyAttribute := shared.CurrencyAttribute{
				ID:                       id15,
				Name:                     name28,
				Label:                    label14,
				Placeholder:              placeholder13,
				Hidden:                   hidden13,
				ShowInTable:              showInTable13,
				Sortable:                 sortable13,
				Required:                 required13,
				Readonly:                 readonly13,
				Deprecated:               deprecated13,
				DefaultValue:             defaultValue13,
				Group:                    group13,
				Order:                    order13,
				Layout:                   layout13,
				HideLabel:                hideLabel13,
				Icon:                     icon13,
				RenderCondition:          renderCondition13,
				Purpose:                  purpose13,
				Constraints:              constraints13,
				FeatureFlag:              featureFlag14,
				SettingsFlag:             settingsFlag14,
				ValueFormatter:           valueFormatter13,
				PreviewValueFormatter:    previewValueFormatter13,
				EntityBuilderDisableEdit: entityBuilderDisableEdit13,
				Protected:                protected13,
				InfoHelpers:              infoHelpers13,
				Type:                     typeVar13,
				CurrencySelectorOnly:     currencySelectorOnly,
				Currency:                 currency,
			}
			attributes = append(attributes, shared.Attribute{
				CurrencyAttribute: &currencyAttribute,
			})
		}
		if attributesItem.RepeatableAttribute != nil {
			id16 := new(string)
			if !attributesItem.RepeatableAttribute.ID.IsUnknown() && !attributesItem.RepeatableAttribute.ID.IsNull() {
				*id16 = attributesItem.RepeatableAttribute.ID.ValueString()
			} else {
				id16 = nil
			}
			name30 := attributesItem.RepeatableAttribute.Name.ValueString()
			label15 := attributesItem.RepeatableAttribute.Label.ValueString()
			placeholder14 := new(string)
			if !attributesItem.RepeatableAttribute.Placeholder.IsUnknown() && !attributesItem.RepeatableAttribute.Placeholder.IsNull() {
				*placeholder14 = attributesItem.RepeatableAttribute.Placeholder.ValueString()
			} else {
				placeholder14 = nil
			}
			hidden14 := new(bool)
			if !attributesItem.RepeatableAttribute.Hidden.IsUnknown() && !attributesItem.RepeatableAttribute.Hidden.IsNull() {
				*hidden14 = attributesItem.RepeatableAttribute.Hidden.ValueBool()
			} else {
				hidden14 = nil
			}
			showInTable14 := new(bool)
			if !attributesItem.RepeatableAttribute.ShowInTable.IsUnknown() && !attributesItem.RepeatableAttribute.ShowInTable.IsNull() {
				*showInTable14 = attributesItem.RepeatableAttribute.ShowInTable.ValueBool()
			} else {
				showInTable14 = nil
			}
			sortable14 := new(bool)
			if !attributesItem.RepeatableAttribute.Sortable.IsUnknown() && !attributesItem.RepeatableAttribute.Sortable.IsNull() {
				*sortable14 = attributesItem.RepeatableAttribute.Sortable.ValueBool()
			} else {
				sortable14 = nil
			}
			required14 := new(bool)
			if !attributesItem.RepeatableAttribute.Required.IsUnknown() && !attributesItem.RepeatableAttribute.Required.IsNull() {
				*required14 = attributesItem.RepeatableAttribute.Required.ValueBool()
			} else {
				required14 = nil
			}
			readonly14 := new(bool)
			if !attributesItem.RepeatableAttribute.Readonly.IsUnknown() && !attributesItem.RepeatableAttribute.Readonly.IsNull() {
				*readonly14 = attributesItem.RepeatableAttribute.Readonly.ValueBool()
			} else {
				readonly14 = nil
			}
			deprecated14 := new(bool)
			if !attributesItem.RepeatableAttribute.Deprecated.IsUnknown() && !attributesItem.RepeatableAttribute.Deprecated.IsNull() {
				*deprecated14 = attributesItem.RepeatableAttribute.Deprecated.ValueBool()
			} else {
				deprecated14 = nil
			}
			var defaultValue14 interface{}
			if !attributesItem.RepeatableAttribute.DefaultValue.IsUnknown() && !attributesItem.RepeatableAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem.RepeatableAttribute.DefaultValue.ValueString()), &defaultValue14)
			}
			group14 := new(string)
			if !attributesItem.RepeatableAttribute.Group.IsUnknown() && !attributesItem.RepeatableAttribute.Group.IsNull() {
				*group14 = attributesItem.RepeatableAttribute.Group.ValueString()
			} else {
				group14 = nil
			}
			order14 := new(int64)
			if !attributesItem.RepeatableAttribute.Order.IsUnknown() && !attributesItem.RepeatableAttribute.Order.IsNull() {
				*order14 = attributesItem.RepeatableAttribute.Order.ValueInt64()
			} else {
				order14 = nil
			}
			layout14 := new(string)
			if !attributesItem.RepeatableAttribute.Layout.IsUnknown() && !attributesItem.RepeatableAttribute.Layout.IsNull() {
				*layout14 = attributesItem.RepeatableAttribute.Layout.ValueString()
			} else {
				layout14 = nil
			}
			hideLabel14 := new(bool)
			if !attributesItem.RepeatableAttribute.HideLabel.IsUnknown() && !attributesItem.RepeatableAttribute.HideLabel.IsNull() {
				*hideLabel14 = attributesItem.RepeatableAttribute.HideLabel.ValueBool()
			} else {
				hideLabel14 = nil
			}
			icon14 := new(string)
			if !attributesItem.RepeatableAttribute.Icon.IsUnknown() && !attributesItem.RepeatableAttribute.Icon.IsNull() {
				*icon14 = attributesItem.RepeatableAttribute.Icon.ValueString()
			} else {
				icon14 = nil
			}
			renderCondition14 := new(string)
			if !attributesItem.RepeatableAttribute.RenderCondition.IsUnknown() && !attributesItem.RepeatableAttribute.RenderCondition.IsNull() {
				*renderCondition14 = attributesItem.RepeatableAttribute.RenderCondition.ValueString()
			} else {
				renderCondition14 = nil
			}
			var purpose14 []string = []string{}
			for _, purposeItem14 := range attributesItem.RepeatableAttribute.Purpose {
				purpose14 = append(purpose14, purposeItem14.ValueString())
			}
			var constraints14 *shared.RepeatableAttributeConstraints
			if attributesItem.RepeatableAttribute.Constraints != nil {
				constraints14 = &shared.RepeatableAttributeConstraints{}
			}
			featureFlag15 := new(string)
			if !attributesItem.RepeatableAttribute.FeatureFlag.IsUnknown() && !attributesItem.RepeatableAttribute.FeatureFlag.IsNull() {
				*featureFlag15 = attributesItem.RepeatableAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag15 = nil
			}
			var settingsFlag15 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem15 := range attributesItem.RepeatableAttribute.SettingsFlag {
				name31 := new(string)
				if !settingsFlagItem15.Name.IsUnknown() && !settingsFlagItem15.Name.IsNull() {
					*name31 = settingsFlagItem15.Name.ValueString()
				} else {
					name31 = nil
				}
				enabled15 := new(bool)
				if !settingsFlagItem15.Enabled.IsUnknown() && !settingsFlagItem15.Enabled.IsNull() {
					*enabled15 = settingsFlagItem15.Enabled.ValueBool()
				} else {
					enabled15 = nil
				}
				settingsFlag15 = append(settingsFlag15, shared.SettingFlag{
					Name:    name31,
					Enabled: enabled15,
				})
			}
			valueFormatter14 := new(string)
			if !attributesItem.RepeatableAttribute.ValueFormatter.IsUnknown() && !attributesItem.RepeatableAttribute.ValueFormatter.IsNull() {
				*valueFormatter14 = attributesItem.RepeatableAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter14 = nil
			}
			previewValueFormatter14 := new(string)
			if !attributesItem.RepeatableAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.RepeatableAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter14 = attributesItem.RepeatableAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter14 = nil
			}
			entityBuilderDisableEdit14 := new(bool)
			if !attributesItem.RepeatableAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.RepeatableAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit14 = attributesItem.RepeatableAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit14 = nil
			}
			protected14 := new(bool)
			if !attributesItem.RepeatableAttribute.Protected.IsUnknown() && !attributesItem.RepeatableAttribute.Protected.IsNull() {
				*protected14 = attributesItem.RepeatableAttribute.Protected.ValueBool()
			} else {
				protected14 = nil
			}
			var infoHelpers14 *shared.RepeatableAttributeInfoHelpers
			if attributesItem.RepeatableAttribute.InfoHelpers != nil {
				hintText14 := new(string)
				if !attributesItem.RepeatableAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.RepeatableAttribute.InfoHelpers.HintText.IsNull() {
					*hintText14 = attributesItem.RepeatableAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText14 = nil
				}
				hintTextKey14 := new(string)
				if !attributesItem.RepeatableAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.RepeatableAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey14 = attributesItem.RepeatableAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey14 = nil
				}
				hintCustomComponent14 := new(string)
				if !attributesItem.RepeatableAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.RepeatableAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent14 = attributesItem.RepeatableAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent14 = nil
				}
				hintTooltipPlacement14 := new(string)
				if !attributesItem.RepeatableAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.RepeatableAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement14 = attributesItem.RepeatableAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement14 = nil
				}
				infoHelpers14 = &shared.RepeatableAttributeInfoHelpers{
					HintText:             hintText14,
					HintTextKey:          hintTextKey14,
					HintCustomComponent:  hintCustomComponent14,
					HintTooltipPlacement: hintTooltipPlacement14,
				}
			}
			repeatable := new(bool)
			if !attributesItem.RepeatableAttribute.Repeatable.IsUnknown() && !attributesItem.RepeatableAttribute.Repeatable.IsNull() {
				*repeatable = attributesItem.RepeatableAttribute.Repeatable.ValueBool()
			} else {
				repeatable = nil
			}
			hasPrimary3 := new(bool)
			if !attributesItem.RepeatableAttribute.HasPrimary.IsUnknown() && !attributesItem.RepeatableAttribute.HasPrimary.IsNull() {
				*hasPrimary3 = attributesItem.RepeatableAttribute.HasPrimary.ValueBool()
			} else {
				hasPrimary3 = nil
			}
			relationAffinityMode1 := new(shared.RepeatableAttributeRelationAffinityMode)
			if !attributesItem.RepeatableAttribute.RelationAffinityMode.IsUnknown() && !attributesItem.RepeatableAttribute.RelationAffinityMode.IsNull() {
				*relationAffinityMode1 = shared.RepeatableAttributeRelationAffinityMode(attributesItem.RepeatableAttribute.RelationAffinityMode.ValueString())
			} else {
				relationAffinityMode1 = nil
			}
			typeVar14 := new(shared.RepeatableAttributeType)
			if !attributesItem.RepeatableAttribute.Type.IsUnknown() && !attributesItem.RepeatableAttribute.Type.IsNull() {
				*typeVar14 = shared.RepeatableAttributeType(attributesItem.RepeatableAttribute.Type.ValueString())
			} else {
				typeVar14 = nil
			}
			enableRelationPicker1 := new(bool)
			if !attributesItem.RepeatableAttribute.EnableRelationPicker.IsUnknown() && !attributesItem.RepeatableAttribute.EnableRelationPicker.IsNull() {
				*enableRelationPicker1 = attributesItem.RepeatableAttribute.EnableRelationPicker.ValueBool()
			} else {
				enableRelationPicker1 = nil
			}
			repeatableAttribute := shared.RepeatableAttribute{
				ID:                       id16,
				Name:                     name30,
				Label:                    label15,
				Placeholder:              placeholder14,
				Hidden:                   hidden14,
				ShowInTable:              showInTable14,
				Sortable:                 sortable14,
				Required:                 required14,
				Readonly:                 readonly14,
				Deprecated:               deprecated14,
				DefaultValue:             defaultValue14,
				Group:                    group14,
				Order:                    order14,
				Layout:                   layout14,
				HideLabel:                hideLabel14,
				Icon:                     icon14,
				RenderCondition:          renderCondition14,
				Purpose:                  purpose14,
				Constraints:              constraints14,
				FeatureFlag:              featureFlag15,
				SettingsFlag:             settingsFlag15,
				ValueFormatter:           valueFormatter14,
				PreviewValueFormatter:    previewValueFormatter14,
				EntityBuilderDisableEdit: entityBuilderDisableEdit14,
				Protected:                protected14,
				InfoHelpers:              infoHelpers14,
				Repeatable:               repeatable,
				HasPrimary:               hasPrimary3,
				RelationAffinityMode:     relationAffinityMode1,
				Type:                     typeVar14,
				EnableRelationPicker:     enableRelationPicker1,
			}
			attributes = append(attributes, shared.Attribute{
				RepeatableAttribute: &repeatableAttribute,
			})
		}
		if attributesItem.TagsAttribute != nil {
			id17 := new(string)
			if !attributesItem.TagsAttribute.ID.IsUnknown() && !attributesItem.TagsAttribute.ID.IsNull() {
				*id17 = attributesItem.TagsAttribute.ID.ValueString()
			} else {
				id17 = nil
			}
			name32 := attributesItem.TagsAttribute.Name.ValueString()
			label16 := attributesItem.TagsAttribute.Label.ValueString()
			placeholder15 := new(string)
			if !attributesItem.TagsAttribute.Placeholder.IsUnknown() && !attributesItem.TagsAttribute.Placeholder.IsNull() {
				*placeholder15 = attributesItem.TagsAttribute.Placeholder.ValueString()
			} else {
				placeholder15 = nil
			}
			hidden15 := new(bool)
			if !attributesItem.TagsAttribute.Hidden.IsUnknown() && !attributesItem.TagsAttribute.Hidden.IsNull() {
				*hidden15 = attributesItem.TagsAttribute.Hidden.ValueBool()
			} else {
				hidden15 = nil
			}
			showInTable15 := new(bool)
			if !attributesItem.TagsAttribute.ShowInTable.IsUnknown() && !attributesItem.TagsAttribute.ShowInTable.IsNull() {
				*showInTable15 = attributesItem.TagsAttribute.ShowInTable.ValueBool()
			} else {
				showInTable15 = nil
			}
			sortable15 := new(bool)
			if !attributesItem.TagsAttribute.Sortable.IsUnknown() && !attributesItem.TagsAttribute.Sortable.IsNull() {
				*sortable15 = attributesItem.TagsAttribute.Sortable.ValueBool()
			} else {
				sortable15 = nil
			}
			required15 := new(bool)
			if !attributesItem.TagsAttribute.Required.IsUnknown() && !attributesItem.TagsAttribute.Required.IsNull() {
				*required15 = attributesItem.TagsAttribute.Required.ValueBool()
			} else {
				required15 = nil
			}
			readonly15 := new(bool)
			if !attributesItem.TagsAttribute.Readonly.IsUnknown() && !attributesItem.TagsAttribute.Readonly.IsNull() {
				*readonly15 = attributesItem.TagsAttribute.Readonly.ValueBool()
			} else {
				readonly15 = nil
			}
			deprecated15 := new(bool)
			if !attributesItem.TagsAttribute.Deprecated.IsUnknown() && !attributesItem.TagsAttribute.Deprecated.IsNull() {
				*deprecated15 = attributesItem.TagsAttribute.Deprecated.ValueBool()
			} else {
				deprecated15 = nil
			}
			var defaultValue15 interface{}
			if !attributesItem.TagsAttribute.DefaultValue.IsUnknown() && !attributesItem.TagsAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem.TagsAttribute.DefaultValue.ValueString()), &defaultValue15)
			}
			group15 := new(string)
			if !attributesItem.TagsAttribute.Group.IsUnknown() && !attributesItem.TagsAttribute.Group.IsNull() {
				*group15 = attributesItem.TagsAttribute.Group.ValueString()
			} else {
				group15 = nil
			}
			order15 := new(int64)
			if !attributesItem.TagsAttribute.Order.IsUnknown() && !attributesItem.TagsAttribute.Order.IsNull() {
				*order15 = attributesItem.TagsAttribute.Order.ValueInt64()
			} else {
				order15 = nil
			}
			layout15 := new(string)
			if !attributesItem.TagsAttribute.Layout.IsUnknown() && !attributesItem.TagsAttribute.Layout.IsNull() {
				*layout15 = attributesItem.TagsAttribute.Layout.ValueString()
			} else {
				layout15 = nil
			}
			hideLabel15 := new(bool)
			if !attributesItem.TagsAttribute.HideLabel.IsUnknown() && !attributesItem.TagsAttribute.HideLabel.IsNull() {
				*hideLabel15 = attributesItem.TagsAttribute.HideLabel.ValueBool()
			} else {
				hideLabel15 = nil
			}
			icon15 := new(string)
			if !attributesItem.TagsAttribute.Icon.IsUnknown() && !attributesItem.TagsAttribute.Icon.IsNull() {
				*icon15 = attributesItem.TagsAttribute.Icon.ValueString()
			} else {
				icon15 = nil
			}
			renderCondition15 := new(string)
			if !attributesItem.TagsAttribute.RenderCondition.IsUnknown() && !attributesItem.TagsAttribute.RenderCondition.IsNull() {
				*renderCondition15 = attributesItem.TagsAttribute.RenderCondition.ValueString()
			} else {
				renderCondition15 = nil
			}
			var purpose15 []string = []string{}
			for _, purposeItem15 := range attributesItem.TagsAttribute.Purpose {
				purpose15 = append(purpose15, purposeItem15.ValueString())
			}
			var constraints15 *shared.TagsAttributeConstraints
			if attributesItem.TagsAttribute.Constraints != nil {
				constraints15 = &shared.TagsAttributeConstraints{}
			}
			featureFlag16 := new(string)
			if !attributesItem.TagsAttribute.FeatureFlag.IsUnknown() && !attributesItem.TagsAttribute.FeatureFlag.IsNull() {
				*featureFlag16 = attributesItem.TagsAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag16 = nil
			}
			var settingsFlag16 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem16 := range attributesItem.TagsAttribute.SettingsFlag {
				name33 := new(string)
				if !settingsFlagItem16.Name.IsUnknown() && !settingsFlagItem16.Name.IsNull() {
					*name33 = settingsFlagItem16.Name.ValueString()
				} else {
					name33 = nil
				}
				enabled16 := new(bool)
				if !settingsFlagItem16.Enabled.IsUnknown() && !settingsFlagItem16.Enabled.IsNull() {
					*enabled16 = settingsFlagItem16.Enabled.ValueBool()
				} else {
					enabled16 = nil
				}
				settingsFlag16 = append(settingsFlag16, shared.SettingFlag{
					Name:    name33,
					Enabled: enabled16,
				})
			}
			valueFormatter15 := new(string)
			if !attributesItem.TagsAttribute.ValueFormatter.IsUnknown() && !attributesItem.TagsAttribute.ValueFormatter.IsNull() {
				*valueFormatter15 = attributesItem.TagsAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter15 = nil
			}
			previewValueFormatter15 := new(string)
			if !attributesItem.TagsAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.TagsAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter15 = attributesItem.TagsAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter15 = nil
			}
			entityBuilderDisableEdit15 := new(bool)
			if !attributesItem.TagsAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.TagsAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit15 = attributesItem.TagsAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit15 = nil
			}
			protected15 := new(bool)
			if !attributesItem.TagsAttribute.Protected.IsUnknown() && !attributesItem.TagsAttribute.Protected.IsNull() {
				*protected15 = attributesItem.TagsAttribute.Protected.ValueBool()
			} else {
				protected15 = nil
			}
			var infoHelpers15 *shared.TagsAttributeInfoHelpers
			if attributesItem.TagsAttribute.InfoHelpers != nil {
				hintText15 := new(string)
				if !attributesItem.TagsAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.TagsAttribute.InfoHelpers.HintText.IsNull() {
					*hintText15 = attributesItem.TagsAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText15 = nil
				}
				hintTextKey15 := new(string)
				if !attributesItem.TagsAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.TagsAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey15 = attributesItem.TagsAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey15 = nil
				}
				hintCustomComponent15 := new(string)
				if !attributesItem.TagsAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.TagsAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent15 = attributesItem.TagsAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent15 = nil
				}
				hintTooltipPlacement15 := new(string)
				if !attributesItem.TagsAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.TagsAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement15 = attributesItem.TagsAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement15 = nil
				}
				infoHelpers15 = &shared.TagsAttributeInfoHelpers{
					HintText:             hintText15,
					HintTextKey:          hintTextKey15,
					HintCustomComponent:  hintCustomComponent15,
					HintTooltipPlacement: hintTooltipPlacement15,
				}
			}
			typeVar15 := new(shared.TagsAttributeType)
			if !attributesItem.TagsAttribute.Type.IsUnknown() && !attributesItem.TagsAttribute.Type.IsNull() {
				*typeVar15 = shared.TagsAttributeType(attributesItem.TagsAttribute.Type.ValueString())
			} else {
				typeVar15 = nil
			}
			var options3 []string = []string{}
			for _, optionsItem3 := range attributesItem.TagsAttribute.Options {
				options3 = append(options3, optionsItem3.ValueString())
			}
			var suggestions []string = []string{}
			for _, suggestionsItem := range attributesItem.TagsAttribute.Suggestions {
				suggestions = append(suggestions, suggestionsItem.ValueString())
			}
			tagsAttribute := shared.TagsAttribute{
				ID:                       id17,
				Name:                     name32,
				Label:                    label16,
				Placeholder:              placeholder15,
				Hidden:                   hidden15,
				ShowInTable:              showInTable15,
				Sortable:                 sortable15,
				Required:                 required15,
				Readonly:                 readonly15,
				Deprecated:               deprecated15,
				DefaultValue:             defaultValue15,
				Group:                    group15,
				Order:                    order15,
				Layout:                   layout15,
				HideLabel:                hideLabel15,
				Icon:                     icon15,
				RenderCondition:          renderCondition15,
				Purpose:                  purpose15,
				Constraints:              constraints15,
				FeatureFlag:              featureFlag16,
				SettingsFlag:             settingsFlag16,
				ValueFormatter:           valueFormatter15,
				PreviewValueFormatter:    previewValueFormatter15,
				EntityBuilderDisableEdit: entityBuilderDisableEdit15,
				Protected:                protected15,
				InfoHelpers:              infoHelpers15,
				Type:                     typeVar15,
				Options:                  options3,
				Suggestions:              suggestions,
			}
			attributes = append(attributes, shared.Attribute{
				TagsAttribute: &tagsAttribute,
			})
		}
		if attributesItem.NumberAttribute != nil {
			id18 := new(string)
			if !attributesItem.NumberAttribute.ID.IsUnknown() && !attributesItem.NumberAttribute.ID.IsNull() {
				*id18 = attributesItem.NumberAttribute.ID.ValueString()
			} else {
				id18 = nil
			}
			name34 := attributesItem.NumberAttribute.Name.ValueString()
			label17 := attributesItem.NumberAttribute.Label.ValueString()
			placeholder16 := new(string)
			if !attributesItem.NumberAttribute.Placeholder.IsUnknown() && !attributesItem.NumberAttribute.Placeholder.IsNull() {
				*placeholder16 = attributesItem.NumberAttribute.Placeholder.ValueString()
			} else {
				placeholder16 = nil
			}
			hidden16 := new(bool)
			if !attributesItem.NumberAttribute.Hidden.IsUnknown() && !attributesItem.NumberAttribute.Hidden.IsNull() {
				*hidden16 = attributesItem.NumberAttribute.Hidden.ValueBool()
			} else {
				hidden16 = nil
			}
			showInTable16 := new(bool)
			if !attributesItem.NumberAttribute.ShowInTable.IsUnknown() && !attributesItem.NumberAttribute.ShowInTable.IsNull() {
				*showInTable16 = attributesItem.NumberAttribute.ShowInTable.ValueBool()
			} else {
				showInTable16 = nil
			}
			sortable16 := new(bool)
			if !attributesItem.NumberAttribute.Sortable.IsUnknown() && !attributesItem.NumberAttribute.Sortable.IsNull() {
				*sortable16 = attributesItem.NumberAttribute.Sortable.ValueBool()
			} else {
				sortable16 = nil
			}
			required16 := new(bool)
			if !attributesItem.NumberAttribute.Required.IsUnknown() && !attributesItem.NumberAttribute.Required.IsNull() {
				*required16 = attributesItem.NumberAttribute.Required.ValueBool()
			} else {
				required16 = nil
			}
			readonly16 := new(bool)
			if !attributesItem.NumberAttribute.Readonly.IsUnknown() && !attributesItem.NumberAttribute.Readonly.IsNull() {
				*readonly16 = attributesItem.NumberAttribute.Readonly.ValueBool()
			} else {
				readonly16 = nil
			}
			deprecated16 := new(bool)
			if !attributesItem.NumberAttribute.Deprecated.IsUnknown() && !attributesItem.NumberAttribute.Deprecated.IsNull() {
				*deprecated16 = attributesItem.NumberAttribute.Deprecated.ValueBool()
			} else {
				deprecated16 = nil
			}
			var defaultValue16 interface{}
			if !attributesItem.NumberAttribute.DefaultValue.IsUnknown() && !attributesItem.NumberAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem.NumberAttribute.DefaultValue.ValueString()), &defaultValue16)
			}
			group16 := new(string)
			if !attributesItem.NumberAttribute.Group.IsUnknown() && !attributesItem.NumberAttribute.Group.IsNull() {
				*group16 = attributesItem.NumberAttribute.Group.ValueString()
			} else {
				group16 = nil
			}
			order16 := new(int64)
			if !attributesItem.NumberAttribute.Order.IsUnknown() && !attributesItem.NumberAttribute.Order.IsNull() {
				*order16 = attributesItem.NumberAttribute.Order.ValueInt64()
			} else {
				order16 = nil
			}
			layout16 := new(string)
			if !attributesItem.NumberAttribute.Layout.IsUnknown() && !attributesItem.NumberAttribute.Layout.IsNull() {
				*layout16 = attributesItem.NumberAttribute.Layout.ValueString()
			} else {
				layout16 = nil
			}
			hideLabel16 := new(bool)
			if !attributesItem.NumberAttribute.HideLabel.IsUnknown() && !attributesItem.NumberAttribute.HideLabel.IsNull() {
				*hideLabel16 = attributesItem.NumberAttribute.HideLabel.ValueBool()
			} else {
				hideLabel16 = nil
			}
			icon16 := new(string)
			if !attributesItem.NumberAttribute.Icon.IsUnknown() && !attributesItem.NumberAttribute.Icon.IsNull() {
				*icon16 = attributesItem.NumberAttribute.Icon.ValueString()
			} else {
				icon16 = nil
			}
			renderCondition16 := new(string)
			if !attributesItem.NumberAttribute.RenderCondition.IsUnknown() && !attributesItem.NumberAttribute.RenderCondition.IsNull() {
				*renderCondition16 = attributesItem.NumberAttribute.RenderCondition.ValueString()
			} else {
				renderCondition16 = nil
			}
			var purpose16 []string = []string{}
			for _, purposeItem16 := range attributesItem.NumberAttribute.Purpose {
				purpose16 = append(purpose16, purposeItem16.ValueString())
			}
			var constraints16 *shared.NumberAttributeConstraints
			if attributesItem.NumberAttribute.Constraints != nil {
				constraints16 = &shared.NumberAttributeConstraints{}
			}
			featureFlag17 := new(string)
			if !attributesItem.NumberAttribute.FeatureFlag.IsUnknown() && !attributesItem.NumberAttribute.FeatureFlag.IsNull() {
				*featureFlag17 = attributesItem.NumberAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag17 = nil
			}
			var settingsFlag17 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem17 := range attributesItem.NumberAttribute.SettingsFlag {
				name35 := new(string)
				if !settingsFlagItem17.Name.IsUnknown() && !settingsFlagItem17.Name.IsNull() {
					*name35 = settingsFlagItem17.Name.ValueString()
				} else {
					name35 = nil
				}
				enabled17 := new(bool)
				if !settingsFlagItem17.Enabled.IsUnknown() && !settingsFlagItem17.Enabled.IsNull() {
					*enabled17 = settingsFlagItem17.Enabled.ValueBool()
				} else {
					enabled17 = nil
				}
				settingsFlag17 = append(settingsFlag17, shared.SettingFlag{
					Name:    name35,
					Enabled: enabled17,
				})
			}
			valueFormatter16 := new(string)
			if !attributesItem.NumberAttribute.ValueFormatter.IsUnknown() && !attributesItem.NumberAttribute.ValueFormatter.IsNull() {
				*valueFormatter16 = attributesItem.NumberAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter16 = nil
			}
			previewValueFormatter16 := new(string)
			if !attributesItem.NumberAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.NumberAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter16 = attributesItem.NumberAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter16 = nil
			}
			entityBuilderDisableEdit16 := new(bool)
			if !attributesItem.NumberAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.NumberAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit16 = attributesItem.NumberAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit16 = nil
			}
			protected16 := new(bool)
			if !attributesItem.NumberAttribute.Protected.IsUnknown() && !attributesItem.NumberAttribute.Protected.IsNull() {
				*protected16 = attributesItem.NumberAttribute.Protected.ValueBool()
			} else {
				protected16 = nil
			}
			var infoHelpers16 *shared.NumberAttributeInfoHelpers
			if attributesItem.NumberAttribute.InfoHelpers != nil {
				hintText16 := new(string)
				if !attributesItem.NumberAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.NumberAttribute.InfoHelpers.HintText.IsNull() {
					*hintText16 = attributesItem.NumberAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText16 = nil
				}
				hintTextKey16 := new(string)
				if !attributesItem.NumberAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.NumberAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey16 = attributesItem.NumberAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey16 = nil
				}
				hintCustomComponent16 := new(string)
				if !attributesItem.NumberAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.NumberAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent16 = attributesItem.NumberAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent16 = nil
				}
				hintTooltipPlacement16 := new(string)
				if !attributesItem.NumberAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.NumberAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement16 = attributesItem.NumberAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement16 = nil
				}
				infoHelpers16 = &shared.NumberAttributeInfoHelpers{
					HintText:             hintText16,
					HintTextKey:          hintTextKey16,
					HintCustomComponent:  hintCustomComponent16,
					HintTooltipPlacement: hintTooltipPlacement16,
				}
			}
			typeVar16 := new(shared.NumberAttributeType)
			if !attributesItem.NumberAttribute.Type.IsUnknown() && !attributesItem.NumberAttribute.Type.IsNull() {
				*typeVar16 = shared.NumberAttributeType(attributesItem.NumberAttribute.Type.ValueString())
			} else {
				typeVar16 = nil
			}
			format := new(string)
			if !attributesItem.NumberAttribute.Format.IsUnknown() && !attributesItem.NumberAttribute.Format.IsNull() {
				*format = attributesItem.NumberAttribute.Format.ValueString()
			} else {
				format = nil
			}
			numberAttribute := shared.NumberAttribute{
				ID:                       id18,
				Name:                     name34,
				Label:                    label17,
				Placeholder:              placeholder16,
				Hidden:                   hidden16,
				ShowInTable:              showInTable16,
				Sortable:                 sortable16,
				Required:                 required16,
				Readonly:                 readonly16,
				Deprecated:               deprecated16,
				DefaultValue:             defaultValue16,
				Group:                    group16,
				Order:                    order16,
				Layout:                   layout16,
				HideLabel:                hideLabel16,
				Icon:                     icon16,
				RenderCondition:          renderCondition16,
				Purpose:                  purpose16,
				Constraints:              constraints16,
				FeatureFlag:              featureFlag17,
				SettingsFlag:             settingsFlag17,
				ValueFormatter:           valueFormatter16,
				PreviewValueFormatter:    previewValueFormatter16,
				EntityBuilderDisableEdit: entityBuilderDisableEdit16,
				Protected:                protected16,
				InfoHelpers:              infoHelpers16,
				Type:                     typeVar16,
				Format:                   format,
			}
			attributes = append(attributes, shared.Attribute{
				NumberAttribute: &numberAttribute,
			})
		}
		if attributesItem.ConsentAttribute != nil {
			id19 := new(string)
			if !attributesItem.ConsentAttribute.ID.IsUnknown() && !attributesItem.ConsentAttribute.ID.IsNull() {
				*id19 = attributesItem.ConsentAttribute.ID.ValueString()
			} else {
				id19 = nil
			}
			name36 := attributesItem.ConsentAttribute.Name.ValueString()
			label18 := attributesItem.ConsentAttribute.Label.ValueString()
			placeholder17 := new(string)
			if !attributesItem.ConsentAttribute.Placeholder.IsUnknown() && !attributesItem.ConsentAttribute.Placeholder.IsNull() {
				*placeholder17 = attributesItem.ConsentAttribute.Placeholder.ValueString()
			} else {
				placeholder17 = nil
			}
			hidden17 := new(bool)
			if !attributesItem.ConsentAttribute.Hidden.IsUnknown() && !attributesItem.ConsentAttribute.Hidden.IsNull() {
				*hidden17 = attributesItem.ConsentAttribute.Hidden.ValueBool()
			} else {
				hidden17 = nil
			}
			showInTable17 := new(bool)
			if !attributesItem.ConsentAttribute.ShowInTable.IsUnknown() && !attributesItem.ConsentAttribute.ShowInTable.IsNull() {
				*showInTable17 = attributesItem.ConsentAttribute.ShowInTable.ValueBool()
			} else {
				showInTable17 = nil
			}
			sortable17 := new(bool)
			if !attributesItem.ConsentAttribute.Sortable.IsUnknown() && !attributesItem.ConsentAttribute.Sortable.IsNull() {
				*sortable17 = attributesItem.ConsentAttribute.Sortable.ValueBool()
			} else {
				sortable17 = nil
			}
			required17 := new(bool)
			if !attributesItem.ConsentAttribute.Required.IsUnknown() && !attributesItem.ConsentAttribute.Required.IsNull() {
				*required17 = attributesItem.ConsentAttribute.Required.ValueBool()
			} else {
				required17 = nil
			}
			readonly17 := new(bool)
			if !attributesItem.ConsentAttribute.Readonly.IsUnknown() && !attributesItem.ConsentAttribute.Readonly.IsNull() {
				*readonly17 = attributesItem.ConsentAttribute.Readonly.ValueBool()
			} else {
				readonly17 = nil
			}
			deprecated17 := new(bool)
			if !attributesItem.ConsentAttribute.Deprecated.IsUnknown() && !attributesItem.ConsentAttribute.Deprecated.IsNull() {
				*deprecated17 = attributesItem.ConsentAttribute.Deprecated.ValueBool()
			} else {
				deprecated17 = nil
			}
			var defaultValue17 interface{}
			if !attributesItem.ConsentAttribute.DefaultValue.IsUnknown() && !attributesItem.ConsentAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem.ConsentAttribute.DefaultValue.ValueString()), &defaultValue17)
			}
			group17 := new(string)
			if !attributesItem.ConsentAttribute.Group.IsUnknown() && !attributesItem.ConsentAttribute.Group.IsNull() {
				*group17 = attributesItem.ConsentAttribute.Group.ValueString()
			} else {
				group17 = nil
			}
			order17 := new(int64)
			if !attributesItem.ConsentAttribute.Order.IsUnknown() && !attributesItem.ConsentAttribute.Order.IsNull() {
				*order17 = attributesItem.ConsentAttribute.Order.ValueInt64()
			} else {
				order17 = nil
			}
			layout17 := new(string)
			if !attributesItem.ConsentAttribute.Layout.IsUnknown() && !attributesItem.ConsentAttribute.Layout.IsNull() {
				*layout17 = attributesItem.ConsentAttribute.Layout.ValueString()
			} else {
				layout17 = nil
			}
			hideLabel17 := new(bool)
			if !attributesItem.ConsentAttribute.HideLabel.IsUnknown() && !attributesItem.ConsentAttribute.HideLabel.IsNull() {
				*hideLabel17 = attributesItem.ConsentAttribute.HideLabel.ValueBool()
			} else {
				hideLabel17 = nil
			}
			icon17 := new(string)
			if !attributesItem.ConsentAttribute.Icon.IsUnknown() && !attributesItem.ConsentAttribute.Icon.IsNull() {
				*icon17 = attributesItem.ConsentAttribute.Icon.ValueString()
			} else {
				icon17 = nil
			}
			renderCondition17 := new(string)
			if !attributesItem.ConsentAttribute.RenderCondition.IsUnknown() && !attributesItem.ConsentAttribute.RenderCondition.IsNull() {
				*renderCondition17 = attributesItem.ConsentAttribute.RenderCondition.ValueString()
			} else {
				renderCondition17 = nil
			}
			var purpose17 []string = []string{}
			for _, purposeItem17 := range attributesItem.ConsentAttribute.Purpose {
				purpose17 = append(purpose17, purposeItem17.ValueString())
			}
			var constraints17 *shared.ConsentAttributeConstraints
			if attributesItem.ConsentAttribute.Constraints != nil {
				constraints17 = &shared.ConsentAttributeConstraints{}
			}
			featureFlag18 := new(string)
			if !attributesItem.ConsentAttribute.FeatureFlag.IsUnknown() && !attributesItem.ConsentAttribute.FeatureFlag.IsNull() {
				*featureFlag18 = attributesItem.ConsentAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag18 = nil
			}
			var settingsFlag18 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem18 := range attributesItem.ConsentAttribute.SettingsFlag {
				name37 := new(string)
				if !settingsFlagItem18.Name.IsUnknown() && !settingsFlagItem18.Name.IsNull() {
					*name37 = settingsFlagItem18.Name.ValueString()
				} else {
					name37 = nil
				}
				enabled18 := new(bool)
				if !settingsFlagItem18.Enabled.IsUnknown() && !settingsFlagItem18.Enabled.IsNull() {
					*enabled18 = settingsFlagItem18.Enabled.ValueBool()
				} else {
					enabled18 = nil
				}
				settingsFlag18 = append(settingsFlag18, shared.SettingFlag{
					Name:    name37,
					Enabled: enabled18,
				})
			}
			valueFormatter17 := new(string)
			if !attributesItem.ConsentAttribute.ValueFormatter.IsUnknown() && !attributesItem.ConsentAttribute.ValueFormatter.IsNull() {
				*valueFormatter17 = attributesItem.ConsentAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter17 = nil
			}
			previewValueFormatter17 := new(string)
			if !attributesItem.ConsentAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.ConsentAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter17 = attributesItem.ConsentAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter17 = nil
			}
			entityBuilderDisableEdit17 := new(bool)
			if !attributesItem.ConsentAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.ConsentAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit17 = attributesItem.ConsentAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit17 = nil
			}
			protected17 := new(bool)
			if !attributesItem.ConsentAttribute.Protected.IsUnknown() && !attributesItem.ConsentAttribute.Protected.IsNull() {
				*protected17 = attributesItem.ConsentAttribute.Protected.ValueBool()
			} else {
				protected17 = nil
			}
			var infoHelpers17 *shared.ConsentAttributeInfoHelpers
			if attributesItem.ConsentAttribute.InfoHelpers != nil {
				hintText17 := new(string)
				if !attributesItem.ConsentAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.ConsentAttribute.InfoHelpers.HintText.IsNull() {
					*hintText17 = attributesItem.ConsentAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText17 = nil
				}
				hintTextKey17 := new(string)
				if !attributesItem.ConsentAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.ConsentAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey17 = attributesItem.ConsentAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey17 = nil
				}
				hintCustomComponent17 := new(string)
				if !attributesItem.ConsentAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.ConsentAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent17 = attributesItem.ConsentAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent17 = nil
				}
				hintTooltipPlacement17 := new(string)
				if !attributesItem.ConsentAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.ConsentAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement17 = attributesItem.ConsentAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement17 = nil
				}
				infoHelpers17 = &shared.ConsentAttributeInfoHelpers{
					HintText:             hintText17,
					HintTextKey:          hintTextKey17,
					HintCustomComponent:  hintCustomComponent17,
					HintTooltipPlacement: hintTooltipPlacement17,
				}
			}
			typeVar17 := shared.ConsentAttributeType(attributesItem.ConsentAttribute.Type.ValueString())
			topic := attributesItem.ConsentAttribute.Topic.ValueString()
			var identifiers []string = []string{}
			for _, identifiersItem := range attributesItem.ConsentAttribute.Identifiers {
				identifiers = append(identifiers, identifiersItem.ValueString())
			}
			consentAttribute := shared.ConsentAttribute{
				ID:                       id19,
				Name:                     name36,
				Label:                    label18,
				Placeholder:              placeholder17,
				Hidden:                   hidden17,
				ShowInTable:              showInTable17,
				Sortable:                 sortable17,
				Required:                 required17,
				Readonly:                 readonly17,
				Deprecated:               deprecated17,
				DefaultValue:             defaultValue17,
				Group:                    group17,
				Order:                    order17,
				Layout:                   layout17,
				HideLabel:                hideLabel17,
				Icon:                     icon17,
				RenderCondition:          renderCondition17,
				Purpose:                  purpose17,
				Constraints:              constraints17,
				FeatureFlag:              featureFlag18,
				SettingsFlag:             settingsFlag18,
				ValueFormatter:           valueFormatter17,
				PreviewValueFormatter:    previewValueFormatter17,
				EntityBuilderDisableEdit: entityBuilderDisableEdit17,
				Protected:                protected17,
				InfoHelpers:              infoHelpers17,
				Type:                     typeVar17,
				Topic:                    topic,
				Identifiers:              identifiers,
			}
			attributes = append(attributes, shared.Attribute{
				ConsentAttribute: &consentAttribute,
			})
		}
		if attributesItem.InternalAttribute != nil {
			id20 := new(string)
			if !attributesItem.InternalAttribute.ID.IsUnknown() && !attributesItem.InternalAttribute.ID.IsNull() {
				*id20 = attributesItem.InternalAttribute.ID.ValueString()
			} else {
				id20 = nil
			}
			name38 := attributesItem.InternalAttribute.Name.ValueString()
			label19 := attributesItem.InternalAttribute.Label.ValueString()
			placeholder18 := new(string)
			if !attributesItem.InternalAttribute.Placeholder.IsUnknown() && !attributesItem.InternalAttribute.Placeholder.IsNull() {
				*placeholder18 = attributesItem.InternalAttribute.Placeholder.ValueString()
			} else {
				placeholder18 = nil
			}
			hidden18 := new(bool)
			if !attributesItem.InternalAttribute.Hidden.IsUnknown() && !attributesItem.InternalAttribute.Hidden.IsNull() {
				*hidden18 = attributesItem.InternalAttribute.Hidden.ValueBool()
			} else {
				hidden18 = nil
			}
			showInTable18 := new(bool)
			if !attributesItem.InternalAttribute.ShowInTable.IsUnknown() && !attributesItem.InternalAttribute.ShowInTable.IsNull() {
				*showInTable18 = attributesItem.InternalAttribute.ShowInTable.ValueBool()
			} else {
				showInTable18 = nil
			}
			sortable18 := new(bool)
			if !attributesItem.InternalAttribute.Sortable.IsUnknown() && !attributesItem.InternalAttribute.Sortable.IsNull() {
				*sortable18 = attributesItem.InternalAttribute.Sortable.ValueBool()
			} else {
				sortable18 = nil
			}
			required18 := new(bool)
			if !attributesItem.InternalAttribute.Required.IsUnknown() && !attributesItem.InternalAttribute.Required.IsNull() {
				*required18 = attributesItem.InternalAttribute.Required.ValueBool()
			} else {
				required18 = nil
			}
			readonly18 := new(bool)
			if !attributesItem.InternalAttribute.Readonly.IsUnknown() && !attributesItem.InternalAttribute.Readonly.IsNull() {
				*readonly18 = attributesItem.InternalAttribute.Readonly.ValueBool()
			} else {
				readonly18 = nil
			}
			deprecated18 := new(bool)
			if !attributesItem.InternalAttribute.Deprecated.IsUnknown() && !attributesItem.InternalAttribute.Deprecated.IsNull() {
				*deprecated18 = attributesItem.InternalAttribute.Deprecated.ValueBool()
			} else {
				deprecated18 = nil
			}
			var defaultValue18 interface{}
			if !attributesItem.InternalAttribute.DefaultValue.IsUnknown() && !attributesItem.InternalAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem.InternalAttribute.DefaultValue.ValueString()), &defaultValue18)
			}
			group18 := new(string)
			if !attributesItem.InternalAttribute.Group.IsUnknown() && !attributesItem.InternalAttribute.Group.IsNull() {
				*group18 = attributesItem.InternalAttribute.Group.ValueString()
			} else {
				group18 = nil
			}
			order18 := new(int64)
			if !attributesItem.InternalAttribute.Order.IsUnknown() && !attributesItem.InternalAttribute.Order.IsNull() {
				*order18 = attributesItem.InternalAttribute.Order.ValueInt64()
			} else {
				order18 = nil
			}
			layout18 := new(string)
			if !attributesItem.InternalAttribute.Layout.IsUnknown() && !attributesItem.InternalAttribute.Layout.IsNull() {
				*layout18 = attributesItem.InternalAttribute.Layout.ValueString()
			} else {
				layout18 = nil
			}
			hideLabel18 := new(bool)
			if !attributesItem.InternalAttribute.HideLabel.IsUnknown() && !attributesItem.InternalAttribute.HideLabel.IsNull() {
				*hideLabel18 = attributesItem.InternalAttribute.HideLabel.ValueBool()
			} else {
				hideLabel18 = nil
			}
			icon18 := new(string)
			if !attributesItem.InternalAttribute.Icon.IsUnknown() && !attributesItem.InternalAttribute.Icon.IsNull() {
				*icon18 = attributesItem.InternalAttribute.Icon.ValueString()
			} else {
				icon18 = nil
			}
			renderCondition18 := new(string)
			if !attributesItem.InternalAttribute.RenderCondition.IsUnknown() && !attributesItem.InternalAttribute.RenderCondition.IsNull() {
				*renderCondition18 = attributesItem.InternalAttribute.RenderCondition.ValueString()
			} else {
				renderCondition18 = nil
			}
			var purpose18 []string = []string{}
			for _, purposeItem18 := range attributesItem.InternalAttribute.Purpose {
				purpose18 = append(purpose18, purposeItem18.ValueString())
			}
			var constraints18 *shared.InternalAttributeConstraints
			if attributesItem.InternalAttribute.Constraints != nil {
				constraints18 = &shared.InternalAttributeConstraints{}
			}
			featureFlag19 := new(string)
			if !attributesItem.InternalAttribute.FeatureFlag.IsUnknown() && !attributesItem.InternalAttribute.FeatureFlag.IsNull() {
				*featureFlag19 = attributesItem.InternalAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag19 = nil
			}
			var settingsFlag19 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem19 := range attributesItem.InternalAttribute.SettingsFlag {
				name39 := new(string)
				if !settingsFlagItem19.Name.IsUnknown() && !settingsFlagItem19.Name.IsNull() {
					*name39 = settingsFlagItem19.Name.ValueString()
				} else {
					name39 = nil
				}
				enabled19 := new(bool)
				if !settingsFlagItem19.Enabled.IsUnknown() && !settingsFlagItem19.Enabled.IsNull() {
					*enabled19 = settingsFlagItem19.Enabled.ValueBool()
				} else {
					enabled19 = nil
				}
				settingsFlag19 = append(settingsFlag19, shared.SettingFlag{
					Name:    name39,
					Enabled: enabled19,
				})
			}
			valueFormatter18 := new(string)
			if !attributesItem.InternalAttribute.ValueFormatter.IsUnknown() && !attributesItem.InternalAttribute.ValueFormatter.IsNull() {
				*valueFormatter18 = attributesItem.InternalAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter18 = nil
			}
			previewValueFormatter18 := new(string)
			if !attributesItem.InternalAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.InternalAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter18 = attributesItem.InternalAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter18 = nil
			}
			entityBuilderDisableEdit18 := new(bool)
			if !attributesItem.InternalAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.InternalAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit18 = attributesItem.InternalAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit18 = nil
			}
			protected18 := new(bool)
			if !attributesItem.InternalAttribute.Protected.IsUnknown() && !attributesItem.InternalAttribute.Protected.IsNull() {
				*protected18 = attributesItem.InternalAttribute.Protected.ValueBool()
			} else {
				protected18 = nil
			}
			var infoHelpers18 *shared.InternalAttributeInfoHelpers
			if attributesItem.InternalAttribute.InfoHelpers != nil {
				hintText18 := new(string)
				if !attributesItem.InternalAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.InternalAttribute.InfoHelpers.HintText.IsNull() {
					*hintText18 = attributesItem.InternalAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText18 = nil
				}
				hintTextKey18 := new(string)
				if !attributesItem.InternalAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.InternalAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey18 = attributesItem.InternalAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey18 = nil
				}
				hintCustomComponent18 := new(string)
				if !attributesItem.InternalAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.InternalAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent18 = attributesItem.InternalAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent18 = nil
				}
				hintTooltipPlacement18 := new(string)
				if !attributesItem.InternalAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.InternalAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement18 = attributesItem.InternalAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement18 = nil
				}
				infoHelpers18 = &shared.InternalAttributeInfoHelpers{
					HintText:             hintText18,
					HintTextKey:          hintTextKey18,
					HintCustomComponent:  hintCustomComponent18,
					HintTooltipPlacement: hintTooltipPlacement18,
				}
			}
			typeVar18 := new(shared.InternalAttributeType)
			if !attributesItem.InternalAttribute.Type.IsUnknown() && !attributesItem.InternalAttribute.Type.IsNull() {
				*typeVar18 = shared.InternalAttributeType(attributesItem.InternalAttribute.Type.ValueString())
			} else {
				typeVar18 = nil
			}
			internalAttribute := shared.InternalAttribute{
				ID:                       id20,
				Name:                     name38,
				Label:                    label19,
				Placeholder:              placeholder18,
				Hidden:                   hidden18,
				ShowInTable:              showInTable18,
				Sortable:                 sortable18,
				Required:                 required18,
				Readonly:                 readonly18,
				Deprecated:               deprecated18,
				DefaultValue:             defaultValue18,
				Group:                    group18,
				Order:                    order18,
				Layout:                   layout18,
				HideLabel:                hideLabel18,
				Icon:                     icon18,
				RenderCondition:          renderCondition18,
				Purpose:                  purpose18,
				Constraints:              constraints18,
				FeatureFlag:              featureFlag19,
				SettingsFlag:             settingsFlag19,
				ValueFormatter:           valueFormatter18,
				PreviewValueFormatter:    previewValueFormatter18,
				EntityBuilderDisableEdit: entityBuilderDisableEdit18,
				Protected:                protected18,
				InfoHelpers:              infoHelpers18,
				Type:                     typeVar18,
			}
			attributes = append(attributes, shared.Attribute{
				InternalAttribute: &internalAttribute,
			})
		}
		if attributesItem.OrderedListAttribute != nil {
			id21 := new(string)
			if !attributesItem.OrderedListAttribute.ID.IsUnknown() && !attributesItem.OrderedListAttribute.ID.IsNull() {
				*id21 = attributesItem.OrderedListAttribute.ID.ValueString()
			} else {
				id21 = nil
			}
			name40 := attributesItem.OrderedListAttribute.Name.ValueString()
			label20 := attributesItem.OrderedListAttribute.Label.ValueString()
			placeholder19 := new(string)
			if !attributesItem.OrderedListAttribute.Placeholder.IsUnknown() && !attributesItem.OrderedListAttribute.Placeholder.IsNull() {
				*placeholder19 = attributesItem.OrderedListAttribute.Placeholder.ValueString()
			} else {
				placeholder19 = nil
			}
			hidden19 := new(bool)
			if !attributesItem.OrderedListAttribute.Hidden.IsUnknown() && !attributesItem.OrderedListAttribute.Hidden.IsNull() {
				*hidden19 = attributesItem.OrderedListAttribute.Hidden.ValueBool()
			} else {
				hidden19 = nil
			}
			showInTable19 := new(bool)
			if !attributesItem.OrderedListAttribute.ShowInTable.IsUnknown() && !attributesItem.OrderedListAttribute.ShowInTable.IsNull() {
				*showInTable19 = attributesItem.OrderedListAttribute.ShowInTable.ValueBool()
			} else {
				showInTable19 = nil
			}
			sortable19 := new(bool)
			if !attributesItem.OrderedListAttribute.Sortable.IsUnknown() && !attributesItem.OrderedListAttribute.Sortable.IsNull() {
				*sortable19 = attributesItem.OrderedListAttribute.Sortable.ValueBool()
			} else {
				sortable19 = nil
			}
			required19 := new(bool)
			if !attributesItem.OrderedListAttribute.Required.IsUnknown() && !attributesItem.OrderedListAttribute.Required.IsNull() {
				*required19 = attributesItem.OrderedListAttribute.Required.ValueBool()
			} else {
				required19 = nil
			}
			readonly19 := new(bool)
			if !attributesItem.OrderedListAttribute.Readonly.IsUnknown() && !attributesItem.OrderedListAttribute.Readonly.IsNull() {
				*readonly19 = attributesItem.OrderedListAttribute.Readonly.ValueBool()
			} else {
				readonly19 = nil
			}
			deprecated19 := new(bool)
			if !attributesItem.OrderedListAttribute.Deprecated.IsUnknown() && !attributesItem.OrderedListAttribute.Deprecated.IsNull() {
				*deprecated19 = attributesItem.OrderedListAttribute.Deprecated.ValueBool()
			} else {
				deprecated19 = nil
			}
			var defaultValue19 interface{}
			if !attributesItem.OrderedListAttribute.DefaultValue.IsUnknown() && !attributesItem.OrderedListAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem.OrderedListAttribute.DefaultValue.ValueString()), &defaultValue19)
			}
			group19 := new(string)
			if !attributesItem.OrderedListAttribute.Group.IsUnknown() && !attributesItem.OrderedListAttribute.Group.IsNull() {
				*group19 = attributesItem.OrderedListAttribute.Group.ValueString()
			} else {
				group19 = nil
			}
			order19 := new(int64)
			if !attributesItem.OrderedListAttribute.Order.IsUnknown() && !attributesItem.OrderedListAttribute.Order.IsNull() {
				*order19 = attributesItem.OrderedListAttribute.Order.ValueInt64()
			} else {
				order19 = nil
			}
			layout19 := new(string)
			if !attributesItem.OrderedListAttribute.Layout.IsUnknown() && !attributesItem.OrderedListAttribute.Layout.IsNull() {
				*layout19 = attributesItem.OrderedListAttribute.Layout.ValueString()
			} else {
				layout19 = nil
			}
			hideLabel19 := new(bool)
			if !attributesItem.OrderedListAttribute.HideLabel.IsUnknown() && !attributesItem.OrderedListAttribute.HideLabel.IsNull() {
				*hideLabel19 = attributesItem.OrderedListAttribute.HideLabel.ValueBool()
			} else {
				hideLabel19 = nil
			}
			icon19 := new(string)
			if !attributesItem.OrderedListAttribute.Icon.IsUnknown() && !attributesItem.OrderedListAttribute.Icon.IsNull() {
				*icon19 = attributesItem.OrderedListAttribute.Icon.ValueString()
			} else {
				icon19 = nil
			}
			renderCondition19 := new(string)
			if !attributesItem.OrderedListAttribute.RenderCondition.IsUnknown() && !attributesItem.OrderedListAttribute.RenderCondition.IsNull() {
				*renderCondition19 = attributesItem.OrderedListAttribute.RenderCondition.ValueString()
			} else {
				renderCondition19 = nil
			}
			var purpose19 []string = []string{}
			for _, purposeItem19 := range attributesItem.OrderedListAttribute.Purpose {
				purpose19 = append(purpose19, purposeItem19.ValueString())
			}
			var constraints19 *shared.OrderedListAttributeConstraints
			if attributesItem.OrderedListAttribute.Constraints != nil {
				constraints19 = &shared.OrderedListAttributeConstraints{}
			}
			featureFlag20 := new(string)
			if !attributesItem.OrderedListAttribute.FeatureFlag.IsUnknown() && !attributesItem.OrderedListAttribute.FeatureFlag.IsNull() {
				*featureFlag20 = attributesItem.OrderedListAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag20 = nil
			}
			var settingsFlag20 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem20 := range attributesItem.OrderedListAttribute.SettingsFlag {
				name41 := new(string)
				if !settingsFlagItem20.Name.IsUnknown() && !settingsFlagItem20.Name.IsNull() {
					*name41 = settingsFlagItem20.Name.ValueString()
				} else {
					name41 = nil
				}
				enabled20 := new(bool)
				if !settingsFlagItem20.Enabled.IsUnknown() && !settingsFlagItem20.Enabled.IsNull() {
					*enabled20 = settingsFlagItem20.Enabled.ValueBool()
				} else {
					enabled20 = nil
				}
				settingsFlag20 = append(settingsFlag20, shared.SettingFlag{
					Name:    name41,
					Enabled: enabled20,
				})
			}
			valueFormatter19 := new(string)
			if !attributesItem.OrderedListAttribute.ValueFormatter.IsUnknown() && !attributesItem.OrderedListAttribute.ValueFormatter.IsNull() {
				*valueFormatter19 = attributesItem.OrderedListAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter19 = nil
			}
			previewValueFormatter19 := new(string)
			if !attributesItem.OrderedListAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.OrderedListAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter19 = attributesItem.OrderedListAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter19 = nil
			}
			entityBuilderDisableEdit19 := new(bool)
			if !attributesItem.OrderedListAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.OrderedListAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit19 = attributesItem.OrderedListAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit19 = nil
			}
			protected19 := new(bool)
			if !attributesItem.OrderedListAttribute.Protected.IsUnknown() && !attributesItem.OrderedListAttribute.Protected.IsNull() {
				*protected19 = attributesItem.OrderedListAttribute.Protected.ValueBool()
			} else {
				protected19 = nil
			}
			var infoHelpers19 *shared.OrderedListAttributeInfoHelpers
			if attributesItem.OrderedListAttribute.InfoHelpers != nil {
				hintText19 := new(string)
				if !attributesItem.OrderedListAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.OrderedListAttribute.InfoHelpers.HintText.IsNull() {
					*hintText19 = attributesItem.OrderedListAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText19 = nil
				}
				hintTextKey19 := new(string)
				if !attributesItem.OrderedListAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.OrderedListAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey19 = attributesItem.OrderedListAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey19 = nil
				}
				hintCustomComponent19 := new(string)
				if !attributesItem.OrderedListAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.OrderedListAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent19 = attributesItem.OrderedListAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent19 = nil
				}
				hintTooltipPlacement19 := new(string)
				if !attributesItem.OrderedListAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.OrderedListAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement19 = attributesItem.OrderedListAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement19 = nil
				}
				infoHelpers19 = &shared.OrderedListAttributeInfoHelpers{
					HintText:             hintText19,
					HintTextKey:          hintTextKey19,
					HintCustomComponent:  hintCustomComponent19,
					HintTooltipPlacement: hintTooltipPlacement19,
				}
			}
			typeVar19 := new(shared.OrderedListAttributeType)
			if !attributesItem.OrderedListAttribute.Type.IsUnknown() && !attributesItem.OrderedListAttribute.Type.IsNull() {
				*typeVar19 = shared.OrderedListAttributeType(attributesItem.OrderedListAttribute.Type.ValueString())
			} else {
				typeVar19 = nil
			}
			orderedListAttribute := shared.OrderedListAttribute{
				ID:                       id21,
				Name:                     name40,
				Label:                    label20,
				Placeholder:              placeholder19,
				Hidden:                   hidden19,
				ShowInTable:              showInTable19,
				Sortable:                 sortable19,
				Required:                 required19,
				Readonly:                 readonly19,
				Deprecated:               deprecated19,
				DefaultValue:             defaultValue19,
				Group:                    group19,
				Order:                    order19,
				Layout:                   layout19,
				HideLabel:                hideLabel19,
				Icon:                     icon19,
				RenderCondition:          renderCondition19,
				Purpose:                  purpose19,
				Constraints:              constraints19,
				FeatureFlag:              featureFlag20,
				SettingsFlag:             settingsFlag20,
				ValueFormatter:           valueFormatter19,
				PreviewValueFormatter:    previewValueFormatter19,
				EntityBuilderDisableEdit: entityBuilderDisableEdit19,
				Protected:                protected19,
				InfoHelpers:              infoHelpers19,
				Type:                     typeVar19,
			}
			attributes = append(attributes, shared.Attribute{
				OrderedListAttribute: &orderedListAttribute,
			})
		}
		if attributesItem.FileAttribute != nil {
			id22 := new(string)
			if !attributesItem.FileAttribute.ID.IsUnknown() && !attributesItem.FileAttribute.ID.IsNull() {
				*id22 = attributesItem.FileAttribute.ID.ValueString()
			} else {
				id22 = nil
			}
			name42 := attributesItem.FileAttribute.Name.ValueString()
			label21 := attributesItem.FileAttribute.Label.ValueString()
			placeholder20 := new(string)
			if !attributesItem.FileAttribute.Placeholder.IsUnknown() && !attributesItem.FileAttribute.Placeholder.IsNull() {
				*placeholder20 = attributesItem.FileAttribute.Placeholder.ValueString()
			} else {
				placeholder20 = nil
			}
			hidden20 := new(bool)
			if !attributesItem.FileAttribute.Hidden.IsUnknown() && !attributesItem.FileAttribute.Hidden.IsNull() {
				*hidden20 = attributesItem.FileAttribute.Hidden.ValueBool()
			} else {
				hidden20 = nil
			}
			showInTable20 := new(bool)
			if !attributesItem.FileAttribute.ShowInTable.IsUnknown() && !attributesItem.FileAttribute.ShowInTable.IsNull() {
				*showInTable20 = attributesItem.FileAttribute.ShowInTable.ValueBool()
			} else {
				showInTable20 = nil
			}
			sortable20 := new(bool)
			if !attributesItem.FileAttribute.Sortable.IsUnknown() && !attributesItem.FileAttribute.Sortable.IsNull() {
				*sortable20 = attributesItem.FileAttribute.Sortable.ValueBool()
			} else {
				sortable20 = nil
			}
			required20 := new(bool)
			if !attributesItem.FileAttribute.Required.IsUnknown() && !attributesItem.FileAttribute.Required.IsNull() {
				*required20 = attributesItem.FileAttribute.Required.ValueBool()
			} else {
				required20 = nil
			}
			readonly20 := new(bool)
			if !attributesItem.FileAttribute.Readonly.IsUnknown() && !attributesItem.FileAttribute.Readonly.IsNull() {
				*readonly20 = attributesItem.FileAttribute.Readonly.ValueBool()
			} else {
				readonly20 = nil
			}
			deprecated20 := new(bool)
			if !attributesItem.FileAttribute.Deprecated.IsUnknown() && !attributesItem.FileAttribute.Deprecated.IsNull() {
				*deprecated20 = attributesItem.FileAttribute.Deprecated.ValueBool()
			} else {
				deprecated20 = nil
			}
			var defaultValue20 interface{}
			if !attributesItem.FileAttribute.DefaultValue.IsUnknown() && !attributesItem.FileAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem.FileAttribute.DefaultValue.ValueString()), &defaultValue20)
			}
			group20 := new(string)
			if !attributesItem.FileAttribute.Group.IsUnknown() && !attributesItem.FileAttribute.Group.IsNull() {
				*group20 = attributesItem.FileAttribute.Group.ValueString()
			} else {
				group20 = nil
			}
			order20 := new(int64)
			if !attributesItem.FileAttribute.Order.IsUnknown() && !attributesItem.FileAttribute.Order.IsNull() {
				*order20 = attributesItem.FileAttribute.Order.ValueInt64()
			} else {
				order20 = nil
			}
			layout20 := new(string)
			if !attributesItem.FileAttribute.Layout.IsUnknown() && !attributesItem.FileAttribute.Layout.IsNull() {
				*layout20 = attributesItem.FileAttribute.Layout.ValueString()
			} else {
				layout20 = nil
			}
			hideLabel20 := new(bool)
			if !attributesItem.FileAttribute.HideLabel.IsUnknown() && !attributesItem.FileAttribute.HideLabel.IsNull() {
				*hideLabel20 = attributesItem.FileAttribute.HideLabel.ValueBool()
			} else {
				hideLabel20 = nil
			}
			icon20 := new(string)
			if !attributesItem.FileAttribute.Icon.IsUnknown() && !attributesItem.FileAttribute.Icon.IsNull() {
				*icon20 = attributesItem.FileAttribute.Icon.ValueString()
			} else {
				icon20 = nil
			}
			renderCondition20 := new(string)
			if !attributesItem.FileAttribute.RenderCondition.IsUnknown() && !attributesItem.FileAttribute.RenderCondition.IsNull() {
				*renderCondition20 = attributesItem.FileAttribute.RenderCondition.ValueString()
			} else {
				renderCondition20 = nil
			}
			var purpose20 []string = []string{}
			for _, purposeItem20 := range attributesItem.FileAttribute.Purpose {
				purpose20 = append(purpose20, purposeItem20.ValueString())
			}
			var constraints20 *shared.FileAttributeConstraints
			if attributesItem.FileAttribute.Constraints != nil {
				constraints20 = &shared.FileAttributeConstraints{}
			}
			featureFlag21 := new(string)
			if !attributesItem.FileAttribute.FeatureFlag.IsUnknown() && !attributesItem.FileAttribute.FeatureFlag.IsNull() {
				*featureFlag21 = attributesItem.FileAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag21 = nil
			}
			var settingsFlag21 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem21 := range attributesItem.FileAttribute.SettingsFlag {
				name43 := new(string)
				if !settingsFlagItem21.Name.IsUnknown() && !settingsFlagItem21.Name.IsNull() {
					*name43 = settingsFlagItem21.Name.ValueString()
				} else {
					name43 = nil
				}
				enabled21 := new(bool)
				if !settingsFlagItem21.Enabled.IsUnknown() && !settingsFlagItem21.Enabled.IsNull() {
					*enabled21 = settingsFlagItem21.Enabled.ValueBool()
				} else {
					enabled21 = nil
				}
				settingsFlag21 = append(settingsFlag21, shared.SettingFlag{
					Name:    name43,
					Enabled: enabled21,
				})
			}
			valueFormatter20 := new(string)
			if !attributesItem.FileAttribute.ValueFormatter.IsUnknown() && !attributesItem.FileAttribute.ValueFormatter.IsNull() {
				*valueFormatter20 = attributesItem.FileAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter20 = nil
			}
			previewValueFormatter20 := new(string)
			if !attributesItem.FileAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.FileAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter20 = attributesItem.FileAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter20 = nil
			}
			entityBuilderDisableEdit20 := new(bool)
			if !attributesItem.FileAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.FileAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit20 = attributesItem.FileAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit20 = nil
			}
			protected20 := new(bool)
			if !attributesItem.FileAttribute.Protected.IsUnknown() && !attributesItem.FileAttribute.Protected.IsNull() {
				*protected20 = attributesItem.FileAttribute.Protected.ValueBool()
			} else {
				protected20 = nil
			}
			var infoHelpers20 *shared.FileAttributeInfoHelpers
			if attributesItem.FileAttribute.InfoHelpers != nil {
				hintText20 := new(string)
				if !attributesItem.FileAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.FileAttribute.InfoHelpers.HintText.IsNull() {
					*hintText20 = attributesItem.FileAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText20 = nil
				}
				hintTextKey20 := new(string)
				if !attributesItem.FileAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.FileAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey20 = attributesItem.FileAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey20 = nil
				}
				hintCustomComponent20 := new(string)
				if !attributesItem.FileAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.FileAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent20 = attributesItem.FileAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent20 = nil
				}
				hintTooltipPlacement20 := new(string)
				if !attributesItem.FileAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.FileAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement20 = attributesItem.FileAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement20 = nil
				}
				infoHelpers20 = &shared.FileAttributeInfoHelpers{
					HintText:             hintText20,
					HintTextKey:          hintTextKey20,
					HintCustomComponent:  hintCustomComponent20,
					HintTooltipPlacement: hintTooltipPlacement20,
				}
			}
			typeVar20 := shared.FileAttributeType(attributesItem.FileAttribute.Type.ValueString())
			multiple1 := new(bool)
			if !attributesItem.FileAttribute.Multiple.IsUnknown() && !attributesItem.FileAttribute.Multiple.IsNull() {
				*multiple1 = attributesItem.FileAttribute.Multiple.ValueBool()
			} else {
				multiple1 = nil
			}
			var allowedExtensions []string = []string{}
			for _, allowedExtensionsItem := range attributesItem.FileAttribute.AllowedExtensions {
				allowedExtensions = append(allowedExtensions, allowedExtensionsItem.ValueString())
			}
			displayImagesLandscaped := new(bool)
			if !attributesItem.FileAttribute.DisplayImagesLandscaped.IsUnknown() && !attributesItem.FileAttribute.DisplayImagesLandscaped.IsNull() {
				*displayImagesLandscaped = attributesItem.FileAttribute.DisplayImagesLandscaped.ValueBool()
			} else {
				displayImagesLandscaped = nil
			}
			enableDescription := new(bool)
			if !attributesItem.FileAttribute.EnableDescription.IsUnknown() && !attributesItem.FileAttribute.EnableDescription.IsNull() {
				*enableDescription = attributesItem.FileAttribute.EnableDescription.ValueBool()
			} else {
				enableDescription = nil
			}
			defaultAccessControl := new(shared.DefaultAccessControl)
			if !attributesItem.FileAttribute.DefaultAccessControl.IsUnknown() && !attributesItem.FileAttribute.DefaultAccessControl.IsNull() {
				*defaultAccessControl = shared.DefaultAccessControl(attributesItem.FileAttribute.DefaultAccessControl.ValueString())
			} else {
				defaultAccessControl = nil
			}
			fileAttribute := shared.FileAttribute{
				ID:                       id22,
				Name:                     name42,
				Label:                    label21,
				Placeholder:              placeholder20,
				Hidden:                   hidden20,
				ShowInTable:              showInTable20,
				Sortable:                 sortable20,
				Required:                 required20,
				Readonly:                 readonly20,
				Deprecated:               deprecated20,
				DefaultValue:             defaultValue20,
				Group:                    group20,
				Order:                    order20,
				Layout:                   layout20,
				HideLabel:                hideLabel20,
				Icon:                     icon20,
				RenderCondition:          renderCondition20,
				Purpose:                  purpose20,
				Constraints:              constraints20,
				FeatureFlag:              featureFlag21,
				SettingsFlag:             settingsFlag21,
				ValueFormatter:           valueFormatter20,
				PreviewValueFormatter:    previewValueFormatter20,
				EntityBuilderDisableEdit: entityBuilderDisableEdit20,
				Protected:                protected20,
				InfoHelpers:              infoHelpers20,
				Type:                     typeVar20,
				Multiple:                 multiple1,
				AllowedExtensions:        allowedExtensions,
				DisplayImagesLandscaped:  displayImagesLandscaped,
				EnableDescription:        enableDescription,
				DefaultAccessControl:     defaultAccessControl,
			}
			attributes = append(attributes, shared.Attribute{
				FileAttribute: &fileAttribute,
			})
		}
		if attributesItem.ComputedAttribute != nil {
			id23 := new(string)
			if !attributesItem.ComputedAttribute.ID.IsUnknown() && !attributesItem.ComputedAttribute.ID.IsNull() {
				*id23 = attributesItem.ComputedAttribute.ID.ValueString()
			} else {
				id23 = nil
			}
			name44 := attributesItem.ComputedAttribute.Name.ValueString()
			label22 := attributesItem.ComputedAttribute.Label.ValueString()
			placeholder21 := new(string)
			if !attributesItem.ComputedAttribute.Placeholder.IsUnknown() && !attributesItem.ComputedAttribute.Placeholder.IsNull() {
				*placeholder21 = attributesItem.ComputedAttribute.Placeholder.ValueString()
			} else {
				placeholder21 = nil
			}
			hidden21 := new(bool)
			if !attributesItem.ComputedAttribute.Hidden.IsUnknown() && !attributesItem.ComputedAttribute.Hidden.IsNull() {
				*hidden21 = attributesItem.ComputedAttribute.Hidden.ValueBool()
			} else {
				hidden21 = nil
			}
			showInTable21 := new(bool)
			if !attributesItem.ComputedAttribute.ShowInTable.IsUnknown() && !attributesItem.ComputedAttribute.ShowInTable.IsNull() {
				*showInTable21 = attributesItem.ComputedAttribute.ShowInTable.ValueBool()
			} else {
				showInTable21 = nil
			}
			sortable21 := new(bool)
			if !attributesItem.ComputedAttribute.Sortable.IsUnknown() && !attributesItem.ComputedAttribute.Sortable.IsNull() {
				*sortable21 = attributesItem.ComputedAttribute.Sortable.ValueBool()
			} else {
				sortable21 = nil
			}
			required21 := new(bool)
			if !attributesItem.ComputedAttribute.Required.IsUnknown() && !attributesItem.ComputedAttribute.Required.IsNull() {
				*required21 = attributesItem.ComputedAttribute.Required.ValueBool()
			} else {
				required21 = nil
			}
			readonly21 := new(bool)
			if !attributesItem.ComputedAttribute.Readonly.IsUnknown() && !attributesItem.ComputedAttribute.Readonly.IsNull() {
				*readonly21 = attributesItem.ComputedAttribute.Readonly.ValueBool()
			} else {
				readonly21 = nil
			}
			deprecated21 := new(bool)
			if !attributesItem.ComputedAttribute.Deprecated.IsUnknown() && !attributesItem.ComputedAttribute.Deprecated.IsNull() {
				*deprecated21 = attributesItem.ComputedAttribute.Deprecated.ValueBool()
			} else {
				deprecated21 = nil
			}
			var defaultValue21 interface{}
			if !attributesItem.ComputedAttribute.DefaultValue.IsUnknown() && !attributesItem.ComputedAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem.ComputedAttribute.DefaultValue.ValueString()), &defaultValue21)
			}
			group21 := new(string)
			if !attributesItem.ComputedAttribute.Group.IsUnknown() && !attributesItem.ComputedAttribute.Group.IsNull() {
				*group21 = attributesItem.ComputedAttribute.Group.ValueString()
			} else {
				group21 = nil
			}
			order21 := new(int64)
			if !attributesItem.ComputedAttribute.Order.IsUnknown() && !attributesItem.ComputedAttribute.Order.IsNull() {
				*order21 = attributesItem.ComputedAttribute.Order.ValueInt64()
			} else {
				order21 = nil
			}
			layout21 := new(string)
			if !attributesItem.ComputedAttribute.Layout.IsUnknown() && !attributesItem.ComputedAttribute.Layout.IsNull() {
				*layout21 = attributesItem.ComputedAttribute.Layout.ValueString()
			} else {
				layout21 = nil
			}
			hideLabel21 := new(bool)
			if !attributesItem.ComputedAttribute.HideLabel.IsUnknown() && !attributesItem.ComputedAttribute.HideLabel.IsNull() {
				*hideLabel21 = attributesItem.ComputedAttribute.HideLabel.ValueBool()
			} else {
				hideLabel21 = nil
			}
			icon21 := new(string)
			if !attributesItem.ComputedAttribute.Icon.IsUnknown() && !attributesItem.ComputedAttribute.Icon.IsNull() {
				*icon21 = attributesItem.ComputedAttribute.Icon.ValueString()
			} else {
				icon21 = nil
			}
			renderCondition21 := new(string)
			if !attributesItem.ComputedAttribute.RenderCondition.IsUnknown() && !attributesItem.ComputedAttribute.RenderCondition.IsNull() {
				*renderCondition21 = attributesItem.ComputedAttribute.RenderCondition.ValueString()
			} else {
				renderCondition21 = nil
			}
			var purpose21 []string = []string{}
			for _, purposeItem21 := range attributesItem.ComputedAttribute.Purpose {
				purpose21 = append(purpose21, purposeItem21.ValueString())
			}
			var constraints21 *shared.ComputedAttributeConstraints
			if attributesItem.ComputedAttribute.Constraints != nil {
				constraints21 = &shared.ComputedAttributeConstraints{}
			}
			featureFlag22 := new(string)
			if !attributesItem.ComputedAttribute.FeatureFlag.IsUnknown() && !attributesItem.ComputedAttribute.FeatureFlag.IsNull() {
				*featureFlag22 = attributesItem.ComputedAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag22 = nil
			}
			var settingsFlag22 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem22 := range attributesItem.ComputedAttribute.SettingsFlag {
				name45 := new(string)
				if !settingsFlagItem22.Name.IsUnknown() && !settingsFlagItem22.Name.IsNull() {
					*name45 = settingsFlagItem22.Name.ValueString()
				} else {
					name45 = nil
				}
				enabled22 := new(bool)
				if !settingsFlagItem22.Enabled.IsUnknown() && !settingsFlagItem22.Enabled.IsNull() {
					*enabled22 = settingsFlagItem22.Enabled.ValueBool()
				} else {
					enabled22 = nil
				}
				settingsFlag22 = append(settingsFlag22, shared.SettingFlag{
					Name:    name45,
					Enabled: enabled22,
				})
			}
			valueFormatter21 := new(string)
			if !attributesItem.ComputedAttribute.ValueFormatter.IsUnknown() && !attributesItem.ComputedAttribute.ValueFormatter.IsNull() {
				*valueFormatter21 = attributesItem.ComputedAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter21 = nil
			}
			previewValueFormatter21 := new(string)
			if !attributesItem.ComputedAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.ComputedAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter21 = attributesItem.ComputedAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter21 = nil
			}
			entityBuilderDisableEdit21 := new(bool)
			if !attributesItem.ComputedAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.ComputedAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit21 = attributesItem.ComputedAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit21 = nil
			}
			protected21 := new(bool)
			if !attributesItem.ComputedAttribute.Protected.IsUnknown() && !attributesItem.ComputedAttribute.Protected.IsNull() {
				*protected21 = attributesItem.ComputedAttribute.Protected.ValueBool()
			} else {
				protected21 = nil
			}
			var infoHelpers21 *shared.ComputedAttributeInfoHelpers
			if attributesItem.ComputedAttribute.InfoHelpers != nil {
				hintText21 := new(string)
				if !attributesItem.ComputedAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.ComputedAttribute.InfoHelpers.HintText.IsNull() {
					*hintText21 = attributesItem.ComputedAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText21 = nil
				}
				hintTextKey21 := new(string)
				if !attributesItem.ComputedAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.ComputedAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey21 = attributesItem.ComputedAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey21 = nil
				}
				hintCustomComponent21 := new(string)
				if !attributesItem.ComputedAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.ComputedAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent21 = attributesItem.ComputedAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent21 = nil
				}
				hintTooltipPlacement21 := new(string)
				if !attributesItem.ComputedAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.ComputedAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement21 = attributesItem.ComputedAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement21 = nil
				}
				infoHelpers21 = &shared.ComputedAttributeInfoHelpers{
					HintText:             hintText21,
					HintTextKey:          hintTextKey21,
					HintCustomComponent:  hintCustomComponent21,
					HintTooltipPlacement: hintTooltipPlacement21,
				}
			}
			typeVar21 := new(shared.ComputedAttributeType)
			if !attributesItem.ComputedAttribute.Type.IsUnknown() && !attributesItem.ComputedAttribute.Type.IsNull() {
				*typeVar21 = shared.ComputedAttributeType(attributesItem.ComputedAttribute.Type.ValueString())
			} else {
				typeVar21 = nil
			}
			computedAttribute := shared.ComputedAttribute{
				ID:                       id23,
				Name:                     name44,
				Label:                    label22,
				Placeholder:              placeholder21,
				Hidden:                   hidden21,
				ShowInTable:              showInTable21,
				Sortable:                 sortable21,
				Required:                 required21,
				Readonly:                 readonly21,
				Deprecated:               deprecated21,
				DefaultValue:             defaultValue21,
				Group:                    group21,
				Order:                    order21,
				Layout:                   layout21,
				HideLabel:                hideLabel21,
				Icon:                     icon21,
				RenderCondition:          renderCondition21,
				Purpose:                  purpose21,
				Constraints:              constraints21,
				FeatureFlag:              featureFlag22,
				SettingsFlag:             settingsFlag22,
				ValueFormatter:           valueFormatter21,
				PreviewValueFormatter:    previewValueFormatter21,
				EntityBuilderDisableEdit: entityBuilderDisableEdit21,
				Protected:                protected21,
				InfoHelpers:              infoHelpers21,
				Type:                     typeVar21,
			}
			attributes = append(attributes, shared.Attribute{
				ComputedAttribute: &computedAttribute,
			})
		}
		if attributesItem.PartnerStatusAttribute != nil {
			id24 := new(string)
			if !attributesItem.PartnerStatusAttribute.ID.IsUnknown() && !attributesItem.PartnerStatusAttribute.ID.IsNull() {
				*id24 = attributesItem.PartnerStatusAttribute.ID.ValueString()
			} else {
				id24 = nil
			}
			name46 := attributesItem.PartnerStatusAttribute.Name.ValueString()
			label23 := attributesItem.PartnerStatusAttribute.Label.ValueString()
			placeholder22 := new(string)
			if !attributesItem.PartnerStatusAttribute.Placeholder.IsUnknown() && !attributesItem.PartnerStatusAttribute.Placeholder.IsNull() {
				*placeholder22 = attributesItem.PartnerStatusAttribute.Placeholder.ValueString()
			} else {
				placeholder22 = nil
			}
			hidden22 := new(bool)
			if !attributesItem.PartnerStatusAttribute.Hidden.IsUnknown() && !attributesItem.PartnerStatusAttribute.Hidden.IsNull() {
				*hidden22 = attributesItem.PartnerStatusAttribute.Hidden.ValueBool()
			} else {
				hidden22 = nil
			}
			showInTable22 := new(bool)
			if !attributesItem.PartnerStatusAttribute.ShowInTable.IsUnknown() && !attributesItem.PartnerStatusAttribute.ShowInTable.IsNull() {
				*showInTable22 = attributesItem.PartnerStatusAttribute.ShowInTable.ValueBool()
			} else {
				showInTable22 = nil
			}
			sortable22 := new(bool)
			if !attributesItem.PartnerStatusAttribute.Sortable.IsUnknown() && !attributesItem.PartnerStatusAttribute.Sortable.IsNull() {
				*sortable22 = attributesItem.PartnerStatusAttribute.Sortable.ValueBool()
			} else {
				sortable22 = nil
			}
			required22 := new(bool)
			if !attributesItem.PartnerStatusAttribute.Required.IsUnknown() && !attributesItem.PartnerStatusAttribute.Required.IsNull() {
				*required22 = attributesItem.PartnerStatusAttribute.Required.ValueBool()
			} else {
				required22 = nil
			}
			readonly22 := new(bool)
			if !attributesItem.PartnerStatusAttribute.Readonly.IsUnknown() && !attributesItem.PartnerStatusAttribute.Readonly.IsNull() {
				*readonly22 = attributesItem.PartnerStatusAttribute.Readonly.ValueBool()
			} else {
				readonly22 = nil
			}
			deprecated22 := new(bool)
			if !attributesItem.PartnerStatusAttribute.Deprecated.IsUnknown() && !attributesItem.PartnerStatusAttribute.Deprecated.IsNull() {
				*deprecated22 = attributesItem.PartnerStatusAttribute.Deprecated.ValueBool()
			} else {
				deprecated22 = nil
			}
			var defaultValue22 interface{}
			if !attributesItem.PartnerStatusAttribute.DefaultValue.IsUnknown() && !attributesItem.PartnerStatusAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem.PartnerStatusAttribute.DefaultValue.ValueString()), &defaultValue22)
			}
			group22 := new(string)
			if !attributesItem.PartnerStatusAttribute.Group.IsUnknown() && !attributesItem.PartnerStatusAttribute.Group.IsNull() {
				*group22 = attributesItem.PartnerStatusAttribute.Group.ValueString()
			} else {
				group22 = nil
			}
			order22 := new(int64)
			if !attributesItem.PartnerStatusAttribute.Order.IsUnknown() && !attributesItem.PartnerStatusAttribute.Order.IsNull() {
				*order22 = attributesItem.PartnerStatusAttribute.Order.ValueInt64()
			} else {
				order22 = nil
			}
			layout22 := new(string)
			if !attributesItem.PartnerStatusAttribute.Layout.IsUnknown() && !attributesItem.PartnerStatusAttribute.Layout.IsNull() {
				*layout22 = attributesItem.PartnerStatusAttribute.Layout.ValueString()
			} else {
				layout22 = nil
			}
			hideLabel22 := new(bool)
			if !attributesItem.PartnerStatusAttribute.HideLabel.IsUnknown() && !attributesItem.PartnerStatusAttribute.HideLabel.IsNull() {
				*hideLabel22 = attributesItem.PartnerStatusAttribute.HideLabel.ValueBool()
			} else {
				hideLabel22 = nil
			}
			icon22 := new(string)
			if !attributesItem.PartnerStatusAttribute.Icon.IsUnknown() && !attributesItem.PartnerStatusAttribute.Icon.IsNull() {
				*icon22 = attributesItem.PartnerStatusAttribute.Icon.ValueString()
			} else {
				icon22 = nil
			}
			renderCondition22 := new(string)
			if !attributesItem.PartnerStatusAttribute.RenderCondition.IsUnknown() && !attributesItem.PartnerStatusAttribute.RenderCondition.IsNull() {
				*renderCondition22 = attributesItem.PartnerStatusAttribute.RenderCondition.ValueString()
			} else {
				renderCondition22 = nil
			}
			var purpose22 []string = []string{}
			for _, purposeItem22 := range attributesItem.PartnerStatusAttribute.Purpose {
				purpose22 = append(purpose22, purposeItem22.ValueString())
			}
			var constraints22 *shared.PartnerStatusAttributeConstraints
			if attributesItem.PartnerStatusAttribute.Constraints != nil {
				constraints22 = &shared.PartnerStatusAttributeConstraints{}
			}
			featureFlag23 := new(string)
			if !attributesItem.PartnerStatusAttribute.FeatureFlag.IsUnknown() && !attributesItem.PartnerStatusAttribute.FeatureFlag.IsNull() {
				*featureFlag23 = attributesItem.PartnerStatusAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag23 = nil
			}
			var settingsFlag23 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem23 := range attributesItem.PartnerStatusAttribute.SettingsFlag {
				name47 := new(string)
				if !settingsFlagItem23.Name.IsUnknown() && !settingsFlagItem23.Name.IsNull() {
					*name47 = settingsFlagItem23.Name.ValueString()
				} else {
					name47 = nil
				}
				enabled23 := new(bool)
				if !settingsFlagItem23.Enabled.IsUnknown() && !settingsFlagItem23.Enabled.IsNull() {
					*enabled23 = settingsFlagItem23.Enabled.ValueBool()
				} else {
					enabled23 = nil
				}
				settingsFlag23 = append(settingsFlag23, shared.SettingFlag{
					Name:    name47,
					Enabled: enabled23,
				})
			}
			valueFormatter22 := new(string)
			if !attributesItem.PartnerStatusAttribute.ValueFormatter.IsUnknown() && !attributesItem.PartnerStatusAttribute.ValueFormatter.IsNull() {
				*valueFormatter22 = attributesItem.PartnerStatusAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter22 = nil
			}
			previewValueFormatter22 := new(string)
			if !attributesItem.PartnerStatusAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.PartnerStatusAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter22 = attributesItem.PartnerStatusAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter22 = nil
			}
			entityBuilderDisableEdit22 := new(bool)
			if !attributesItem.PartnerStatusAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.PartnerStatusAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit22 = attributesItem.PartnerStatusAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit22 = nil
			}
			protected22 := new(bool)
			if !attributesItem.PartnerStatusAttribute.Protected.IsUnknown() && !attributesItem.PartnerStatusAttribute.Protected.IsNull() {
				*protected22 = attributesItem.PartnerStatusAttribute.Protected.ValueBool()
			} else {
				protected22 = nil
			}
			var infoHelpers22 *shared.PartnerStatusAttributeInfoHelpers
			if attributesItem.PartnerStatusAttribute.InfoHelpers != nil {
				hintText22 := new(string)
				if !attributesItem.PartnerStatusAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.PartnerStatusAttribute.InfoHelpers.HintText.IsNull() {
					*hintText22 = attributesItem.PartnerStatusAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText22 = nil
				}
				hintTextKey22 := new(string)
				if !attributesItem.PartnerStatusAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.PartnerStatusAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey22 = attributesItem.PartnerStatusAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey22 = nil
				}
				hintCustomComponent22 := new(string)
				if !attributesItem.PartnerStatusAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.PartnerStatusAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent22 = attributesItem.PartnerStatusAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent22 = nil
				}
				hintTooltipPlacement22 := new(string)
				if !attributesItem.PartnerStatusAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.PartnerStatusAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement22 = attributesItem.PartnerStatusAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement22 = nil
				}
				infoHelpers22 = &shared.PartnerStatusAttributeInfoHelpers{
					HintText:             hintText22,
					HintTextKey:          hintTextKey22,
					HintCustomComponent:  hintCustomComponent22,
					HintTooltipPlacement: hintTooltipPlacement22,
				}
			}
			typeVar22 := new(shared.PartnerStatusAttributeType)
			if !attributesItem.PartnerStatusAttribute.Type.IsUnknown() && !attributesItem.PartnerStatusAttribute.Type.IsNull() {
				*typeVar22 = shared.PartnerStatusAttributeType(attributesItem.PartnerStatusAttribute.Type.ValueString())
			} else {
				typeVar22 = nil
			}
			partnerStatusAttribute := shared.PartnerStatusAttribute{
				ID:                       id24,
				Name:                     name46,
				Label:                    label23,
				Placeholder:              placeholder22,
				Hidden:                   hidden22,
				ShowInTable:              showInTable22,
				Sortable:                 sortable22,
				Required:                 required22,
				Readonly:                 readonly22,
				Deprecated:               deprecated22,
				DefaultValue:             defaultValue22,
				Group:                    group22,
				Order:                    order22,
				Layout:                   layout22,
				HideLabel:                hideLabel22,
				Icon:                     icon22,
				RenderCondition:          renderCondition22,
				Purpose:                  purpose22,
				Constraints:              constraints22,
				FeatureFlag:              featureFlag23,
				SettingsFlag:             settingsFlag23,
				ValueFormatter:           valueFormatter22,
				PreviewValueFormatter:    previewValueFormatter22,
				EntityBuilderDisableEdit: entityBuilderDisableEdit22,
				Protected:                protected22,
				InfoHelpers:              infoHelpers22,
				Type:                     typeVar22,
			}
			attributes = append(attributes, shared.Attribute{
				PartnerStatusAttribute: &partnerStatusAttribute,
			})
		}
		if attributesItem.InvitationEmailAttribute != nil {
			id25 := new(string)
			if !attributesItem.InvitationEmailAttribute.ID.IsUnknown() && !attributesItem.InvitationEmailAttribute.ID.IsNull() {
				*id25 = attributesItem.InvitationEmailAttribute.ID.ValueString()
			} else {
				id25 = nil
			}
			name48 := attributesItem.InvitationEmailAttribute.Name.ValueString()
			label24 := attributesItem.InvitationEmailAttribute.Label.ValueString()
			placeholder23 := new(string)
			if !attributesItem.InvitationEmailAttribute.Placeholder.IsUnknown() && !attributesItem.InvitationEmailAttribute.Placeholder.IsNull() {
				*placeholder23 = attributesItem.InvitationEmailAttribute.Placeholder.ValueString()
			} else {
				placeholder23 = nil
			}
			hidden23 := new(bool)
			if !attributesItem.InvitationEmailAttribute.Hidden.IsUnknown() && !attributesItem.InvitationEmailAttribute.Hidden.IsNull() {
				*hidden23 = attributesItem.InvitationEmailAttribute.Hidden.ValueBool()
			} else {
				hidden23 = nil
			}
			showInTable23 := new(bool)
			if !attributesItem.InvitationEmailAttribute.ShowInTable.IsUnknown() && !attributesItem.InvitationEmailAttribute.ShowInTable.IsNull() {
				*showInTable23 = attributesItem.InvitationEmailAttribute.ShowInTable.ValueBool()
			} else {
				showInTable23 = nil
			}
			sortable23 := new(bool)
			if !attributesItem.InvitationEmailAttribute.Sortable.IsUnknown() && !attributesItem.InvitationEmailAttribute.Sortable.IsNull() {
				*sortable23 = attributesItem.InvitationEmailAttribute.Sortable.ValueBool()
			} else {
				sortable23 = nil
			}
			required23 := new(bool)
			if !attributesItem.InvitationEmailAttribute.Required.IsUnknown() && !attributesItem.InvitationEmailAttribute.Required.IsNull() {
				*required23 = attributesItem.InvitationEmailAttribute.Required.ValueBool()
			} else {
				required23 = nil
			}
			readonly23 := new(bool)
			if !attributesItem.InvitationEmailAttribute.Readonly.IsUnknown() && !attributesItem.InvitationEmailAttribute.Readonly.IsNull() {
				*readonly23 = attributesItem.InvitationEmailAttribute.Readonly.ValueBool()
			} else {
				readonly23 = nil
			}
			deprecated23 := new(bool)
			if !attributesItem.InvitationEmailAttribute.Deprecated.IsUnknown() && !attributesItem.InvitationEmailAttribute.Deprecated.IsNull() {
				*deprecated23 = attributesItem.InvitationEmailAttribute.Deprecated.ValueBool()
			} else {
				deprecated23 = nil
			}
			var defaultValue23 interface{}
			if !attributesItem.InvitationEmailAttribute.DefaultValue.IsUnknown() && !attributesItem.InvitationEmailAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem.InvitationEmailAttribute.DefaultValue.ValueString()), &defaultValue23)
			}
			group23 := new(string)
			if !attributesItem.InvitationEmailAttribute.Group.IsUnknown() && !attributesItem.InvitationEmailAttribute.Group.IsNull() {
				*group23 = attributesItem.InvitationEmailAttribute.Group.ValueString()
			} else {
				group23 = nil
			}
			order23 := new(int64)
			if !attributesItem.InvitationEmailAttribute.Order.IsUnknown() && !attributesItem.InvitationEmailAttribute.Order.IsNull() {
				*order23 = attributesItem.InvitationEmailAttribute.Order.ValueInt64()
			} else {
				order23 = nil
			}
			layout23 := new(string)
			if !attributesItem.InvitationEmailAttribute.Layout.IsUnknown() && !attributesItem.InvitationEmailAttribute.Layout.IsNull() {
				*layout23 = attributesItem.InvitationEmailAttribute.Layout.ValueString()
			} else {
				layout23 = nil
			}
			hideLabel23 := new(bool)
			if !attributesItem.InvitationEmailAttribute.HideLabel.IsUnknown() && !attributesItem.InvitationEmailAttribute.HideLabel.IsNull() {
				*hideLabel23 = attributesItem.InvitationEmailAttribute.HideLabel.ValueBool()
			} else {
				hideLabel23 = nil
			}
			icon23 := new(string)
			if !attributesItem.InvitationEmailAttribute.Icon.IsUnknown() && !attributesItem.InvitationEmailAttribute.Icon.IsNull() {
				*icon23 = attributesItem.InvitationEmailAttribute.Icon.ValueString()
			} else {
				icon23 = nil
			}
			renderCondition23 := new(string)
			if !attributesItem.InvitationEmailAttribute.RenderCondition.IsUnknown() && !attributesItem.InvitationEmailAttribute.RenderCondition.IsNull() {
				*renderCondition23 = attributesItem.InvitationEmailAttribute.RenderCondition.ValueString()
			} else {
				renderCondition23 = nil
			}
			var purpose23 []string = []string{}
			for _, purposeItem23 := range attributesItem.InvitationEmailAttribute.Purpose {
				purpose23 = append(purpose23, purposeItem23.ValueString())
			}
			var constraints23 *shared.InvitationEmailAttributeConstraints
			if attributesItem.InvitationEmailAttribute.Constraints != nil {
				constraints23 = &shared.InvitationEmailAttributeConstraints{}
			}
			featureFlag24 := new(string)
			if !attributesItem.InvitationEmailAttribute.FeatureFlag.IsUnknown() && !attributesItem.InvitationEmailAttribute.FeatureFlag.IsNull() {
				*featureFlag24 = attributesItem.InvitationEmailAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag24 = nil
			}
			var settingsFlag24 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem24 := range attributesItem.InvitationEmailAttribute.SettingsFlag {
				name49 := new(string)
				if !settingsFlagItem24.Name.IsUnknown() && !settingsFlagItem24.Name.IsNull() {
					*name49 = settingsFlagItem24.Name.ValueString()
				} else {
					name49 = nil
				}
				enabled24 := new(bool)
				if !settingsFlagItem24.Enabled.IsUnknown() && !settingsFlagItem24.Enabled.IsNull() {
					*enabled24 = settingsFlagItem24.Enabled.ValueBool()
				} else {
					enabled24 = nil
				}
				settingsFlag24 = append(settingsFlag24, shared.SettingFlag{
					Name:    name49,
					Enabled: enabled24,
				})
			}
			valueFormatter23 := new(string)
			if !attributesItem.InvitationEmailAttribute.ValueFormatter.IsUnknown() && !attributesItem.InvitationEmailAttribute.ValueFormatter.IsNull() {
				*valueFormatter23 = attributesItem.InvitationEmailAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter23 = nil
			}
			previewValueFormatter23 := new(string)
			if !attributesItem.InvitationEmailAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.InvitationEmailAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter23 = attributesItem.InvitationEmailAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter23 = nil
			}
			entityBuilderDisableEdit23 := new(bool)
			if !attributesItem.InvitationEmailAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.InvitationEmailAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit23 = attributesItem.InvitationEmailAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit23 = nil
			}
			protected23 := new(bool)
			if !attributesItem.InvitationEmailAttribute.Protected.IsUnknown() && !attributesItem.InvitationEmailAttribute.Protected.IsNull() {
				*protected23 = attributesItem.InvitationEmailAttribute.Protected.ValueBool()
			} else {
				protected23 = nil
			}
			var infoHelpers23 *shared.InvitationEmailAttributeInfoHelpers
			if attributesItem.InvitationEmailAttribute.InfoHelpers != nil {
				hintText23 := new(string)
				if !attributesItem.InvitationEmailAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.InvitationEmailAttribute.InfoHelpers.HintText.IsNull() {
					*hintText23 = attributesItem.InvitationEmailAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText23 = nil
				}
				hintTextKey23 := new(string)
				if !attributesItem.InvitationEmailAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.InvitationEmailAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey23 = attributesItem.InvitationEmailAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey23 = nil
				}
				hintCustomComponent23 := new(string)
				if !attributesItem.InvitationEmailAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.InvitationEmailAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent23 = attributesItem.InvitationEmailAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent23 = nil
				}
				hintTooltipPlacement23 := new(string)
				if !attributesItem.InvitationEmailAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.InvitationEmailAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement23 = attributesItem.InvitationEmailAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement23 = nil
				}
				infoHelpers23 = &shared.InvitationEmailAttributeInfoHelpers{
					HintText:             hintText23,
					HintTextKey:          hintTextKey23,
					HintCustomComponent:  hintCustomComponent23,
					HintTooltipPlacement: hintTooltipPlacement23,
				}
			}
			typeVar23 := new(shared.InvitationEmailAttributeType)
			if !attributesItem.InvitationEmailAttribute.Type.IsUnknown() && !attributesItem.InvitationEmailAttribute.Type.IsNull() {
				*typeVar23 = shared.InvitationEmailAttributeType(attributesItem.InvitationEmailAttribute.Type.ValueString())
			} else {
				typeVar23 = nil
			}
			invitationEmailAttribute := shared.InvitationEmailAttribute{
				ID:                       id25,
				Name:                     name48,
				Label:                    label24,
				Placeholder:              placeholder23,
				Hidden:                   hidden23,
				ShowInTable:              showInTable23,
				Sortable:                 sortable23,
				Required:                 required23,
				Readonly:                 readonly23,
				Deprecated:               deprecated23,
				DefaultValue:             defaultValue23,
				Group:                    group23,
				Order:                    order23,
				Layout:                   layout23,
				HideLabel:                hideLabel23,
				Icon:                     icon23,
				RenderCondition:          renderCondition23,
				Purpose:                  purpose23,
				Constraints:              constraints23,
				FeatureFlag:              featureFlag24,
				SettingsFlag:             settingsFlag24,
				ValueFormatter:           valueFormatter23,
				PreviewValueFormatter:    previewValueFormatter23,
				EntityBuilderDisableEdit: entityBuilderDisableEdit23,
				Protected:                protected23,
				InfoHelpers:              infoHelpers23,
				Type:                     typeVar23,
			}
			attributes = append(attributes, shared.Attribute{
				InvitationEmailAttribute: &invitationEmailAttribute,
			})
		}
		if attributesItem.AutomationAttribute != nil {
			id26 := new(string)
			if !attributesItem.AutomationAttribute.ID.IsUnknown() && !attributesItem.AutomationAttribute.ID.IsNull() {
				*id26 = attributesItem.AutomationAttribute.ID.ValueString()
			} else {
				id26 = nil
			}
			name50 := attributesItem.AutomationAttribute.Name.ValueString()
			label25 := attributesItem.AutomationAttribute.Label.ValueString()
			placeholder24 := new(string)
			if !attributesItem.AutomationAttribute.Placeholder.IsUnknown() && !attributesItem.AutomationAttribute.Placeholder.IsNull() {
				*placeholder24 = attributesItem.AutomationAttribute.Placeholder.ValueString()
			} else {
				placeholder24 = nil
			}
			hidden24 := new(bool)
			if !attributesItem.AutomationAttribute.Hidden.IsUnknown() && !attributesItem.AutomationAttribute.Hidden.IsNull() {
				*hidden24 = attributesItem.AutomationAttribute.Hidden.ValueBool()
			} else {
				hidden24 = nil
			}
			showInTable24 := new(bool)
			if !attributesItem.AutomationAttribute.ShowInTable.IsUnknown() && !attributesItem.AutomationAttribute.ShowInTable.IsNull() {
				*showInTable24 = attributesItem.AutomationAttribute.ShowInTable.ValueBool()
			} else {
				showInTable24 = nil
			}
			sortable24 := new(bool)
			if !attributesItem.AutomationAttribute.Sortable.IsUnknown() && !attributesItem.AutomationAttribute.Sortable.IsNull() {
				*sortable24 = attributesItem.AutomationAttribute.Sortable.ValueBool()
			} else {
				sortable24 = nil
			}
			required24 := new(bool)
			if !attributesItem.AutomationAttribute.Required.IsUnknown() && !attributesItem.AutomationAttribute.Required.IsNull() {
				*required24 = attributesItem.AutomationAttribute.Required.ValueBool()
			} else {
				required24 = nil
			}
			readonly24 := new(bool)
			if !attributesItem.AutomationAttribute.Readonly.IsUnknown() && !attributesItem.AutomationAttribute.Readonly.IsNull() {
				*readonly24 = attributesItem.AutomationAttribute.Readonly.ValueBool()
			} else {
				readonly24 = nil
			}
			deprecated24 := new(bool)
			if !attributesItem.AutomationAttribute.Deprecated.IsUnknown() && !attributesItem.AutomationAttribute.Deprecated.IsNull() {
				*deprecated24 = attributesItem.AutomationAttribute.Deprecated.ValueBool()
			} else {
				deprecated24 = nil
			}
			var defaultValue24 interface{}
			if !attributesItem.AutomationAttribute.DefaultValue.IsUnknown() && !attributesItem.AutomationAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem.AutomationAttribute.DefaultValue.ValueString()), &defaultValue24)
			}
			group24 := new(string)
			if !attributesItem.AutomationAttribute.Group.IsUnknown() && !attributesItem.AutomationAttribute.Group.IsNull() {
				*group24 = attributesItem.AutomationAttribute.Group.ValueString()
			} else {
				group24 = nil
			}
			order24 := new(int64)
			if !attributesItem.AutomationAttribute.Order.IsUnknown() && !attributesItem.AutomationAttribute.Order.IsNull() {
				*order24 = attributesItem.AutomationAttribute.Order.ValueInt64()
			} else {
				order24 = nil
			}
			layout24 := new(string)
			if !attributesItem.AutomationAttribute.Layout.IsUnknown() && !attributesItem.AutomationAttribute.Layout.IsNull() {
				*layout24 = attributesItem.AutomationAttribute.Layout.ValueString()
			} else {
				layout24 = nil
			}
			hideLabel24 := new(bool)
			if !attributesItem.AutomationAttribute.HideLabel.IsUnknown() && !attributesItem.AutomationAttribute.HideLabel.IsNull() {
				*hideLabel24 = attributesItem.AutomationAttribute.HideLabel.ValueBool()
			} else {
				hideLabel24 = nil
			}
			icon24 := new(string)
			if !attributesItem.AutomationAttribute.Icon.IsUnknown() && !attributesItem.AutomationAttribute.Icon.IsNull() {
				*icon24 = attributesItem.AutomationAttribute.Icon.ValueString()
			} else {
				icon24 = nil
			}
			renderCondition24 := new(string)
			if !attributesItem.AutomationAttribute.RenderCondition.IsUnknown() && !attributesItem.AutomationAttribute.RenderCondition.IsNull() {
				*renderCondition24 = attributesItem.AutomationAttribute.RenderCondition.ValueString()
			} else {
				renderCondition24 = nil
			}
			var purpose24 []string = []string{}
			for _, purposeItem24 := range attributesItem.AutomationAttribute.Purpose {
				purpose24 = append(purpose24, purposeItem24.ValueString())
			}
			var constraints24 *shared.AutomationAttributeConstraints
			if attributesItem.AutomationAttribute.Constraints != nil {
				constraints24 = &shared.AutomationAttributeConstraints{}
			}
			featureFlag25 := new(string)
			if !attributesItem.AutomationAttribute.FeatureFlag.IsUnknown() && !attributesItem.AutomationAttribute.FeatureFlag.IsNull() {
				*featureFlag25 = attributesItem.AutomationAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag25 = nil
			}
			var settingsFlag25 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem25 := range attributesItem.AutomationAttribute.SettingsFlag {
				name51 := new(string)
				if !settingsFlagItem25.Name.IsUnknown() && !settingsFlagItem25.Name.IsNull() {
					*name51 = settingsFlagItem25.Name.ValueString()
				} else {
					name51 = nil
				}
				enabled25 := new(bool)
				if !settingsFlagItem25.Enabled.IsUnknown() && !settingsFlagItem25.Enabled.IsNull() {
					*enabled25 = settingsFlagItem25.Enabled.ValueBool()
				} else {
					enabled25 = nil
				}
				settingsFlag25 = append(settingsFlag25, shared.SettingFlag{
					Name:    name51,
					Enabled: enabled25,
				})
			}
			valueFormatter24 := new(string)
			if !attributesItem.AutomationAttribute.ValueFormatter.IsUnknown() && !attributesItem.AutomationAttribute.ValueFormatter.IsNull() {
				*valueFormatter24 = attributesItem.AutomationAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter24 = nil
			}
			previewValueFormatter24 := new(string)
			if !attributesItem.AutomationAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.AutomationAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter24 = attributesItem.AutomationAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter24 = nil
			}
			entityBuilderDisableEdit24 := new(bool)
			if !attributesItem.AutomationAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.AutomationAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit24 = attributesItem.AutomationAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit24 = nil
			}
			protected24 := new(bool)
			if !attributesItem.AutomationAttribute.Protected.IsUnknown() && !attributesItem.AutomationAttribute.Protected.IsNull() {
				*protected24 = attributesItem.AutomationAttribute.Protected.ValueBool()
			} else {
				protected24 = nil
			}
			var infoHelpers24 *shared.AutomationAttributeInfoHelpers
			if attributesItem.AutomationAttribute.InfoHelpers != nil {
				hintText24 := new(string)
				if !attributesItem.AutomationAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.AutomationAttribute.InfoHelpers.HintText.IsNull() {
					*hintText24 = attributesItem.AutomationAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText24 = nil
				}
				hintTextKey24 := new(string)
				if !attributesItem.AutomationAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.AutomationAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey24 = attributesItem.AutomationAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey24 = nil
				}
				hintCustomComponent24 := new(string)
				if !attributesItem.AutomationAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.AutomationAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent24 = attributesItem.AutomationAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent24 = nil
				}
				hintTooltipPlacement24 := new(string)
				if !attributesItem.AutomationAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.AutomationAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement24 = attributesItem.AutomationAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement24 = nil
				}
				infoHelpers24 = &shared.AutomationAttributeInfoHelpers{
					HintText:             hintText24,
					HintTextKey:          hintTextKey24,
					HintCustomComponent:  hintCustomComponent24,
					HintTooltipPlacement: hintTooltipPlacement24,
				}
			}
			typeVar24 := new(shared.AutomationAttributeType)
			if !attributesItem.AutomationAttribute.Type.IsUnknown() && !attributesItem.AutomationAttribute.Type.IsNull() {
				*typeVar24 = shared.AutomationAttributeType(attributesItem.AutomationAttribute.Type.ValueString())
			} else {
				typeVar24 = nil
			}
			automationAttribute := shared.AutomationAttribute{
				ID:                       id26,
				Name:                     name50,
				Label:                    label25,
				Placeholder:              placeholder24,
				Hidden:                   hidden24,
				ShowInTable:              showInTable24,
				Sortable:                 sortable24,
				Required:                 required24,
				Readonly:                 readonly24,
				Deprecated:               deprecated24,
				DefaultValue:             defaultValue24,
				Group:                    group24,
				Order:                    order24,
				Layout:                   layout24,
				HideLabel:                hideLabel24,
				Icon:                     icon24,
				RenderCondition:          renderCondition24,
				Purpose:                  purpose24,
				Constraints:              constraints24,
				FeatureFlag:              featureFlag25,
				SettingsFlag:             settingsFlag25,
				ValueFormatter:           valueFormatter24,
				PreviewValueFormatter:    previewValueFormatter24,
				EntityBuilderDisableEdit: entityBuilderDisableEdit24,
				Protected:                protected24,
				InfoHelpers:              infoHelpers24,
				Type:                     typeVar24,
			}
			attributes = append(attributes, shared.Attribute{
				AutomationAttribute: &automationAttribute,
			})
		}
		if attributesItem.InternalUserAttribute != nil {
			id27 := new(string)
			if !attributesItem.InternalUserAttribute.ID.IsUnknown() && !attributesItem.InternalUserAttribute.ID.IsNull() {
				*id27 = attributesItem.InternalUserAttribute.ID.ValueString()
			} else {
				id27 = nil
			}
			name52 := attributesItem.InternalUserAttribute.Name.ValueString()
			label26 := attributesItem.InternalUserAttribute.Label.ValueString()
			placeholder25 := new(string)
			if !attributesItem.InternalUserAttribute.Placeholder.IsUnknown() && !attributesItem.InternalUserAttribute.Placeholder.IsNull() {
				*placeholder25 = attributesItem.InternalUserAttribute.Placeholder.ValueString()
			} else {
				placeholder25 = nil
			}
			hidden25 := new(bool)
			if !attributesItem.InternalUserAttribute.Hidden.IsUnknown() && !attributesItem.InternalUserAttribute.Hidden.IsNull() {
				*hidden25 = attributesItem.InternalUserAttribute.Hidden.ValueBool()
			} else {
				hidden25 = nil
			}
			showInTable25 := new(bool)
			if !attributesItem.InternalUserAttribute.ShowInTable.IsUnknown() && !attributesItem.InternalUserAttribute.ShowInTable.IsNull() {
				*showInTable25 = attributesItem.InternalUserAttribute.ShowInTable.ValueBool()
			} else {
				showInTable25 = nil
			}
			sortable25 := new(bool)
			if !attributesItem.InternalUserAttribute.Sortable.IsUnknown() && !attributesItem.InternalUserAttribute.Sortable.IsNull() {
				*sortable25 = attributesItem.InternalUserAttribute.Sortable.ValueBool()
			} else {
				sortable25 = nil
			}
			required25 := new(bool)
			if !attributesItem.InternalUserAttribute.Required.IsUnknown() && !attributesItem.InternalUserAttribute.Required.IsNull() {
				*required25 = attributesItem.InternalUserAttribute.Required.ValueBool()
			} else {
				required25 = nil
			}
			readonly25 := new(bool)
			if !attributesItem.InternalUserAttribute.Readonly.IsUnknown() && !attributesItem.InternalUserAttribute.Readonly.IsNull() {
				*readonly25 = attributesItem.InternalUserAttribute.Readonly.ValueBool()
			} else {
				readonly25 = nil
			}
			deprecated25 := new(bool)
			if !attributesItem.InternalUserAttribute.Deprecated.IsUnknown() && !attributesItem.InternalUserAttribute.Deprecated.IsNull() {
				*deprecated25 = attributesItem.InternalUserAttribute.Deprecated.ValueBool()
			} else {
				deprecated25 = nil
			}
			var defaultValue25 interface{}
			if !attributesItem.InternalUserAttribute.DefaultValue.IsUnknown() && !attributesItem.InternalUserAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem.InternalUserAttribute.DefaultValue.ValueString()), &defaultValue25)
			}
			group25 := new(string)
			if !attributesItem.InternalUserAttribute.Group.IsUnknown() && !attributesItem.InternalUserAttribute.Group.IsNull() {
				*group25 = attributesItem.InternalUserAttribute.Group.ValueString()
			} else {
				group25 = nil
			}
			order25 := new(int64)
			if !attributesItem.InternalUserAttribute.Order.IsUnknown() && !attributesItem.InternalUserAttribute.Order.IsNull() {
				*order25 = attributesItem.InternalUserAttribute.Order.ValueInt64()
			} else {
				order25 = nil
			}
			layout25 := new(string)
			if !attributesItem.InternalUserAttribute.Layout.IsUnknown() && !attributesItem.InternalUserAttribute.Layout.IsNull() {
				*layout25 = attributesItem.InternalUserAttribute.Layout.ValueString()
			} else {
				layout25 = nil
			}
			hideLabel25 := new(bool)
			if !attributesItem.InternalUserAttribute.HideLabel.IsUnknown() && !attributesItem.InternalUserAttribute.HideLabel.IsNull() {
				*hideLabel25 = attributesItem.InternalUserAttribute.HideLabel.ValueBool()
			} else {
				hideLabel25 = nil
			}
			icon25 := new(string)
			if !attributesItem.InternalUserAttribute.Icon.IsUnknown() && !attributesItem.InternalUserAttribute.Icon.IsNull() {
				*icon25 = attributesItem.InternalUserAttribute.Icon.ValueString()
			} else {
				icon25 = nil
			}
			renderCondition25 := new(string)
			if !attributesItem.InternalUserAttribute.RenderCondition.IsUnknown() && !attributesItem.InternalUserAttribute.RenderCondition.IsNull() {
				*renderCondition25 = attributesItem.InternalUserAttribute.RenderCondition.ValueString()
			} else {
				renderCondition25 = nil
			}
			var purpose25 []string = []string{}
			for _, purposeItem25 := range attributesItem.InternalUserAttribute.Purpose {
				purpose25 = append(purpose25, purposeItem25.ValueString())
			}
			var constraints25 *shared.InternalUserAttributeConstraints
			if attributesItem.InternalUserAttribute.Constraints != nil {
				constraints25 = &shared.InternalUserAttributeConstraints{}
			}
			featureFlag26 := new(string)
			if !attributesItem.InternalUserAttribute.FeatureFlag.IsUnknown() && !attributesItem.InternalUserAttribute.FeatureFlag.IsNull() {
				*featureFlag26 = attributesItem.InternalUserAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag26 = nil
			}
			var settingsFlag26 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem26 := range attributesItem.InternalUserAttribute.SettingsFlag {
				name53 := new(string)
				if !settingsFlagItem26.Name.IsUnknown() && !settingsFlagItem26.Name.IsNull() {
					*name53 = settingsFlagItem26.Name.ValueString()
				} else {
					name53 = nil
				}
				enabled26 := new(bool)
				if !settingsFlagItem26.Enabled.IsUnknown() && !settingsFlagItem26.Enabled.IsNull() {
					*enabled26 = settingsFlagItem26.Enabled.ValueBool()
				} else {
					enabled26 = nil
				}
				settingsFlag26 = append(settingsFlag26, shared.SettingFlag{
					Name:    name53,
					Enabled: enabled26,
				})
			}
			valueFormatter25 := new(string)
			if !attributesItem.InternalUserAttribute.ValueFormatter.IsUnknown() && !attributesItem.InternalUserAttribute.ValueFormatter.IsNull() {
				*valueFormatter25 = attributesItem.InternalUserAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter25 = nil
			}
			previewValueFormatter25 := new(string)
			if !attributesItem.InternalUserAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.InternalUserAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter25 = attributesItem.InternalUserAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter25 = nil
			}
			entityBuilderDisableEdit25 := new(bool)
			if !attributesItem.InternalUserAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.InternalUserAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit25 = attributesItem.InternalUserAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit25 = nil
			}
			protected25 := new(bool)
			if !attributesItem.InternalUserAttribute.Protected.IsUnknown() && !attributesItem.InternalUserAttribute.Protected.IsNull() {
				*protected25 = attributesItem.InternalUserAttribute.Protected.ValueBool()
			} else {
				protected25 = nil
			}
			var infoHelpers25 *shared.InternalUserAttributeInfoHelpers
			if attributesItem.InternalUserAttribute.InfoHelpers != nil {
				hintText25 := new(string)
				if !attributesItem.InternalUserAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.InternalUserAttribute.InfoHelpers.HintText.IsNull() {
					*hintText25 = attributesItem.InternalUserAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText25 = nil
				}
				hintTextKey25 := new(string)
				if !attributesItem.InternalUserAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.InternalUserAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey25 = attributesItem.InternalUserAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey25 = nil
				}
				hintCustomComponent25 := new(string)
				if !attributesItem.InternalUserAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.InternalUserAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent25 = attributesItem.InternalUserAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent25 = nil
				}
				hintTooltipPlacement25 := new(string)
				if !attributesItem.InternalUserAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.InternalUserAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement25 = attributesItem.InternalUserAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement25 = nil
				}
				infoHelpers25 = &shared.InternalUserAttributeInfoHelpers{
					HintText:             hintText25,
					HintTextKey:          hintTextKey25,
					HintCustomComponent:  hintCustomComponent25,
					HintTooltipPlacement: hintTooltipPlacement25,
				}
			}
			typeVar25 := new(shared.InternalUserAttributeType)
			if !attributesItem.InternalUserAttribute.Type.IsUnknown() && !attributesItem.InternalUserAttribute.Type.IsNull() {
				*typeVar25 = shared.InternalUserAttributeType(attributesItem.InternalUserAttribute.Type.ValueString())
			} else {
				typeVar25 = nil
			}
			internalUserAttribute := shared.InternalUserAttribute{
				ID:                       id27,
				Name:                     name52,
				Label:                    label26,
				Placeholder:              placeholder25,
				Hidden:                   hidden25,
				ShowInTable:              showInTable25,
				Sortable:                 sortable25,
				Required:                 required25,
				Readonly:                 readonly25,
				Deprecated:               deprecated25,
				DefaultValue:             defaultValue25,
				Group:                    group25,
				Order:                    order25,
				Layout:                   layout25,
				HideLabel:                hideLabel25,
				Icon:                     icon25,
				RenderCondition:          renderCondition25,
				Purpose:                  purpose25,
				Constraints:              constraints25,
				FeatureFlag:              featureFlag26,
				SettingsFlag:             settingsFlag26,
				ValueFormatter:           valueFormatter25,
				PreviewValueFormatter:    previewValueFormatter25,
				EntityBuilderDisableEdit: entityBuilderDisableEdit25,
				Protected:                protected25,
				InfoHelpers:              infoHelpers25,
				Type:                     typeVar25,
			}
			attributes = append(attributes, shared.Attribute{
				InternalUserAttribute: &internalUserAttribute,
			})
		}
		if attributesItem.PurposeAttribute != nil {
			id28 := new(string)
			if !attributesItem.PurposeAttribute.ID.IsUnknown() && !attributesItem.PurposeAttribute.ID.IsNull() {
				*id28 = attributesItem.PurposeAttribute.ID.ValueString()
			} else {
				id28 = nil
			}
			name54 := attributesItem.PurposeAttribute.Name.ValueString()
			label27 := attributesItem.PurposeAttribute.Label.ValueString()
			placeholder26 := new(string)
			if !attributesItem.PurposeAttribute.Placeholder.IsUnknown() && !attributesItem.PurposeAttribute.Placeholder.IsNull() {
				*placeholder26 = attributesItem.PurposeAttribute.Placeholder.ValueString()
			} else {
				placeholder26 = nil
			}
			hidden26 := new(bool)
			if !attributesItem.PurposeAttribute.Hidden.IsUnknown() && !attributesItem.PurposeAttribute.Hidden.IsNull() {
				*hidden26 = attributesItem.PurposeAttribute.Hidden.ValueBool()
			} else {
				hidden26 = nil
			}
			showInTable26 := new(bool)
			if !attributesItem.PurposeAttribute.ShowInTable.IsUnknown() && !attributesItem.PurposeAttribute.ShowInTable.IsNull() {
				*showInTable26 = attributesItem.PurposeAttribute.ShowInTable.ValueBool()
			} else {
				showInTable26 = nil
			}
			sortable26 := new(bool)
			if !attributesItem.PurposeAttribute.Sortable.IsUnknown() && !attributesItem.PurposeAttribute.Sortable.IsNull() {
				*sortable26 = attributesItem.PurposeAttribute.Sortable.ValueBool()
			} else {
				sortable26 = nil
			}
			required26 := new(bool)
			if !attributesItem.PurposeAttribute.Required.IsUnknown() && !attributesItem.PurposeAttribute.Required.IsNull() {
				*required26 = attributesItem.PurposeAttribute.Required.ValueBool()
			} else {
				required26 = nil
			}
			readonly26 := new(bool)
			if !attributesItem.PurposeAttribute.Readonly.IsUnknown() && !attributesItem.PurposeAttribute.Readonly.IsNull() {
				*readonly26 = attributesItem.PurposeAttribute.Readonly.ValueBool()
			} else {
				readonly26 = nil
			}
			deprecated26 := new(bool)
			if !attributesItem.PurposeAttribute.Deprecated.IsUnknown() && !attributesItem.PurposeAttribute.Deprecated.IsNull() {
				*deprecated26 = attributesItem.PurposeAttribute.Deprecated.ValueBool()
			} else {
				deprecated26 = nil
			}
			var defaultValue26 interface{}
			if !attributesItem.PurposeAttribute.DefaultValue.IsUnknown() && !attributesItem.PurposeAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem.PurposeAttribute.DefaultValue.ValueString()), &defaultValue26)
			}
			group26 := new(string)
			if !attributesItem.PurposeAttribute.Group.IsUnknown() && !attributesItem.PurposeAttribute.Group.IsNull() {
				*group26 = attributesItem.PurposeAttribute.Group.ValueString()
			} else {
				group26 = nil
			}
			order26 := new(int64)
			if !attributesItem.PurposeAttribute.Order.IsUnknown() && !attributesItem.PurposeAttribute.Order.IsNull() {
				*order26 = attributesItem.PurposeAttribute.Order.ValueInt64()
			} else {
				order26 = nil
			}
			layout26 := new(string)
			if !attributesItem.PurposeAttribute.Layout.IsUnknown() && !attributesItem.PurposeAttribute.Layout.IsNull() {
				*layout26 = attributesItem.PurposeAttribute.Layout.ValueString()
			} else {
				layout26 = nil
			}
			hideLabel26 := new(bool)
			if !attributesItem.PurposeAttribute.HideLabel.IsUnknown() && !attributesItem.PurposeAttribute.HideLabel.IsNull() {
				*hideLabel26 = attributesItem.PurposeAttribute.HideLabel.ValueBool()
			} else {
				hideLabel26 = nil
			}
			icon26 := new(string)
			if !attributesItem.PurposeAttribute.Icon.IsUnknown() && !attributesItem.PurposeAttribute.Icon.IsNull() {
				*icon26 = attributesItem.PurposeAttribute.Icon.ValueString()
			} else {
				icon26 = nil
			}
			renderCondition26 := new(string)
			if !attributesItem.PurposeAttribute.RenderCondition.IsUnknown() && !attributesItem.PurposeAttribute.RenderCondition.IsNull() {
				*renderCondition26 = attributesItem.PurposeAttribute.RenderCondition.ValueString()
			} else {
				renderCondition26 = nil
			}
			var purpose26 []string = []string{}
			for _, purposeItem26 := range attributesItem.PurposeAttribute.Purpose {
				purpose26 = append(purpose26, purposeItem26.ValueString())
			}
			var constraints26 *shared.PurposeAttributeConstraints
			if attributesItem.PurposeAttribute.Constraints != nil {
				constraints26 = &shared.PurposeAttributeConstraints{}
			}
			featureFlag27 := new(string)
			if !attributesItem.PurposeAttribute.FeatureFlag.IsUnknown() && !attributesItem.PurposeAttribute.FeatureFlag.IsNull() {
				*featureFlag27 = attributesItem.PurposeAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag27 = nil
			}
			var settingsFlag27 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem27 := range attributesItem.PurposeAttribute.SettingsFlag {
				name55 := new(string)
				if !settingsFlagItem27.Name.IsUnknown() && !settingsFlagItem27.Name.IsNull() {
					*name55 = settingsFlagItem27.Name.ValueString()
				} else {
					name55 = nil
				}
				enabled27 := new(bool)
				if !settingsFlagItem27.Enabled.IsUnknown() && !settingsFlagItem27.Enabled.IsNull() {
					*enabled27 = settingsFlagItem27.Enabled.ValueBool()
				} else {
					enabled27 = nil
				}
				settingsFlag27 = append(settingsFlag27, shared.SettingFlag{
					Name:    name55,
					Enabled: enabled27,
				})
			}
			valueFormatter26 := new(string)
			if !attributesItem.PurposeAttribute.ValueFormatter.IsUnknown() && !attributesItem.PurposeAttribute.ValueFormatter.IsNull() {
				*valueFormatter26 = attributesItem.PurposeAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter26 = nil
			}
			previewValueFormatter26 := new(string)
			if !attributesItem.PurposeAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.PurposeAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter26 = attributesItem.PurposeAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter26 = nil
			}
			entityBuilderDisableEdit26 := new(bool)
			if !attributesItem.PurposeAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.PurposeAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit26 = attributesItem.PurposeAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit26 = nil
			}
			protected26 := new(bool)
			if !attributesItem.PurposeAttribute.Protected.IsUnknown() && !attributesItem.PurposeAttribute.Protected.IsNull() {
				*protected26 = attributesItem.PurposeAttribute.Protected.ValueBool()
			} else {
				protected26 = nil
			}
			var infoHelpers26 *shared.PurposeAttributeInfoHelpers
			if attributesItem.PurposeAttribute.InfoHelpers != nil {
				hintText26 := new(string)
				if !attributesItem.PurposeAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.PurposeAttribute.InfoHelpers.HintText.IsNull() {
					*hintText26 = attributesItem.PurposeAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText26 = nil
				}
				hintTextKey26 := new(string)
				if !attributesItem.PurposeAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.PurposeAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey26 = attributesItem.PurposeAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey26 = nil
				}
				hintCustomComponent26 := new(string)
				if !attributesItem.PurposeAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.PurposeAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent26 = attributesItem.PurposeAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent26 = nil
				}
				hintTooltipPlacement26 := new(string)
				if !attributesItem.PurposeAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.PurposeAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement26 = attributesItem.PurposeAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement26 = nil
				}
				infoHelpers26 = &shared.PurposeAttributeInfoHelpers{
					HintText:             hintText26,
					HintTextKey:          hintTextKey26,
					HintCustomComponent:  hintCustomComponent26,
					HintTooltipPlacement: hintTooltipPlacement26,
				}
			}
			slug := new(string)
			if !attributesItem.PurposeAttribute.Slug.IsUnknown() && !attributesItem.PurposeAttribute.Slug.IsNull() {
				*slug = attributesItem.PurposeAttribute.Slug.ValueString()
			} else {
				slug = nil
			}
			var parents []string = []string{}
			for _, parentsItem := range attributesItem.PurposeAttribute.Parents {
				parents = append(parents, parentsItem.ValueString())
			}
			createdAt1 := new(time.Time)
			if !attributesItem.PurposeAttribute.CreatedAt.IsUnknown() && !attributesItem.PurposeAttribute.CreatedAt.IsNull() {
				*createdAt1, _ = time.Parse(time.RFC3339Nano, attributesItem.PurposeAttribute.CreatedAt.ValueString())
			} else {
				createdAt1 = nil
			}
			updatedAt1 := new(time.Time)
			if !attributesItem.PurposeAttribute.UpdatedAt.IsUnknown() && !attributesItem.PurposeAttribute.UpdatedAt.IsNull() {
				*updatedAt1, _ = time.Parse(time.RFC3339Nano, attributesItem.PurposeAttribute.UpdatedAt.ValueString())
			} else {
				updatedAt1 = nil
			}
			typeVar26 := new(shared.PurposeAttributeType)
			if !attributesItem.PurposeAttribute.Type.IsUnknown() && !attributesItem.PurposeAttribute.Type.IsNull() {
				*typeVar26 = shared.PurposeAttributeType(attributesItem.PurposeAttribute.Type.ValueString())
			} else {
				typeVar26 = nil
			}
			purposeAttribute := shared.PurposeAttribute{
				ID:                       id28,
				Name:                     name54,
				Label:                    label27,
				Placeholder:              placeholder26,
				Hidden:                   hidden26,
				ShowInTable:              showInTable26,
				Sortable:                 sortable26,
				Required:                 required26,
				Readonly:                 readonly26,
				Deprecated:               deprecated26,
				DefaultValue:             defaultValue26,
				Group:                    group26,
				Order:                    order26,
				Layout:                   layout26,
				HideLabel:                hideLabel26,
				Icon:                     icon26,
				RenderCondition:          renderCondition26,
				Purpose:                  purpose26,
				Constraints:              constraints26,
				FeatureFlag:              featureFlag27,
				SettingsFlag:             settingsFlag27,
				ValueFormatter:           valueFormatter26,
				PreviewValueFormatter:    previewValueFormatter26,
				EntityBuilderDisableEdit: entityBuilderDisableEdit26,
				Protected:                protected26,
				InfoHelpers:              infoHelpers26,
				Slug:                     slug,
				Parents:                  parents,
				CreatedAt:                createdAt1,
				UpdatedAt:                updatedAt1,
				Type:                     typeVar26,
			}
			attributes = append(attributes, shared.Attribute{
				PurposeAttribute: &purposeAttribute,
			})
		}
		if attributesItem.PartnerOrganisationAttribute != nil {
			id29 := new(string)
			if !attributesItem.PartnerOrganisationAttribute.ID.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.ID.IsNull() {
				*id29 = attributesItem.PartnerOrganisationAttribute.ID.ValueString()
			} else {
				id29 = nil
			}
			name56 := attributesItem.PartnerOrganisationAttribute.Name.ValueString()
			label28 := attributesItem.PartnerOrganisationAttribute.Label.ValueString()
			placeholder27 := new(string)
			if !attributesItem.PartnerOrganisationAttribute.Placeholder.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.Placeholder.IsNull() {
				*placeholder27 = attributesItem.PartnerOrganisationAttribute.Placeholder.ValueString()
			} else {
				placeholder27 = nil
			}
			hidden27 := new(bool)
			if !attributesItem.PartnerOrganisationAttribute.Hidden.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.Hidden.IsNull() {
				*hidden27 = attributesItem.PartnerOrganisationAttribute.Hidden.ValueBool()
			} else {
				hidden27 = nil
			}
			showInTable27 := new(bool)
			if !attributesItem.PartnerOrganisationAttribute.ShowInTable.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.ShowInTable.IsNull() {
				*showInTable27 = attributesItem.PartnerOrganisationAttribute.ShowInTable.ValueBool()
			} else {
				showInTable27 = nil
			}
			sortable27 := new(bool)
			if !attributesItem.PartnerOrganisationAttribute.Sortable.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.Sortable.IsNull() {
				*sortable27 = attributesItem.PartnerOrganisationAttribute.Sortable.ValueBool()
			} else {
				sortable27 = nil
			}
			required27 := new(bool)
			if !attributesItem.PartnerOrganisationAttribute.Required.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.Required.IsNull() {
				*required27 = attributesItem.PartnerOrganisationAttribute.Required.ValueBool()
			} else {
				required27 = nil
			}
			readonly27 := new(bool)
			if !attributesItem.PartnerOrganisationAttribute.Readonly.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.Readonly.IsNull() {
				*readonly27 = attributesItem.PartnerOrganisationAttribute.Readonly.ValueBool()
			} else {
				readonly27 = nil
			}
			deprecated27 := new(bool)
			if !attributesItem.PartnerOrganisationAttribute.Deprecated.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.Deprecated.IsNull() {
				*deprecated27 = attributesItem.PartnerOrganisationAttribute.Deprecated.ValueBool()
			} else {
				deprecated27 = nil
			}
			var defaultValue27 interface{}
			if !attributesItem.PartnerOrganisationAttribute.DefaultValue.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.DefaultValue.IsNull() {
				_ = json.Unmarshal([]byte(attributesItem.PartnerOrganisationAttribute.DefaultValue.ValueString()), &defaultValue27)
			}
			group27 := new(string)
			if !attributesItem.PartnerOrganisationAttribute.Group.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.Group.IsNull() {
				*group27 = attributesItem.PartnerOrganisationAttribute.Group.ValueString()
			} else {
				group27 = nil
			}
			order27 := new(int64)
			if !attributesItem.PartnerOrganisationAttribute.Order.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.Order.IsNull() {
				*order27 = attributesItem.PartnerOrganisationAttribute.Order.ValueInt64()
			} else {
				order27 = nil
			}
			layout27 := new(string)
			if !attributesItem.PartnerOrganisationAttribute.Layout.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.Layout.IsNull() {
				*layout27 = attributesItem.PartnerOrganisationAttribute.Layout.ValueString()
			} else {
				layout27 = nil
			}
			hideLabel27 := new(bool)
			if !attributesItem.PartnerOrganisationAttribute.HideLabel.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.HideLabel.IsNull() {
				*hideLabel27 = attributesItem.PartnerOrganisationAttribute.HideLabel.ValueBool()
			} else {
				hideLabel27 = nil
			}
			icon27 := new(string)
			if !attributesItem.PartnerOrganisationAttribute.Icon.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.Icon.IsNull() {
				*icon27 = attributesItem.PartnerOrganisationAttribute.Icon.ValueString()
			} else {
				icon27 = nil
			}
			renderCondition27 := new(string)
			if !attributesItem.PartnerOrganisationAttribute.RenderCondition.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.RenderCondition.IsNull() {
				*renderCondition27 = attributesItem.PartnerOrganisationAttribute.RenderCondition.ValueString()
			} else {
				renderCondition27 = nil
			}
			var purpose27 []string = []string{}
			for _, purposeItem27 := range attributesItem.PartnerOrganisationAttribute.Purpose {
				purpose27 = append(purpose27, purposeItem27.ValueString())
			}
			var constraints27 *shared.PartnerOrganisationAttributeConstraints
			if attributesItem.PartnerOrganisationAttribute.Constraints != nil {
				constraints27 = &shared.PartnerOrganisationAttributeConstraints{}
			}
			featureFlag28 := new(string)
			if !attributesItem.PartnerOrganisationAttribute.FeatureFlag.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.FeatureFlag.IsNull() {
				*featureFlag28 = attributesItem.PartnerOrganisationAttribute.FeatureFlag.ValueString()
			} else {
				featureFlag28 = nil
			}
			var settingsFlag28 []shared.SettingFlag = []shared.SettingFlag{}
			for _, settingsFlagItem28 := range attributesItem.PartnerOrganisationAttribute.SettingsFlag {
				name57 := new(string)
				if !settingsFlagItem28.Name.IsUnknown() && !settingsFlagItem28.Name.IsNull() {
					*name57 = settingsFlagItem28.Name.ValueString()
				} else {
					name57 = nil
				}
				enabled28 := new(bool)
				if !settingsFlagItem28.Enabled.IsUnknown() && !settingsFlagItem28.Enabled.IsNull() {
					*enabled28 = settingsFlagItem28.Enabled.ValueBool()
				} else {
					enabled28 = nil
				}
				settingsFlag28 = append(settingsFlag28, shared.SettingFlag{
					Name:    name57,
					Enabled: enabled28,
				})
			}
			valueFormatter27 := new(string)
			if !attributesItem.PartnerOrganisationAttribute.ValueFormatter.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.ValueFormatter.IsNull() {
				*valueFormatter27 = attributesItem.PartnerOrganisationAttribute.ValueFormatter.ValueString()
			} else {
				valueFormatter27 = nil
			}
			previewValueFormatter27 := new(string)
			if !attributesItem.PartnerOrganisationAttribute.PreviewValueFormatter.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.PreviewValueFormatter.IsNull() {
				*previewValueFormatter27 = attributesItem.PartnerOrganisationAttribute.PreviewValueFormatter.ValueString()
			} else {
				previewValueFormatter27 = nil
			}
			entityBuilderDisableEdit27 := new(bool)
			if !attributesItem.PartnerOrganisationAttribute.EntityBuilderDisableEdit.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.EntityBuilderDisableEdit.IsNull() {
				*entityBuilderDisableEdit27 = attributesItem.PartnerOrganisationAttribute.EntityBuilderDisableEdit.ValueBool()
			} else {
				entityBuilderDisableEdit27 = nil
			}
			protected27 := new(bool)
			if !attributesItem.PartnerOrganisationAttribute.Protected.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.Protected.IsNull() {
				*protected27 = attributesItem.PartnerOrganisationAttribute.Protected.ValueBool()
			} else {
				protected27 = nil
			}
			var infoHelpers27 *shared.PartnerOrganisationAttributeInfoHelpers
			if attributesItem.PartnerOrganisationAttribute.InfoHelpers != nil {
				hintText27 := new(string)
				if !attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintText.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintText.IsNull() {
					*hintText27 = attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintText.ValueString()
				} else {
					hintText27 = nil
				}
				hintTextKey27 := new(string)
				if !attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintTextKey.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintTextKey.IsNull() {
					*hintTextKey27 = attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintTextKey.ValueString()
				} else {
					hintTextKey27 = nil
				}
				hintCustomComponent27 := new(string)
				if !attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintCustomComponent.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintCustomComponent.IsNull() {
					*hintCustomComponent27 = attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintCustomComponent.ValueString()
				} else {
					hintCustomComponent27 = nil
				}
				hintTooltipPlacement27 := new(string)
				if !attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintTooltipPlacement.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintTooltipPlacement.IsNull() {
					*hintTooltipPlacement27 = attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintTooltipPlacement.ValueString()
				} else {
					hintTooltipPlacement27 = nil
				}
				infoHelpers27 = &shared.PartnerOrganisationAttributeInfoHelpers{
					HintText:             hintText27,
					HintTextKey:          hintTextKey27,
					HintCustomComponent:  hintCustomComponent27,
					HintTooltipPlacement: hintTooltipPlacement27,
				}
			}
			typeVar27 := new(shared.PartnerOrganisationAttributeType)
			if !attributesItem.PartnerOrganisationAttribute.Type.IsUnknown() && !attributesItem.PartnerOrganisationAttribute.Type.IsNull() {
				*typeVar27 = shared.PartnerOrganisationAttributeType(attributesItem.PartnerOrganisationAttribute.Type.ValueString())
			} else {
				typeVar27 = nil
			}
			partnerOrganisationAttribute := shared.PartnerOrganisationAttribute{
				ID:                       id29,
				Name:                     name56,
				Label:                    label28,
				Placeholder:              placeholder27,
				Hidden:                   hidden27,
				ShowInTable:              showInTable27,
				Sortable:                 sortable27,
				Required:                 required27,
				Readonly:                 readonly27,
				Deprecated:               deprecated27,
				DefaultValue:             defaultValue27,
				Group:                    group27,
				Order:                    order27,
				Layout:                   layout27,
				HideLabel:                hideLabel27,
				Icon:                     icon27,
				RenderCondition:          renderCondition27,
				Purpose:                  purpose27,
				Constraints:              constraints27,
				FeatureFlag:              featureFlag28,
				SettingsFlag:             settingsFlag28,
				ValueFormatter:           valueFormatter27,
				PreviewValueFormatter:    previewValueFormatter27,
				EntityBuilderDisableEdit: entityBuilderDisableEdit27,
				Protected:                protected27,
				InfoHelpers:              infoHelpers27,
				Type:                     typeVar27,
			}
			attributes = append(attributes, shared.Attribute{
				PartnerOrganisationAttribute: &partnerOrganisationAttribute,
			})
		}
	}
	var purpose28 []string = []string{}
	for _, purposeItem28 := range r.Purpose {
		purpose28 = append(purpose28, purposeItem28.ValueString())
	}
	var uiHooks []shared.EntityCapabilityWithCompositeIDUIHooks = []shared.EntityCapabilityWithCompositeIDUIHooks{}
	for _, uiHooksItem := range r.UIHooks {
		hook := uiHooksItem.Hook.ValueString()
		renderCondition28 := new(string)
		if !uiHooksItem.RenderCondition.IsUnknown() && !uiHooksItem.RenderCondition.IsNull() {
			*renderCondition28 = uiHooksItem.RenderCondition.ValueString()
		} else {
			renderCondition28 = nil
		}
		order28 := new(int64)
		if !uiHooksItem.Order.IsUnknown() && !uiHooksItem.Order.IsNull() {
			*order28 = uiHooksItem.Order.ValueInt64()
		} else {
			order28 = nil
		}
		title5 := new(string)
		if !uiHooksItem.Title.IsUnknown() && !uiHooksItem.Title.IsNull() {
			*title5 = uiHooksItem.Title.ValueString()
		} else {
			title5 = nil
		}
		groupExpanded := new(bool)
		if !uiHooksItem.GroupExpanded.IsUnknown() && !uiHooksItem.GroupExpanded.IsNull() {
			*groupExpanded = uiHooksItem.GroupExpanded.ValueBool()
		} else {
			groupExpanded = nil
		}
		importVar := new(string)
		if !uiHooksItem.Import.IsUnknown() && !uiHooksItem.Import.IsNull() {
			*importVar = uiHooksItem.Import.ValueString()
		} else {
			importVar = nil
		}
		component := new(string)
		if !uiHooksItem.Component.IsUnknown() && !uiHooksItem.Component.IsNull() {
			*component = uiHooksItem.Component.ValueString()
		} else {
			component = nil
		}
		route := new(string)
		if !uiHooksItem.Route.IsUnknown() && !uiHooksItem.Route.IsNull() {
			*route = uiHooksItem.Route.ValueString()
		} else {
			route = nil
		}
		icon28 := new(string)
		if !uiHooksItem.Icon.IsUnknown() && !uiHooksItem.Icon.IsNull() {
			*icon28 = uiHooksItem.Icon.ValueString()
		} else {
			icon28 = nil
		}
		disabled := new(bool)
		if !uiHooksItem.Disabled.IsUnknown() && !uiHooksItem.Disabled.IsNull() {
			*disabled = uiHooksItem.Disabled.ValueBool()
		} else {
			disabled = nil
		}
		header := new(bool)
		if !uiHooksItem.Header.IsUnknown() && !uiHooksItem.Header.IsNull() {
			*header = uiHooksItem.Header.ValueBool()
		} else {
			header = nil
		}
		var requiredPermission *shared.EntityCapabilityWithCompositeIDRequiredPermission
		if uiHooksItem.RequiredPermission != nil {
			action := uiHooksItem.RequiredPermission.Action.ValueString()
			resource := new(string)
			if !uiHooksItem.RequiredPermission.Resource.IsUnknown() && !uiHooksItem.RequiredPermission.Resource.IsNull() {
				*resource = uiHooksItem.RequiredPermission.Resource.ValueString()
			} else {
				resource = nil
			}
			requiredPermission = &shared.EntityCapabilityWithCompositeIDRequiredPermission{
				Action:   action,
				Resource: resource,
			}
		}
		var additionalProperties2 interface{}
		if !uiHooksItem.AdditionalProperties.IsUnknown() && !uiHooksItem.AdditionalProperties.IsNull() {
			_ = json.Unmarshal([]byte(uiHooksItem.AdditionalProperties.ValueString()), &additionalProperties2)
		}
		uiHooks = append(uiHooks, shared.EntityCapabilityWithCompositeIDUIHooks{
			Hook:                 hook,
			RenderCondition:      renderCondition28,
			Order:                order28,
			Title:                title5,
			GroupExpanded:        groupExpanded,
			Import:               importVar,
			Component:            component,
			Route:                route,
			Icon:                 icon28,
			Disabled:             disabled,
			Header:               header,
			RequiredPermission:   requiredPermission,
			AdditionalProperties: additionalProperties2,
		})
	}
	featureFlag29 := new(string)
	if !r.FeatureFlag.IsUnknown() && !r.FeatureFlag.IsNull() {
		*featureFlag29 = r.FeatureFlag.ValueString()
	} else {
		featureFlag29 = nil
	}
	var settingsFlag29 []shared.SettingFlag = []shared.SettingFlag{}
	for _, settingsFlagItem29 := range r.SettingsFlag {
		name58 := new(string)
		if !settingsFlagItem29.Name.IsUnknown() && !settingsFlagItem29.Name.IsNull() {
			*name58 = settingsFlagItem29.Name.ValueString()
		} else {
			name58 = nil
		}
		enabled29 := new(bool)
		if !settingsFlagItem29.Enabled.IsUnknown() && !settingsFlagItem29.Enabled.IsNull() {
			*enabled29 = settingsFlagItem29.Enabled.ValueBool()
		} else {
			enabled29 = nil
		}
		settingsFlag29 = append(settingsFlag29, shared.SettingFlag{
			Name:    name58,
			Enabled: enabled29,
		})
	}
	out := shared.EntityCapabilityWithCompositeIDInput{
		ID:           id,
		Name:         name,
		Title:        title,
		Attributes:   attributes,
		Purpose:      purpose28,
		UIHooks:      uiHooks,
		FeatureFlag:  featureFlag29,
		SettingsFlag: settingsFlag29,
	}
	return &out
}

func (r *SchemaCapabilityResourceModel) RefreshFromSharedEntityCapabilityWithCompositeID(resp *shared.EntityCapabilityWithCompositeID) {
	if resp != nil {
		r.Purpose = []types.String{}
		for _, v := range resp.Purpose {
			r.Purpose = append(r.Purpose, types.StringValue(v))
		}
		r.Attributes = []tfTypes.Attribute{}
		if len(r.Attributes) > len(resp.Attributes) {
			r.Attributes = r.Attributes[:len(resp.Attributes)]
		}
		for attributesCount, attributesItem := range resp.Attributes {
			var attributes1 tfTypes.Attribute
			if attributesItem.AddressRelationAttribute != nil {
				attributes1.AddressRelationAttribute = &tfTypes.AddressRelationAttribute{}
				attributes1.AddressRelationAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.AddressRelationAttribute.Purpose {
					attributes1.AddressRelationAttribute.Purpose = append(attributes1.AddressRelationAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.AddressRelationAttribute.Constraints == nil {
					attributes1.AddressRelationAttribute.Constraints = nil
				} else {
					attributes1.AddressRelationAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.AddressRelationAttribute.DefaultValue == nil {
					attributes1.AddressRelationAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult, _ := json.Marshal(attributesItem.AddressRelationAttribute.DefaultValue)
					attributes1.AddressRelationAttribute.DefaultValue = types.StringValue(string(defaultValueResult))
				}
				attributes1.AddressRelationAttribute.Deprecated = types.BoolPointerValue(attributesItem.AddressRelationAttribute.Deprecated)
				attributes1.AddressRelationAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.AddressRelationAttribute.EntityBuilderDisableEdit)
				attributes1.AddressRelationAttribute.FeatureFlag = types.StringPointerValue(attributesItem.AddressRelationAttribute.FeatureFlag)
				attributes1.AddressRelationAttribute.Group = types.StringPointerValue(attributesItem.AddressRelationAttribute.Group)
				attributes1.AddressRelationAttribute.HasPrimary = types.BoolPointerValue(attributesItem.AddressRelationAttribute.HasPrimary)
				attributes1.AddressRelationAttribute.Hidden = types.BoolPointerValue(attributesItem.AddressRelationAttribute.Hidden)
				attributes1.AddressRelationAttribute.HideLabel = types.BoolPointerValue(attributesItem.AddressRelationAttribute.HideLabel)
				attributes1.AddressRelationAttribute.Icon = types.StringPointerValue(attributesItem.AddressRelationAttribute.Icon)
				attributes1.AddressRelationAttribute.ID = types.StringPointerValue(attributesItem.AddressRelationAttribute.ID)
				if attributesItem.AddressRelationAttribute.InfoHelpers == nil {
					attributes1.AddressRelationAttribute.InfoHelpers = nil
				} else {
					attributes1.AddressRelationAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.AddressRelationAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.AddressRelationAttribute.InfoHelpers.HintCustomComponent)
					attributes1.AddressRelationAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.AddressRelationAttribute.InfoHelpers.HintText)
					attributes1.AddressRelationAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.AddressRelationAttribute.InfoHelpers.HintTextKey)
					attributes1.AddressRelationAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.AddressRelationAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.AddressRelationAttribute.Label = types.StringValue(attributesItem.AddressRelationAttribute.Label)
				attributes1.AddressRelationAttribute.Layout = types.StringPointerValue(attributesItem.AddressRelationAttribute.Layout)
				attributes1.AddressRelationAttribute.Name = types.StringValue(attributesItem.AddressRelationAttribute.Name)
				attributes1.AddressRelationAttribute.Order = types.Int64PointerValue(attributesItem.AddressRelationAttribute.Order)
				attributes1.AddressRelationAttribute.Placeholder = types.StringPointerValue(attributesItem.AddressRelationAttribute.Placeholder)
				attributes1.AddressRelationAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.AddressRelationAttribute.PreviewValueFormatter)
				attributes1.AddressRelationAttribute.Protected = types.BoolPointerValue(attributesItem.AddressRelationAttribute.Protected)
				attributes1.AddressRelationAttribute.Readonly = types.BoolPointerValue(attributesItem.AddressRelationAttribute.Readonly)
				attributes1.AddressRelationAttribute.RenderCondition = types.StringPointerValue(attributesItem.AddressRelationAttribute.RenderCondition)
				attributes1.AddressRelationAttribute.Required = types.BoolPointerValue(attributesItem.AddressRelationAttribute.Required)
				attributes1.AddressRelationAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount, settingsFlagItem := range attributesItem.AddressRelationAttribute.SettingsFlag {
					var settingsFlag1 tfTypes.SettingFlag
					settingsFlag1.Enabled = types.BoolPointerValue(settingsFlagItem.Enabled)
					settingsFlag1.Name = types.StringPointerValue(settingsFlagItem.Name)
					if settingsFlagCount+1 > len(attributes1.AddressRelationAttribute.SettingsFlag) {
						attributes1.AddressRelationAttribute.SettingsFlag = append(attributes1.AddressRelationAttribute.SettingsFlag, settingsFlag1)
					} else {
						attributes1.AddressRelationAttribute.SettingsFlag[settingsFlagCount].Enabled = settingsFlag1.Enabled
						attributes1.AddressRelationAttribute.SettingsFlag[settingsFlagCount].Name = settingsFlag1.Name
					}
				}
				attributes1.AddressRelationAttribute.ShowInTable = types.BoolPointerValue(attributesItem.AddressRelationAttribute.ShowInTable)
				attributes1.AddressRelationAttribute.Sortable = types.BoolPointerValue(attributesItem.AddressRelationAttribute.Sortable)
				if attributesItem.AddressRelationAttribute.Type != nil {
					attributes1.AddressRelationAttribute.Type = types.StringValue(string(*attributesItem.AddressRelationAttribute.Type))
				} else {
					attributes1.AddressRelationAttribute.Type = types.StringNull()
				}
				attributes1.AddressRelationAttribute.ValueFormatter = types.StringPointerValue(attributesItem.AddressRelationAttribute.ValueFormatter)
			}
			if attributesItem.AutomationAttribute != nil {
				attributes1.AutomationAttribute = &tfTypes.AutomationAttribute{}
				attributes1.AutomationAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.AutomationAttribute.Purpose {
					attributes1.AutomationAttribute.Purpose = append(attributes1.AutomationAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.AutomationAttribute.Constraints == nil {
					attributes1.AutomationAttribute.Constraints = nil
				} else {
					attributes1.AutomationAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.AutomationAttribute.DefaultValue == nil {
					attributes1.AutomationAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult1, _ := json.Marshal(attributesItem.AutomationAttribute.DefaultValue)
					attributes1.AutomationAttribute.DefaultValue = types.StringValue(string(defaultValueResult1))
				}
				attributes1.AutomationAttribute.Deprecated = types.BoolPointerValue(attributesItem.AutomationAttribute.Deprecated)
				attributes1.AutomationAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.AutomationAttribute.EntityBuilderDisableEdit)
				attributes1.AutomationAttribute.FeatureFlag = types.StringPointerValue(attributesItem.AutomationAttribute.FeatureFlag)
				attributes1.AutomationAttribute.Group = types.StringPointerValue(attributesItem.AutomationAttribute.Group)
				attributes1.AutomationAttribute.Hidden = types.BoolPointerValue(attributesItem.AutomationAttribute.Hidden)
				attributes1.AutomationAttribute.HideLabel = types.BoolPointerValue(attributesItem.AutomationAttribute.HideLabel)
				attributes1.AutomationAttribute.Icon = types.StringPointerValue(attributesItem.AutomationAttribute.Icon)
				attributes1.AutomationAttribute.ID = types.StringPointerValue(attributesItem.AutomationAttribute.ID)
				if attributesItem.AutomationAttribute.InfoHelpers == nil {
					attributes1.AutomationAttribute.InfoHelpers = nil
				} else {
					attributes1.AutomationAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.AutomationAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.AutomationAttribute.InfoHelpers.HintCustomComponent)
					attributes1.AutomationAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.AutomationAttribute.InfoHelpers.HintText)
					attributes1.AutomationAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.AutomationAttribute.InfoHelpers.HintTextKey)
					attributes1.AutomationAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.AutomationAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.AutomationAttribute.Label = types.StringValue(attributesItem.AutomationAttribute.Label)
				attributes1.AutomationAttribute.Layout = types.StringPointerValue(attributesItem.AutomationAttribute.Layout)
				attributes1.AutomationAttribute.Name = types.StringValue(attributesItem.AutomationAttribute.Name)
				attributes1.AutomationAttribute.Order = types.Int64PointerValue(attributesItem.AutomationAttribute.Order)
				attributes1.AutomationAttribute.Placeholder = types.StringPointerValue(attributesItem.AutomationAttribute.Placeholder)
				attributes1.AutomationAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.AutomationAttribute.PreviewValueFormatter)
				attributes1.AutomationAttribute.Protected = types.BoolPointerValue(attributesItem.AutomationAttribute.Protected)
				attributes1.AutomationAttribute.Readonly = types.BoolPointerValue(attributesItem.AutomationAttribute.Readonly)
				attributes1.AutomationAttribute.RenderCondition = types.StringPointerValue(attributesItem.AutomationAttribute.RenderCondition)
				attributes1.AutomationAttribute.Required = types.BoolPointerValue(attributesItem.AutomationAttribute.Required)
				attributes1.AutomationAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount1, settingsFlagItem1 := range attributesItem.AutomationAttribute.SettingsFlag {
					var settingsFlag3 tfTypes.SettingFlag
					settingsFlag3.Enabled = types.BoolPointerValue(settingsFlagItem1.Enabled)
					settingsFlag3.Name = types.StringPointerValue(settingsFlagItem1.Name)
					if settingsFlagCount1+1 > len(attributes1.AutomationAttribute.SettingsFlag) {
						attributes1.AutomationAttribute.SettingsFlag = append(attributes1.AutomationAttribute.SettingsFlag, settingsFlag3)
					} else {
						attributes1.AutomationAttribute.SettingsFlag[settingsFlagCount1].Enabled = settingsFlag3.Enabled
						attributes1.AutomationAttribute.SettingsFlag[settingsFlagCount1].Name = settingsFlag3.Name
					}
				}
				attributes1.AutomationAttribute.ShowInTable = types.BoolPointerValue(attributesItem.AutomationAttribute.ShowInTable)
				attributes1.AutomationAttribute.Sortable = types.BoolPointerValue(attributesItem.AutomationAttribute.Sortable)
				if attributesItem.AutomationAttribute.Type != nil {
					attributes1.AutomationAttribute.Type = types.StringValue(string(*attributesItem.AutomationAttribute.Type))
				} else {
					attributes1.AutomationAttribute.Type = types.StringNull()
				}
				attributes1.AutomationAttribute.ValueFormatter = types.StringPointerValue(attributesItem.AutomationAttribute.ValueFormatter)
			}
			if attributesItem.BooleanAttribute != nil {
				attributes1.BooleanAttribute = &tfTypes.BooleanAttribute{}
				attributes1.BooleanAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.BooleanAttribute.Purpose {
					attributes1.BooleanAttribute.Purpose = append(attributes1.BooleanAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.BooleanAttribute.Constraints == nil {
					attributes1.BooleanAttribute.Constraints = nil
				} else {
					attributes1.BooleanAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.BooleanAttribute.DefaultValue == nil {
					attributes1.BooleanAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult2, _ := json.Marshal(attributesItem.BooleanAttribute.DefaultValue)
					attributes1.BooleanAttribute.DefaultValue = types.StringValue(string(defaultValueResult2))
				}
				attributes1.BooleanAttribute.Deprecated = types.BoolPointerValue(attributesItem.BooleanAttribute.Deprecated)
				attributes1.BooleanAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.BooleanAttribute.EntityBuilderDisableEdit)
				attributes1.BooleanAttribute.FeatureFlag = types.StringPointerValue(attributesItem.BooleanAttribute.FeatureFlag)
				attributes1.BooleanAttribute.Group = types.StringPointerValue(attributesItem.BooleanAttribute.Group)
				attributes1.BooleanAttribute.Hidden = types.BoolPointerValue(attributesItem.BooleanAttribute.Hidden)
				attributes1.BooleanAttribute.HideLabel = types.BoolPointerValue(attributesItem.BooleanAttribute.HideLabel)
				attributes1.BooleanAttribute.Icon = types.StringPointerValue(attributesItem.BooleanAttribute.Icon)
				attributes1.BooleanAttribute.ID = types.StringPointerValue(attributesItem.BooleanAttribute.ID)
				if attributesItem.BooleanAttribute.InfoHelpers == nil {
					attributes1.BooleanAttribute.InfoHelpers = nil
				} else {
					attributes1.BooleanAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.BooleanAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.BooleanAttribute.InfoHelpers.HintCustomComponent)
					attributes1.BooleanAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.BooleanAttribute.InfoHelpers.HintText)
					attributes1.BooleanAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.BooleanAttribute.InfoHelpers.HintTextKey)
					attributes1.BooleanAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.BooleanAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.BooleanAttribute.Label = types.StringValue(attributesItem.BooleanAttribute.Label)
				attributes1.BooleanAttribute.Layout = types.StringPointerValue(attributesItem.BooleanAttribute.Layout)
				attributes1.BooleanAttribute.Name = types.StringValue(attributesItem.BooleanAttribute.Name)
				attributes1.BooleanAttribute.Order = types.Int64PointerValue(attributesItem.BooleanAttribute.Order)
				attributes1.BooleanAttribute.Placeholder = types.StringPointerValue(attributesItem.BooleanAttribute.Placeholder)
				attributes1.BooleanAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.BooleanAttribute.PreviewValueFormatter)
				attributes1.BooleanAttribute.Protected = types.BoolPointerValue(attributesItem.BooleanAttribute.Protected)
				attributes1.BooleanAttribute.Readonly = types.BoolPointerValue(attributesItem.BooleanAttribute.Readonly)
				attributes1.BooleanAttribute.RenderCondition = types.StringPointerValue(attributesItem.BooleanAttribute.RenderCondition)
				attributes1.BooleanAttribute.Required = types.BoolPointerValue(attributesItem.BooleanAttribute.Required)
				attributes1.BooleanAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount2, settingsFlagItem2 := range attributesItem.BooleanAttribute.SettingsFlag {
					var settingsFlag5 tfTypes.SettingFlag
					settingsFlag5.Enabled = types.BoolPointerValue(settingsFlagItem2.Enabled)
					settingsFlag5.Name = types.StringPointerValue(settingsFlagItem2.Name)
					if settingsFlagCount2+1 > len(attributes1.BooleanAttribute.SettingsFlag) {
						attributes1.BooleanAttribute.SettingsFlag = append(attributes1.BooleanAttribute.SettingsFlag, settingsFlag5)
					} else {
						attributes1.BooleanAttribute.SettingsFlag[settingsFlagCount2].Enabled = settingsFlag5.Enabled
						attributes1.BooleanAttribute.SettingsFlag[settingsFlagCount2].Name = settingsFlag5.Name
					}
				}
				attributes1.BooleanAttribute.ShowInTable = types.BoolPointerValue(attributesItem.BooleanAttribute.ShowInTable)
				attributes1.BooleanAttribute.Sortable = types.BoolPointerValue(attributesItem.BooleanAttribute.Sortable)
				if attributesItem.BooleanAttribute.Type != nil {
					attributes1.BooleanAttribute.Type = types.StringValue(string(*attributesItem.BooleanAttribute.Type))
				} else {
					attributes1.BooleanAttribute.Type = types.StringNull()
				}
				attributes1.BooleanAttribute.ValueFormatter = types.StringPointerValue(attributesItem.BooleanAttribute.ValueFormatter)
			}
			if attributesItem.ComputedAttribute != nil {
				attributes1.ComputedAttribute = &tfTypes.ComputedAttribute{}
				attributes1.ComputedAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.ComputedAttribute.Purpose {
					attributes1.ComputedAttribute.Purpose = append(attributes1.ComputedAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.ComputedAttribute.Constraints == nil {
					attributes1.ComputedAttribute.Constraints = nil
				} else {
					attributes1.ComputedAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.ComputedAttribute.DefaultValue == nil {
					attributes1.ComputedAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult3, _ := json.Marshal(attributesItem.ComputedAttribute.DefaultValue)
					attributes1.ComputedAttribute.DefaultValue = types.StringValue(string(defaultValueResult3))
				}
				attributes1.ComputedAttribute.Deprecated = types.BoolPointerValue(attributesItem.ComputedAttribute.Deprecated)
				attributes1.ComputedAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.ComputedAttribute.EntityBuilderDisableEdit)
				attributes1.ComputedAttribute.FeatureFlag = types.StringPointerValue(attributesItem.ComputedAttribute.FeatureFlag)
				attributes1.ComputedAttribute.Group = types.StringPointerValue(attributesItem.ComputedAttribute.Group)
				attributes1.ComputedAttribute.Hidden = types.BoolPointerValue(attributesItem.ComputedAttribute.Hidden)
				attributes1.ComputedAttribute.HideLabel = types.BoolPointerValue(attributesItem.ComputedAttribute.HideLabel)
				attributes1.ComputedAttribute.Icon = types.StringPointerValue(attributesItem.ComputedAttribute.Icon)
				attributes1.ComputedAttribute.ID = types.StringPointerValue(attributesItem.ComputedAttribute.ID)
				if attributesItem.ComputedAttribute.InfoHelpers == nil {
					attributes1.ComputedAttribute.InfoHelpers = nil
				} else {
					attributes1.ComputedAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.ComputedAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.ComputedAttribute.InfoHelpers.HintCustomComponent)
					attributes1.ComputedAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.ComputedAttribute.InfoHelpers.HintText)
					attributes1.ComputedAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.ComputedAttribute.InfoHelpers.HintTextKey)
					attributes1.ComputedAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.ComputedAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.ComputedAttribute.Label = types.StringValue(attributesItem.ComputedAttribute.Label)
				attributes1.ComputedAttribute.Layout = types.StringPointerValue(attributesItem.ComputedAttribute.Layout)
				attributes1.ComputedAttribute.Name = types.StringValue(attributesItem.ComputedAttribute.Name)
				attributes1.ComputedAttribute.Order = types.Int64PointerValue(attributesItem.ComputedAttribute.Order)
				attributes1.ComputedAttribute.Placeholder = types.StringPointerValue(attributesItem.ComputedAttribute.Placeholder)
				attributes1.ComputedAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.ComputedAttribute.PreviewValueFormatter)
				attributes1.ComputedAttribute.Protected = types.BoolPointerValue(attributesItem.ComputedAttribute.Protected)
				attributes1.ComputedAttribute.Readonly = types.BoolPointerValue(attributesItem.ComputedAttribute.Readonly)
				attributes1.ComputedAttribute.RenderCondition = types.StringPointerValue(attributesItem.ComputedAttribute.RenderCondition)
				attributes1.ComputedAttribute.Required = types.BoolPointerValue(attributesItem.ComputedAttribute.Required)
				attributes1.ComputedAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount3, settingsFlagItem3 := range attributesItem.ComputedAttribute.SettingsFlag {
					var settingsFlag7 tfTypes.SettingFlag
					settingsFlag7.Enabled = types.BoolPointerValue(settingsFlagItem3.Enabled)
					settingsFlag7.Name = types.StringPointerValue(settingsFlagItem3.Name)
					if settingsFlagCount3+1 > len(attributes1.ComputedAttribute.SettingsFlag) {
						attributes1.ComputedAttribute.SettingsFlag = append(attributes1.ComputedAttribute.SettingsFlag, settingsFlag7)
					} else {
						attributes1.ComputedAttribute.SettingsFlag[settingsFlagCount3].Enabled = settingsFlag7.Enabled
						attributes1.ComputedAttribute.SettingsFlag[settingsFlagCount3].Name = settingsFlag7.Name
					}
				}
				attributes1.ComputedAttribute.ShowInTable = types.BoolPointerValue(attributesItem.ComputedAttribute.ShowInTable)
				attributes1.ComputedAttribute.Sortable = types.BoolPointerValue(attributesItem.ComputedAttribute.Sortable)
				if attributesItem.ComputedAttribute.Type != nil {
					attributes1.ComputedAttribute.Type = types.StringValue(string(*attributesItem.ComputedAttribute.Type))
				} else {
					attributes1.ComputedAttribute.Type = types.StringNull()
				}
				attributes1.ComputedAttribute.ValueFormatter = types.StringPointerValue(attributesItem.ComputedAttribute.ValueFormatter)
			}
			if attributesItem.ConsentAttribute != nil {
				attributes1.ConsentAttribute = &tfTypes.ConsentAttribute{}
				attributes1.ConsentAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.ConsentAttribute.Purpose {
					attributes1.ConsentAttribute.Purpose = append(attributes1.ConsentAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.ConsentAttribute.Constraints == nil {
					attributes1.ConsentAttribute.Constraints = nil
				} else {
					attributes1.ConsentAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.ConsentAttribute.DefaultValue == nil {
					attributes1.ConsentAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult4, _ := json.Marshal(attributesItem.ConsentAttribute.DefaultValue)
					attributes1.ConsentAttribute.DefaultValue = types.StringValue(string(defaultValueResult4))
				}
				attributes1.ConsentAttribute.Deprecated = types.BoolPointerValue(attributesItem.ConsentAttribute.Deprecated)
				attributes1.ConsentAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.ConsentAttribute.EntityBuilderDisableEdit)
				attributes1.ConsentAttribute.FeatureFlag = types.StringPointerValue(attributesItem.ConsentAttribute.FeatureFlag)
				attributes1.ConsentAttribute.Group = types.StringPointerValue(attributesItem.ConsentAttribute.Group)
				attributes1.ConsentAttribute.Hidden = types.BoolPointerValue(attributesItem.ConsentAttribute.Hidden)
				attributes1.ConsentAttribute.HideLabel = types.BoolPointerValue(attributesItem.ConsentAttribute.HideLabel)
				attributes1.ConsentAttribute.Icon = types.StringPointerValue(attributesItem.ConsentAttribute.Icon)
				attributes1.ConsentAttribute.ID = types.StringPointerValue(attributesItem.ConsentAttribute.ID)
				attributes1.ConsentAttribute.Identifiers = []types.String{}
				for _, v := range attributesItem.ConsentAttribute.Identifiers {
					attributes1.ConsentAttribute.Identifiers = append(attributes1.ConsentAttribute.Identifiers, types.StringValue(v))
				}
				if attributesItem.ConsentAttribute.InfoHelpers == nil {
					attributes1.ConsentAttribute.InfoHelpers = nil
				} else {
					attributes1.ConsentAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.ConsentAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.ConsentAttribute.InfoHelpers.HintCustomComponent)
					attributes1.ConsentAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.ConsentAttribute.InfoHelpers.HintText)
					attributes1.ConsentAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.ConsentAttribute.InfoHelpers.HintTextKey)
					attributes1.ConsentAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.ConsentAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.ConsentAttribute.Label = types.StringValue(attributesItem.ConsentAttribute.Label)
				attributes1.ConsentAttribute.Layout = types.StringPointerValue(attributesItem.ConsentAttribute.Layout)
				attributes1.ConsentAttribute.Name = types.StringValue(attributesItem.ConsentAttribute.Name)
				attributes1.ConsentAttribute.Order = types.Int64PointerValue(attributesItem.ConsentAttribute.Order)
				attributes1.ConsentAttribute.Placeholder = types.StringPointerValue(attributesItem.ConsentAttribute.Placeholder)
				attributes1.ConsentAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.ConsentAttribute.PreviewValueFormatter)
				attributes1.ConsentAttribute.Protected = types.BoolPointerValue(attributesItem.ConsentAttribute.Protected)
				attributes1.ConsentAttribute.Readonly = types.BoolPointerValue(attributesItem.ConsentAttribute.Readonly)
				attributes1.ConsentAttribute.RenderCondition = types.StringPointerValue(attributesItem.ConsentAttribute.RenderCondition)
				attributes1.ConsentAttribute.Required = types.BoolPointerValue(attributesItem.ConsentAttribute.Required)
				attributes1.ConsentAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount4, settingsFlagItem4 := range attributesItem.ConsentAttribute.SettingsFlag {
					var settingsFlag9 tfTypes.SettingFlag
					settingsFlag9.Enabled = types.BoolPointerValue(settingsFlagItem4.Enabled)
					settingsFlag9.Name = types.StringPointerValue(settingsFlagItem4.Name)
					if settingsFlagCount4+1 > len(attributes1.ConsentAttribute.SettingsFlag) {
						attributes1.ConsentAttribute.SettingsFlag = append(attributes1.ConsentAttribute.SettingsFlag, settingsFlag9)
					} else {
						attributes1.ConsentAttribute.SettingsFlag[settingsFlagCount4].Enabled = settingsFlag9.Enabled
						attributes1.ConsentAttribute.SettingsFlag[settingsFlagCount4].Name = settingsFlag9.Name
					}
				}
				attributes1.ConsentAttribute.ShowInTable = types.BoolPointerValue(attributesItem.ConsentAttribute.ShowInTable)
				attributes1.ConsentAttribute.Sortable = types.BoolPointerValue(attributesItem.ConsentAttribute.Sortable)
				attributes1.ConsentAttribute.Topic = types.StringValue(attributesItem.ConsentAttribute.Topic)
				attributes1.ConsentAttribute.Type = types.StringValue(string(attributesItem.ConsentAttribute.Type))
				attributes1.ConsentAttribute.ValueFormatter = types.StringPointerValue(attributesItem.ConsentAttribute.ValueFormatter)
			}
			if attributesItem.CountryAttribute != nil {
				attributes1.CountryAttribute = &tfTypes.CountryAttribute{}
				attributes1.CountryAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.CountryAttribute.Purpose {
					attributes1.CountryAttribute.Purpose = append(attributes1.CountryAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.CountryAttribute.Constraints == nil {
					attributes1.CountryAttribute.Constraints = nil
				} else {
					attributes1.CountryAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.CountryAttribute.DefaultValue == nil {
					attributes1.CountryAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult5, _ := json.Marshal(attributesItem.CountryAttribute.DefaultValue)
					attributes1.CountryAttribute.DefaultValue = types.StringValue(string(defaultValueResult5))
				}
				attributes1.CountryAttribute.Deprecated = types.BoolPointerValue(attributesItem.CountryAttribute.Deprecated)
				attributes1.CountryAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.CountryAttribute.EntityBuilderDisableEdit)
				attributes1.CountryAttribute.FeatureFlag = types.StringPointerValue(attributesItem.CountryAttribute.FeatureFlag)
				attributes1.CountryAttribute.Group = types.StringPointerValue(attributesItem.CountryAttribute.Group)
				attributes1.CountryAttribute.Hidden = types.BoolPointerValue(attributesItem.CountryAttribute.Hidden)
				attributes1.CountryAttribute.HideLabel = types.BoolPointerValue(attributesItem.CountryAttribute.HideLabel)
				attributes1.CountryAttribute.Icon = types.StringPointerValue(attributesItem.CountryAttribute.Icon)
				attributes1.CountryAttribute.ID = types.StringPointerValue(attributesItem.CountryAttribute.ID)
				if attributesItem.CountryAttribute.InfoHelpers == nil {
					attributes1.CountryAttribute.InfoHelpers = nil
				} else {
					attributes1.CountryAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.CountryAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.CountryAttribute.InfoHelpers.HintCustomComponent)
					attributes1.CountryAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.CountryAttribute.InfoHelpers.HintText)
					attributes1.CountryAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.CountryAttribute.InfoHelpers.HintTextKey)
					attributes1.CountryAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.CountryAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.CountryAttribute.Label = types.StringValue(attributesItem.CountryAttribute.Label)
				attributes1.CountryAttribute.Layout = types.StringPointerValue(attributesItem.CountryAttribute.Layout)
				attributes1.CountryAttribute.Name = types.StringValue(attributesItem.CountryAttribute.Name)
				attributes1.CountryAttribute.Order = types.Int64PointerValue(attributesItem.CountryAttribute.Order)
				attributes1.CountryAttribute.Placeholder = types.StringPointerValue(attributesItem.CountryAttribute.Placeholder)
				attributes1.CountryAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.CountryAttribute.PreviewValueFormatter)
				attributes1.CountryAttribute.Protected = types.BoolPointerValue(attributesItem.CountryAttribute.Protected)
				attributes1.CountryAttribute.Readonly = types.BoolPointerValue(attributesItem.CountryAttribute.Readonly)
				attributes1.CountryAttribute.RenderCondition = types.StringPointerValue(attributesItem.CountryAttribute.RenderCondition)
				attributes1.CountryAttribute.Required = types.BoolPointerValue(attributesItem.CountryAttribute.Required)
				attributes1.CountryAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount5, settingsFlagItem5 := range attributesItem.CountryAttribute.SettingsFlag {
					var settingsFlag11 tfTypes.SettingFlag
					settingsFlag11.Enabled = types.BoolPointerValue(settingsFlagItem5.Enabled)
					settingsFlag11.Name = types.StringPointerValue(settingsFlagItem5.Name)
					if settingsFlagCount5+1 > len(attributes1.CountryAttribute.SettingsFlag) {
						attributes1.CountryAttribute.SettingsFlag = append(attributes1.CountryAttribute.SettingsFlag, settingsFlag11)
					} else {
						attributes1.CountryAttribute.SettingsFlag[settingsFlagCount5].Enabled = settingsFlag11.Enabled
						attributes1.CountryAttribute.SettingsFlag[settingsFlagCount5].Name = settingsFlag11.Name
					}
				}
				attributes1.CountryAttribute.ShowInTable = types.BoolPointerValue(attributesItem.CountryAttribute.ShowInTable)
				attributes1.CountryAttribute.Sortable = types.BoolPointerValue(attributesItem.CountryAttribute.Sortable)
				if attributesItem.CountryAttribute.Type != nil {
					attributes1.CountryAttribute.Type = types.StringValue(string(*attributesItem.CountryAttribute.Type))
				} else {
					attributes1.CountryAttribute.Type = types.StringNull()
				}
				attributes1.CountryAttribute.ValueFormatter = types.StringPointerValue(attributesItem.CountryAttribute.ValueFormatter)
			}
			if attributesItem.CurrencyAttribute != nil {
				attributes1.CurrencyAttribute = &tfTypes.CurrencyAttribute{}
				attributes1.CurrencyAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.CurrencyAttribute.Purpose {
					attributes1.CurrencyAttribute.Purpose = append(attributes1.CurrencyAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.CurrencyAttribute.Constraints == nil {
					attributes1.CurrencyAttribute.Constraints = nil
				} else {
					attributes1.CurrencyAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				attributes1.CurrencyAttribute.Currency = []tfTypes.Currency{}
				for currencyCount, currencyItem := range attributesItem.CurrencyAttribute.Currency {
					var currency1 tfTypes.Currency
					if currencyItem.Currency1 != nil {
						currency1.One = &tfTypes.Currency1{}
						currency1.One.Code = types.StringValue(currencyItem.Currency1.Code)
						currency1.One.Description = types.StringValue(currencyItem.Currency1.Description)
						currency1.One.Flag = types.StringPointerValue(currencyItem.Currency1.Flag)
						currency1.One.Symbol = types.StringValue(currencyItem.Currency1.Symbol)
					}
					if currencyCount+1 > len(attributes1.CurrencyAttribute.Currency) {
						attributes1.CurrencyAttribute.Currency = append(attributes1.CurrencyAttribute.Currency, currency1)
					} else {
						attributes1.CurrencyAttribute.Currency[currencyCount].One = currency1.One
					}
				}
				attributes1.CurrencyAttribute.CurrencySelectorOnly = types.BoolPointerValue(attributesItem.CurrencyAttribute.CurrencySelectorOnly)
				if attributesItem.CurrencyAttribute.DefaultValue == nil {
					attributes1.CurrencyAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult6, _ := json.Marshal(attributesItem.CurrencyAttribute.DefaultValue)
					attributes1.CurrencyAttribute.DefaultValue = types.StringValue(string(defaultValueResult6))
				}
				attributes1.CurrencyAttribute.Deprecated = types.BoolPointerValue(attributesItem.CurrencyAttribute.Deprecated)
				attributes1.CurrencyAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.CurrencyAttribute.EntityBuilderDisableEdit)
				attributes1.CurrencyAttribute.FeatureFlag = types.StringPointerValue(attributesItem.CurrencyAttribute.FeatureFlag)
				attributes1.CurrencyAttribute.Group = types.StringPointerValue(attributesItem.CurrencyAttribute.Group)
				attributes1.CurrencyAttribute.Hidden = types.BoolPointerValue(attributesItem.CurrencyAttribute.Hidden)
				attributes1.CurrencyAttribute.HideLabel = types.BoolPointerValue(attributesItem.CurrencyAttribute.HideLabel)
				attributes1.CurrencyAttribute.Icon = types.StringPointerValue(attributesItem.CurrencyAttribute.Icon)
				attributes1.CurrencyAttribute.ID = types.StringPointerValue(attributesItem.CurrencyAttribute.ID)
				if attributesItem.CurrencyAttribute.InfoHelpers == nil {
					attributes1.CurrencyAttribute.InfoHelpers = nil
				} else {
					attributes1.CurrencyAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.CurrencyAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.CurrencyAttribute.InfoHelpers.HintCustomComponent)
					attributes1.CurrencyAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.CurrencyAttribute.InfoHelpers.HintText)
					attributes1.CurrencyAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.CurrencyAttribute.InfoHelpers.HintTextKey)
					attributes1.CurrencyAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.CurrencyAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.CurrencyAttribute.Label = types.StringValue(attributesItem.CurrencyAttribute.Label)
				attributes1.CurrencyAttribute.Layout = types.StringPointerValue(attributesItem.CurrencyAttribute.Layout)
				attributes1.CurrencyAttribute.Name = types.StringValue(attributesItem.CurrencyAttribute.Name)
				attributes1.CurrencyAttribute.Order = types.Int64PointerValue(attributesItem.CurrencyAttribute.Order)
				attributes1.CurrencyAttribute.Placeholder = types.StringPointerValue(attributesItem.CurrencyAttribute.Placeholder)
				attributes1.CurrencyAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.CurrencyAttribute.PreviewValueFormatter)
				attributes1.CurrencyAttribute.Protected = types.BoolPointerValue(attributesItem.CurrencyAttribute.Protected)
				attributes1.CurrencyAttribute.Readonly = types.BoolPointerValue(attributesItem.CurrencyAttribute.Readonly)
				attributes1.CurrencyAttribute.RenderCondition = types.StringPointerValue(attributesItem.CurrencyAttribute.RenderCondition)
				attributes1.CurrencyAttribute.Required = types.BoolPointerValue(attributesItem.CurrencyAttribute.Required)
				attributes1.CurrencyAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount6, settingsFlagItem6 := range attributesItem.CurrencyAttribute.SettingsFlag {
					var settingsFlag13 tfTypes.SettingFlag
					settingsFlag13.Enabled = types.BoolPointerValue(settingsFlagItem6.Enabled)
					settingsFlag13.Name = types.StringPointerValue(settingsFlagItem6.Name)
					if settingsFlagCount6+1 > len(attributes1.CurrencyAttribute.SettingsFlag) {
						attributes1.CurrencyAttribute.SettingsFlag = append(attributes1.CurrencyAttribute.SettingsFlag, settingsFlag13)
					} else {
						attributes1.CurrencyAttribute.SettingsFlag[settingsFlagCount6].Enabled = settingsFlag13.Enabled
						attributes1.CurrencyAttribute.SettingsFlag[settingsFlagCount6].Name = settingsFlag13.Name
					}
				}
				attributes1.CurrencyAttribute.ShowInTable = types.BoolPointerValue(attributesItem.CurrencyAttribute.ShowInTable)
				attributes1.CurrencyAttribute.Sortable = types.BoolPointerValue(attributesItem.CurrencyAttribute.Sortable)
				attributes1.CurrencyAttribute.Type = types.StringValue(string(attributesItem.CurrencyAttribute.Type))
				attributes1.CurrencyAttribute.ValueFormatter = types.StringPointerValue(attributesItem.CurrencyAttribute.ValueFormatter)
			}
			if attributesItem.DateAttribute != nil {
				attributes1.DateAttribute = &tfTypes.DateAttribute{}
				attributes1.DateAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.DateAttribute.Purpose {
					attributes1.DateAttribute.Purpose = append(attributes1.DateAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.DateAttribute.Constraints == nil {
					attributes1.DateAttribute.Constraints = nil
				} else {
					attributes1.DateAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.DateAttribute.DefaultValue == nil {
					attributes1.DateAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult7, _ := json.Marshal(attributesItem.DateAttribute.DefaultValue)
					attributes1.DateAttribute.DefaultValue = types.StringValue(string(defaultValueResult7))
				}
				attributes1.DateAttribute.Deprecated = types.BoolPointerValue(attributesItem.DateAttribute.Deprecated)
				attributes1.DateAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.DateAttribute.EntityBuilderDisableEdit)
				attributes1.DateAttribute.FeatureFlag = types.StringPointerValue(attributesItem.DateAttribute.FeatureFlag)
				attributes1.DateAttribute.Group = types.StringPointerValue(attributesItem.DateAttribute.Group)
				attributes1.DateAttribute.Hidden = types.BoolPointerValue(attributesItem.DateAttribute.Hidden)
				attributes1.DateAttribute.HideLabel = types.BoolPointerValue(attributesItem.DateAttribute.HideLabel)
				attributes1.DateAttribute.Icon = types.StringPointerValue(attributesItem.DateAttribute.Icon)
				attributes1.DateAttribute.ID = types.StringPointerValue(attributesItem.DateAttribute.ID)
				if attributesItem.DateAttribute.InfoHelpers == nil {
					attributes1.DateAttribute.InfoHelpers = nil
				} else {
					attributes1.DateAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.DateAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.DateAttribute.InfoHelpers.HintCustomComponent)
					attributes1.DateAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.DateAttribute.InfoHelpers.HintText)
					attributes1.DateAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.DateAttribute.InfoHelpers.HintTextKey)
					attributes1.DateAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.DateAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.DateAttribute.Label = types.StringValue(attributesItem.DateAttribute.Label)
				attributes1.DateAttribute.Layout = types.StringPointerValue(attributesItem.DateAttribute.Layout)
				attributes1.DateAttribute.Name = types.StringValue(attributesItem.DateAttribute.Name)
				attributes1.DateAttribute.Order = types.Int64PointerValue(attributesItem.DateAttribute.Order)
				attributes1.DateAttribute.Placeholder = types.StringPointerValue(attributesItem.DateAttribute.Placeholder)
				attributes1.DateAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.DateAttribute.PreviewValueFormatter)
				attributes1.DateAttribute.Protected = types.BoolPointerValue(attributesItem.DateAttribute.Protected)
				attributes1.DateAttribute.Readonly = types.BoolPointerValue(attributesItem.DateAttribute.Readonly)
				attributes1.DateAttribute.RenderCondition = types.StringPointerValue(attributesItem.DateAttribute.RenderCondition)
				attributes1.DateAttribute.Required = types.BoolPointerValue(attributesItem.DateAttribute.Required)
				attributes1.DateAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount7, settingsFlagItem7 := range attributesItem.DateAttribute.SettingsFlag {
					var settingsFlag15 tfTypes.SettingFlag
					settingsFlag15.Enabled = types.BoolPointerValue(settingsFlagItem7.Enabled)
					settingsFlag15.Name = types.StringPointerValue(settingsFlagItem7.Name)
					if settingsFlagCount7+1 > len(attributes1.DateAttribute.SettingsFlag) {
						attributes1.DateAttribute.SettingsFlag = append(attributes1.DateAttribute.SettingsFlag, settingsFlag15)
					} else {
						attributes1.DateAttribute.SettingsFlag[settingsFlagCount7].Enabled = settingsFlag15.Enabled
						attributes1.DateAttribute.SettingsFlag[settingsFlagCount7].Name = settingsFlag15.Name
					}
				}
				attributes1.DateAttribute.ShowInTable = types.BoolPointerValue(attributesItem.DateAttribute.ShowInTable)
				attributes1.DateAttribute.Sortable = types.BoolPointerValue(attributesItem.DateAttribute.Sortable)
				if attributesItem.DateAttribute.Type != nil {
					attributes1.DateAttribute.Type = types.StringValue(string(*attributesItem.DateAttribute.Type))
				} else {
					attributes1.DateAttribute.Type = types.StringNull()
				}
				attributes1.DateAttribute.ValueFormatter = types.StringPointerValue(attributesItem.DateAttribute.ValueFormatter)
			}
			if attributesItem.FileAttribute != nil {
				attributes1.FileAttribute = &tfTypes.FileAttribute{}
				attributes1.FileAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.FileAttribute.Purpose {
					attributes1.FileAttribute.Purpose = append(attributes1.FileAttribute.Purpose, types.StringValue(v))
				}
				attributes1.FileAttribute.AllowedExtensions = []types.String{}
				for _, v := range attributesItem.FileAttribute.AllowedExtensions {
					attributes1.FileAttribute.AllowedExtensions = append(attributes1.FileAttribute.AllowedExtensions, types.StringValue(v))
				}
				if attributesItem.FileAttribute.Constraints == nil {
					attributes1.FileAttribute.Constraints = nil
				} else {
					attributes1.FileAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.FileAttribute.DefaultAccessControl != nil {
					attributes1.FileAttribute.DefaultAccessControl = types.StringValue(string(*attributesItem.FileAttribute.DefaultAccessControl))
				} else {
					attributes1.FileAttribute.DefaultAccessControl = types.StringNull()
				}
				if attributesItem.FileAttribute.DefaultValue == nil {
					attributes1.FileAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult8, _ := json.Marshal(attributesItem.FileAttribute.DefaultValue)
					attributes1.FileAttribute.DefaultValue = types.StringValue(string(defaultValueResult8))
				}
				attributes1.FileAttribute.Deprecated = types.BoolPointerValue(attributesItem.FileAttribute.Deprecated)
				attributes1.FileAttribute.DisplayImagesLandscaped = types.BoolPointerValue(attributesItem.FileAttribute.DisplayImagesLandscaped)
				attributes1.FileAttribute.EnableDescription = types.BoolPointerValue(attributesItem.FileAttribute.EnableDescription)
				attributes1.FileAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.FileAttribute.EntityBuilderDisableEdit)
				attributes1.FileAttribute.FeatureFlag = types.StringPointerValue(attributesItem.FileAttribute.FeatureFlag)
				attributes1.FileAttribute.Group = types.StringPointerValue(attributesItem.FileAttribute.Group)
				attributes1.FileAttribute.Hidden = types.BoolPointerValue(attributesItem.FileAttribute.Hidden)
				attributes1.FileAttribute.HideLabel = types.BoolPointerValue(attributesItem.FileAttribute.HideLabel)
				attributes1.FileAttribute.Icon = types.StringPointerValue(attributesItem.FileAttribute.Icon)
				attributes1.FileAttribute.ID = types.StringPointerValue(attributesItem.FileAttribute.ID)
				if attributesItem.FileAttribute.InfoHelpers == nil {
					attributes1.FileAttribute.InfoHelpers = nil
				} else {
					attributes1.FileAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.FileAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.FileAttribute.InfoHelpers.HintCustomComponent)
					attributes1.FileAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.FileAttribute.InfoHelpers.HintText)
					attributes1.FileAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.FileAttribute.InfoHelpers.HintTextKey)
					attributes1.FileAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.FileAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.FileAttribute.Label = types.StringValue(attributesItem.FileAttribute.Label)
				attributes1.FileAttribute.Layout = types.StringPointerValue(attributesItem.FileAttribute.Layout)
				attributes1.FileAttribute.Multiple = types.BoolPointerValue(attributesItem.FileAttribute.Multiple)
				attributes1.FileAttribute.Name = types.StringValue(attributesItem.FileAttribute.Name)
				attributes1.FileAttribute.Order = types.Int64PointerValue(attributesItem.FileAttribute.Order)
				attributes1.FileAttribute.Placeholder = types.StringPointerValue(attributesItem.FileAttribute.Placeholder)
				attributes1.FileAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.FileAttribute.PreviewValueFormatter)
				attributes1.FileAttribute.Protected = types.BoolPointerValue(attributesItem.FileAttribute.Protected)
				attributes1.FileAttribute.Readonly = types.BoolPointerValue(attributesItem.FileAttribute.Readonly)
				attributes1.FileAttribute.RenderCondition = types.StringPointerValue(attributesItem.FileAttribute.RenderCondition)
				attributes1.FileAttribute.Required = types.BoolPointerValue(attributesItem.FileAttribute.Required)
				attributes1.FileAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount8, settingsFlagItem8 := range attributesItem.FileAttribute.SettingsFlag {
					var settingsFlag17 tfTypes.SettingFlag
					settingsFlag17.Enabled = types.BoolPointerValue(settingsFlagItem8.Enabled)
					settingsFlag17.Name = types.StringPointerValue(settingsFlagItem8.Name)
					if settingsFlagCount8+1 > len(attributes1.FileAttribute.SettingsFlag) {
						attributes1.FileAttribute.SettingsFlag = append(attributes1.FileAttribute.SettingsFlag, settingsFlag17)
					} else {
						attributes1.FileAttribute.SettingsFlag[settingsFlagCount8].Enabled = settingsFlag17.Enabled
						attributes1.FileAttribute.SettingsFlag[settingsFlagCount8].Name = settingsFlag17.Name
					}
				}
				attributes1.FileAttribute.ShowInTable = types.BoolPointerValue(attributesItem.FileAttribute.ShowInTable)
				attributes1.FileAttribute.Sortable = types.BoolPointerValue(attributesItem.FileAttribute.Sortable)
				attributes1.FileAttribute.Type = types.StringValue(string(attributesItem.FileAttribute.Type))
				attributes1.FileAttribute.ValueFormatter = types.StringPointerValue(attributesItem.FileAttribute.ValueFormatter)
			}
			if attributesItem.InternalAttribute != nil {
				attributes1.InternalAttribute = &tfTypes.InternalAttribute{}
				attributes1.InternalAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.InternalAttribute.Purpose {
					attributes1.InternalAttribute.Purpose = append(attributes1.InternalAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.InternalAttribute.Constraints == nil {
					attributes1.InternalAttribute.Constraints = nil
				} else {
					attributes1.InternalAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.InternalAttribute.DefaultValue == nil {
					attributes1.InternalAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult9, _ := json.Marshal(attributesItem.InternalAttribute.DefaultValue)
					attributes1.InternalAttribute.DefaultValue = types.StringValue(string(defaultValueResult9))
				}
				attributes1.InternalAttribute.Deprecated = types.BoolPointerValue(attributesItem.InternalAttribute.Deprecated)
				attributes1.InternalAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.InternalAttribute.EntityBuilderDisableEdit)
				attributes1.InternalAttribute.FeatureFlag = types.StringPointerValue(attributesItem.InternalAttribute.FeatureFlag)
				attributes1.InternalAttribute.Group = types.StringPointerValue(attributesItem.InternalAttribute.Group)
				attributes1.InternalAttribute.Hidden = types.BoolPointerValue(attributesItem.InternalAttribute.Hidden)
				attributes1.InternalAttribute.HideLabel = types.BoolPointerValue(attributesItem.InternalAttribute.HideLabel)
				attributes1.InternalAttribute.Icon = types.StringPointerValue(attributesItem.InternalAttribute.Icon)
				attributes1.InternalAttribute.ID = types.StringPointerValue(attributesItem.InternalAttribute.ID)
				if attributesItem.InternalAttribute.InfoHelpers == nil {
					attributes1.InternalAttribute.InfoHelpers = nil
				} else {
					attributes1.InternalAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.InternalAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.InternalAttribute.InfoHelpers.HintCustomComponent)
					attributes1.InternalAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.InternalAttribute.InfoHelpers.HintText)
					attributes1.InternalAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.InternalAttribute.InfoHelpers.HintTextKey)
					attributes1.InternalAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.InternalAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.InternalAttribute.Label = types.StringValue(attributesItem.InternalAttribute.Label)
				attributes1.InternalAttribute.Layout = types.StringPointerValue(attributesItem.InternalAttribute.Layout)
				attributes1.InternalAttribute.Name = types.StringValue(attributesItem.InternalAttribute.Name)
				attributes1.InternalAttribute.Order = types.Int64PointerValue(attributesItem.InternalAttribute.Order)
				attributes1.InternalAttribute.Placeholder = types.StringPointerValue(attributesItem.InternalAttribute.Placeholder)
				attributes1.InternalAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.InternalAttribute.PreviewValueFormatter)
				attributes1.InternalAttribute.Protected = types.BoolPointerValue(attributesItem.InternalAttribute.Protected)
				attributes1.InternalAttribute.Readonly = types.BoolPointerValue(attributesItem.InternalAttribute.Readonly)
				attributes1.InternalAttribute.RenderCondition = types.StringPointerValue(attributesItem.InternalAttribute.RenderCondition)
				attributes1.InternalAttribute.Required = types.BoolPointerValue(attributesItem.InternalAttribute.Required)
				attributes1.InternalAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount9, settingsFlagItem9 := range attributesItem.InternalAttribute.SettingsFlag {
					var settingsFlag19 tfTypes.SettingFlag
					settingsFlag19.Enabled = types.BoolPointerValue(settingsFlagItem9.Enabled)
					settingsFlag19.Name = types.StringPointerValue(settingsFlagItem9.Name)
					if settingsFlagCount9+1 > len(attributes1.InternalAttribute.SettingsFlag) {
						attributes1.InternalAttribute.SettingsFlag = append(attributes1.InternalAttribute.SettingsFlag, settingsFlag19)
					} else {
						attributes1.InternalAttribute.SettingsFlag[settingsFlagCount9].Enabled = settingsFlag19.Enabled
						attributes1.InternalAttribute.SettingsFlag[settingsFlagCount9].Name = settingsFlag19.Name
					}
				}
				attributes1.InternalAttribute.ShowInTable = types.BoolPointerValue(attributesItem.InternalAttribute.ShowInTable)
				attributes1.InternalAttribute.Sortable = types.BoolPointerValue(attributesItem.InternalAttribute.Sortable)
				if attributesItem.InternalAttribute.Type != nil {
					attributes1.InternalAttribute.Type = types.StringValue(string(*attributesItem.InternalAttribute.Type))
				} else {
					attributes1.InternalAttribute.Type = types.StringNull()
				}
				attributes1.InternalAttribute.ValueFormatter = types.StringPointerValue(attributesItem.InternalAttribute.ValueFormatter)
			}
			if attributesItem.InternalUserAttribute != nil {
				attributes1.InternalUserAttribute = &tfTypes.InternalUserAttribute{}
				attributes1.InternalUserAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.InternalUserAttribute.Purpose {
					attributes1.InternalUserAttribute.Purpose = append(attributes1.InternalUserAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.InternalUserAttribute.Constraints == nil {
					attributes1.InternalUserAttribute.Constraints = nil
				} else {
					attributes1.InternalUserAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.InternalUserAttribute.DefaultValue == nil {
					attributes1.InternalUserAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult10, _ := json.Marshal(attributesItem.InternalUserAttribute.DefaultValue)
					attributes1.InternalUserAttribute.DefaultValue = types.StringValue(string(defaultValueResult10))
				}
				attributes1.InternalUserAttribute.Deprecated = types.BoolPointerValue(attributesItem.InternalUserAttribute.Deprecated)
				attributes1.InternalUserAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.InternalUserAttribute.EntityBuilderDisableEdit)
				attributes1.InternalUserAttribute.FeatureFlag = types.StringPointerValue(attributesItem.InternalUserAttribute.FeatureFlag)
				attributes1.InternalUserAttribute.Group = types.StringPointerValue(attributesItem.InternalUserAttribute.Group)
				attributes1.InternalUserAttribute.Hidden = types.BoolPointerValue(attributesItem.InternalUserAttribute.Hidden)
				attributes1.InternalUserAttribute.HideLabel = types.BoolPointerValue(attributesItem.InternalUserAttribute.HideLabel)
				attributes1.InternalUserAttribute.Icon = types.StringPointerValue(attributesItem.InternalUserAttribute.Icon)
				attributes1.InternalUserAttribute.ID = types.StringPointerValue(attributesItem.InternalUserAttribute.ID)
				if attributesItem.InternalUserAttribute.InfoHelpers == nil {
					attributes1.InternalUserAttribute.InfoHelpers = nil
				} else {
					attributes1.InternalUserAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.InternalUserAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.InternalUserAttribute.InfoHelpers.HintCustomComponent)
					attributes1.InternalUserAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.InternalUserAttribute.InfoHelpers.HintText)
					attributes1.InternalUserAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.InternalUserAttribute.InfoHelpers.HintTextKey)
					attributes1.InternalUserAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.InternalUserAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.InternalUserAttribute.Label = types.StringValue(attributesItem.InternalUserAttribute.Label)
				attributes1.InternalUserAttribute.Layout = types.StringPointerValue(attributesItem.InternalUserAttribute.Layout)
				attributes1.InternalUserAttribute.Name = types.StringValue(attributesItem.InternalUserAttribute.Name)
				attributes1.InternalUserAttribute.Order = types.Int64PointerValue(attributesItem.InternalUserAttribute.Order)
				attributes1.InternalUserAttribute.Placeholder = types.StringPointerValue(attributesItem.InternalUserAttribute.Placeholder)
				attributes1.InternalUserAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.InternalUserAttribute.PreviewValueFormatter)
				attributes1.InternalUserAttribute.Protected = types.BoolPointerValue(attributesItem.InternalUserAttribute.Protected)
				attributes1.InternalUserAttribute.Readonly = types.BoolPointerValue(attributesItem.InternalUserAttribute.Readonly)
				attributes1.InternalUserAttribute.RenderCondition = types.StringPointerValue(attributesItem.InternalUserAttribute.RenderCondition)
				attributes1.InternalUserAttribute.Required = types.BoolPointerValue(attributesItem.InternalUserAttribute.Required)
				attributes1.InternalUserAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount10, settingsFlagItem10 := range attributesItem.InternalUserAttribute.SettingsFlag {
					var settingsFlag21 tfTypes.SettingFlag
					settingsFlag21.Enabled = types.BoolPointerValue(settingsFlagItem10.Enabled)
					settingsFlag21.Name = types.StringPointerValue(settingsFlagItem10.Name)
					if settingsFlagCount10+1 > len(attributes1.InternalUserAttribute.SettingsFlag) {
						attributes1.InternalUserAttribute.SettingsFlag = append(attributes1.InternalUserAttribute.SettingsFlag, settingsFlag21)
					} else {
						attributes1.InternalUserAttribute.SettingsFlag[settingsFlagCount10].Enabled = settingsFlag21.Enabled
						attributes1.InternalUserAttribute.SettingsFlag[settingsFlagCount10].Name = settingsFlag21.Name
					}
				}
				attributes1.InternalUserAttribute.ShowInTable = types.BoolPointerValue(attributesItem.InternalUserAttribute.ShowInTable)
				attributes1.InternalUserAttribute.Sortable = types.BoolPointerValue(attributesItem.InternalUserAttribute.Sortable)
				if attributesItem.InternalUserAttribute.Type != nil {
					attributes1.InternalUserAttribute.Type = types.StringValue(string(*attributesItem.InternalUserAttribute.Type))
				} else {
					attributes1.InternalUserAttribute.Type = types.StringNull()
				}
				attributes1.InternalUserAttribute.ValueFormatter = types.StringPointerValue(attributesItem.InternalUserAttribute.ValueFormatter)
			}
			if attributesItem.InvitationEmailAttribute != nil {
				attributes1.InvitationEmailAttribute = &tfTypes.InvitationEmailAttribute{}
				attributes1.InvitationEmailAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.InvitationEmailAttribute.Purpose {
					attributes1.InvitationEmailAttribute.Purpose = append(attributes1.InvitationEmailAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.InvitationEmailAttribute.Constraints == nil {
					attributes1.InvitationEmailAttribute.Constraints = nil
				} else {
					attributes1.InvitationEmailAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.InvitationEmailAttribute.DefaultValue == nil {
					attributes1.InvitationEmailAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult11, _ := json.Marshal(attributesItem.InvitationEmailAttribute.DefaultValue)
					attributes1.InvitationEmailAttribute.DefaultValue = types.StringValue(string(defaultValueResult11))
				}
				attributes1.InvitationEmailAttribute.Deprecated = types.BoolPointerValue(attributesItem.InvitationEmailAttribute.Deprecated)
				attributes1.InvitationEmailAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.InvitationEmailAttribute.EntityBuilderDisableEdit)
				attributes1.InvitationEmailAttribute.FeatureFlag = types.StringPointerValue(attributesItem.InvitationEmailAttribute.FeatureFlag)
				attributes1.InvitationEmailAttribute.Group = types.StringPointerValue(attributesItem.InvitationEmailAttribute.Group)
				attributes1.InvitationEmailAttribute.Hidden = types.BoolPointerValue(attributesItem.InvitationEmailAttribute.Hidden)
				attributes1.InvitationEmailAttribute.HideLabel = types.BoolPointerValue(attributesItem.InvitationEmailAttribute.HideLabel)
				attributes1.InvitationEmailAttribute.Icon = types.StringPointerValue(attributesItem.InvitationEmailAttribute.Icon)
				attributes1.InvitationEmailAttribute.ID = types.StringPointerValue(attributesItem.InvitationEmailAttribute.ID)
				if attributesItem.InvitationEmailAttribute.InfoHelpers == nil {
					attributes1.InvitationEmailAttribute.InfoHelpers = nil
				} else {
					attributes1.InvitationEmailAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.InvitationEmailAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.InvitationEmailAttribute.InfoHelpers.HintCustomComponent)
					attributes1.InvitationEmailAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.InvitationEmailAttribute.InfoHelpers.HintText)
					attributes1.InvitationEmailAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.InvitationEmailAttribute.InfoHelpers.HintTextKey)
					attributes1.InvitationEmailAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.InvitationEmailAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.InvitationEmailAttribute.Label = types.StringValue(attributesItem.InvitationEmailAttribute.Label)
				attributes1.InvitationEmailAttribute.Layout = types.StringPointerValue(attributesItem.InvitationEmailAttribute.Layout)
				attributes1.InvitationEmailAttribute.Name = types.StringValue(attributesItem.InvitationEmailAttribute.Name)
				attributes1.InvitationEmailAttribute.Order = types.Int64PointerValue(attributesItem.InvitationEmailAttribute.Order)
				attributes1.InvitationEmailAttribute.Placeholder = types.StringPointerValue(attributesItem.InvitationEmailAttribute.Placeholder)
				attributes1.InvitationEmailAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.InvitationEmailAttribute.PreviewValueFormatter)
				attributes1.InvitationEmailAttribute.Protected = types.BoolPointerValue(attributesItem.InvitationEmailAttribute.Protected)
				attributes1.InvitationEmailAttribute.Readonly = types.BoolPointerValue(attributesItem.InvitationEmailAttribute.Readonly)
				attributes1.InvitationEmailAttribute.RenderCondition = types.StringPointerValue(attributesItem.InvitationEmailAttribute.RenderCondition)
				attributes1.InvitationEmailAttribute.Required = types.BoolPointerValue(attributesItem.InvitationEmailAttribute.Required)
				attributes1.InvitationEmailAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount11, settingsFlagItem11 := range attributesItem.InvitationEmailAttribute.SettingsFlag {
					var settingsFlag23 tfTypes.SettingFlag
					settingsFlag23.Enabled = types.BoolPointerValue(settingsFlagItem11.Enabled)
					settingsFlag23.Name = types.StringPointerValue(settingsFlagItem11.Name)
					if settingsFlagCount11+1 > len(attributes1.InvitationEmailAttribute.SettingsFlag) {
						attributes1.InvitationEmailAttribute.SettingsFlag = append(attributes1.InvitationEmailAttribute.SettingsFlag, settingsFlag23)
					} else {
						attributes1.InvitationEmailAttribute.SettingsFlag[settingsFlagCount11].Enabled = settingsFlag23.Enabled
						attributes1.InvitationEmailAttribute.SettingsFlag[settingsFlagCount11].Name = settingsFlag23.Name
					}
				}
				attributes1.InvitationEmailAttribute.ShowInTable = types.BoolPointerValue(attributesItem.InvitationEmailAttribute.ShowInTable)
				attributes1.InvitationEmailAttribute.Sortable = types.BoolPointerValue(attributesItem.InvitationEmailAttribute.Sortable)
				if attributesItem.InvitationEmailAttribute.Type != nil {
					attributes1.InvitationEmailAttribute.Type = types.StringValue(string(*attributesItem.InvitationEmailAttribute.Type))
				} else {
					attributes1.InvitationEmailAttribute.Type = types.StringNull()
				}
				attributes1.InvitationEmailAttribute.ValueFormatter = types.StringPointerValue(attributesItem.InvitationEmailAttribute.ValueFormatter)
			}
			if attributesItem.LinkAttribute != nil {
				attributes1.LinkAttribute = &tfTypes.LinkAttribute{}
				attributes1.LinkAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.LinkAttribute.Purpose {
					attributes1.LinkAttribute.Purpose = append(attributes1.LinkAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.LinkAttribute.Constraints == nil {
					attributes1.LinkAttribute.Constraints = nil
				} else {
					attributes1.LinkAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.LinkAttribute.DefaultValue == nil {
					attributes1.LinkAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult12, _ := json.Marshal(attributesItem.LinkAttribute.DefaultValue)
					attributes1.LinkAttribute.DefaultValue = types.StringValue(string(defaultValueResult12))
				}
				attributes1.LinkAttribute.Deprecated = types.BoolPointerValue(attributesItem.LinkAttribute.Deprecated)
				attributes1.LinkAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.LinkAttribute.EntityBuilderDisableEdit)
				attributes1.LinkAttribute.FeatureFlag = types.StringPointerValue(attributesItem.LinkAttribute.FeatureFlag)
				attributes1.LinkAttribute.Group = types.StringPointerValue(attributesItem.LinkAttribute.Group)
				attributes1.LinkAttribute.Hidden = types.BoolPointerValue(attributesItem.LinkAttribute.Hidden)
				attributes1.LinkAttribute.HideLabel = types.BoolPointerValue(attributesItem.LinkAttribute.HideLabel)
				attributes1.LinkAttribute.Icon = types.StringPointerValue(attributesItem.LinkAttribute.Icon)
				attributes1.LinkAttribute.ID = types.StringPointerValue(attributesItem.LinkAttribute.ID)
				if attributesItem.LinkAttribute.InfoHelpers == nil {
					attributes1.LinkAttribute.InfoHelpers = nil
				} else {
					attributes1.LinkAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.LinkAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.LinkAttribute.InfoHelpers.HintCustomComponent)
					attributes1.LinkAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.LinkAttribute.InfoHelpers.HintText)
					attributes1.LinkAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.LinkAttribute.InfoHelpers.HintTextKey)
					attributes1.LinkAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.LinkAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.LinkAttribute.Label = types.StringValue(attributesItem.LinkAttribute.Label)
				attributes1.LinkAttribute.Layout = types.StringPointerValue(attributesItem.LinkAttribute.Layout)
				attributes1.LinkAttribute.Name = types.StringValue(attributesItem.LinkAttribute.Name)
				attributes1.LinkAttribute.Order = types.Int64PointerValue(attributesItem.LinkAttribute.Order)
				attributes1.LinkAttribute.Placeholder = types.StringPointerValue(attributesItem.LinkAttribute.Placeholder)
				attributes1.LinkAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.LinkAttribute.PreviewValueFormatter)
				attributes1.LinkAttribute.Protected = types.BoolPointerValue(attributesItem.LinkAttribute.Protected)
				attributes1.LinkAttribute.Readonly = types.BoolPointerValue(attributesItem.LinkAttribute.Readonly)
				attributes1.LinkAttribute.RenderCondition = types.StringPointerValue(attributesItem.LinkAttribute.RenderCondition)
				attributes1.LinkAttribute.Required = types.BoolPointerValue(attributesItem.LinkAttribute.Required)
				attributes1.LinkAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount12, settingsFlagItem12 := range attributesItem.LinkAttribute.SettingsFlag {
					var settingsFlag25 tfTypes.SettingFlag
					settingsFlag25.Enabled = types.BoolPointerValue(settingsFlagItem12.Enabled)
					settingsFlag25.Name = types.StringPointerValue(settingsFlagItem12.Name)
					if settingsFlagCount12+1 > len(attributes1.LinkAttribute.SettingsFlag) {
						attributes1.LinkAttribute.SettingsFlag = append(attributes1.LinkAttribute.SettingsFlag, settingsFlag25)
					} else {
						attributes1.LinkAttribute.SettingsFlag[settingsFlagCount12].Enabled = settingsFlag25.Enabled
						attributes1.LinkAttribute.SettingsFlag[settingsFlagCount12].Name = settingsFlag25.Name
					}
				}
				attributes1.LinkAttribute.ShowInTable = types.BoolPointerValue(attributesItem.LinkAttribute.ShowInTable)
				attributes1.LinkAttribute.Sortable = types.BoolPointerValue(attributesItem.LinkAttribute.Sortable)
				if attributesItem.LinkAttribute.Type != nil {
					attributes1.LinkAttribute.Type = types.StringValue(string(*attributesItem.LinkAttribute.Type))
				} else {
					attributes1.LinkAttribute.Type = types.StringNull()
				}
				attributes1.LinkAttribute.ValueFormatter = types.StringPointerValue(attributesItem.LinkAttribute.ValueFormatter)
			}
			if attributesItem.MultiSelectAttribute != nil {
				attributes1.MultiSelectAttribute = &tfTypes.MultiSelectAttribute{}
				attributes1.MultiSelectAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.MultiSelectAttribute.Purpose {
					attributes1.MultiSelectAttribute.Purpose = append(attributes1.MultiSelectAttribute.Purpose, types.StringValue(v))
				}
				attributes1.MultiSelectAttribute.AllowAny = types.BoolPointerValue(attributesItem.MultiSelectAttribute.AllowAny)
				attributes1.MultiSelectAttribute.AllowExtraOptions = types.BoolPointerValue(attributesItem.MultiSelectAttribute.AllowExtraOptions)
				if attributesItem.MultiSelectAttribute.Constraints == nil {
					attributes1.MultiSelectAttribute.Constraints = nil
				} else {
					attributes1.MultiSelectAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.MultiSelectAttribute.DefaultValue == nil {
					attributes1.MultiSelectAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult13, _ := json.Marshal(attributesItem.MultiSelectAttribute.DefaultValue)
					attributes1.MultiSelectAttribute.DefaultValue = types.StringValue(string(defaultValueResult13))
				}
				attributes1.MultiSelectAttribute.Deprecated = types.BoolPointerValue(attributesItem.MultiSelectAttribute.Deprecated)
				attributes1.MultiSelectAttribute.DisableCaseSensitive = types.BoolPointerValue(attributesItem.MultiSelectAttribute.DisableCaseSensitive)
				attributes1.MultiSelectAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.MultiSelectAttribute.EntityBuilderDisableEdit)
				attributes1.MultiSelectAttribute.FeatureFlag = types.StringPointerValue(attributesItem.MultiSelectAttribute.FeatureFlag)
				attributes1.MultiSelectAttribute.Group = types.StringPointerValue(attributesItem.MultiSelectAttribute.Group)
				attributes1.MultiSelectAttribute.Hidden = types.BoolPointerValue(attributesItem.MultiSelectAttribute.Hidden)
				attributes1.MultiSelectAttribute.HideLabel = types.BoolPointerValue(attributesItem.MultiSelectAttribute.HideLabel)
				attributes1.MultiSelectAttribute.Icon = types.StringPointerValue(attributesItem.MultiSelectAttribute.Icon)
				attributes1.MultiSelectAttribute.ID = types.StringPointerValue(attributesItem.MultiSelectAttribute.ID)
				if attributesItem.MultiSelectAttribute.InfoHelpers == nil {
					attributes1.MultiSelectAttribute.InfoHelpers = nil
				} else {
					attributes1.MultiSelectAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.MultiSelectAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.MultiSelectAttribute.InfoHelpers.HintCustomComponent)
					attributes1.MultiSelectAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.MultiSelectAttribute.InfoHelpers.HintText)
					attributes1.MultiSelectAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.MultiSelectAttribute.InfoHelpers.HintTextKey)
					attributes1.MultiSelectAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.MultiSelectAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.MultiSelectAttribute.Label = types.StringValue(attributesItem.MultiSelectAttribute.Label)
				attributes1.MultiSelectAttribute.Layout = types.StringPointerValue(attributesItem.MultiSelectAttribute.Layout)
				attributes1.MultiSelectAttribute.Name = types.StringValue(attributesItem.MultiSelectAttribute.Name)
				attributes1.MultiSelectAttribute.Options = []tfTypes.MultiSelectAttributeOptions{}
				for optionsCount, optionsItem := range attributesItem.MultiSelectAttribute.Options {
					var options1 tfTypes.MultiSelectAttributeOptions
					if optionsItem.Str != nil {
						options1.Str = types.StringPointerValue(optionsItem.Str)
					}
					if optionsItem.Two != nil {
						options1.Two = &tfTypes.Two{}
						options1.Two.Title = types.StringPointerValue(optionsItem.Two.Title)
						options1.Two.Value = types.StringValue(optionsItem.Two.Value)
					}
					if optionsCount+1 > len(attributes1.MultiSelectAttribute.Options) {
						attributes1.MultiSelectAttribute.Options = append(attributes1.MultiSelectAttribute.Options, options1)
					} else {
						attributes1.MultiSelectAttribute.Options[optionsCount].Str = options1.Str
						attributes1.MultiSelectAttribute.Options[optionsCount].Two = options1.Two
					}
				}
				attributes1.MultiSelectAttribute.Order = types.Int64PointerValue(attributesItem.MultiSelectAttribute.Order)
				attributes1.MultiSelectAttribute.Placeholder = types.StringPointerValue(attributesItem.MultiSelectAttribute.Placeholder)
				attributes1.MultiSelectAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.MultiSelectAttribute.PreviewValueFormatter)
				attributes1.MultiSelectAttribute.Protected = types.BoolPointerValue(attributesItem.MultiSelectAttribute.Protected)
				attributes1.MultiSelectAttribute.Readonly = types.BoolPointerValue(attributesItem.MultiSelectAttribute.Readonly)
				attributes1.MultiSelectAttribute.RenderCondition = types.StringPointerValue(attributesItem.MultiSelectAttribute.RenderCondition)
				attributes1.MultiSelectAttribute.Required = types.BoolPointerValue(attributesItem.MultiSelectAttribute.Required)
				attributes1.MultiSelectAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount13, settingsFlagItem13 := range attributesItem.MultiSelectAttribute.SettingsFlag {
					var settingsFlag27 tfTypes.SettingFlag
					settingsFlag27.Enabled = types.BoolPointerValue(settingsFlagItem13.Enabled)
					settingsFlag27.Name = types.StringPointerValue(settingsFlagItem13.Name)
					if settingsFlagCount13+1 > len(attributes1.MultiSelectAttribute.SettingsFlag) {
						attributes1.MultiSelectAttribute.SettingsFlag = append(attributes1.MultiSelectAttribute.SettingsFlag, settingsFlag27)
					} else {
						attributes1.MultiSelectAttribute.SettingsFlag[settingsFlagCount13].Enabled = settingsFlag27.Enabled
						attributes1.MultiSelectAttribute.SettingsFlag[settingsFlagCount13].Name = settingsFlag27.Name
					}
				}
				attributes1.MultiSelectAttribute.ShowInTable = types.BoolPointerValue(attributesItem.MultiSelectAttribute.ShowInTable)
				attributes1.MultiSelectAttribute.Sortable = types.BoolPointerValue(attributesItem.MultiSelectAttribute.Sortable)
				if attributesItem.MultiSelectAttribute.Type != nil {
					attributes1.MultiSelectAttribute.Type = types.StringValue(string(*attributesItem.MultiSelectAttribute.Type))
				} else {
					attributes1.MultiSelectAttribute.Type = types.StringNull()
				}
				attributes1.MultiSelectAttribute.ValueFormatter = types.StringPointerValue(attributesItem.MultiSelectAttribute.ValueFormatter)
			}
			if attributesItem.NumberAttribute != nil {
				attributes1.NumberAttribute = &tfTypes.NumberAttribute{}
				attributes1.NumberAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.NumberAttribute.Purpose {
					attributes1.NumberAttribute.Purpose = append(attributes1.NumberAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.NumberAttribute.Constraints == nil {
					attributes1.NumberAttribute.Constraints = nil
				} else {
					attributes1.NumberAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.NumberAttribute.DefaultValue == nil {
					attributes1.NumberAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult14, _ := json.Marshal(attributesItem.NumberAttribute.DefaultValue)
					attributes1.NumberAttribute.DefaultValue = types.StringValue(string(defaultValueResult14))
				}
				attributes1.NumberAttribute.Deprecated = types.BoolPointerValue(attributesItem.NumberAttribute.Deprecated)
				attributes1.NumberAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.NumberAttribute.EntityBuilderDisableEdit)
				attributes1.NumberAttribute.FeatureFlag = types.StringPointerValue(attributesItem.NumberAttribute.FeatureFlag)
				attributes1.NumberAttribute.Format = types.StringPointerValue(attributesItem.NumberAttribute.Format)
				attributes1.NumberAttribute.Group = types.StringPointerValue(attributesItem.NumberAttribute.Group)
				attributes1.NumberAttribute.Hidden = types.BoolPointerValue(attributesItem.NumberAttribute.Hidden)
				attributes1.NumberAttribute.HideLabel = types.BoolPointerValue(attributesItem.NumberAttribute.HideLabel)
				attributes1.NumberAttribute.Icon = types.StringPointerValue(attributesItem.NumberAttribute.Icon)
				attributes1.NumberAttribute.ID = types.StringPointerValue(attributesItem.NumberAttribute.ID)
				if attributesItem.NumberAttribute.InfoHelpers == nil {
					attributes1.NumberAttribute.InfoHelpers = nil
				} else {
					attributes1.NumberAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.NumberAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.NumberAttribute.InfoHelpers.HintCustomComponent)
					attributes1.NumberAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.NumberAttribute.InfoHelpers.HintText)
					attributes1.NumberAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.NumberAttribute.InfoHelpers.HintTextKey)
					attributes1.NumberAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.NumberAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.NumberAttribute.Label = types.StringValue(attributesItem.NumberAttribute.Label)
				attributes1.NumberAttribute.Layout = types.StringPointerValue(attributesItem.NumberAttribute.Layout)
				attributes1.NumberAttribute.Name = types.StringValue(attributesItem.NumberAttribute.Name)
				attributes1.NumberAttribute.Order = types.Int64PointerValue(attributesItem.NumberAttribute.Order)
				attributes1.NumberAttribute.Placeholder = types.StringPointerValue(attributesItem.NumberAttribute.Placeholder)
				attributes1.NumberAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.NumberAttribute.PreviewValueFormatter)
				attributes1.NumberAttribute.Protected = types.BoolPointerValue(attributesItem.NumberAttribute.Protected)
				attributes1.NumberAttribute.Readonly = types.BoolPointerValue(attributesItem.NumberAttribute.Readonly)
				attributes1.NumberAttribute.RenderCondition = types.StringPointerValue(attributesItem.NumberAttribute.RenderCondition)
				attributes1.NumberAttribute.Required = types.BoolPointerValue(attributesItem.NumberAttribute.Required)
				attributes1.NumberAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount14, settingsFlagItem14 := range attributesItem.NumberAttribute.SettingsFlag {
					var settingsFlag29 tfTypes.SettingFlag
					settingsFlag29.Enabled = types.BoolPointerValue(settingsFlagItem14.Enabled)
					settingsFlag29.Name = types.StringPointerValue(settingsFlagItem14.Name)
					if settingsFlagCount14+1 > len(attributes1.NumberAttribute.SettingsFlag) {
						attributes1.NumberAttribute.SettingsFlag = append(attributes1.NumberAttribute.SettingsFlag, settingsFlag29)
					} else {
						attributes1.NumberAttribute.SettingsFlag[settingsFlagCount14].Enabled = settingsFlag29.Enabled
						attributes1.NumberAttribute.SettingsFlag[settingsFlagCount14].Name = settingsFlag29.Name
					}
				}
				attributes1.NumberAttribute.ShowInTable = types.BoolPointerValue(attributesItem.NumberAttribute.ShowInTable)
				attributes1.NumberAttribute.Sortable = types.BoolPointerValue(attributesItem.NumberAttribute.Sortable)
				if attributesItem.NumberAttribute.Type != nil {
					attributes1.NumberAttribute.Type = types.StringValue(string(*attributesItem.NumberAttribute.Type))
				} else {
					attributes1.NumberAttribute.Type = types.StringNull()
				}
				attributes1.NumberAttribute.ValueFormatter = types.StringPointerValue(attributesItem.NumberAttribute.ValueFormatter)
			}
			if attributesItem.OrderedListAttribute != nil {
				attributes1.OrderedListAttribute = &tfTypes.OrderedListAttribute{}
				attributes1.OrderedListAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.OrderedListAttribute.Purpose {
					attributes1.OrderedListAttribute.Purpose = append(attributes1.OrderedListAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.OrderedListAttribute.Constraints == nil {
					attributes1.OrderedListAttribute.Constraints = nil
				} else {
					attributes1.OrderedListAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.OrderedListAttribute.DefaultValue == nil {
					attributes1.OrderedListAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult15, _ := json.Marshal(attributesItem.OrderedListAttribute.DefaultValue)
					attributes1.OrderedListAttribute.DefaultValue = types.StringValue(string(defaultValueResult15))
				}
				attributes1.OrderedListAttribute.Deprecated = types.BoolPointerValue(attributesItem.OrderedListAttribute.Deprecated)
				attributes1.OrderedListAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.OrderedListAttribute.EntityBuilderDisableEdit)
				attributes1.OrderedListAttribute.FeatureFlag = types.StringPointerValue(attributesItem.OrderedListAttribute.FeatureFlag)
				attributes1.OrderedListAttribute.Group = types.StringPointerValue(attributesItem.OrderedListAttribute.Group)
				attributes1.OrderedListAttribute.Hidden = types.BoolPointerValue(attributesItem.OrderedListAttribute.Hidden)
				attributes1.OrderedListAttribute.HideLabel = types.BoolPointerValue(attributesItem.OrderedListAttribute.HideLabel)
				attributes1.OrderedListAttribute.Icon = types.StringPointerValue(attributesItem.OrderedListAttribute.Icon)
				attributes1.OrderedListAttribute.ID = types.StringPointerValue(attributesItem.OrderedListAttribute.ID)
				if attributesItem.OrderedListAttribute.InfoHelpers == nil {
					attributes1.OrderedListAttribute.InfoHelpers = nil
				} else {
					attributes1.OrderedListAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.OrderedListAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.OrderedListAttribute.InfoHelpers.HintCustomComponent)
					attributes1.OrderedListAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.OrderedListAttribute.InfoHelpers.HintText)
					attributes1.OrderedListAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.OrderedListAttribute.InfoHelpers.HintTextKey)
					attributes1.OrderedListAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.OrderedListAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.OrderedListAttribute.Label = types.StringValue(attributesItem.OrderedListAttribute.Label)
				attributes1.OrderedListAttribute.Layout = types.StringPointerValue(attributesItem.OrderedListAttribute.Layout)
				attributes1.OrderedListAttribute.Name = types.StringValue(attributesItem.OrderedListAttribute.Name)
				attributes1.OrderedListAttribute.Order = types.Int64PointerValue(attributesItem.OrderedListAttribute.Order)
				attributes1.OrderedListAttribute.Placeholder = types.StringPointerValue(attributesItem.OrderedListAttribute.Placeholder)
				attributes1.OrderedListAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.OrderedListAttribute.PreviewValueFormatter)
				attributes1.OrderedListAttribute.Protected = types.BoolPointerValue(attributesItem.OrderedListAttribute.Protected)
				attributes1.OrderedListAttribute.Readonly = types.BoolPointerValue(attributesItem.OrderedListAttribute.Readonly)
				attributes1.OrderedListAttribute.RenderCondition = types.StringPointerValue(attributesItem.OrderedListAttribute.RenderCondition)
				attributes1.OrderedListAttribute.Required = types.BoolPointerValue(attributesItem.OrderedListAttribute.Required)
				attributes1.OrderedListAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount15, settingsFlagItem15 := range attributesItem.OrderedListAttribute.SettingsFlag {
					var settingsFlag31 tfTypes.SettingFlag
					settingsFlag31.Enabled = types.BoolPointerValue(settingsFlagItem15.Enabled)
					settingsFlag31.Name = types.StringPointerValue(settingsFlagItem15.Name)
					if settingsFlagCount15+1 > len(attributes1.OrderedListAttribute.SettingsFlag) {
						attributes1.OrderedListAttribute.SettingsFlag = append(attributes1.OrderedListAttribute.SettingsFlag, settingsFlag31)
					} else {
						attributes1.OrderedListAttribute.SettingsFlag[settingsFlagCount15].Enabled = settingsFlag31.Enabled
						attributes1.OrderedListAttribute.SettingsFlag[settingsFlagCount15].Name = settingsFlag31.Name
					}
				}
				attributes1.OrderedListAttribute.ShowInTable = types.BoolPointerValue(attributesItem.OrderedListAttribute.ShowInTable)
				attributes1.OrderedListAttribute.Sortable = types.BoolPointerValue(attributesItem.OrderedListAttribute.Sortable)
				if attributesItem.OrderedListAttribute.Type != nil {
					attributes1.OrderedListAttribute.Type = types.StringValue(string(*attributesItem.OrderedListAttribute.Type))
				} else {
					attributes1.OrderedListAttribute.Type = types.StringNull()
				}
				attributes1.OrderedListAttribute.ValueFormatter = types.StringPointerValue(attributesItem.OrderedListAttribute.ValueFormatter)
			}
			if attributesItem.PartnerOrganisationAttribute != nil {
				attributes1.PartnerOrganisationAttribute = &tfTypes.PartnerOrganisationAttribute{}
				attributes1.PartnerOrganisationAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.PartnerOrganisationAttribute.Purpose {
					attributes1.PartnerOrganisationAttribute.Purpose = append(attributes1.PartnerOrganisationAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.PartnerOrganisationAttribute.Constraints == nil {
					attributes1.PartnerOrganisationAttribute.Constraints = nil
				} else {
					attributes1.PartnerOrganisationAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.PartnerOrganisationAttribute.DefaultValue == nil {
					attributes1.PartnerOrganisationAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult16, _ := json.Marshal(attributesItem.PartnerOrganisationAttribute.DefaultValue)
					attributes1.PartnerOrganisationAttribute.DefaultValue = types.StringValue(string(defaultValueResult16))
				}
				attributes1.PartnerOrganisationAttribute.Deprecated = types.BoolPointerValue(attributesItem.PartnerOrganisationAttribute.Deprecated)
				attributes1.PartnerOrganisationAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.PartnerOrganisationAttribute.EntityBuilderDisableEdit)
				attributes1.PartnerOrganisationAttribute.FeatureFlag = types.StringPointerValue(attributesItem.PartnerOrganisationAttribute.FeatureFlag)
				attributes1.PartnerOrganisationAttribute.Group = types.StringPointerValue(attributesItem.PartnerOrganisationAttribute.Group)
				attributes1.PartnerOrganisationAttribute.Hidden = types.BoolPointerValue(attributesItem.PartnerOrganisationAttribute.Hidden)
				attributes1.PartnerOrganisationAttribute.HideLabel = types.BoolPointerValue(attributesItem.PartnerOrganisationAttribute.HideLabel)
				attributes1.PartnerOrganisationAttribute.Icon = types.StringPointerValue(attributesItem.PartnerOrganisationAttribute.Icon)
				attributes1.PartnerOrganisationAttribute.ID = types.StringPointerValue(attributesItem.PartnerOrganisationAttribute.ID)
				if attributesItem.PartnerOrganisationAttribute.InfoHelpers == nil {
					attributes1.PartnerOrganisationAttribute.InfoHelpers = nil
				} else {
					attributes1.PartnerOrganisationAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.PartnerOrganisationAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintCustomComponent)
					attributes1.PartnerOrganisationAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintText)
					attributes1.PartnerOrganisationAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintTextKey)
					attributes1.PartnerOrganisationAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.PartnerOrganisationAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.PartnerOrganisationAttribute.Label = types.StringValue(attributesItem.PartnerOrganisationAttribute.Label)
				attributes1.PartnerOrganisationAttribute.Layout = types.StringPointerValue(attributesItem.PartnerOrganisationAttribute.Layout)
				attributes1.PartnerOrganisationAttribute.Name = types.StringValue(attributesItem.PartnerOrganisationAttribute.Name)
				attributes1.PartnerOrganisationAttribute.Order = types.Int64PointerValue(attributesItem.PartnerOrganisationAttribute.Order)
				attributes1.PartnerOrganisationAttribute.Placeholder = types.StringPointerValue(attributesItem.PartnerOrganisationAttribute.Placeholder)
				attributes1.PartnerOrganisationAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.PartnerOrganisationAttribute.PreviewValueFormatter)
				attributes1.PartnerOrganisationAttribute.Protected = types.BoolPointerValue(attributesItem.PartnerOrganisationAttribute.Protected)
				attributes1.PartnerOrganisationAttribute.Readonly = types.BoolPointerValue(attributesItem.PartnerOrganisationAttribute.Readonly)
				attributes1.PartnerOrganisationAttribute.RenderCondition = types.StringPointerValue(attributesItem.PartnerOrganisationAttribute.RenderCondition)
				attributes1.PartnerOrganisationAttribute.Required = types.BoolPointerValue(attributesItem.PartnerOrganisationAttribute.Required)
				attributes1.PartnerOrganisationAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount16, settingsFlagItem16 := range attributesItem.PartnerOrganisationAttribute.SettingsFlag {
					var settingsFlag33 tfTypes.SettingFlag
					settingsFlag33.Enabled = types.BoolPointerValue(settingsFlagItem16.Enabled)
					settingsFlag33.Name = types.StringPointerValue(settingsFlagItem16.Name)
					if settingsFlagCount16+1 > len(attributes1.PartnerOrganisationAttribute.SettingsFlag) {
						attributes1.PartnerOrganisationAttribute.SettingsFlag = append(attributes1.PartnerOrganisationAttribute.SettingsFlag, settingsFlag33)
					} else {
						attributes1.PartnerOrganisationAttribute.SettingsFlag[settingsFlagCount16].Enabled = settingsFlag33.Enabled
						attributes1.PartnerOrganisationAttribute.SettingsFlag[settingsFlagCount16].Name = settingsFlag33.Name
					}
				}
				attributes1.PartnerOrganisationAttribute.ShowInTable = types.BoolPointerValue(attributesItem.PartnerOrganisationAttribute.ShowInTable)
				attributes1.PartnerOrganisationAttribute.Sortable = types.BoolPointerValue(attributesItem.PartnerOrganisationAttribute.Sortable)
				if attributesItem.PartnerOrganisationAttribute.Type != nil {
					attributes1.PartnerOrganisationAttribute.Type = types.StringValue(string(*attributesItem.PartnerOrganisationAttribute.Type))
				} else {
					attributes1.PartnerOrganisationAttribute.Type = types.StringNull()
				}
				attributes1.PartnerOrganisationAttribute.ValueFormatter = types.StringPointerValue(attributesItem.PartnerOrganisationAttribute.ValueFormatter)
			}
			if attributesItem.PartnerStatusAttribute != nil {
				attributes1.PartnerStatusAttribute = &tfTypes.PartnerStatusAttribute{}
				attributes1.PartnerStatusAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.PartnerStatusAttribute.Purpose {
					attributes1.PartnerStatusAttribute.Purpose = append(attributes1.PartnerStatusAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.PartnerStatusAttribute.Constraints == nil {
					attributes1.PartnerStatusAttribute.Constraints = nil
				} else {
					attributes1.PartnerStatusAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.PartnerStatusAttribute.DefaultValue == nil {
					attributes1.PartnerStatusAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult17, _ := json.Marshal(attributesItem.PartnerStatusAttribute.DefaultValue)
					attributes1.PartnerStatusAttribute.DefaultValue = types.StringValue(string(defaultValueResult17))
				}
				attributes1.PartnerStatusAttribute.Deprecated = types.BoolPointerValue(attributesItem.PartnerStatusAttribute.Deprecated)
				attributes1.PartnerStatusAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.PartnerStatusAttribute.EntityBuilderDisableEdit)
				attributes1.PartnerStatusAttribute.FeatureFlag = types.StringPointerValue(attributesItem.PartnerStatusAttribute.FeatureFlag)
				attributes1.PartnerStatusAttribute.Group = types.StringPointerValue(attributesItem.PartnerStatusAttribute.Group)
				attributes1.PartnerStatusAttribute.Hidden = types.BoolPointerValue(attributesItem.PartnerStatusAttribute.Hidden)
				attributes1.PartnerStatusAttribute.HideLabel = types.BoolPointerValue(attributesItem.PartnerStatusAttribute.HideLabel)
				attributes1.PartnerStatusAttribute.Icon = types.StringPointerValue(attributesItem.PartnerStatusAttribute.Icon)
				attributes1.PartnerStatusAttribute.ID = types.StringPointerValue(attributesItem.PartnerStatusAttribute.ID)
				if attributesItem.PartnerStatusAttribute.InfoHelpers == nil {
					attributes1.PartnerStatusAttribute.InfoHelpers = nil
				} else {
					attributes1.PartnerStatusAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.PartnerStatusAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.PartnerStatusAttribute.InfoHelpers.HintCustomComponent)
					attributes1.PartnerStatusAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.PartnerStatusAttribute.InfoHelpers.HintText)
					attributes1.PartnerStatusAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.PartnerStatusAttribute.InfoHelpers.HintTextKey)
					attributes1.PartnerStatusAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.PartnerStatusAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.PartnerStatusAttribute.Label = types.StringValue(attributesItem.PartnerStatusAttribute.Label)
				attributes1.PartnerStatusAttribute.Layout = types.StringPointerValue(attributesItem.PartnerStatusAttribute.Layout)
				attributes1.PartnerStatusAttribute.Name = types.StringValue(attributesItem.PartnerStatusAttribute.Name)
				attributes1.PartnerStatusAttribute.Order = types.Int64PointerValue(attributesItem.PartnerStatusAttribute.Order)
				attributes1.PartnerStatusAttribute.Placeholder = types.StringPointerValue(attributesItem.PartnerStatusAttribute.Placeholder)
				attributes1.PartnerStatusAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.PartnerStatusAttribute.PreviewValueFormatter)
				attributes1.PartnerStatusAttribute.Protected = types.BoolPointerValue(attributesItem.PartnerStatusAttribute.Protected)
				attributes1.PartnerStatusAttribute.Readonly = types.BoolPointerValue(attributesItem.PartnerStatusAttribute.Readonly)
				attributes1.PartnerStatusAttribute.RenderCondition = types.StringPointerValue(attributesItem.PartnerStatusAttribute.RenderCondition)
				attributes1.PartnerStatusAttribute.Required = types.BoolPointerValue(attributesItem.PartnerStatusAttribute.Required)
				attributes1.PartnerStatusAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount17, settingsFlagItem17 := range attributesItem.PartnerStatusAttribute.SettingsFlag {
					var settingsFlag35 tfTypes.SettingFlag
					settingsFlag35.Enabled = types.BoolPointerValue(settingsFlagItem17.Enabled)
					settingsFlag35.Name = types.StringPointerValue(settingsFlagItem17.Name)
					if settingsFlagCount17+1 > len(attributes1.PartnerStatusAttribute.SettingsFlag) {
						attributes1.PartnerStatusAttribute.SettingsFlag = append(attributes1.PartnerStatusAttribute.SettingsFlag, settingsFlag35)
					} else {
						attributes1.PartnerStatusAttribute.SettingsFlag[settingsFlagCount17].Enabled = settingsFlag35.Enabled
						attributes1.PartnerStatusAttribute.SettingsFlag[settingsFlagCount17].Name = settingsFlag35.Name
					}
				}
				attributes1.PartnerStatusAttribute.ShowInTable = types.BoolPointerValue(attributesItem.PartnerStatusAttribute.ShowInTable)
				attributes1.PartnerStatusAttribute.Sortable = types.BoolPointerValue(attributesItem.PartnerStatusAttribute.Sortable)
				if attributesItem.PartnerStatusAttribute.Type != nil {
					attributes1.PartnerStatusAttribute.Type = types.StringValue(string(*attributesItem.PartnerStatusAttribute.Type))
				} else {
					attributes1.PartnerStatusAttribute.Type = types.StringNull()
				}
				attributes1.PartnerStatusAttribute.ValueFormatter = types.StringPointerValue(attributesItem.PartnerStatusAttribute.ValueFormatter)
			}
			if attributesItem.PaymentMethodRelationAttribute != nil {
				attributes1.PaymentMethodRelationAttribute = &tfTypes.PaymentMethodRelationAttribute{}
				attributes1.PaymentMethodRelationAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.PaymentMethodRelationAttribute.Purpose {
					attributes1.PaymentMethodRelationAttribute.Purpose = append(attributes1.PaymentMethodRelationAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.PaymentMethodRelationAttribute.Constraints == nil {
					attributes1.PaymentMethodRelationAttribute.Constraints = nil
				} else {
					attributes1.PaymentMethodRelationAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.PaymentMethodRelationAttribute.DefaultValue == nil {
					attributes1.PaymentMethodRelationAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult18, _ := json.Marshal(attributesItem.PaymentMethodRelationAttribute.DefaultValue)
					attributes1.PaymentMethodRelationAttribute.DefaultValue = types.StringValue(string(defaultValueResult18))
				}
				attributes1.PaymentMethodRelationAttribute.Deprecated = types.BoolPointerValue(attributesItem.PaymentMethodRelationAttribute.Deprecated)
				attributes1.PaymentMethodRelationAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.PaymentMethodRelationAttribute.EntityBuilderDisableEdit)
				attributes1.PaymentMethodRelationAttribute.FeatureFlag = types.StringPointerValue(attributesItem.PaymentMethodRelationAttribute.FeatureFlag)
				attributes1.PaymentMethodRelationAttribute.Group = types.StringPointerValue(attributesItem.PaymentMethodRelationAttribute.Group)
				attributes1.PaymentMethodRelationAttribute.HasPrimary = types.BoolPointerValue(attributesItem.PaymentMethodRelationAttribute.HasPrimary)
				attributes1.PaymentMethodRelationAttribute.Hidden = types.BoolPointerValue(attributesItem.PaymentMethodRelationAttribute.Hidden)
				attributes1.PaymentMethodRelationAttribute.HideLabel = types.BoolPointerValue(attributesItem.PaymentMethodRelationAttribute.HideLabel)
				attributes1.PaymentMethodRelationAttribute.Icon = types.StringPointerValue(attributesItem.PaymentMethodRelationAttribute.Icon)
				attributes1.PaymentMethodRelationAttribute.ID = types.StringPointerValue(attributesItem.PaymentMethodRelationAttribute.ID)
				if attributesItem.PaymentMethodRelationAttribute.InfoHelpers == nil {
					attributes1.PaymentMethodRelationAttribute.InfoHelpers = nil
				} else {
					attributes1.PaymentMethodRelationAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.PaymentMethodRelationAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintCustomComponent)
					attributes1.PaymentMethodRelationAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintText)
					attributes1.PaymentMethodRelationAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintTextKey)
					attributes1.PaymentMethodRelationAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.PaymentMethodRelationAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.PaymentMethodRelationAttribute.Label = types.StringValue(attributesItem.PaymentMethodRelationAttribute.Label)
				attributes1.PaymentMethodRelationAttribute.Layout = types.StringPointerValue(attributesItem.PaymentMethodRelationAttribute.Layout)
				attributes1.PaymentMethodRelationAttribute.Name = types.StringValue(attributesItem.PaymentMethodRelationAttribute.Name)
				attributes1.PaymentMethodRelationAttribute.Order = types.Int64PointerValue(attributesItem.PaymentMethodRelationAttribute.Order)
				attributes1.PaymentMethodRelationAttribute.Placeholder = types.StringPointerValue(attributesItem.PaymentMethodRelationAttribute.Placeholder)
				attributes1.PaymentMethodRelationAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.PaymentMethodRelationAttribute.PreviewValueFormatter)
				attributes1.PaymentMethodRelationAttribute.Protected = types.BoolPointerValue(attributesItem.PaymentMethodRelationAttribute.Protected)
				attributes1.PaymentMethodRelationAttribute.Readonly = types.BoolPointerValue(attributesItem.PaymentMethodRelationAttribute.Readonly)
				attributes1.PaymentMethodRelationAttribute.RenderCondition = types.StringPointerValue(attributesItem.PaymentMethodRelationAttribute.RenderCondition)
				attributes1.PaymentMethodRelationAttribute.Required = types.BoolPointerValue(attributesItem.PaymentMethodRelationAttribute.Required)
				attributes1.PaymentMethodRelationAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount18, settingsFlagItem18 := range attributesItem.PaymentMethodRelationAttribute.SettingsFlag {
					var settingsFlag37 tfTypes.SettingFlag
					settingsFlag37.Enabled = types.BoolPointerValue(settingsFlagItem18.Enabled)
					settingsFlag37.Name = types.StringPointerValue(settingsFlagItem18.Name)
					if settingsFlagCount18+1 > len(attributes1.PaymentMethodRelationAttribute.SettingsFlag) {
						attributes1.PaymentMethodRelationAttribute.SettingsFlag = append(attributes1.PaymentMethodRelationAttribute.SettingsFlag, settingsFlag37)
					} else {
						attributes1.PaymentMethodRelationAttribute.SettingsFlag[settingsFlagCount18].Enabled = settingsFlag37.Enabled
						attributes1.PaymentMethodRelationAttribute.SettingsFlag[settingsFlagCount18].Name = settingsFlag37.Name
					}
				}
				attributes1.PaymentMethodRelationAttribute.ShowInTable = types.BoolPointerValue(attributesItem.PaymentMethodRelationAttribute.ShowInTable)
				attributes1.PaymentMethodRelationAttribute.Sortable = types.BoolPointerValue(attributesItem.PaymentMethodRelationAttribute.Sortable)
				if attributesItem.PaymentMethodRelationAttribute.Type != nil {
					attributes1.PaymentMethodRelationAttribute.Type = types.StringValue(string(*attributesItem.PaymentMethodRelationAttribute.Type))
				} else {
					attributes1.PaymentMethodRelationAttribute.Type = types.StringNull()
				}
				attributes1.PaymentMethodRelationAttribute.ValueFormatter = types.StringPointerValue(attributesItem.PaymentMethodRelationAttribute.ValueFormatter)
			}
			if attributesItem.PurposeAttribute != nil {
				attributes1.PurposeAttribute = &tfTypes.PurposeAttribute{}
				attributes1.PurposeAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.PurposeAttribute.Purpose {
					attributes1.PurposeAttribute.Purpose = append(attributes1.PurposeAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.PurposeAttribute.Constraints == nil {
					attributes1.PurposeAttribute.Constraints = nil
				} else {
					attributes1.PurposeAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.PurposeAttribute.CreatedAt != nil {
					attributes1.PurposeAttribute.CreatedAt = types.StringValue(attributesItem.PurposeAttribute.CreatedAt.Format(time.RFC3339Nano))
				} else {
					attributes1.PurposeAttribute.CreatedAt = types.StringNull()
				}
				if attributesItem.PurposeAttribute.DefaultValue == nil {
					attributes1.PurposeAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult19, _ := json.Marshal(attributesItem.PurposeAttribute.DefaultValue)
					attributes1.PurposeAttribute.DefaultValue = types.StringValue(string(defaultValueResult19))
				}
				attributes1.PurposeAttribute.Deprecated = types.BoolPointerValue(attributesItem.PurposeAttribute.Deprecated)
				attributes1.PurposeAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.PurposeAttribute.EntityBuilderDisableEdit)
				attributes1.PurposeAttribute.FeatureFlag = types.StringPointerValue(attributesItem.PurposeAttribute.FeatureFlag)
				attributes1.PurposeAttribute.Group = types.StringPointerValue(attributesItem.PurposeAttribute.Group)
				attributes1.PurposeAttribute.Hidden = types.BoolPointerValue(attributesItem.PurposeAttribute.Hidden)
				attributes1.PurposeAttribute.HideLabel = types.BoolPointerValue(attributesItem.PurposeAttribute.HideLabel)
				attributes1.PurposeAttribute.Icon = types.StringPointerValue(attributesItem.PurposeAttribute.Icon)
				attributes1.PurposeAttribute.ID = types.StringPointerValue(attributesItem.PurposeAttribute.ID)
				if attributesItem.PurposeAttribute.InfoHelpers == nil {
					attributes1.PurposeAttribute.InfoHelpers = nil
				} else {
					attributes1.PurposeAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.PurposeAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.PurposeAttribute.InfoHelpers.HintCustomComponent)
					attributes1.PurposeAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.PurposeAttribute.InfoHelpers.HintText)
					attributes1.PurposeAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.PurposeAttribute.InfoHelpers.HintTextKey)
					attributes1.PurposeAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.PurposeAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.PurposeAttribute.Label = types.StringValue(attributesItem.PurposeAttribute.Label)
				attributes1.PurposeAttribute.Layout = types.StringPointerValue(attributesItem.PurposeAttribute.Layout)
				attributes1.PurposeAttribute.Name = types.StringValue(attributesItem.PurposeAttribute.Name)
				attributes1.PurposeAttribute.Order = types.Int64PointerValue(attributesItem.PurposeAttribute.Order)
				attributes1.PurposeAttribute.Parents = []types.String{}
				for _, v := range attributesItem.PurposeAttribute.Parents {
					attributes1.PurposeAttribute.Parents = append(attributes1.PurposeAttribute.Parents, types.StringValue(v))
				}
				attributes1.PurposeAttribute.Placeholder = types.StringPointerValue(attributesItem.PurposeAttribute.Placeholder)
				attributes1.PurposeAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.PurposeAttribute.PreviewValueFormatter)
				attributes1.PurposeAttribute.Protected = types.BoolPointerValue(attributesItem.PurposeAttribute.Protected)
				attributes1.PurposeAttribute.Readonly = types.BoolPointerValue(attributesItem.PurposeAttribute.Readonly)
				attributes1.PurposeAttribute.RenderCondition = types.StringPointerValue(attributesItem.PurposeAttribute.RenderCondition)
				attributes1.PurposeAttribute.Required = types.BoolPointerValue(attributesItem.PurposeAttribute.Required)
				attributes1.PurposeAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount19, settingsFlagItem19 := range attributesItem.PurposeAttribute.SettingsFlag {
					var settingsFlag39 tfTypes.SettingFlag
					settingsFlag39.Enabled = types.BoolPointerValue(settingsFlagItem19.Enabled)
					settingsFlag39.Name = types.StringPointerValue(settingsFlagItem19.Name)
					if settingsFlagCount19+1 > len(attributes1.PurposeAttribute.SettingsFlag) {
						attributes1.PurposeAttribute.SettingsFlag = append(attributes1.PurposeAttribute.SettingsFlag, settingsFlag39)
					} else {
						attributes1.PurposeAttribute.SettingsFlag[settingsFlagCount19].Enabled = settingsFlag39.Enabled
						attributes1.PurposeAttribute.SettingsFlag[settingsFlagCount19].Name = settingsFlag39.Name
					}
				}
				attributes1.PurposeAttribute.ShowInTable = types.BoolPointerValue(attributesItem.PurposeAttribute.ShowInTable)
				attributes1.PurposeAttribute.Slug = types.StringPointerValue(attributesItem.PurposeAttribute.Slug)
				attributes1.PurposeAttribute.Sortable = types.BoolPointerValue(attributesItem.PurposeAttribute.Sortable)
				if attributesItem.PurposeAttribute.Type != nil {
					attributes1.PurposeAttribute.Type = types.StringValue(string(*attributesItem.PurposeAttribute.Type))
				} else {
					attributes1.PurposeAttribute.Type = types.StringNull()
				}
				if attributesItem.PurposeAttribute.UpdatedAt != nil {
					attributes1.PurposeAttribute.UpdatedAt = types.StringValue(attributesItem.PurposeAttribute.UpdatedAt.Format(time.RFC3339Nano))
				} else {
					attributes1.PurposeAttribute.UpdatedAt = types.StringNull()
				}
				attributes1.PurposeAttribute.ValueFormatter = types.StringPointerValue(attributesItem.PurposeAttribute.ValueFormatter)
			}
			if attributesItem.RelationAttribute != nil {
				attributes1.RelationAttribute = &tfTypes.RelationAttribute{}
				attributes1.RelationAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.RelationAttribute.Purpose {
					attributes1.RelationAttribute.Purpose = append(attributes1.RelationAttribute.Purpose, types.StringValue(v))
				}
				attributes1.RelationAttribute.Actions = []tfTypes.Actions{}
				for actionsCount, actionsItem := range attributesItem.RelationAttribute.Actions {
					var actions1 tfTypes.Actions
					if actionsItem.ActionType != nil {
						actions1.ActionType = types.StringValue(string(*actionsItem.ActionType))
					} else {
						actions1.ActionType = types.StringNull()
					}
					actions1.Default = types.BoolPointerValue(actionsItem.Default)
					actions1.FeatureFlag = types.StringPointerValue(actionsItem.FeatureFlag)
					actions1.Label = types.StringPointerValue(actionsItem.Label)
					if actionsItem.NewEntityItem == nil {
						actions1.NewEntityItem = nil
					} else {
						actions1.NewEntityItem = &tfTypes.NewEntityItem{}
						if actionsItem.NewEntityItem.ACL == nil {
							actions1.NewEntityItem.ACL = nil
						} else {
							actions1.NewEntityItem.ACL = &tfTypes.EntityACL{}
							if actionsItem.NewEntityItem.ACL.AdditionalProperties == nil {
								actions1.NewEntityItem.ACL.AdditionalProperties = types.StringNull()
							} else {
								additionalPropertiesResult, _ := json.Marshal(actionsItem.NewEntityItem.ACL.AdditionalProperties)
								actions1.NewEntityItem.ACL.AdditionalProperties = types.StringValue(string(additionalPropertiesResult))
							}
							actions1.NewEntityItem.ACL.Delete = []types.String{}
							for _, v := range actionsItem.NewEntityItem.ACL.Delete {
								actions1.NewEntityItem.ACL.Delete = append(actions1.NewEntityItem.ACL.Delete, types.StringValue(v))
							}
							actions1.NewEntityItem.ACL.Edit = []types.String{}
							for _, v := range actionsItem.NewEntityItem.ACL.Edit {
								actions1.NewEntityItem.ACL.Edit = append(actions1.NewEntityItem.ACL.Edit, types.StringValue(v))
							}
							actions1.NewEntityItem.ACL.View = []types.String{}
							for _, v := range actionsItem.NewEntityItem.ACL.View {
								actions1.NewEntityItem.ACL.View = append(actions1.NewEntityItem.ACL.View, types.StringValue(v))
							}
						}
						if actionsItem.NewEntityItem.CreatedAt != nil {
							actions1.NewEntityItem.CreatedAt = types.StringValue(actionsItem.NewEntityItem.CreatedAt.Format(time.RFC3339Nano))
						} else {
							actions1.NewEntityItem.CreatedAt = types.StringNull()
						}
						actions1.NewEntityItem.ID = types.StringValue(actionsItem.NewEntityItem.ID)
						actions1.NewEntityItem.Org = types.StringValue(actionsItem.NewEntityItem.Org)
						actions1.NewEntityItem.Owners = []tfTypes.EntityOwner{}
						for ownersCount, ownersItem := range actionsItem.NewEntityItem.Owners {
							var owners1 tfTypes.EntityOwner
							owners1.OrgID = types.StringValue(ownersItem.OrgID)
							owners1.UserID = types.StringPointerValue(ownersItem.UserID)
							if ownersCount+1 > len(actions1.NewEntityItem.Owners) {
								actions1.NewEntityItem.Owners = append(actions1.NewEntityItem.Owners, owners1)
							} else {
								actions1.NewEntityItem.Owners[ownersCount].OrgID = owners1.OrgID
								actions1.NewEntityItem.Owners[ownersCount].UserID = owners1.UserID
							}
						}
						actions1.NewEntityItem.Schema = types.StringValue(actionsItem.NewEntityItem.Schema)
						actions1.NewEntityItem.Tags = []types.String{}
						for _, v := range actionsItem.NewEntityItem.Tags {
							actions1.NewEntityItem.Tags = append(actions1.NewEntityItem.Tags, types.StringValue(v))
						}
						actions1.NewEntityItem.Title = types.StringPointerValue(actionsItem.NewEntityItem.Title)
						if actionsItem.NewEntityItem.UpdatedAt != nil {
							actions1.NewEntityItem.UpdatedAt = types.StringValue(actionsItem.NewEntityItem.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							actions1.NewEntityItem.UpdatedAt = types.StringNull()
						}
						if actionsItem.NewEntityItem.AdditionalProperties == nil {
							actions1.NewEntityItem.AdditionalProperties = types.StringNull()
						} else {
							additionalPropertiesResult1, _ := json.Marshal(actionsItem.NewEntityItem.AdditionalProperties)
							actions1.NewEntityItem.AdditionalProperties = types.StringValue(string(additionalPropertiesResult1))
						}
					}
					actions1.SettingsFlag = []tfTypes.SettingFlag{}
					for settingsFlagCount20, settingsFlagItem20 := range actionsItem.SettingsFlag {
						var settingsFlag41 tfTypes.SettingFlag
						settingsFlag41.Enabled = types.BoolPointerValue(settingsFlagItem20.Enabled)
						settingsFlag41.Name = types.StringPointerValue(settingsFlagItem20.Name)
						if settingsFlagCount20+1 > len(actions1.SettingsFlag) {
							actions1.SettingsFlag = append(actions1.SettingsFlag, settingsFlag41)
						} else {
							actions1.SettingsFlag[settingsFlagCount20].Enabled = settingsFlag41.Enabled
							actions1.SettingsFlag[settingsFlagCount20].Name = settingsFlag41.Name
						}
					}
					if actionsCount+1 > len(attributes1.RelationAttribute.Actions) {
						attributes1.RelationAttribute.Actions = append(attributes1.RelationAttribute.Actions, actions1)
					} else {
						attributes1.RelationAttribute.Actions[actionsCount].ActionType = actions1.ActionType
						attributes1.RelationAttribute.Actions[actionsCount].Default = actions1.Default
						attributes1.RelationAttribute.Actions[actionsCount].FeatureFlag = actions1.FeatureFlag
						attributes1.RelationAttribute.Actions[actionsCount].Label = actions1.Label
						attributes1.RelationAttribute.Actions[actionsCount].NewEntityItem = actions1.NewEntityItem
						attributes1.RelationAttribute.Actions[actionsCount].SettingsFlag = actions1.SettingsFlag
					}
				}
				attributes1.RelationAttribute.AddButtonLabel = types.StringPointerValue(attributesItem.RelationAttribute.AddButtonLabel)
				attributes1.RelationAttribute.AllowedSchemas = []types.String{}
				for _, v := range attributesItem.RelationAttribute.AllowedSchemas {
					attributes1.RelationAttribute.AllowedSchemas = append(attributes1.RelationAttribute.AllowedSchemas, types.StringValue(v))
				}
				if attributesItem.RelationAttribute.Constraints == nil {
					attributes1.RelationAttribute.Constraints = nil
				} else {
					attributes1.RelationAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.RelationAttribute.DefaultValue == nil {
					attributes1.RelationAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult20, _ := json.Marshal(attributesItem.RelationAttribute.DefaultValue)
					attributes1.RelationAttribute.DefaultValue = types.StringValue(string(defaultValueResult20))
				}
				attributes1.RelationAttribute.Deprecated = types.BoolPointerValue(attributesItem.RelationAttribute.Deprecated)
				attributes1.RelationAttribute.DetailsViewModeEnabled = types.BoolPointerValue(attributesItem.RelationAttribute.DetailsViewModeEnabled)
				if attributesItem.RelationAttribute.DrawerSize != nil {
					attributes1.RelationAttribute.DrawerSize = types.StringValue(string(*attributesItem.RelationAttribute.DrawerSize))
				} else {
					attributes1.RelationAttribute.DrawerSize = types.StringNull()
				}
				if attributesItem.RelationAttribute.EditMode != nil {
					attributes1.RelationAttribute.EditMode = types.StringValue(string(*attributesItem.RelationAttribute.EditMode))
				} else {
					attributes1.RelationAttribute.EditMode = types.StringNull()
				}
				attributes1.RelationAttribute.EnableRelationPicker = types.BoolPointerValue(attributesItem.RelationAttribute.EnableRelationPicker)
				attributes1.RelationAttribute.EnableRelationTags = types.BoolPointerValue(attributesItem.RelationAttribute.EnableRelationTags)
				attributes1.RelationAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.RelationAttribute.EntityBuilderDisableEdit)
				attributes1.RelationAttribute.FeatureFlag = types.StringPointerValue(attributesItem.RelationAttribute.FeatureFlag)
				attributes1.RelationAttribute.Group = types.StringPointerValue(attributesItem.RelationAttribute.Group)
				attributes1.RelationAttribute.HasPrimary = types.BoolPointerValue(attributesItem.RelationAttribute.HasPrimary)
				attributes1.RelationAttribute.Hidden = types.BoolPointerValue(attributesItem.RelationAttribute.Hidden)
				attributes1.RelationAttribute.HideLabel = types.BoolPointerValue(attributesItem.RelationAttribute.HideLabel)
				attributes1.RelationAttribute.Icon = types.StringPointerValue(attributesItem.RelationAttribute.Icon)
				attributes1.RelationAttribute.ID = types.StringPointerValue(attributesItem.RelationAttribute.ID)
				if attributesItem.RelationAttribute.InfoHelpers == nil {
					attributes1.RelationAttribute.InfoHelpers = nil
				} else {
					attributes1.RelationAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.RelationAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.RelationAttribute.InfoHelpers.HintCustomComponent)
					attributes1.RelationAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.RelationAttribute.InfoHelpers.HintText)
					attributes1.RelationAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.RelationAttribute.InfoHelpers.HintTextKey)
					attributes1.RelationAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.RelationAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.RelationAttribute.Label = types.StringValue(attributesItem.RelationAttribute.Label)
				attributes1.RelationAttribute.Layout = types.StringPointerValue(attributesItem.RelationAttribute.Layout)
				attributes1.RelationAttribute.Name = types.StringValue(attributesItem.RelationAttribute.Name)
				attributes1.RelationAttribute.Order = types.Int64PointerValue(attributesItem.RelationAttribute.Order)
				attributes1.RelationAttribute.Placeholder = types.StringPointerValue(attributesItem.RelationAttribute.Placeholder)
				attributes1.RelationAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.RelationAttribute.PreviewValueFormatter)
				attributes1.RelationAttribute.Protected = types.BoolPointerValue(attributesItem.RelationAttribute.Protected)
				attributes1.RelationAttribute.Readonly = types.BoolPointerValue(attributesItem.RelationAttribute.Readonly)
				if attributesItem.RelationAttribute.RelationAffinityMode != nil {
					attributes1.RelationAttribute.RelationAffinityMode = types.StringValue(string(*attributesItem.RelationAttribute.RelationAffinityMode))
				} else {
					attributes1.RelationAttribute.RelationAffinityMode = types.StringNull()
				}
				if attributesItem.RelationAttribute.RelationType != nil {
					attributes1.RelationAttribute.RelationType = types.StringValue(string(*attributesItem.RelationAttribute.RelationType))
				} else {
					attributes1.RelationAttribute.RelationType = types.StringNull()
				}
				attributes1.RelationAttribute.RenderCondition = types.StringPointerValue(attributesItem.RelationAttribute.RenderCondition)
				attributes1.RelationAttribute.Required = types.BoolPointerValue(attributesItem.RelationAttribute.Required)
				if len(attributesItem.RelationAttribute.ReverseAttributes) > 0 {
					attributes1.RelationAttribute.ReverseAttributes = make(map[string]types.String)
					for key, value1 := range attributesItem.RelationAttribute.ReverseAttributes {
						attributes1.RelationAttribute.ReverseAttributes[key] = types.StringValue(value1)
					}
				}
				attributes1.RelationAttribute.SearchPlaceholder = types.StringPointerValue(attributesItem.RelationAttribute.SearchPlaceholder)
				attributes1.RelationAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount21, settingsFlagItem21 := range attributesItem.RelationAttribute.SettingsFlag {
					var settingsFlag43 tfTypes.SettingFlag
					settingsFlag43.Enabled = types.BoolPointerValue(settingsFlagItem21.Enabled)
					settingsFlag43.Name = types.StringPointerValue(settingsFlagItem21.Name)
					if settingsFlagCount21+1 > len(attributes1.RelationAttribute.SettingsFlag) {
						attributes1.RelationAttribute.SettingsFlag = append(attributes1.RelationAttribute.SettingsFlag, settingsFlag43)
					} else {
						attributes1.RelationAttribute.SettingsFlag[settingsFlagCount21].Enabled = settingsFlag43.Enabled
						attributes1.RelationAttribute.SettingsFlag[settingsFlagCount21].Name = settingsFlag43.Name
					}
				}
				attributes1.RelationAttribute.ShowInTable = types.BoolPointerValue(attributesItem.RelationAttribute.ShowInTable)
				attributes1.RelationAttribute.Sortable = types.BoolPointerValue(attributesItem.RelationAttribute.Sortable)
				attributes1.RelationAttribute.SummaryFields = []tfTypes.SummaryFields{}
				for summaryFieldsCount, summaryFieldsItem := range attributesItem.RelationAttribute.SummaryFields {
					var summaryFields1 tfTypes.SummaryFields
					if summaryFieldsItem.Str != nil {
						summaryFields1.Str = types.StringPointerValue(summaryFieldsItem.Str)
					}
					if summaryFieldsItem.SummaryField != nil {
						summaryFields1.SummaryField = &tfTypes.SummaryField{}
						summaryFields1.SummaryField.DisplayAs = types.StringPointerValue(summaryFieldsItem.SummaryField.DisplayAs)
						summaryFields1.SummaryField.Field = types.StringPointerValue(summaryFieldsItem.SummaryField.Field)
					}
					if summaryFieldsCount+1 > len(attributes1.RelationAttribute.SummaryFields) {
						attributes1.RelationAttribute.SummaryFields = append(attributes1.RelationAttribute.SummaryFields, summaryFields1)
					} else {
						attributes1.RelationAttribute.SummaryFields[summaryFieldsCount].Str = summaryFields1.Str
						attributes1.RelationAttribute.SummaryFields[summaryFieldsCount].SummaryField = summaryFields1.SummaryField
					}
				}
				if attributesItem.RelationAttribute.Type != nil {
					attributes1.RelationAttribute.Type = types.StringValue(string(*attributesItem.RelationAttribute.Type))
				} else {
					attributes1.RelationAttribute.Type = types.StringNull()
				}
				attributes1.RelationAttribute.ValueFormatter = types.StringPointerValue(attributesItem.RelationAttribute.ValueFormatter)
			}
			if attributesItem.RepeatableAttribute != nil {
				attributes1.RepeatableAttribute = &tfTypes.RepeatableAttribute{}
				attributes1.RepeatableAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.RepeatableAttribute.Purpose {
					attributes1.RepeatableAttribute.Purpose = append(attributes1.RepeatableAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.RepeatableAttribute.Constraints == nil {
					attributes1.RepeatableAttribute.Constraints = nil
				} else {
					attributes1.RepeatableAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.RepeatableAttribute.DefaultValue == nil {
					attributes1.RepeatableAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult21, _ := json.Marshal(attributesItem.RepeatableAttribute.DefaultValue)
					attributes1.RepeatableAttribute.DefaultValue = types.StringValue(string(defaultValueResult21))
				}
				attributes1.RepeatableAttribute.Deprecated = types.BoolPointerValue(attributesItem.RepeatableAttribute.Deprecated)
				attributes1.RepeatableAttribute.EnableRelationPicker = types.BoolPointerValue(attributesItem.RepeatableAttribute.EnableRelationPicker)
				attributes1.RepeatableAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.RepeatableAttribute.EntityBuilderDisableEdit)
				attributes1.RepeatableAttribute.FeatureFlag = types.StringPointerValue(attributesItem.RepeatableAttribute.FeatureFlag)
				attributes1.RepeatableAttribute.Group = types.StringPointerValue(attributesItem.RepeatableAttribute.Group)
				attributes1.RepeatableAttribute.HasPrimary = types.BoolPointerValue(attributesItem.RepeatableAttribute.HasPrimary)
				attributes1.RepeatableAttribute.Hidden = types.BoolPointerValue(attributesItem.RepeatableAttribute.Hidden)
				attributes1.RepeatableAttribute.HideLabel = types.BoolPointerValue(attributesItem.RepeatableAttribute.HideLabel)
				attributes1.RepeatableAttribute.Icon = types.StringPointerValue(attributesItem.RepeatableAttribute.Icon)
				attributes1.RepeatableAttribute.ID = types.StringPointerValue(attributesItem.RepeatableAttribute.ID)
				if attributesItem.RepeatableAttribute.InfoHelpers == nil {
					attributes1.RepeatableAttribute.InfoHelpers = nil
				} else {
					attributes1.RepeatableAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.RepeatableAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.RepeatableAttribute.InfoHelpers.HintCustomComponent)
					attributes1.RepeatableAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.RepeatableAttribute.InfoHelpers.HintText)
					attributes1.RepeatableAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.RepeatableAttribute.InfoHelpers.HintTextKey)
					attributes1.RepeatableAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.RepeatableAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.RepeatableAttribute.Label = types.StringValue(attributesItem.RepeatableAttribute.Label)
				attributes1.RepeatableAttribute.Layout = types.StringPointerValue(attributesItem.RepeatableAttribute.Layout)
				attributes1.RepeatableAttribute.Name = types.StringValue(attributesItem.RepeatableAttribute.Name)
				attributes1.RepeatableAttribute.Order = types.Int64PointerValue(attributesItem.RepeatableAttribute.Order)
				attributes1.RepeatableAttribute.Placeholder = types.StringPointerValue(attributesItem.RepeatableAttribute.Placeholder)
				attributes1.RepeatableAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.RepeatableAttribute.PreviewValueFormatter)
				attributes1.RepeatableAttribute.Protected = types.BoolPointerValue(attributesItem.RepeatableAttribute.Protected)
				attributes1.RepeatableAttribute.Readonly = types.BoolPointerValue(attributesItem.RepeatableAttribute.Readonly)
				if attributesItem.RepeatableAttribute.RelationAffinityMode != nil {
					attributes1.RepeatableAttribute.RelationAffinityMode = types.StringValue(string(*attributesItem.RepeatableAttribute.RelationAffinityMode))
				} else {
					attributes1.RepeatableAttribute.RelationAffinityMode = types.StringNull()
				}
				attributes1.RepeatableAttribute.RenderCondition = types.StringPointerValue(attributesItem.RepeatableAttribute.RenderCondition)
				attributes1.RepeatableAttribute.Repeatable = types.BoolPointerValue(attributesItem.RepeatableAttribute.Repeatable)
				attributes1.RepeatableAttribute.Required = types.BoolPointerValue(attributesItem.RepeatableAttribute.Required)
				attributes1.RepeatableAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount22, settingsFlagItem22 := range attributesItem.RepeatableAttribute.SettingsFlag {
					var settingsFlag45 tfTypes.SettingFlag
					settingsFlag45.Enabled = types.BoolPointerValue(settingsFlagItem22.Enabled)
					settingsFlag45.Name = types.StringPointerValue(settingsFlagItem22.Name)
					if settingsFlagCount22+1 > len(attributes1.RepeatableAttribute.SettingsFlag) {
						attributes1.RepeatableAttribute.SettingsFlag = append(attributes1.RepeatableAttribute.SettingsFlag, settingsFlag45)
					} else {
						attributes1.RepeatableAttribute.SettingsFlag[settingsFlagCount22].Enabled = settingsFlag45.Enabled
						attributes1.RepeatableAttribute.SettingsFlag[settingsFlagCount22].Name = settingsFlag45.Name
					}
				}
				attributes1.RepeatableAttribute.ShowInTable = types.BoolPointerValue(attributesItem.RepeatableAttribute.ShowInTable)
				attributes1.RepeatableAttribute.Sortable = types.BoolPointerValue(attributesItem.RepeatableAttribute.Sortable)
				if attributesItem.RepeatableAttribute.Type != nil {
					attributes1.RepeatableAttribute.Type = types.StringValue(string(*attributesItem.RepeatableAttribute.Type))
				} else {
					attributes1.RepeatableAttribute.Type = types.StringNull()
				}
				attributes1.RepeatableAttribute.ValueFormatter = types.StringPointerValue(attributesItem.RepeatableAttribute.ValueFormatter)
			}
			if attributesItem.SelectAttribute != nil {
				attributes1.SelectAttribute = &tfTypes.SelectAttribute{}
				attributes1.SelectAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.SelectAttribute.Purpose {
					attributes1.SelectAttribute.Purpose = append(attributes1.SelectAttribute.Purpose, types.StringValue(v))
				}
				attributes1.SelectAttribute.AllowAny = types.BoolPointerValue(attributesItem.SelectAttribute.AllowAny)
				if attributesItem.SelectAttribute.Constraints == nil {
					attributes1.SelectAttribute.Constraints = nil
				} else {
					attributes1.SelectAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.SelectAttribute.DefaultValue == nil {
					attributes1.SelectAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult22, _ := json.Marshal(attributesItem.SelectAttribute.DefaultValue)
					attributes1.SelectAttribute.DefaultValue = types.StringValue(string(defaultValueResult22))
				}
				attributes1.SelectAttribute.Deprecated = types.BoolPointerValue(attributesItem.SelectAttribute.Deprecated)
				attributes1.SelectAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.SelectAttribute.EntityBuilderDisableEdit)
				attributes1.SelectAttribute.FeatureFlag = types.StringPointerValue(attributesItem.SelectAttribute.FeatureFlag)
				attributes1.SelectAttribute.Group = types.StringPointerValue(attributesItem.SelectAttribute.Group)
				attributes1.SelectAttribute.Hidden = types.BoolPointerValue(attributesItem.SelectAttribute.Hidden)
				attributes1.SelectAttribute.HideLabel = types.BoolPointerValue(attributesItem.SelectAttribute.HideLabel)
				attributes1.SelectAttribute.Icon = types.StringPointerValue(attributesItem.SelectAttribute.Icon)
				attributes1.SelectAttribute.ID = types.StringPointerValue(attributesItem.SelectAttribute.ID)
				if attributesItem.SelectAttribute.InfoHelpers == nil {
					attributes1.SelectAttribute.InfoHelpers = nil
				} else {
					attributes1.SelectAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.SelectAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.SelectAttribute.InfoHelpers.HintCustomComponent)
					attributes1.SelectAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.SelectAttribute.InfoHelpers.HintText)
					attributes1.SelectAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.SelectAttribute.InfoHelpers.HintTextKey)
					attributes1.SelectAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.SelectAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.SelectAttribute.Label = types.StringValue(attributesItem.SelectAttribute.Label)
				attributes1.SelectAttribute.Layout = types.StringPointerValue(attributesItem.SelectAttribute.Layout)
				attributes1.SelectAttribute.Name = types.StringValue(attributesItem.SelectAttribute.Name)
				attributes1.SelectAttribute.Options = []tfTypes.Options{}
				for optionsCount1, optionsItem1 := range attributesItem.SelectAttribute.Options {
					var options3 tfTypes.Options
					if optionsItem1.Str != nil {
						options3.Str = types.StringPointerValue(optionsItem1.Str)
					}
					if optionsItem1.One != nil {
						options3.One = &tfTypes.One{}
						options3.One.Title = types.StringPointerValue(optionsItem1.One.Title)
						options3.One.Value = types.StringPointerValue(optionsItem1.One.Value)
					}
					if optionsCount1+1 > len(attributes1.SelectAttribute.Options) {
						attributes1.SelectAttribute.Options = append(attributes1.SelectAttribute.Options, options3)
					} else {
						attributes1.SelectAttribute.Options[optionsCount1].Str = options3.Str
						attributes1.SelectAttribute.Options[optionsCount1].One = options3.One
					}
				}
				attributes1.SelectAttribute.Order = types.Int64PointerValue(attributesItem.SelectAttribute.Order)
				attributes1.SelectAttribute.Placeholder = types.StringPointerValue(attributesItem.SelectAttribute.Placeholder)
				attributes1.SelectAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.SelectAttribute.PreviewValueFormatter)
				attributes1.SelectAttribute.Protected = types.BoolPointerValue(attributesItem.SelectAttribute.Protected)
				attributes1.SelectAttribute.Readonly = types.BoolPointerValue(attributesItem.SelectAttribute.Readonly)
				attributes1.SelectAttribute.RenderCondition = types.StringPointerValue(attributesItem.SelectAttribute.RenderCondition)
				attributes1.SelectAttribute.Required = types.BoolPointerValue(attributesItem.SelectAttribute.Required)
				attributes1.SelectAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount23, settingsFlagItem23 := range attributesItem.SelectAttribute.SettingsFlag {
					var settingsFlag47 tfTypes.SettingFlag
					settingsFlag47.Enabled = types.BoolPointerValue(settingsFlagItem23.Enabled)
					settingsFlag47.Name = types.StringPointerValue(settingsFlagItem23.Name)
					if settingsFlagCount23+1 > len(attributes1.SelectAttribute.SettingsFlag) {
						attributes1.SelectAttribute.SettingsFlag = append(attributes1.SelectAttribute.SettingsFlag, settingsFlag47)
					} else {
						attributes1.SelectAttribute.SettingsFlag[settingsFlagCount23].Enabled = settingsFlag47.Enabled
						attributes1.SelectAttribute.SettingsFlag[settingsFlagCount23].Name = settingsFlag47.Name
					}
				}
				attributes1.SelectAttribute.ShowInTable = types.BoolPointerValue(attributesItem.SelectAttribute.ShowInTable)
				attributes1.SelectAttribute.Sortable = types.BoolPointerValue(attributesItem.SelectAttribute.Sortable)
				if attributesItem.SelectAttribute.Type != nil {
					attributes1.SelectAttribute.Type = types.StringValue(string(*attributesItem.SelectAttribute.Type))
				} else {
					attributes1.SelectAttribute.Type = types.StringNull()
				}
				attributes1.SelectAttribute.ValueFormatter = types.StringPointerValue(attributesItem.SelectAttribute.ValueFormatter)
			}
			if attributesItem.SequenceAttribute != nil {
				attributes1.SequenceAttribute = &tfTypes.SequenceAttribute{}
				attributes1.SequenceAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.SequenceAttribute.Purpose {
					attributes1.SequenceAttribute.Purpose = append(attributes1.SequenceAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.SequenceAttribute.Constraints == nil {
					attributes1.SequenceAttribute.Constraints = nil
				} else {
					attributes1.SequenceAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.SequenceAttribute.DefaultValue == nil {
					attributes1.SequenceAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult23, _ := json.Marshal(attributesItem.SequenceAttribute.DefaultValue)
					attributes1.SequenceAttribute.DefaultValue = types.StringValue(string(defaultValueResult23))
				}
				attributes1.SequenceAttribute.Deprecated = types.BoolPointerValue(attributesItem.SequenceAttribute.Deprecated)
				attributes1.SequenceAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.SequenceAttribute.EntityBuilderDisableEdit)
				attributes1.SequenceAttribute.FeatureFlag = types.StringPointerValue(attributesItem.SequenceAttribute.FeatureFlag)
				attributes1.SequenceAttribute.Group = types.StringPointerValue(attributesItem.SequenceAttribute.Group)
				attributes1.SequenceAttribute.Hidden = types.BoolPointerValue(attributesItem.SequenceAttribute.Hidden)
				attributes1.SequenceAttribute.HideLabel = types.BoolPointerValue(attributesItem.SequenceAttribute.HideLabel)
				attributes1.SequenceAttribute.Icon = types.StringPointerValue(attributesItem.SequenceAttribute.Icon)
				attributes1.SequenceAttribute.ID = types.StringPointerValue(attributesItem.SequenceAttribute.ID)
				if attributesItem.SequenceAttribute.InfoHelpers == nil {
					attributes1.SequenceAttribute.InfoHelpers = nil
				} else {
					attributes1.SequenceAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.SequenceAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.SequenceAttribute.InfoHelpers.HintCustomComponent)
					attributes1.SequenceAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.SequenceAttribute.InfoHelpers.HintText)
					attributes1.SequenceAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.SequenceAttribute.InfoHelpers.HintTextKey)
					attributes1.SequenceAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.SequenceAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.SequenceAttribute.Label = types.StringValue(attributesItem.SequenceAttribute.Label)
				attributes1.SequenceAttribute.Layout = types.StringPointerValue(attributesItem.SequenceAttribute.Layout)
				attributes1.SequenceAttribute.Name = types.StringValue(attributesItem.SequenceAttribute.Name)
				attributes1.SequenceAttribute.Order = types.Int64PointerValue(attributesItem.SequenceAttribute.Order)
				attributes1.SequenceAttribute.Placeholder = types.StringPointerValue(attributesItem.SequenceAttribute.Placeholder)
				attributes1.SequenceAttribute.Prefix = types.StringPointerValue(attributesItem.SequenceAttribute.Prefix)
				attributes1.SequenceAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.SequenceAttribute.PreviewValueFormatter)
				attributes1.SequenceAttribute.Protected = types.BoolPointerValue(attributesItem.SequenceAttribute.Protected)
				attributes1.SequenceAttribute.Readonly = types.BoolPointerValue(attributesItem.SequenceAttribute.Readonly)
				attributes1.SequenceAttribute.RenderCondition = types.StringPointerValue(attributesItem.SequenceAttribute.RenderCondition)
				attributes1.SequenceAttribute.Required = types.BoolPointerValue(attributesItem.SequenceAttribute.Required)
				attributes1.SequenceAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount24, settingsFlagItem24 := range attributesItem.SequenceAttribute.SettingsFlag {
					var settingsFlag49 tfTypes.SettingFlag
					settingsFlag49.Enabled = types.BoolPointerValue(settingsFlagItem24.Enabled)
					settingsFlag49.Name = types.StringPointerValue(settingsFlagItem24.Name)
					if settingsFlagCount24+1 > len(attributes1.SequenceAttribute.SettingsFlag) {
						attributes1.SequenceAttribute.SettingsFlag = append(attributes1.SequenceAttribute.SettingsFlag, settingsFlag49)
					} else {
						attributes1.SequenceAttribute.SettingsFlag[settingsFlagCount24].Enabled = settingsFlag49.Enabled
						attributes1.SequenceAttribute.SettingsFlag[settingsFlagCount24].Name = settingsFlag49.Name
					}
				}
				attributes1.SequenceAttribute.ShowInTable = types.BoolPointerValue(attributesItem.SequenceAttribute.ShowInTable)
				attributes1.SequenceAttribute.Sortable = types.BoolPointerValue(attributesItem.SequenceAttribute.Sortable)
				attributes1.SequenceAttribute.StartNumber = types.Int64PointerValue(attributesItem.SequenceAttribute.StartNumber)
				if attributesItem.SequenceAttribute.Type != nil {
					attributes1.SequenceAttribute.Type = types.StringValue(string(*attributesItem.SequenceAttribute.Type))
				} else {
					attributes1.SequenceAttribute.Type = types.StringNull()
				}
				attributes1.SequenceAttribute.ValueFormatter = types.StringPointerValue(attributesItem.SequenceAttribute.ValueFormatter)
			}
			if attributesItem.StatusAttribute != nil {
				attributes1.StatusAttribute = &tfTypes.StatusAttribute{}
				attributes1.StatusAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.StatusAttribute.Purpose {
					attributes1.StatusAttribute.Purpose = append(attributes1.StatusAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.StatusAttribute.Constraints == nil {
					attributes1.StatusAttribute.Constraints = nil
				} else {
					attributes1.StatusAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.StatusAttribute.DefaultValue == nil {
					attributes1.StatusAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult24, _ := json.Marshal(attributesItem.StatusAttribute.DefaultValue)
					attributes1.StatusAttribute.DefaultValue = types.StringValue(string(defaultValueResult24))
				}
				attributes1.StatusAttribute.Deprecated = types.BoolPointerValue(attributesItem.StatusAttribute.Deprecated)
				attributes1.StatusAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.StatusAttribute.EntityBuilderDisableEdit)
				attributes1.StatusAttribute.FeatureFlag = types.StringPointerValue(attributesItem.StatusAttribute.FeatureFlag)
				attributes1.StatusAttribute.Group = types.StringPointerValue(attributesItem.StatusAttribute.Group)
				attributes1.StatusAttribute.Hidden = types.BoolPointerValue(attributesItem.StatusAttribute.Hidden)
				attributes1.StatusAttribute.HideLabel = types.BoolPointerValue(attributesItem.StatusAttribute.HideLabel)
				attributes1.StatusAttribute.Icon = types.StringPointerValue(attributesItem.StatusAttribute.Icon)
				attributes1.StatusAttribute.ID = types.StringPointerValue(attributesItem.StatusAttribute.ID)
				if attributesItem.StatusAttribute.InfoHelpers == nil {
					attributes1.StatusAttribute.InfoHelpers = nil
				} else {
					attributes1.StatusAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.StatusAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.StatusAttribute.InfoHelpers.HintCustomComponent)
					attributes1.StatusAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.StatusAttribute.InfoHelpers.HintText)
					attributes1.StatusAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.StatusAttribute.InfoHelpers.HintTextKey)
					attributes1.StatusAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.StatusAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.StatusAttribute.Label = types.StringValue(attributesItem.StatusAttribute.Label)
				attributes1.StatusAttribute.Layout = types.StringPointerValue(attributesItem.StatusAttribute.Layout)
				attributes1.StatusAttribute.Name = types.StringValue(attributesItem.StatusAttribute.Name)
				attributes1.StatusAttribute.Options = []tfTypes.MultiSelectAttributeOptions{}
				for optionsCount2, optionsItem2 := range attributesItem.StatusAttribute.Options {
					var options5 tfTypes.MultiSelectAttributeOptions
					if optionsItem2.Str != nil {
						options5.Str = types.StringPointerValue(optionsItem2.Str)
					}
					if optionsItem2.Options2 != nil {
						options5.Two = &tfTypes.Two{}
						options5.Two.Title = types.StringPointerValue(optionsItem2.Options2.Title)
						options5.Two.Value = types.StringValue(optionsItem2.Options2.Value)
					}
					if optionsCount2+1 > len(attributes1.StatusAttribute.Options) {
						attributes1.StatusAttribute.Options = append(attributes1.StatusAttribute.Options, options5)
					} else {
						attributes1.StatusAttribute.Options[optionsCount2].Str = options5.Str
						attributes1.StatusAttribute.Options[optionsCount2].Two = options5.Two
					}
				}
				attributes1.StatusAttribute.Order = types.Int64PointerValue(attributesItem.StatusAttribute.Order)
				attributes1.StatusAttribute.Placeholder = types.StringPointerValue(attributesItem.StatusAttribute.Placeholder)
				attributes1.StatusAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.StatusAttribute.PreviewValueFormatter)
				attributes1.StatusAttribute.Protected = types.BoolPointerValue(attributesItem.StatusAttribute.Protected)
				attributes1.StatusAttribute.Readonly = types.BoolPointerValue(attributesItem.StatusAttribute.Readonly)
				attributes1.StatusAttribute.RenderCondition = types.StringPointerValue(attributesItem.StatusAttribute.RenderCondition)
				attributes1.StatusAttribute.Required = types.BoolPointerValue(attributesItem.StatusAttribute.Required)
				attributes1.StatusAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount25, settingsFlagItem25 := range attributesItem.StatusAttribute.SettingsFlag {
					var settingsFlag51 tfTypes.SettingFlag
					settingsFlag51.Enabled = types.BoolPointerValue(settingsFlagItem25.Enabled)
					settingsFlag51.Name = types.StringPointerValue(settingsFlagItem25.Name)
					if settingsFlagCount25+1 > len(attributes1.StatusAttribute.SettingsFlag) {
						attributes1.StatusAttribute.SettingsFlag = append(attributes1.StatusAttribute.SettingsFlag, settingsFlag51)
					} else {
						attributes1.StatusAttribute.SettingsFlag[settingsFlagCount25].Enabled = settingsFlag51.Enabled
						attributes1.StatusAttribute.SettingsFlag[settingsFlagCount25].Name = settingsFlag51.Name
					}
				}
				attributes1.StatusAttribute.ShowInTable = types.BoolPointerValue(attributesItem.StatusAttribute.ShowInTable)
				attributes1.StatusAttribute.Sortable = types.BoolPointerValue(attributesItem.StatusAttribute.Sortable)
				if attributesItem.StatusAttribute.Type != nil {
					attributes1.StatusAttribute.Type = types.StringValue(string(*attributesItem.StatusAttribute.Type))
				} else {
					attributes1.StatusAttribute.Type = types.StringNull()
				}
				attributes1.StatusAttribute.ValueFormatter = types.StringPointerValue(attributesItem.StatusAttribute.ValueFormatter)
			}
			if attributesItem.TagsAttribute != nil {
				attributes1.TagsAttribute = &tfTypes.TagsAttribute{}
				attributes1.TagsAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.TagsAttribute.Purpose {
					attributes1.TagsAttribute.Purpose = append(attributes1.TagsAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.TagsAttribute.Constraints == nil {
					attributes1.TagsAttribute.Constraints = nil
				} else {
					attributes1.TagsAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.TagsAttribute.DefaultValue == nil {
					attributes1.TagsAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult25, _ := json.Marshal(attributesItem.TagsAttribute.DefaultValue)
					attributes1.TagsAttribute.DefaultValue = types.StringValue(string(defaultValueResult25))
				}
				attributes1.TagsAttribute.Deprecated = types.BoolPointerValue(attributesItem.TagsAttribute.Deprecated)
				attributes1.TagsAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.TagsAttribute.EntityBuilderDisableEdit)
				attributes1.TagsAttribute.FeatureFlag = types.StringPointerValue(attributesItem.TagsAttribute.FeatureFlag)
				attributes1.TagsAttribute.Group = types.StringPointerValue(attributesItem.TagsAttribute.Group)
				attributes1.TagsAttribute.Hidden = types.BoolPointerValue(attributesItem.TagsAttribute.Hidden)
				attributes1.TagsAttribute.HideLabel = types.BoolPointerValue(attributesItem.TagsAttribute.HideLabel)
				attributes1.TagsAttribute.Icon = types.StringPointerValue(attributesItem.TagsAttribute.Icon)
				attributes1.TagsAttribute.ID = types.StringPointerValue(attributesItem.TagsAttribute.ID)
				if attributesItem.TagsAttribute.InfoHelpers == nil {
					attributes1.TagsAttribute.InfoHelpers = nil
				} else {
					attributes1.TagsAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.TagsAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.TagsAttribute.InfoHelpers.HintCustomComponent)
					attributes1.TagsAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.TagsAttribute.InfoHelpers.HintText)
					attributes1.TagsAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.TagsAttribute.InfoHelpers.HintTextKey)
					attributes1.TagsAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.TagsAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.TagsAttribute.Label = types.StringValue(attributesItem.TagsAttribute.Label)
				attributes1.TagsAttribute.Layout = types.StringPointerValue(attributesItem.TagsAttribute.Layout)
				attributes1.TagsAttribute.Name = types.StringValue(attributesItem.TagsAttribute.Name)
				attributes1.TagsAttribute.Options = []types.String{}
				for _, v := range attributesItem.TagsAttribute.Options {
					attributes1.TagsAttribute.Options = append(attributes1.TagsAttribute.Options, types.StringValue(v))
				}
				attributes1.TagsAttribute.Order = types.Int64PointerValue(attributesItem.TagsAttribute.Order)
				attributes1.TagsAttribute.Placeholder = types.StringPointerValue(attributesItem.TagsAttribute.Placeholder)
				attributes1.TagsAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.TagsAttribute.PreviewValueFormatter)
				attributes1.TagsAttribute.Protected = types.BoolPointerValue(attributesItem.TagsAttribute.Protected)
				attributes1.TagsAttribute.Readonly = types.BoolPointerValue(attributesItem.TagsAttribute.Readonly)
				attributes1.TagsAttribute.RenderCondition = types.StringPointerValue(attributesItem.TagsAttribute.RenderCondition)
				attributes1.TagsAttribute.Required = types.BoolPointerValue(attributesItem.TagsAttribute.Required)
				attributes1.TagsAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount26, settingsFlagItem26 := range attributesItem.TagsAttribute.SettingsFlag {
					var settingsFlag53 tfTypes.SettingFlag
					settingsFlag53.Enabled = types.BoolPointerValue(settingsFlagItem26.Enabled)
					settingsFlag53.Name = types.StringPointerValue(settingsFlagItem26.Name)
					if settingsFlagCount26+1 > len(attributes1.TagsAttribute.SettingsFlag) {
						attributes1.TagsAttribute.SettingsFlag = append(attributes1.TagsAttribute.SettingsFlag, settingsFlag53)
					} else {
						attributes1.TagsAttribute.SettingsFlag[settingsFlagCount26].Enabled = settingsFlag53.Enabled
						attributes1.TagsAttribute.SettingsFlag[settingsFlagCount26].Name = settingsFlag53.Name
					}
				}
				attributes1.TagsAttribute.ShowInTable = types.BoolPointerValue(attributesItem.TagsAttribute.ShowInTable)
				attributes1.TagsAttribute.Sortable = types.BoolPointerValue(attributesItem.TagsAttribute.Sortable)
				attributes1.TagsAttribute.Suggestions = []types.String{}
				for _, v := range attributesItem.TagsAttribute.Suggestions {
					attributes1.TagsAttribute.Suggestions = append(attributes1.TagsAttribute.Suggestions, types.StringValue(v))
				}
				if attributesItem.TagsAttribute.Type != nil {
					attributes1.TagsAttribute.Type = types.StringValue(string(*attributesItem.TagsAttribute.Type))
				} else {
					attributes1.TagsAttribute.Type = types.StringNull()
				}
				attributes1.TagsAttribute.ValueFormatter = types.StringPointerValue(attributesItem.TagsAttribute.ValueFormatter)
			}
			if attributesItem.TextAttribute != nil {
				attributes1.TextAttribute = &tfTypes.TextAttribute{}
				attributes1.TextAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.TextAttribute.Purpose {
					attributes1.TextAttribute.Purpose = append(attributes1.TextAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.TextAttribute.Constraints == nil {
					attributes1.TextAttribute.Constraints = nil
				} else {
					attributes1.TextAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.TextAttribute.DefaultValue == nil {
					attributes1.TextAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult26, _ := json.Marshal(attributesItem.TextAttribute.DefaultValue)
					attributes1.TextAttribute.DefaultValue = types.StringValue(string(defaultValueResult26))
				}
				attributes1.TextAttribute.Deprecated = types.BoolPointerValue(attributesItem.TextAttribute.Deprecated)
				attributes1.TextAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.TextAttribute.EntityBuilderDisableEdit)
				attributes1.TextAttribute.FeatureFlag = types.StringPointerValue(attributesItem.TextAttribute.FeatureFlag)
				attributes1.TextAttribute.Group = types.StringPointerValue(attributesItem.TextAttribute.Group)
				attributes1.TextAttribute.Hidden = types.BoolPointerValue(attributesItem.TextAttribute.Hidden)
				attributes1.TextAttribute.HideLabel = types.BoolPointerValue(attributesItem.TextAttribute.HideLabel)
				attributes1.TextAttribute.Icon = types.StringPointerValue(attributesItem.TextAttribute.Icon)
				attributes1.TextAttribute.ID = types.StringPointerValue(attributesItem.TextAttribute.ID)
				if attributesItem.TextAttribute.InfoHelpers == nil {
					attributes1.TextAttribute.InfoHelpers = nil
				} else {
					attributes1.TextAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.TextAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.TextAttribute.InfoHelpers.HintCustomComponent)
					attributes1.TextAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.TextAttribute.InfoHelpers.HintText)
					attributes1.TextAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.TextAttribute.InfoHelpers.HintTextKey)
					attributes1.TextAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.TextAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.TextAttribute.Label = types.StringValue(attributesItem.TextAttribute.Label)
				attributes1.TextAttribute.Layout = types.StringPointerValue(attributesItem.TextAttribute.Layout)
				attributes1.TextAttribute.Multiline = types.BoolPointerValue(attributesItem.TextAttribute.Multiline)
				attributes1.TextAttribute.Name = types.StringValue(attributesItem.TextAttribute.Name)
				attributes1.TextAttribute.Order = types.Int64PointerValue(attributesItem.TextAttribute.Order)
				attributes1.TextAttribute.Placeholder = types.StringPointerValue(attributesItem.TextAttribute.Placeholder)
				attributes1.TextAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.TextAttribute.PreviewValueFormatter)
				attributes1.TextAttribute.Protected = types.BoolPointerValue(attributesItem.TextAttribute.Protected)
				attributes1.TextAttribute.Readonly = types.BoolPointerValue(attributesItem.TextAttribute.Readonly)
				attributes1.TextAttribute.RenderCondition = types.StringPointerValue(attributesItem.TextAttribute.RenderCondition)
				attributes1.TextAttribute.Required = types.BoolPointerValue(attributesItem.TextAttribute.Required)
				attributes1.TextAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount27, settingsFlagItem27 := range attributesItem.TextAttribute.SettingsFlag {
					var settingsFlag55 tfTypes.SettingFlag
					settingsFlag55.Enabled = types.BoolPointerValue(settingsFlagItem27.Enabled)
					settingsFlag55.Name = types.StringPointerValue(settingsFlagItem27.Name)
					if settingsFlagCount27+1 > len(attributes1.TextAttribute.SettingsFlag) {
						attributes1.TextAttribute.SettingsFlag = append(attributes1.TextAttribute.SettingsFlag, settingsFlag55)
					} else {
						attributes1.TextAttribute.SettingsFlag[settingsFlagCount27].Enabled = settingsFlag55.Enabled
						attributes1.TextAttribute.SettingsFlag[settingsFlagCount27].Name = settingsFlag55.Name
					}
				}
				attributes1.TextAttribute.ShowInTable = types.BoolPointerValue(attributesItem.TextAttribute.ShowInTable)
				attributes1.TextAttribute.Sortable = types.BoolPointerValue(attributesItem.TextAttribute.Sortable)
				if attributesItem.TextAttribute.Type != nil {
					attributes1.TextAttribute.Type = types.StringValue(string(*attributesItem.TextAttribute.Type))
				} else {
					attributes1.TextAttribute.Type = types.StringNull()
				}
				attributes1.TextAttribute.ValueFormatter = types.StringPointerValue(attributesItem.TextAttribute.ValueFormatter)
			}
			if attributesItem.UserRelationAttribute != nil {
				attributes1.UserRelationAttribute = &tfTypes.UserRelationAttribute{}
				attributes1.UserRelationAttribute.Purpose = []types.String{}
				for _, v := range attributesItem.UserRelationAttribute.Purpose {
					attributes1.UserRelationAttribute.Purpose = append(attributes1.UserRelationAttribute.Purpose, types.StringValue(v))
				}
				if attributesItem.UserRelationAttribute.Constraints == nil {
					attributes1.UserRelationAttribute.Constraints = nil
				} else {
					attributes1.UserRelationAttribute.Constraints = &tfTypes.AddressRelationAttributeConstraints{}
				}
				if attributesItem.UserRelationAttribute.DefaultValue == nil {
					attributes1.UserRelationAttribute.DefaultValue = types.StringNull()
				} else {
					defaultValueResult27, _ := json.Marshal(attributesItem.UserRelationAttribute.DefaultValue)
					attributes1.UserRelationAttribute.DefaultValue = types.StringValue(string(defaultValueResult27))
				}
				attributes1.UserRelationAttribute.Deprecated = types.BoolPointerValue(attributesItem.UserRelationAttribute.Deprecated)
				attributes1.UserRelationAttribute.EntityBuilderDisableEdit = types.BoolPointerValue(attributesItem.UserRelationAttribute.EntityBuilderDisableEdit)
				attributes1.UserRelationAttribute.FeatureFlag = types.StringPointerValue(attributesItem.UserRelationAttribute.FeatureFlag)
				attributes1.UserRelationAttribute.Group = types.StringPointerValue(attributesItem.UserRelationAttribute.Group)
				attributes1.UserRelationAttribute.Hidden = types.BoolPointerValue(attributesItem.UserRelationAttribute.Hidden)
				attributes1.UserRelationAttribute.HideLabel = types.BoolPointerValue(attributesItem.UserRelationAttribute.HideLabel)
				attributes1.UserRelationAttribute.Icon = types.StringPointerValue(attributesItem.UserRelationAttribute.Icon)
				attributes1.UserRelationAttribute.ID = types.StringPointerValue(attributesItem.UserRelationAttribute.ID)
				if attributesItem.UserRelationAttribute.InfoHelpers == nil {
					attributes1.UserRelationAttribute.InfoHelpers = nil
				} else {
					attributes1.UserRelationAttribute.InfoHelpers = &tfTypes.AddressRelationAttributeInfoHelpers{}
					attributes1.UserRelationAttribute.InfoHelpers.HintCustomComponent = types.StringPointerValue(attributesItem.UserRelationAttribute.InfoHelpers.HintCustomComponent)
					attributes1.UserRelationAttribute.InfoHelpers.HintText = types.StringPointerValue(attributesItem.UserRelationAttribute.InfoHelpers.HintText)
					attributes1.UserRelationAttribute.InfoHelpers.HintTextKey = types.StringPointerValue(attributesItem.UserRelationAttribute.InfoHelpers.HintTextKey)
					attributes1.UserRelationAttribute.InfoHelpers.HintTooltipPlacement = types.StringPointerValue(attributesItem.UserRelationAttribute.InfoHelpers.HintTooltipPlacement)
				}
				attributes1.UserRelationAttribute.Label = types.StringValue(attributesItem.UserRelationAttribute.Label)
				attributes1.UserRelationAttribute.Layout = types.StringPointerValue(attributesItem.UserRelationAttribute.Layout)
				attributes1.UserRelationAttribute.Multiple = types.BoolPointerValue(attributesItem.UserRelationAttribute.Multiple)
				attributes1.UserRelationAttribute.Name = types.StringValue(attributesItem.UserRelationAttribute.Name)
				attributes1.UserRelationAttribute.Order = types.Int64PointerValue(attributesItem.UserRelationAttribute.Order)
				attributes1.UserRelationAttribute.Placeholder = types.StringPointerValue(attributesItem.UserRelationAttribute.Placeholder)
				attributes1.UserRelationAttribute.PreviewValueFormatter = types.StringPointerValue(attributesItem.UserRelationAttribute.PreviewValueFormatter)
				attributes1.UserRelationAttribute.Protected = types.BoolPointerValue(attributesItem.UserRelationAttribute.Protected)
				attributes1.UserRelationAttribute.Readonly = types.BoolPointerValue(attributesItem.UserRelationAttribute.Readonly)
				attributes1.UserRelationAttribute.RenderCondition = types.StringPointerValue(attributesItem.UserRelationAttribute.RenderCondition)
				attributes1.UserRelationAttribute.Required = types.BoolPointerValue(attributesItem.UserRelationAttribute.Required)
				attributes1.UserRelationAttribute.SettingsFlag = []tfTypes.SettingFlag{}
				for settingsFlagCount28, settingsFlagItem28 := range attributesItem.UserRelationAttribute.SettingsFlag {
					var settingsFlag57 tfTypes.SettingFlag
					settingsFlag57.Enabled = types.BoolPointerValue(settingsFlagItem28.Enabled)
					settingsFlag57.Name = types.StringPointerValue(settingsFlagItem28.Name)
					if settingsFlagCount28+1 > len(attributes1.UserRelationAttribute.SettingsFlag) {
						attributes1.UserRelationAttribute.SettingsFlag = append(attributes1.UserRelationAttribute.SettingsFlag, settingsFlag57)
					} else {
						attributes1.UserRelationAttribute.SettingsFlag[settingsFlagCount28].Enabled = settingsFlag57.Enabled
						attributes1.UserRelationAttribute.SettingsFlag[settingsFlagCount28].Name = settingsFlag57.Name
					}
				}
				attributes1.UserRelationAttribute.ShowInTable = types.BoolPointerValue(attributesItem.UserRelationAttribute.ShowInTable)
				attributes1.UserRelationAttribute.Sortable = types.BoolPointerValue(attributesItem.UserRelationAttribute.Sortable)
				if attributesItem.UserRelationAttribute.Type != nil {
					attributes1.UserRelationAttribute.Type = types.StringValue(string(*attributesItem.UserRelationAttribute.Type))
				} else {
					attributes1.UserRelationAttribute.Type = types.StringNull()
				}
				attributes1.UserRelationAttribute.ValueFormatter = types.StringPointerValue(attributesItem.UserRelationAttribute.ValueFormatter)
			}
			if attributesCount+1 > len(r.Attributes) {
				r.Attributes = append(r.Attributes, attributes1)
			} else {
				r.Attributes[attributesCount].AddressRelationAttribute = attributes1.AddressRelationAttribute
				r.Attributes[attributesCount].AutomationAttribute = attributes1.AutomationAttribute
				r.Attributes[attributesCount].BooleanAttribute = attributes1.BooleanAttribute
				r.Attributes[attributesCount].ComputedAttribute = attributes1.ComputedAttribute
				r.Attributes[attributesCount].ConsentAttribute = attributes1.ConsentAttribute
				r.Attributes[attributesCount].CountryAttribute = attributes1.CountryAttribute
				r.Attributes[attributesCount].CurrencyAttribute = attributes1.CurrencyAttribute
				r.Attributes[attributesCount].DateAttribute = attributes1.DateAttribute
				r.Attributes[attributesCount].FileAttribute = attributes1.FileAttribute
				r.Attributes[attributesCount].InternalAttribute = attributes1.InternalAttribute
				r.Attributes[attributesCount].InternalUserAttribute = attributes1.InternalUserAttribute
				r.Attributes[attributesCount].InvitationEmailAttribute = attributes1.InvitationEmailAttribute
				r.Attributes[attributesCount].LinkAttribute = attributes1.LinkAttribute
				r.Attributes[attributesCount].MultiSelectAttribute = attributes1.MultiSelectAttribute
				r.Attributes[attributesCount].NumberAttribute = attributes1.NumberAttribute
				r.Attributes[attributesCount].OrderedListAttribute = attributes1.OrderedListAttribute
				r.Attributes[attributesCount].PartnerOrganisationAttribute = attributes1.PartnerOrganisationAttribute
				r.Attributes[attributesCount].PartnerStatusAttribute = attributes1.PartnerStatusAttribute
				r.Attributes[attributesCount].PaymentMethodRelationAttribute = attributes1.PaymentMethodRelationAttribute
				r.Attributes[attributesCount].PurposeAttribute = attributes1.PurposeAttribute
				r.Attributes[attributesCount].RelationAttribute = attributes1.RelationAttribute
				r.Attributes[attributesCount].RepeatableAttribute = attributes1.RepeatableAttribute
				r.Attributes[attributesCount].SelectAttribute = attributes1.SelectAttribute
				r.Attributes[attributesCount].SequenceAttribute = attributes1.SequenceAttribute
				r.Attributes[attributesCount].StatusAttribute = attributes1.StatusAttribute
				r.Attributes[attributesCount].TagsAttribute = attributes1.TagsAttribute
				r.Attributes[attributesCount].TextAttribute = attributes1.TextAttribute
				r.Attributes[attributesCount].UserRelationAttribute = attributes1.UserRelationAttribute
			}
		}
		r.CompositeID = types.StringPointerValue(resp.CompositeID)
		r.FeatureFlag = types.StringPointerValue(resp.FeatureFlag)
		r.ID = types.StringPointerValue(resp.ID)
		r.Name = types.StringValue(resp.Name)
		r.SettingsFlag = []tfTypes.SettingFlag{}
		if len(r.SettingsFlag) > len(resp.SettingsFlag) {
			r.SettingsFlag = r.SettingsFlag[:len(resp.SettingsFlag)]
		}
		for settingsFlagCount29, settingsFlagItem29 := range resp.SettingsFlag {
			var settingsFlag59 tfTypes.SettingFlag
			settingsFlag59.Enabled = types.BoolPointerValue(settingsFlagItem29.Enabled)
			settingsFlag59.Name = types.StringPointerValue(settingsFlagItem29.Name)
			if settingsFlagCount29+1 > len(r.SettingsFlag) {
				r.SettingsFlag = append(r.SettingsFlag, settingsFlag59)
			} else {
				r.SettingsFlag[settingsFlagCount29].Enabled = settingsFlag59.Enabled
				r.SettingsFlag[settingsFlagCount29].Name = settingsFlag59.Name
			}
		}
		r.Title = types.StringPointerValue(resp.Title)
		r.UIHooks = []tfTypes.UIHooks{}
		if len(r.UIHooks) > len(resp.UIHooks) {
			r.UIHooks = r.UIHooks[:len(resp.UIHooks)]
		}
		for uiHooksCount, uiHooksItem := range resp.UIHooks {
			var uiHooks1 tfTypes.UIHooks
			if uiHooksItem.AdditionalProperties == nil {
				uiHooks1.AdditionalProperties = types.StringNull()
			} else {
				additionalPropertiesResult2, _ := json.Marshal(uiHooksItem.AdditionalProperties)
				uiHooks1.AdditionalProperties = types.StringValue(string(additionalPropertiesResult2))
			}
			uiHooks1.Component = types.StringPointerValue(uiHooksItem.Component)
			uiHooks1.Disabled = types.BoolPointerValue(uiHooksItem.Disabled)
			uiHooks1.GroupExpanded = types.BoolPointerValue(uiHooksItem.GroupExpanded)
			uiHooks1.Header = types.BoolPointerValue(uiHooksItem.Header)
			uiHooks1.Hook = types.StringValue(uiHooksItem.Hook)
			uiHooks1.Icon = types.StringPointerValue(uiHooksItem.Icon)
			uiHooks1.Import = types.StringPointerValue(uiHooksItem.Import)
			uiHooks1.Order = types.Int64PointerValue(uiHooksItem.Order)
			uiHooks1.RenderCondition = types.StringPointerValue(uiHooksItem.RenderCondition)
			if uiHooksItem.RequiredPermission == nil {
				uiHooks1.RequiredPermission = nil
			} else {
				uiHooks1.RequiredPermission = &tfTypes.RequiredPermission{}
				uiHooks1.RequiredPermission.Action = types.StringValue(uiHooksItem.RequiredPermission.Action)
				uiHooks1.RequiredPermission.Resource = types.StringPointerValue(uiHooksItem.RequiredPermission.Resource)
			}
			uiHooks1.Route = types.StringPointerValue(uiHooksItem.Route)
			uiHooks1.Title = types.StringPointerValue(uiHooksItem.Title)
			if uiHooksCount+1 > len(r.UIHooks) {
				r.UIHooks = append(r.UIHooks, uiHooks1)
			} else {
				r.UIHooks[uiHooksCount].AdditionalProperties = uiHooks1.AdditionalProperties
				r.UIHooks[uiHooksCount].Component = uiHooks1.Component
				r.UIHooks[uiHooksCount].Disabled = uiHooks1.Disabled
				r.UIHooks[uiHooksCount].GroupExpanded = uiHooks1.GroupExpanded
				r.UIHooks[uiHooksCount].Header = uiHooks1.Header
				r.UIHooks[uiHooksCount].Hook = uiHooks1.Hook
				r.UIHooks[uiHooksCount].Icon = uiHooks1.Icon
				r.UIHooks[uiHooksCount].Import = uiHooks1.Import
				r.UIHooks[uiHooksCount].Order = uiHooks1.Order
				r.UIHooks[uiHooksCount].RenderCondition = uiHooks1.RenderCondition
				r.UIHooks[uiHooksCount].RequiredPermission = uiHooks1.RequiredPermission
				r.UIHooks[uiHooksCount].Route = uiHooks1.Route
				r.UIHooks[uiHooksCount].Title = uiHooks1.Title
			}
		}
	}
}
