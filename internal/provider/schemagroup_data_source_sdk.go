// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	tfTypes "github.com/epilot/terraform-provider-epilot-schema/internal/provider/types"
	"github.com/epilot/terraform-provider-epilot-schema/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *SchemaGroupDataSourceModel) RefreshFromSharedEntitySchemaGroupWithCompositeID(resp *shared.EntitySchemaGroupWithCompositeID) {
	if resp != nil {
		r.Purpose = []types.String{}
		for _, v := range resp.Purpose {
			r.Purpose = append(r.Purpose, types.StringValue(v))
		}
		r.CompositeID = types.StringPointerValue(resp.CompositeID)
		r.Expanded = types.BoolPointerValue(resp.Expanded)
		r.FeatureFlag = types.StringPointerValue(resp.FeatureFlag)
		r.ID = types.StringPointerValue(resp.ID)
		if resp.InfoTooltipTitle == nil {
			r.InfoTooltipTitle = nil
		} else {
			r.InfoTooltipTitle = &tfTypes.InfoTooltipTitle{}
			r.InfoTooltipTitle.Default = types.StringPointerValue(resp.InfoTooltipTitle.Default)
			r.InfoTooltipTitle.Key = types.StringPointerValue(resp.InfoTooltipTitle.Key)
		}
		r.Label = types.StringValue(resp.Label)
		r.Order = types.Int64PointerValue(resp.Order)
		r.RenderCondition = types.StringPointerValue(resp.RenderCondition)
		r.Schema = types.StringPointerValue(resp.Schema)
		r.SettingsFlag = []tfTypes.SettingFlag{}
		if len(r.SettingsFlag) > len(resp.SettingsFlag) {
			r.SettingsFlag = r.SettingsFlag[:len(resp.SettingsFlag)]
		}
		for settingsFlagCount, settingsFlagItem := range resp.SettingsFlag {
			var settingsFlag1 tfTypes.SettingFlag
			settingsFlag1.Enabled = types.BoolPointerValue(settingsFlagItem.Enabled)
			settingsFlag1.Name = types.StringPointerValue(settingsFlagItem.Name)
			if settingsFlagCount+1 > len(r.SettingsFlag) {
				r.SettingsFlag = append(r.SettingsFlag, settingsFlag1)
			} else {
				r.SettingsFlag[settingsFlagCount].Enabled = settingsFlag1.Enabled
				r.SettingsFlag[settingsFlagCount].Name = settingsFlag1.Name
			}
		}
	}
}
