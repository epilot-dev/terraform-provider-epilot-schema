// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/epilot/terraform-provider-epilot-schema/internal/sdk/models/shared"
	"net/http"
)

type CreateSchemaCapabilityRequest struct {
	// Schema Slug
	Slug             string                   `pathParam:"style=simple,explode=false,name=slug"`
	EntityCapability *shared.EntityCapability `request:"mediaType=application/json"`
}

func (o *CreateSchemaCapabilityRequest) GetSlug() string {
	if o == nil {
		return ""
	}
	return o.Slug
}

func (o *CreateSchemaCapabilityRequest) GetEntityCapability() *shared.EntityCapability {
	if o == nil {
		return nil
	}
	return o.EntityCapability
}

type CreateSchemaCapabilityResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Success
	EntityCapabilityWithCompositeID *shared.EntityCapabilityWithCompositeID
}

func (o *CreateSchemaCapabilityResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreateSchemaCapabilityResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreateSchemaCapabilityResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *CreateSchemaCapabilityResponse) GetEntityCapabilityWithCompositeID() *shared.EntityCapabilityWithCompositeID {
	if o == nil {
		return nil
	}
	return o.EntityCapabilityWithCompositeID
}
