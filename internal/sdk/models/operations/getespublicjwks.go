// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

type Keys struct {
	Alg *string `json:"alg,omitempty"`
	E   *string `json:"e,omitempty"`
	Kid *string `json:"kid,omitempty"`
	Kty *string `json:"kty,omitempty"`
	N   *string `json:"n,omitempty"`
	Use *string `json:"use,omitempty"`
}

func (o *Keys) GetAlg() *string {
	if o == nil {
		return nil
	}
	return o.Alg
}

func (o *Keys) GetE() *string {
	if o == nil {
		return nil
	}
	return o.E
}

func (o *Keys) GetKid() *string {
	if o == nil {
		return nil
	}
	return o.Kid
}

func (o *Keys) GetKty() *string {
	if o == nil {
		return nil
	}
	return o.Kty
}

func (o *Keys) GetN() *string {
	if o == nil {
		return nil
	}
	return o.N
}

func (o *Keys) GetUse() *string {
	if o == nil {
		return nil
	}
	return o.Use
}

// GetESPublicJwksResponseBody - Set of jwks
type GetESPublicJwksResponseBody struct {
	Keys []Keys `json:"keys,omitempty"`
}

func (o *GetESPublicJwksResponseBody) GetKeys() []Keys {
	if o == nil {
		return nil
	}
	return o.Keys
}

type GetESPublicJwksResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Set of jwks
	Object *GetESPublicJwksResponseBody
}

func (o *GetESPublicJwksResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetESPublicJwksResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetESPublicJwksResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetESPublicJwksResponse) GetObject() *GetESPublicJwksResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
