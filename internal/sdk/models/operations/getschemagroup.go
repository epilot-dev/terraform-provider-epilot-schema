// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/epilot/terraform-provider-epilot-schema/internal/sdk/models/shared"
	"net/http"
)

type GetSchemaGroupRequest struct {
	// Schema Slug and the Group ID
	CompositeID string `pathParam:"style=simple,explode=false,name=composite_id"`
}

func (o *GetSchemaGroupRequest) GetCompositeID() string {
	if o == nil {
		return ""
	}
	return o.CompositeID
}

type GetSchemaGroupResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Success
	EntitySchemaGroupWithCompositeID *shared.EntitySchemaGroupWithCompositeID
	// The requested resource was not found
	NotFoundError *shared.NotFoundError
}

func (o *GetSchemaGroupResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetSchemaGroupResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetSchemaGroupResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetSchemaGroupResponse) GetEntitySchemaGroupWithCompositeID() *shared.EntitySchemaGroupWithCompositeID {
	if o == nil {
		return nil
	}
	return o.EntitySchemaGroupWithCompositeID
}

func (o *GetSchemaGroupResponse) GetNotFoundError() *shared.NotFoundError {
	if o == nil {
		return nil
	}
	return o.NotFoundError
}
