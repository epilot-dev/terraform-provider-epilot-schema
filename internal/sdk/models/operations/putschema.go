// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy/terraform-provider-terraform/internal/sdk/internal/utils"
	"github.com/speakeasy/terraform-provider-terraform/internal/sdk/models/shared"
	"net/http"
)

type PutSchemaRequest struct {
	// Entity Type
	Slug         string               `pathParam:"style=simple,explode=false,name=slug"`
	Draft        *bool                `default:"false" queryParam:"style=form,explode=true,name=draft"`
	EntitySchema *shared.EntitySchema `request:"mediaType=application/json"`
}

func (p PutSchemaRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PutSchemaRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PutSchemaRequest) GetSlug() string {
	if o == nil {
		return ""
	}
	return o.Slug
}

func (o *PutSchemaRequest) GetDraft() *bool {
	if o == nil {
		return nil
	}
	return o.Draft
}

func (o *PutSchemaRequest) GetEntitySchema() *shared.EntitySchema {
	if o == nil {
		return nil
	}
	return o.EntitySchema
}

type PutSchemaResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Success
	EntitySchema *shared.EntitySchema
}

func (o *PutSchemaResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PutSchemaResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PutSchemaResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *PutSchemaResponse) GetEntitySchema() *shared.EntitySchema {
	if o == nil {
		return nil
	}
	return o.EntitySchema
}
