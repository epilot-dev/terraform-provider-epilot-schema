// Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.

package operations

import (
	"github.com/epilot/terraform-provider-epilot-schema/internal/sdk/models/shared"
	"net/http"
)

type UpdateTaxonomyRequestBody struct {
	// A human friendly name of a Taxonomy e.g. Purpose, Product Category, Folder, Tag
	Name *string `json:"name,omitempty"`
	// Plural name of a Taxonomy e.g. Purposes, Product Categories, Folders, Tags. Defaults to name is not provided.
	Plural *string `json:"plural,omitempty"`
	// Icon name for the taxonomy (from epilot360/icons icon set)
	Icon *string `json:"icon,omitempty"`
	// HEX Color code for the taxonomy
	Color *string `json:"color,omitempty"`
	// Whether the taxonomy is enabled or not
	Enabled *bool `json:"enabled,omitempty"`
}

func (o *UpdateTaxonomyRequestBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *UpdateTaxonomyRequestBody) GetPlural() *string {
	if o == nil {
		return nil
	}
	return o.Plural
}

func (o *UpdateTaxonomyRequestBody) GetIcon() *string {
	if o == nil {
		return nil
	}
	return o.Icon
}

func (o *UpdateTaxonomyRequestBody) GetColor() *string {
	if o == nil {
		return nil
	}
	return o.Color
}

func (o *UpdateTaxonomyRequestBody) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

type UpdateTaxonomyRequest struct {
	// Taxonomy slug
	TaxonomySlug string                     `pathParam:"style=simple,explode=false,name=taxonomySlug"`
	RequestBody  *UpdateTaxonomyRequestBody `request:"mediaType=application/json"`
}

func (o *UpdateTaxonomyRequest) GetTaxonomySlug() string {
	if o == nil {
		return ""
	}
	return o.TaxonomySlug
}

func (o *UpdateTaxonomyRequest) GetRequestBody() *UpdateTaxonomyRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

type UpdateTaxonomyResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Taxonomy updated
	Taxonomy *shared.Taxonomy
}

func (o *UpdateTaxonomyResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateTaxonomyResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateTaxonomyResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateTaxonomyResponse) GetTaxonomy() *shared.Taxonomy {
	if o == nil {
		return nil
	}
	return o.Taxonomy
}
