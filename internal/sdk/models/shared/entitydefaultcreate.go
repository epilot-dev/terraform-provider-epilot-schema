// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EntityDefaultCreateViewType string

const (
	EntityDefaultCreateViewTypeDefault EntityDefaultCreateViewType = "default"
)

func (e EntityDefaultCreateViewType) ToPointer() *EntityDefaultCreateViewType {
	return &e
}
func (e *EntityDefaultCreateViewType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "default":
		*e = EntityDefaultCreateViewType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EntityDefaultCreateViewType: %v", v)
	}
}

type EntityDefaultCreate struct {
	ViewType     *EntityDefaultCreateViewType `json:"view_type,omitempty"`
	SearchParams map[string]string            `json:"search_params,omitempty"`
}

func (o *EntityDefaultCreate) GetViewType() *EntityDefaultCreateViewType {
	if o == nil {
		return nil
	}
	return o.ViewType
}

func (o *EntityDefaultCreate) GetSearchParams() map[string]string {
	if o == nil {
		return nil
	}
	return o.SearchParams
}
