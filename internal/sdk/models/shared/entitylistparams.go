// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/epilot/terraform-provider-epilot-schema/internal/sdk/internal/utils"
)

// EntityListParamsAggs - Aggregation supported by ElasticSearch allows summarizing data as metrics, statistics, or other analytics.
type EntityListParamsAggs struct {
}

type EntityListParams struct {
	// A subset of simplified Elasticsearch query clauses. The default operator is a logical AND. Use nested $and, $or, $not to combine filters using different logical operators.
	Filter []SearchFilter `json:"filter"`
	// Allow running the listing without any schema filter. This is disabled by default to prevent security and performance issues if done by an accident.
	AllowTargetingAllSchemas *bool   `default:"false" json:"allow_targeting_all_schemas"`
	Sort                     *string `json:"sort,omitempty"`
	From                     *int64  `default:"0" json:"from"`
	// Max search size is 1000 with higher values defaulting to 1000
	Size *int64 `default:"10" json:"size"`
	// When true, enables entity hydration to resolve nested $relation & $relation_ref references in-place.
	Hydrate *bool `default:"false" json:"hydrate"`
	// List of entity fields to include or exclude in the response
	//
	// Use ! to exclude fields, e.g. `!_id` to exclude the `_id` field.
	//
	// Globbing and globstart (**) is supported for nested fields.
	//
	Fields []string `json:"fields,omitempty"`
	// Aggregation supported by ElasticSearch allows summarizing data as metrics, statistics, or other analytics.
	Aggs *EntityListParamsAggs `json:"aggs,omitempty"`
}

func (e EntityListParams) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *EntityListParams) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *EntityListParams) GetFilter() []SearchFilter {
	if o == nil {
		return []SearchFilter{}
	}
	return o.Filter
}

func (o *EntityListParams) GetAllowTargetingAllSchemas() *bool {
	if o == nil {
		return nil
	}
	return o.AllowTargetingAllSchemas
}

func (o *EntityListParams) GetSort() *string {
	if o == nil {
		return nil
	}
	return o.Sort
}

func (o *EntityListParams) GetFrom() *int64 {
	if o == nil {
		return nil
	}
	return o.From
}

func (o *EntityListParams) GetSize() *int64 {
	if o == nil {
		return nil
	}
	return o.Size
}

func (o *EntityListParams) GetHydrate() *bool {
	if o == nil {
		return nil
	}
	return o.Hydrate
}

func (o *EntityListParams) GetFields() []string {
	if o == nil {
		return nil
	}
	return o.Fields
}

func (o *EntityListParams) GetAggs() *EntityListParamsAggs {
	if o == nil {
		return nil
	}
	return o.Aggs
}
