// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/epilot/terraform-provider-epilot-schema/internal/sdk/internal/utils"
	"time"
)

type Request struct {
	// URL-friendly name for taxonomy
	TargetTaxonomy       *string  `json:"target_taxonomy,omitempty"`
	TargetClassification *string  `json:"target_classification,omitempty"`
	ClassificationIds    []string `json:"classification_ids,omitempty"`
}

func (o *Request) GetTargetTaxonomy() *string {
	if o == nil {
		return nil
	}
	return o.TargetTaxonomy
}

func (o *Request) GetTargetClassification() *string {
	if o == nil {
		return nil
	}
	return o.TargetClassification
}

func (o *Request) GetClassificationIds() []string {
	if o == nil {
		return nil
	}
	return o.ClassificationIds
}

type Output struct {
	TargetEntities   []string `json:"target_entities,omitempty"`
	AffectedEntities []string `json:"affected_entities,omitempty"`
	FailuresCount    *float64 `json:"failures_count,omitempty"`
	FailedEntities   []string `json:"failed_entities,omitempty"`
}

func (o *Output) GetTargetEntities() []string {
	if o == nil {
		return nil
	}
	return o.TargetEntities
}

func (o *Output) GetAffectedEntities() []string {
	if o == nil {
		return nil
	}
	return o.AffectedEntities
}

func (o *Output) GetFailuresCount() *float64 {
	if o == nil {
		return nil
	}
	return o.FailuresCount
}

func (o *Output) GetFailedEntities() []string {
	if o == nil {
		return nil
	}
	return o.FailedEntities
}

type TaxonomyBulkJob struct {
	JobID *string `json:"job_id,omitempty"`
	// The status of the bulk job
	JobStatus     *TaxonomyBulkJobStatus     `json:"job_status,omitempty"`
	FailureReason *string                    `json:"failure_reason,omitempty"`
	ActionType    *TaxonomyBulkJobActionType `json:"action_type,omitempty"`
	Request       *Request                   `json:"request,omitempty"`
	Output        *Output                    `json:"output,omitempty"`
	CreatedBy     *string                    `json:"created_by,omitempty"`
	CreatedAt     *time.Time                 `json:"created_at,omitempty"`
	UpdatedAt     *time.Time                 `json:"updated_at,omitempty"`
	Org           *string                    `json:"org,omitempty"`
	// Progress of the job on a scale of 0 to 1
	Progress *float64 `json:"progress,omitempty"`
}

func (t TaxonomyBulkJob) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TaxonomyBulkJob) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TaxonomyBulkJob) GetJobID() *string {
	if o == nil {
		return nil
	}
	return o.JobID
}

func (o *TaxonomyBulkJob) GetJobStatus() *TaxonomyBulkJobStatus {
	if o == nil {
		return nil
	}
	return o.JobStatus
}

func (o *TaxonomyBulkJob) GetFailureReason() *string {
	if o == nil {
		return nil
	}
	return o.FailureReason
}

func (o *TaxonomyBulkJob) GetActionType() *TaxonomyBulkJobActionType {
	if o == nil {
		return nil
	}
	return o.ActionType
}

func (o *TaxonomyBulkJob) GetRequest() *Request {
	if o == nil {
		return nil
	}
	return o.Request
}

func (o *TaxonomyBulkJob) GetOutput() *Output {
	if o == nil {
		return nil
	}
	return o.Output
}

func (o *TaxonomyBulkJob) GetCreatedBy() *string {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *TaxonomyBulkJob) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *TaxonomyBulkJob) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *TaxonomyBulkJob) GetOrg() *string {
	if o == nil {
		return nil
	}
	return o.Org
}

func (o *TaxonomyBulkJob) GetProgress() *float64 {
	if o == nil {
		return nil
	}
	return o.Progress
}
