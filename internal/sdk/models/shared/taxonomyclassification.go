// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/epilot/terraform-provider-epilot-schema/internal/sdk/internal/utils"
	"time"
)

type TaxonomyClassification struct {
	ID *string `json:"id,omitempty"`
	// URL-friendly identifier for the classification
	Slug    *string  `json:"slug,omitempty"`
	Name    string   `json:"name"`
	Parents []string `json:"parents,omitempty"`
	// Color of the classification
	Color     *string    `json:"color,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// Manifest ID used to create/update the taxonomy classification
	Manifest []string `json:"_manifest,omitempty"`
}

func (t TaxonomyClassification) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TaxonomyClassification) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TaxonomyClassification) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TaxonomyClassification) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *TaxonomyClassification) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *TaxonomyClassification) GetParents() []string {
	if o == nil {
		return nil
	}
	return o.Parents
}

func (o *TaxonomyClassification) GetColor() *string {
	if o == nil {
		return nil
	}
	return o.Color
}

func (o *TaxonomyClassification) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *TaxonomyClassification) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *TaxonomyClassification) GetManifest() []string {
	if o == nil {
		return nil
	}
	return o.Manifest
}
